//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22309795
// Driver 375.74
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_61, texmode_independent
.address_size 64

	// .globl	search
// search1$T0_C has been demoted
// search1$T1_C has been demoted
// search1$T2_C has been demoted
// search1$T3_C has been demoted
// search1$T4_C has been demoted
// search1$T5_C has been demoted
// search1$T6_C has been demoted
// search1$T7_C has been demoted
.const .align 8 .b8 T0[2048] = {198, 50, 244, 165, 244, 151, 165, 198, 248, 111, 151, 132, 151, 235, 132, 248, 238, 94, 176, 153, 176, 199, 153, 238, 246, 122, 140, 141, 140, 247, 141, 246, 255, 232, 23, 13, 23, 229, 13, 255, 214, 10, 220, 189, 220, 183, 189, 214, 222, 22, 200, 177, 200, 167, 177, 222, 145, 109, 252, 84, 252, 57, 84, 145, 96, 144, 240, 80, 240, 192, 80, 96, 2, 7, 5, 3, 5, 4, 3, 2, 206, 46, 224, 169, 224, 135, 169, 206, 86, 209, 135, 125, 135, 172, 125, 86, 231, 204, 43, 25, 43, 213, 25, 231, 181, 19, 166, 98, 166, 113, 98, 181, 77, 124, 49, 230, 49, 154, 230, 77, 236, 89, 181, 154, 181, 195, 154, 236, 143, 64, 207, 69, 207, 5, 69, 143, 31, 163, 188, 157, 188, 62, 157, 31, 137, 73, 192, 64, 192, 9, 64, 137, 250, 104, 146, 135, 146, 239, 135, 250, 239, 208, 63, 21, 63, 197, 21, 239, 178, 148, 38, 235, 38, 127, 235, 178, 142, 206, 64, 201, 64, 7, 201, 142, 251, 230, 29, 11, 29, 237, 11, 251, 65, 110, 47, 236, 47, 130, 236, 65, 179, 26, 169, 103, 169, 125, 103, 179, 95, 67, 28, 253, 28, 190, 253, 95, 69, 96, 37, 234, 37, 138, 234, 69, 35, 249, 218, 191, 218, 70, 191, 35, 83, 81, 2, 247, 2, 166, 247, 83, 228, 69, 161, 150, 161, 211, 150, 228, 155, 118, 237, 91, 237, 45, 91, 155, 117, 40, 93, 194, 93, 234, 194, 117, 225, 197, 36, 28, 36, 217, 28, 225, 61, 212, 233, 174, 233, 122, 174, 61, 76, 242, 190, 106, 190, 152, 106, 76, 108, 130, 238, 90, 238, 216, 90, 108, 126, 189, 195, 65, 195, 252, 65, 126, 245, 243, 6, 2, 6, 241, 2, 245, 131, 82, 209, 79, 209, 29, 79, 131, 104, 140, 228, 92, 228, 208, 92, 104, 81, 86, 7, 244, 7, 162, 244, 81, 209, 141, 92, 52, 92, 185, 52, 209, 249, 225, 24, 8, 24, 233, 8, 249, 226, 76, 174, 147, 174, 223, 147, 226, 171, 62, 149, 115, 149, 77, 115, 171, 98, 151, 245, 83, 245, 196, 83, 98, 42, 107, 65, 63, 65, 84, 63, 42, 8, 28, 20, 12, 20, 16, 12, 8, 149, 99, 246, 82, 246, 49, 82, 149, 70, 233, 175, 101, 175, 140, 101, 70, 157, 127, 226, 94, 226, 33, 94, 157, 48, 72, 120, 40, 120, 96, 40, 48, 55, 207, 248, 161, 248, 110, 161, 55, 10, 27, 17, 15, 17, 20, 15, 10, 47, 235, 196, 181, 196, 94, 181, 47, 14, 21, 27, 9, 27, 28, 9, 14, 36, 126, 90, 54, 90, 72, 54, 36, 27, 173, 182, 155, 182, 54, 155, 27, 223, 152, 71, 61, 71, 165, 61, 223, 205, 167, 106, 38, 106, 129, 38, 205, 78, 245, 187, 105, 187, 156, 105, 78, 127, 51, 76, 205, 76, 254, 205, 127, 234, 80, 186, 159, 186, 207, 159, 234, 18, 63, 45, 27, 45, 36, 27, 18, 29, 164, 185, 158, 185, 58, 158, 29, 88, 196, 156, 116, 156, 176, 116, 88, 52, 70, 114, 46, 114, 104, 46, 52, 54, 65, 119, 45, 119, 108, 45, 54, 220, 17, 205, 178, 205, 163, 178, 220, 180, 157, 41, 238, 41, 115, 238, 180, 91, 77, 22, 251, 22, 182, 251, 91, 164, 165, 1, 246, 1, 83, 246, 164, 118, 161, 215, 77, 215, 236, 77, 118, 183, 20, 163, 97, 163, 117, 97, 183, 125, 52, 73, 206, 73, 250, 206, 125, 82, 223, 141, 123, 141, 164, 123, 82, 221, 159, 66, 62, 66, 161, 62, 221, 94, 205, 147, 113, 147, 188, 113, 94, 19, 177, 162, 151, 162, 38, 151, 19, 166, 162, 4, 245, 4, 87, 245, 166, 185, 1, 184, 104, 184, 105, 104, 185, 0, 0, 0, 0, 0, 0, 0, 0, 193, 181, 116, 44, 116, 153, 44, 193, 64, 224, 160, 96, 160, 128, 96, 64, 227, 194, 33, 31, 33, 221, 31, 227, 121, 58, 67, 200, 67, 242, 200, 121, 182, 154, 44, 237, 44, 119, 237, 182, 212, 13, 217, 190, 217, 179, 190, 212, 141, 71, 202, 70, 202, 1, 70, 141, 103, 23, 112, 217, 112, 206, 217, 103, 114, 175, 221, 75, 221, 228, 75, 114, 148, 237, 121, 222, 121, 51, 222, 148, 152, 255, 103, 212, 103, 43, 212, 152, 176, 147, 35, 232, 35, 123, 232, 176, 133, 91, 222, 74, 222, 17, 74, 133, 187, 6, 189, 107, 189, 109, 107, 187, 197, 187, 126, 42, 126, 145, 42, 197, 79, 123, 52, 229, 52, 158, 229, 79, 237, 215, 58, 22, 58, 193, 22, 237, 134, 210, 84, 197, 84, 23, 197, 134, 154, 248, 98, 215, 98, 47, 215, 154, 102, 153, 255, 85, 255, 204, 85, 102, 17, 182, 167, 148, 167, 34, 148, 17, 138, 192, 74, 207, 74, 15, 207, 138, 233, 217, 48, 16, 48, 201, 16, 233, 4, 14, 10, 6, 10, 8, 6, 4, 254, 102, 152, 129, 152, 231, 129, 254, 160, 171, 11, 240, 11, 91, 240, 160, 120, 180, 204, 68, 204, 240, 68, 120, 37, 240, 213, 186, 213, 74, 186, 37, 75, 117, 62, 227, 62, 150, 227, 75, 162, 172, 14, 243, 14, 95, 243, 162, 93, 68, 25, 254, 25, 186, 254, 93, 128, 219, 91, 192, 91, 27, 192, 128, 5, 128, 133, 138, 133, 10, 138, 5, 63, 211, 236, 173, 236, 126, 173, 63, 33, 254, 223, 188, 223, 66, 188, 33, 112, 168, 216, 72, 216, 224, 72, 112, 241, 253, 12, 4, 12, 249, 4, 241, 99, 25, 122, 223, 122, 198, 223, 99, 119, 47, 88, 193, 88, 238, 193, 119, 175, 48, 159, 117, 159, 69, 117, 175, 66, 231, 165, 99, 165, 132, 99, 66, 32, 112, 80, 48, 80, 64, 48, 32, 229, 203, 46, 26, 46, 209, 26, 229, 253, 239, 18, 14, 18, 225, 14, 253, 191, 8, 183, 109, 183, 101, 109, 191, 129, 85, 212, 76, 212, 25, 76, 129, 24, 36, 60, 20, 60, 48, 20, 24, 38, 121, 95, 53, 95, 76, 53, 38, 195, 178, 113, 47, 113, 157, 47, 195, 190, 134, 56, 225, 56, 103, 225, 190, 53, 200, 253, 162, 253, 106, 162, 53, 136, 199, 79, 204, 79, 11, 204, 136, 46, 101, 75, 57, 75, 92, 57, 46, 147, 106, 249, 87, 249, 61, 87, 147, 85, 88, 13, 242, 13, 170, 242, 85, 252, 97, 157, 130, 157, 227, 130, 252, 122, 179, 201, 71, 201, 244, 71, 122, 200, 39, 239, 172, 239, 139, 172, 200, 186, 136, 50, 231, 50, 111, 231, 186, 50, 79, 125, 43, 125, 100, 43, 50, 230, 66, 164, 149, 164, 215, 149, 230, 192, 59, 251, 160, 251, 155, 160, 192, 25, 170, 179, 152, 179, 50, 152, 25, 158, 246, 104, 209, 104, 39, 209, 158, 163, 34, 129, 127, 129, 93, 127, 163, 68, 238, 170, 102, 170, 136, 102, 68, 84, 214, 130, 126, 130, 168, 126, 84, 59, 221, 230, 171, 230, 118, 171, 59, 11, 149, 158, 131, 158, 22, 131, 11, 140, 201, 69, 202, 69, 3, 202, 140, 199, 188, 123, 41, 123, 149, 41, 199, 107, 5, 110, 211, 110, 214, 211, 107, 40, 108, 68, 60, 68, 80, 60, 40, 167, 44, 139, 121, 139, 85, 121, 167, 188, 129, 61, 226, 61, 99, 226, 188, 22, 49, 39, 29, 39, 44, 29, 22, 173, 55, 154, 118, 154, 65, 118, 173, 219, 150, 77, 59, 77, 173, 59, 219, 100, 158, 250, 86, 250, 200, 86, 100, 116, 166, 210, 78, 210, 232, 78, 116, 20, 54, 34, 30, 34, 40, 30, 20, 146, 228, 118, 219, 118, 63, 219, 146, 12, 18, 30, 10, 30, 24, 10, 12, 72, 252, 180, 108, 180, 144, 108, 72, 184, 143, 55, 228, 55, 107, 228, 184, 159, 120, 231, 93, 231, 37, 93, 159, 189, 15, 178, 110, 178, 97, 110, 189, 67, 105, 42, 239, 42, 134, 239, 67, 196, 53, 241, 166, 241, 147, 166, 196, 57, 218, 227, 168, 227, 114, 168, 57, 49, 198, 247, 164, 247, 98, 164, 49, 211, 138, 89, 55, 89, 189, 55, 211, 242, 116, 134, 139, 134, 255, 139, 242, 213, 131, 86, 50, 86, 177, 50, 213, 139, 78, 197, 67, 197, 13, 67, 139, 110, 133, 235, 89, 235, 220, 89, 110, 218, 24, 194, 183, 194, 175, 183, 218, 1, 142, 143, 140, 143, 2, 140, 1, 177, 29, 172, 100, 172, 121, 100, 177, 156, 241, 109, 210, 109, 35, 210, 156, 73, 114, 59, 224, 59, 146, 224, 73, 216, 31, 199, 180, 199, 171, 180, 216, 172, 185, 21, 250, 21, 67, 250, 172, 243, 250, 9, 7, 9, 253, 7, 243, 207, 160, 111, 37, 111, 133, 37, 207, 202, 32, 234, 175, 234, 143, 175, 202, 244, 125, 137, 142, 137, 243, 142, 244, 71, 103, 32, 233, 32, 142, 233, 71, 16, 56, 40, 24, 40, 32, 24, 16, 111, 11, 100, 213, 100, 222, 213, 111, 240, 115, 131, 136, 131, 251, 136, 240, 74, 251, 177, 111, 177, 148, 111, 74, 92, 202, 150, 114, 150, 184, 114, 92, 56, 84, 108, 36, 108, 112, 36, 56, 87, 95, 8, 241, 8, 174, 241, 87, 115, 33, 82, 199, 82, 230, 199, 115, 151, 100, 243, 81, 243, 53, 81, 151, 203, 174, 101, 35, 101, 141, 35, 203, 161, 37, 132, 124, 132, 89, 124, 161, 232, 87, 191, 156, 191, 203, 156, 232, 62, 93, 99, 33, 99, 124, 33, 62, 150, 234, 124, 221, 124, 55, 221, 150, 97, 30, 127, 220, 127, 194, 220, 97, 13, 156, 145, 134, 145, 26, 134, 13, 15, 155, 148, 133, 148, 30, 133, 15, 224, 75, 171, 144, 171, 219, 144, 224, 124, 186, 198, 66, 198, 248, 66, 124, 113, 38, 87, 196, 87, 226, 196, 113, 204, 41, 229, 170, 229, 131, 170, 204, 144, 227, 115, 216, 115, 59, 216, 144, 6, 9, 15, 5, 15, 12, 5, 6, 247, 244, 3, 1, 3, 245, 1, 247, 28, 42, 54, 18, 54, 56, 18, 28, 194, 60, 254, 163, 254, 159, 163, 194, 106, 139, 225, 95, 225, 212, 95, 106, 174, 190, 16, 249, 16, 71, 249, 174, 105, 2, 107, 208, 107, 210, 208, 105, 23, 191, 168, 145, 168, 46, 145, 23, 153, 113, 232, 88, 232, 41, 88, 153, 58, 83, 105, 39, 105, 116, 39, 58, 39, 247, 208, 185, 208, 78, 185, 39, 217, 145, 72, 56, 72, 169, 56, 217, 235, 222, 53, 19, 53, 205, 19, 235, 43, 229, 206, 179, 206, 86, 179, 43, 34, 119, 85, 51, 85, 68, 51, 34, 210, 4, 214, 187, 214, 191, 187, 210, 169, 57, 144, 112, 144, 73, 112, 169, 7, 135, 128, 137, 128, 14, 137, 7, 51, 193, 242, 167, 242, 102, 167, 51, 45, 236, 193, 182, 193, 90, 182, 45, 60, 90, 102, 34, 102, 120, 34, 60, 21, 184, 173, 146, 173, 42, 146, 21, 201, 169, 96, 32, 96, 137, 32, 201, 135, 92, 219, 73, 219, 21, 73, 135, 170, 176, 26, 255, 26, 79, 255, 170, 80, 216, 136, 120, 136, 160, 120, 80, 165, 43, 142, 122, 142, 81, 122, 165, 3, 137, 138, 143, 138, 6, 143, 3, 89, 74, 19, 248, 19, 178, 248, 89, 9, 146, 155, 128, 155, 18, 128, 9, 26, 35, 57, 23, 57, 52, 23, 26, 101, 16, 117, 218, 117, 202, 218, 101, 215, 132, 83, 49, 83, 181, 49, 215, 132, 213, 81, 198, 81, 19, 198, 132, 208, 3, 211, 184, 211, 187, 184, 208, 130, 220, 94, 195, 94, 31, 195, 130, 41, 226, 203, 176, 203, 82, 176, 41, 90, 195, 153, 119, 153, 180, 119, 90, 30, 45, 51, 17, 51, 60, 17, 30, 123, 61, 70, 203, 70, 246, 203, 123, 168, 183, 31, 252, 31, 75, 252, 168, 109, 12, 97, 214, 97, 218, 214, 109, 44, 98, 78, 58, 78, 88, 58, 44};
.const .align 8 .b8 T4[2048] = {244, 151, 165, 198, 198, 50, 244, 165, 151, 235, 132, 248, 248, 111, 151, 132, 176, 199, 153, 238, 238, 94, 176, 153, 140, 247, 141, 246, 246, 122, 140, 141, 23, 229, 13, 255, 255, 232, 23, 13, 220, 183, 189, 214, 214, 10, 220, 189, 200, 167, 177, 222, 222, 22, 200, 177, 252, 57, 84, 145, 145, 109, 252, 84, 240, 192, 80, 96, 96, 144, 240, 80, 5, 4, 3, 2, 2, 7, 5, 3, 224, 135, 169, 206, 206, 46, 224, 169, 135, 172, 125, 86, 86, 209, 135, 125, 43, 213, 25, 231, 231, 204, 43, 25, 166, 113, 98, 181, 181, 19, 166, 98, 49, 154, 230, 77, 77, 124, 49, 230, 181, 195, 154, 236, 236, 89, 181, 154, 207, 5, 69, 143, 143, 64, 207, 69, 188, 62, 157, 31, 31, 163, 188, 157, 192, 9, 64, 137, 137, 73, 192, 64, 146, 239, 135, 250, 250, 104, 146, 135, 63, 197, 21, 239, 239, 208, 63, 21, 38, 127, 235, 178, 178, 148, 38, 235, 64, 7, 201, 142, 142, 206, 64, 201, 29, 237, 11, 251, 251, 230, 29, 11, 47, 130, 236, 65, 65, 110, 47, 236, 169, 125, 103, 179, 179, 26, 169, 103, 28, 190, 253, 95, 95, 67, 28, 253, 37, 138, 234, 69, 69, 96, 37, 234, 218, 70, 191, 35, 35, 249, 218, 191, 2, 166, 247, 83, 83, 81, 2, 247, 161, 211, 150, 228, 228, 69, 161, 150, 237, 45, 91, 155, 155, 118, 237, 91, 93, 234, 194, 117, 117, 40, 93, 194, 36, 217, 28, 225, 225, 197, 36, 28, 233, 122, 174, 61, 61, 212, 233, 174, 190, 152, 106, 76, 76, 242, 190, 106, 238, 216, 90, 108, 108, 130, 238, 90, 195, 252, 65, 126, 126, 189, 195, 65, 6, 241, 2, 245, 245, 243, 6, 2, 209, 29, 79, 131, 131, 82, 209, 79, 228, 208, 92, 104, 104, 140, 228, 92, 7, 162, 244, 81, 81, 86, 7, 244, 92, 185, 52, 209, 209, 141, 92, 52, 24, 233, 8, 249, 249, 225, 24, 8, 174, 223, 147, 226, 226, 76, 174, 147, 149, 77, 115, 171, 171, 62, 149, 115, 245, 196, 83, 98, 98, 151, 245, 83, 65, 84, 63, 42, 42, 107, 65, 63, 20, 16, 12, 8, 8, 28, 20, 12, 246, 49, 82, 149, 149, 99, 246, 82, 175, 140, 101, 70, 70, 233, 175, 101, 226, 33, 94, 157, 157, 127, 226, 94, 120, 96, 40, 48, 48, 72, 120, 40, 248, 110, 161, 55, 55, 207, 248, 161, 17, 20, 15, 10, 10, 27, 17, 15, 196, 94, 181, 47, 47, 235, 196, 181, 27, 28, 9, 14, 14, 21, 27, 9, 90, 72, 54, 36, 36, 126, 90, 54, 182, 54, 155, 27, 27, 173, 182, 155, 71, 165, 61, 223, 223, 152, 71, 61, 106, 129, 38, 205, 205, 167, 106, 38, 187, 156, 105, 78, 78, 245, 187, 105, 76, 254, 205, 127, 127, 51, 76, 205, 186, 207, 159, 234, 234, 80, 186, 159, 45, 36, 27, 18, 18, 63, 45, 27, 185, 58, 158, 29, 29, 164, 185, 158, 156, 176, 116, 88, 88, 196, 156, 116, 114, 104, 46, 52, 52, 70, 114, 46, 119, 108, 45, 54, 54, 65, 119, 45, 205, 163, 178, 220, 220, 17, 205, 178, 41, 115, 238, 180, 180, 157, 41, 238, 22, 182, 251, 91, 91, 77, 22, 251, 1, 83, 246, 164, 164, 165, 1, 246, 215, 236, 77, 118, 118, 161, 215, 77, 163, 117, 97, 183, 183, 20, 163, 97, 73, 250, 206, 125, 125, 52, 73, 206, 141, 164, 123, 82, 82, 223, 141, 123, 66, 161, 62, 221, 221, 159, 66, 62, 147, 188, 113, 94, 94, 205, 147, 113, 162, 38, 151, 19, 19, 177, 162, 151, 4, 87, 245, 166, 166, 162, 4, 245, 184, 105, 104, 185, 185, 1, 184, 104, 0, 0, 0, 0, 0, 0, 0, 0, 116, 153, 44, 193, 193, 181, 116, 44, 160, 128, 96, 64, 64, 224, 160, 96, 33, 221, 31, 227, 227, 194, 33, 31, 67, 242, 200, 121, 121, 58, 67, 200, 44, 119, 237, 182, 182, 154, 44, 237, 217, 179, 190, 212, 212, 13, 217, 190, 202, 1, 70, 141, 141, 71, 202, 70, 112, 206, 217, 103, 103, 23, 112, 217, 221, 228, 75, 114, 114, 175, 221, 75, 121, 51, 222, 148, 148, 237, 121, 222, 103, 43, 212, 152, 152, 255, 103, 212, 35, 123, 232, 176, 176, 147, 35, 232, 222, 17, 74, 133, 133, 91, 222, 74, 189, 109, 107, 187, 187, 6, 189, 107, 126, 145, 42, 197, 197, 187, 126, 42, 52, 158, 229, 79, 79, 123, 52, 229, 58, 193, 22, 237, 237, 215, 58, 22, 84, 23, 197, 134, 134, 210, 84, 197, 98, 47, 215, 154, 154, 248, 98, 215, 255, 204, 85, 102, 102, 153, 255, 85, 167, 34, 148, 17, 17, 182, 167, 148, 74, 15, 207, 138, 138, 192, 74, 207, 48, 201, 16, 233, 233, 217, 48, 16, 10, 8, 6, 4, 4, 14, 10, 6, 152, 231, 129, 254, 254, 102, 152, 129, 11, 91, 240, 160, 160, 171, 11, 240, 204, 240, 68, 120, 120, 180, 204, 68, 213, 74, 186, 37, 37, 240, 213, 186, 62, 150, 227, 75, 75, 117, 62, 227, 14, 95, 243, 162, 162, 172, 14, 243, 25, 186, 254, 93, 93, 68, 25, 254, 91, 27, 192, 128, 128, 219, 91, 192, 133, 10, 138, 5, 5, 128, 133, 138, 236, 126, 173, 63, 63, 211, 236, 173, 223, 66, 188, 33, 33, 254, 223, 188, 216, 224, 72, 112, 112, 168, 216, 72, 12, 249, 4, 241, 241, 253, 12, 4, 122, 198, 223, 99, 99, 25, 122, 223, 88, 238, 193, 119, 119, 47, 88, 193, 159, 69, 117, 175, 175, 48, 159, 117, 165, 132, 99, 66, 66, 231, 165, 99, 80, 64, 48, 32, 32, 112, 80, 48, 46, 209, 26, 229, 229, 203, 46, 26, 18, 225, 14, 253, 253, 239, 18, 14, 183, 101, 109, 191, 191, 8, 183, 109, 212, 25, 76, 129, 129, 85, 212, 76, 60, 48, 20, 24, 24, 36, 60, 20, 95, 76, 53, 38, 38, 121, 95, 53, 113, 157, 47, 195, 195, 178, 113, 47, 56, 103, 225, 190, 190, 134, 56, 225, 253, 106, 162, 53, 53, 200, 253, 162, 79, 11, 204, 136, 136, 199, 79, 204, 75, 92, 57, 46, 46, 101, 75, 57, 249, 61, 87, 147, 147, 106, 249, 87, 13, 170, 242, 85, 85, 88, 13, 242, 157, 227, 130, 252, 252, 97, 157, 130, 201, 244, 71, 122, 122, 179, 201, 71, 239, 139, 172, 200, 200, 39, 239, 172, 50, 111, 231, 186, 186, 136, 50, 231, 125, 100, 43, 50, 50, 79, 125, 43, 164, 215, 149, 230, 230, 66, 164, 149, 251, 155, 160, 192, 192, 59, 251, 160, 179, 50, 152, 25, 25, 170, 179, 152, 104, 39, 209, 158, 158, 246, 104, 209, 129, 93, 127, 163, 163, 34, 129, 127, 170, 136, 102, 68, 68, 238, 170, 102, 130, 168, 126, 84, 84, 214, 130, 126, 230, 118, 171, 59, 59, 221, 230, 171, 158, 22, 131, 11, 11, 149, 158, 131, 69, 3, 202, 140, 140, 201, 69, 202, 123, 149, 41, 199, 199, 188, 123, 41, 110, 214, 211, 107, 107, 5, 110, 211, 68, 80, 60, 40, 40, 108, 68, 60, 139, 85, 121, 167, 167, 44, 139, 121, 61, 99, 226, 188, 188, 129, 61, 226, 39, 44, 29, 22, 22, 49, 39, 29, 154, 65, 118, 173, 173, 55, 154, 118, 77, 173, 59, 219, 219, 150, 77, 59, 250, 200, 86, 100, 100, 158, 250, 86, 210, 232, 78, 116, 116, 166, 210, 78, 34, 40, 30, 20, 20, 54, 34, 30, 118, 63, 219, 146, 146, 228, 118, 219, 30, 24, 10, 12, 12, 18, 30, 10, 180, 144, 108, 72, 72, 252, 180, 108, 55, 107, 228, 184, 184, 143, 55, 228, 231, 37, 93, 159, 159, 120, 231, 93, 178, 97, 110, 189, 189, 15, 178, 110, 42, 134, 239, 67, 67, 105, 42, 239, 241, 147, 166, 196, 196, 53, 241, 166, 227, 114, 168, 57, 57, 218, 227, 168, 247, 98, 164, 49, 49, 198, 247, 164, 89, 189, 55, 211, 211, 138, 89, 55, 134, 255, 139, 242, 242, 116, 134, 139, 86, 177, 50, 213, 213, 131, 86, 50, 197, 13, 67, 139, 139, 78, 197, 67, 235, 220, 89, 110, 110, 133, 235, 89, 194, 175, 183, 218, 218, 24, 194, 183, 143, 2, 140, 1, 1, 142, 143, 140, 172, 121, 100, 177, 177, 29, 172, 100, 109, 35, 210, 156, 156, 241, 109, 210, 59, 146, 224, 73, 73, 114, 59, 224, 199, 171, 180, 216, 216, 31, 199, 180, 21, 67, 250, 172, 172, 185, 21, 250, 9, 253, 7, 243, 243, 250, 9, 7, 111, 133, 37, 207, 207, 160, 111, 37, 234, 143, 175, 202, 202, 32, 234, 175, 137, 243, 142, 244, 244, 125, 137, 142, 32, 142, 233, 71, 71, 103, 32, 233, 40, 32, 24, 16, 16, 56, 40, 24, 100, 222, 213, 111, 111, 11, 100, 213, 131, 251, 136, 240, 240, 115, 131, 136, 177, 148, 111, 74, 74, 251, 177, 111, 150, 184, 114, 92, 92, 202, 150, 114, 108, 112, 36, 56, 56, 84, 108, 36, 8, 174, 241, 87, 87, 95, 8, 241, 82, 230, 199, 115, 115, 33, 82, 199, 243, 53, 81, 151, 151, 100, 243, 81, 101, 141, 35, 203, 203, 174, 101, 35, 132, 89, 124, 161, 161, 37, 132, 124, 191, 203, 156, 232, 232, 87, 191, 156, 99, 124, 33, 62, 62, 93, 99, 33, 124, 55, 221, 150, 150, 234, 124, 221, 127, 194, 220, 97, 97, 30, 127, 220, 145, 26, 134, 13, 13, 156, 145, 134, 148, 30, 133, 15, 15, 155, 148, 133, 171, 219, 144, 224, 224, 75, 171, 144, 198, 248, 66, 124, 124, 186, 198, 66, 87, 226, 196, 113, 113, 38, 87, 196, 229, 131, 170, 204, 204, 41, 229, 170, 115, 59, 216, 144, 144, 227, 115, 216, 15, 12, 5, 6, 6, 9, 15, 5, 3, 245, 1, 247, 247, 244, 3, 1, 54, 56, 18, 28, 28, 42, 54, 18, 254, 159, 163, 194, 194, 60, 254, 163, 225, 212, 95, 106, 106, 139, 225, 95, 16, 71, 249, 174, 174, 190, 16, 249, 107, 210, 208, 105, 105, 2, 107, 208, 168, 46, 145, 23, 23, 191, 168, 145, 232, 41, 88, 153, 153, 113, 232, 88, 105, 116, 39, 58, 58, 83, 105, 39, 208, 78, 185, 39, 39, 247, 208, 185, 72, 169, 56, 217, 217, 145, 72, 56, 53, 205, 19, 235, 235, 222, 53, 19, 206, 86, 179, 43, 43, 229, 206, 179, 85, 68, 51, 34, 34, 119, 85, 51, 214, 191, 187, 210, 210, 4, 214, 187, 144, 73, 112, 169, 169, 57, 144, 112, 128, 14, 137, 7, 7, 135, 128, 137, 242, 102, 167, 51, 51, 193, 242, 167, 193, 90, 182, 45, 45, 236, 193, 182, 102, 120, 34, 60, 60, 90, 102, 34, 173, 42, 146, 21, 21, 184, 173, 146, 96, 137, 32, 201, 201, 169, 96, 32, 219, 21, 73, 135, 135, 92, 219, 73, 26, 79, 255, 170, 170, 176, 26, 255, 136, 160, 120, 80, 80, 216, 136, 120, 142, 81, 122, 165, 165, 43, 142, 122, 138, 6, 143, 3, 3, 137, 138, 143, 19, 178, 248, 89, 89, 74, 19, 248, 155, 18, 128, 9, 9, 146, 155, 128, 57, 52, 23, 26, 26, 35, 57, 23, 117, 202, 218, 101, 101, 16, 117, 218, 83, 181, 49, 215, 215, 132, 83, 49, 81, 19, 198, 132, 132, 213, 81, 198, 211, 187, 184, 208, 208, 3, 211, 184, 94, 31, 195, 130, 130, 220, 94, 195, 203, 82, 176, 41, 41, 226, 203, 176, 153, 180, 119, 90, 90, 195, 153, 119, 51, 60, 17, 30, 30, 45, 51, 17, 70, 246, 203, 123, 123, 61, 70, 203, 31, 75, 252, 168, 168, 183, 31, 252, 97, 218, 214, 109, 109, 12, 97, 214, 78, 88, 58, 44, 44, 98, 78, 58};
.const .align 8 .b8 T1[2048] = {198, 198, 50, 244, 165, 244, 151, 165, 248, 248, 111, 151, 132, 151, 235, 132, 238, 238, 94, 176, 153, 176, 199, 153, 246, 246, 122, 140, 141, 140, 247, 141, 255, 255, 232, 23, 13, 23, 229, 13, 214, 214, 10, 220, 189, 220, 183, 189, 222, 222, 22, 200, 177, 200, 167, 177, 145, 145, 109, 252, 84, 252, 57, 84, 96, 96, 144, 240, 80, 240, 192, 80, 2, 2, 7, 5, 3, 5, 4, 3, 206, 206, 46, 224, 169, 224, 135, 169, 86, 86, 209, 135, 125, 135, 172, 125, 231, 231, 204, 43, 25, 43, 213, 25, 181, 181, 19, 166, 98, 166, 113, 98, 77, 77, 124, 49, 230, 49, 154, 230, 236, 236, 89, 181, 154, 181, 195, 154, 143, 143, 64, 207, 69, 207, 5, 69, 31, 31, 163, 188, 157, 188, 62, 157, 137, 137, 73, 192, 64, 192, 9, 64, 250, 250, 104, 146, 135, 146, 239, 135, 239, 239, 208, 63, 21, 63, 197, 21, 178, 178, 148, 38, 235, 38, 127, 235, 142, 142, 206, 64, 201, 64, 7, 201, 251, 251, 230, 29, 11, 29, 237, 11, 65, 65, 110, 47, 236, 47, 130, 236, 179, 179, 26, 169, 103, 169, 125, 103, 95, 95, 67, 28, 253, 28, 190, 253, 69, 69, 96, 37, 234, 37, 138, 234, 35, 35, 249, 218, 191, 218, 70, 191, 83, 83, 81, 2, 247, 2, 166, 247, 228, 228, 69, 161, 150, 161, 211, 150, 155, 155, 118, 237, 91, 237, 45, 91, 117, 117, 40, 93, 194, 93, 234, 194, 225, 225, 197, 36, 28, 36, 217, 28, 61, 61, 212, 233, 174, 233, 122, 174, 76, 76, 242, 190, 106, 190, 152, 106, 108, 108, 130, 238, 90, 238, 216, 90, 126, 126, 189, 195, 65, 195, 252, 65, 245, 245, 243, 6, 2, 6, 241, 2, 131, 131, 82, 209, 79, 209, 29, 79, 104, 104, 140, 228, 92, 228, 208, 92, 81, 81, 86, 7, 244, 7, 162, 244, 209, 209, 141, 92, 52, 92, 185, 52, 249, 249, 225, 24, 8, 24, 233, 8, 226, 226, 76, 174, 147, 174, 223, 147, 171, 171, 62, 149, 115, 149, 77, 115, 98, 98, 151, 245, 83, 245, 196, 83, 42, 42, 107, 65, 63, 65, 84, 63, 8, 8, 28, 20, 12, 20, 16, 12, 149, 149, 99, 246, 82, 246, 49, 82, 70, 70, 233, 175, 101, 175, 140, 101, 157, 157, 127, 226, 94, 226, 33, 94, 48, 48, 72, 120, 40, 120, 96, 40, 55, 55, 207, 248, 161, 248, 110, 161, 10, 10, 27, 17, 15, 17, 20, 15, 47, 47, 235, 196, 181, 196, 94, 181, 14, 14, 21, 27, 9, 27, 28, 9, 36, 36, 126, 90, 54, 90, 72, 54, 27, 27, 173, 182, 155, 182, 54, 155, 223, 223, 152, 71, 61, 71, 165, 61, 205, 205, 167, 106, 38, 106, 129, 38, 78, 78, 245, 187, 105, 187, 156, 105, 127, 127, 51, 76, 205, 76, 254, 205, 234, 234, 80, 186, 159, 186, 207, 159, 18, 18, 63, 45, 27, 45, 36, 27, 29, 29, 164, 185, 158, 185, 58, 158, 88, 88, 196, 156, 116, 156, 176, 116, 52, 52, 70, 114, 46, 114, 104, 46, 54, 54, 65, 119, 45, 119, 108, 45, 220, 220, 17, 205, 178, 205, 163, 178, 180, 180, 157, 41, 238, 41, 115, 238, 91, 91, 77, 22, 251, 22, 182, 251, 164, 164, 165, 1, 246, 1, 83, 246, 118, 118, 161, 215, 77, 215, 236, 77, 183, 183, 20, 163, 97, 163, 117, 97, 125, 125, 52, 73, 206, 73, 250, 206, 82, 82, 223, 141, 123, 141, 164, 123, 221, 221, 159, 66, 62, 66, 161, 62, 94, 94, 205, 147, 113, 147, 188, 113, 19, 19, 177, 162, 151, 162, 38, 151, 166, 166, 162, 4, 245, 4, 87, 245, 185, 185, 1, 184, 104, 184, 105, 104, 0, 0, 0, 0, 0, 0, 0, 0, 193, 193, 181, 116, 44, 116, 153, 44, 64, 64, 224, 160, 96, 160, 128, 96, 227, 227, 194, 33, 31, 33, 221, 31, 121, 121, 58, 67, 200, 67, 242, 200, 182, 182, 154, 44, 237, 44, 119, 237, 212, 212, 13, 217, 190, 217, 179, 190, 141, 141, 71, 202, 70, 202, 1, 70, 103, 103, 23, 112, 217, 112, 206, 217, 114, 114, 175, 221, 75, 221, 228, 75, 148, 148, 237, 121, 222, 121, 51, 222, 152, 152, 255, 103, 212, 103, 43, 212, 176, 176, 147, 35, 232, 35, 123, 232, 133, 133, 91, 222, 74, 222, 17, 74, 187, 187, 6, 189, 107, 189, 109, 107, 197, 197, 187, 126, 42, 126, 145, 42, 79, 79, 123, 52, 229, 52, 158, 229, 237, 237, 215, 58, 22, 58, 193, 22, 134, 134, 210, 84, 197, 84, 23, 197, 154, 154, 248, 98, 215, 98, 47, 215, 102, 102, 153, 255, 85, 255, 204, 85, 17, 17, 182, 167, 148, 167, 34, 148, 138, 138, 192, 74, 207, 74, 15, 207, 233, 233, 217, 48, 16, 48, 201, 16, 4, 4, 14, 10, 6, 10, 8, 6, 254, 254, 102, 152, 129, 152, 231, 129, 160, 160, 171, 11, 240, 11, 91, 240, 120, 120, 180, 204, 68, 204, 240, 68, 37, 37, 240, 213, 186, 213, 74, 186, 75, 75, 117, 62, 227, 62, 150, 227, 162, 162, 172, 14, 243, 14, 95, 243, 93, 93, 68, 25, 254, 25, 186, 254, 128, 128, 219, 91, 192, 91, 27, 192, 5, 5, 128, 133, 138, 133, 10, 138, 63, 63, 211, 236, 173, 236, 126, 173, 33, 33, 254, 223, 188, 223, 66, 188, 112, 112, 168, 216, 72, 216, 224, 72, 241, 241, 253, 12, 4, 12, 249, 4, 99, 99, 25, 122, 223, 122, 198, 223, 119, 119, 47, 88, 193, 88, 238, 193, 175, 175, 48, 159, 117, 159, 69, 117, 66, 66, 231, 165, 99, 165, 132, 99, 32, 32, 112, 80, 48, 80, 64, 48, 229, 229, 203, 46, 26, 46, 209, 26, 253, 253, 239, 18, 14, 18, 225, 14, 191, 191, 8, 183, 109, 183, 101, 109, 129, 129, 85, 212, 76, 212, 25, 76, 24, 24, 36, 60, 20, 60, 48, 20, 38, 38, 121, 95, 53, 95, 76, 53, 195, 195, 178, 113, 47, 113, 157, 47, 190, 190, 134, 56, 225, 56, 103, 225, 53, 53, 200, 253, 162, 253, 106, 162, 136, 136, 199, 79, 204, 79, 11, 204, 46, 46, 101, 75, 57, 75, 92, 57, 147, 147, 106, 249, 87, 249, 61, 87, 85, 85, 88, 13, 242, 13, 170, 242, 252, 252, 97, 157, 130, 157, 227, 130, 122, 122, 179, 201, 71, 201, 244, 71, 200, 200, 39, 239, 172, 239, 139, 172, 186, 186, 136, 50, 231, 50, 111, 231, 50, 50, 79, 125, 43, 125, 100, 43, 230, 230, 66, 164, 149, 164, 215, 149, 192, 192, 59, 251, 160, 251, 155, 160, 25, 25, 170, 179, 152, 179, 50, 152, 158, 158, 246, 104, 209, 104, 39, 209, 163, 163, 34, 129, 127, 129, 93, 127, 68, 68, 238, 170, 102, 170, 136, 102, 84, 84, 214, 130, 126, 130, 168, 126, 59, 59, 221, 230, 171, 230, 118, 171, 11, 11, 149, 158, 131, 158, 22, 131, 140, 140, 201, 69, 202, 69, 3, 202, 199, 199, 188, 123, 41, 123, 149, 41, 107, 107, 5, 110, 211, 110, 214, 211, 40, 40, 108, 68, 60, 68, 80, 60, 167, 167, 44, 139, 121, 139, 85, 121, 188, 188, 129, 61, 226, 61, 99, 226, 22, 22, 49, 39, 29, 39, 44, 29, 173, 173, 55, 154, 118, 154, 65, 118, 219, 219, 150, 77, 59, 77, 173, 59, 100, 100, 158, 250, 86, 250, 200, 86, 116, 116, 166, 210, 78, 210, 232, 78, 20, 20, 54, 34, 30, 34, 40, 30, 146, 146, 228, 118, 219, 118, 63, 219, 12, 12, 18, 30, 10, 30, 24, 10, 72, 72, 252, 180, 108, 180, 144, 108, 184, 184, 143, 55, 228, 55, 107, 228, 159, 159, 120, 231, 93, 231, 37, 93, 189, 189, 15, 178, 110, 178, 97, 110, 67, 67, 105, 42, 239, 42, 134, 239, 196, 196, 53, 241, 166, 241, 147, 166, 57, 57, 218, 227, 168, 227, 114, 168, 49, 49, 198, 247, 164, 247, 98, 164, 211, 211, 138, 89, 55, 89, 189, 55, 242, 242, 116, 134, 139, 134, 255, 139, 213, 213, 131, 86, 50, 86, 177, 50, 139, 139, 78, 197, 67, 197, 13, 67, 110, 110, 133, 235, 89, 235, 220, 89, 218, 218, 24, 194, 183, 194, 175, 183, 1, 1, 142, 143, 140, 143, 2, 140, 177, 177, 29, 172, 100, 172, 121, 100, 156, 156, 241, 109, 210, 109, 35, 210, 73, 73, 114, 59, 224, 59, 146, 224, 216, 216, 31, 199, 180, 199, 171, 180, 172, 172, 185, 21, 250, 21, 67, 250, 243, 243, 250, 9, 7, 9, 253, 7, 207, 207, 160, 111, 37, 111, 133, 37, 202, 202, 32, 234, 175, 234, 143, 175, 244, 244, 125, 137, 142, 137, 243, 142, 71, 71, 103, 32, 233, 32, 142, 233, 16, 16, 56, 40, 24, 40, 32, 24, 111, 111, 11, 100, 213, 100, 222, 213, 240, 240, 115, 131, 136, 131, 251, 136, 74, 74, 251, 177, 111, 177, 148, 111, 92, 92, 202, 150, 114, 150, 184, 114, 56, 56, 84, 108, 36, 108, 112, 36, 87, 87, 95, 8, 241, 8, 174, 241, 115, 115, 33, 82, 199, 82, 230, 199, 151, 151, 100, 243, 81, 243, 53, 81, 203, 203, 174, 101, 35, 101, 141, 35, 161, 161, 37, 132, 124, 132, 89, 124, 232, 232, 87, 191, 156, 191, 203, 156, 62, 62, 93, 99, 33, 99, 124, 33, 150, 150, 234, 124, 221, 124, 55, 221, 97, 97, 30, 127, 220, 127, 194, 220, 13, 13, 156, 145, 134, 145, 26, 134, 15, 15, 155, 148, 133, 148, 30, 133, 224, 224, 75, 171, 144, 171, 219, 144, 124, 124, 186, 198, 66, 198, 248, 66, 113, 113, 38, 87, 196, 87, 226, 196, 204, 204, 41, 229, 170, 229, 131, 170, 144, 144, 227, 115, 216, 115, 59, 216, 6, 6, 9, 15, 5, 15, 12, 5, 247, 247, 244, 3, 1, 3, 245, 1, 28, 28, 42, 54, 18, 54, 56, 18, 194, 194, 60, 254, 163, 254, 159, 163, 106, 106, 139, 225, 95, 225, 212, 95, 174, 174, 190, 16, 249, 16, 71, 249, 105, 105, 2, 107, 208, 107, 210, 208, 23, 23, 191, 168, 145, 168, 46, 145, 153, 153, 113, 232, 88, 232, 41, 88, 58, 58, 83, 105, 39, 105, 116, 39, 39, 39, 247, 208, 185, 208, 78, 185, 217, 217, 145, 72, 56, 72, 169, 56, 235, 235, 222, 53, 19, 53, 205, 19, 43, 43, 229, 206, 179, 206, 86, 179, 34, 34, 119, 85, 51, 85, 68, 51, 210, 210, 4, 214, 187, 214, 191, 187, 169, 169, 57, 144, 112, 144, 73, 112, 7, 7, 135, 128, 137, 128, 14, 137, 51, 51, 193, 242, 167, 242, 102, 167, 45, 45, 236, 193, 182, 193, 90, 182, 60, 60, 90, 102, 34, 102, 120, 34, 21, 21, 184, 173, 146, 173, 42, 146, 201, 201, 169, 96, 32, 96, 137, 32, 135, 135, 92, 219, 73, 219, 21, 73, 170, 170, 176, 26, 255, 26, 79, 255, 80, 80, 216, 136, 120, 136, 160, 120, 165, 165, 43, 142, 122, 142, 81, 122, 3, 3, 137, 138, 143, 138, 6, 143, 89, 89, 74, 19, 248, 19, 178, 248, 9, 9, 146, 155, 128, 155, 18, 128, 26, 26, 35, 57, 23, 57, 52, 23, 101, 101, 16, 117, 218, 117, 202, 218, 215, 215, 132, 83, 49, 83, 181, 49, 132, 132, 213, 81, 198, 81, 19, 198, 208, 208, 3, 211, 184, 211, 187, 184, 130, 130, 220, 94, 195, 94, 31, 195, 41, 41, 226, 203, 176, 203, 82, 176, 90, 90, 195, 153, 119, 153, 180, 119, 30, 30, 45, 51, 17, 51, 60, 17, 123, 123, 61, 70, 203, 70, 246, 203, 168, 168, 183, 31, 252, 31, 75, 252, 109, 109, 12, 97, 214, 97, 218, 214, 44, 44, 98, 78, 58, 78, 88, 58};
.const .align 8 .b8 T2[2048] = {165, 198, 198, 50, 244, 165, 244, 151, 132, 248, 248, 111, 151, 132, 151, 235, 153, 238, 238, 94, 176, 153, 176, 199, 141, 246, 246, 122, 140, 141, 140, 247, 13, 255, 255, 232, 23, 13, 23, 229, 189, 214, 214, 10, 220, 189, 220, 183, 177, 222, 222, 22, 200, 177, 200, 167, 84, 145, 145, 109, 252, 84, 252, 57, 80, 96, 96, 144, 240, 80, 240, 192, 3, 2, 2, 7, 5, 3, 5, 4, 169, 206, 206, 46, 224, 169, 224, 135, 125, 86, 86, 209, 135, 125, 135, 172, 25, 231, 231, 204, 43, 25, 43, 213, 98, 181, 181, 19, 166, 98, 166, 113, 230, 77, 77, 124, 49, 230, 49, 154, 154, 236, 236, 89, 181, 154, 181, 195, 69, 143, 143, 64, 207, 69, 207, 5, 157, 31, 31, 163, 188, 157, 188, 62, 64, 137, 137, 73, 192, 64, 192, 9, 135, 250, 250, 104, 146, 135, 146, 239, 21, 239, 239, 208, 63, 21, 63, 197, 235, 178, 178, 148, 38, 235, 38, 127, 201, 142, 142, 206, 64, 201, 64, 7, 11, 251, 251, 230, 29, 11, 29, 237, 236, 65, 65, 110, 47, 236, 47, 130, 103, 179, 179, 26, 169, 103, 169, 125, 253, 95, 95, 67, 28, 253, 28, 190, 234, 69, 69, 96, 37, 234, 37, 138, 191, 35, 35, 249, 218, 191, 218, 70, 247, 83, 83, 81, 2, 247, 2, 166, 150, 228, 228, 69, 161, 150, 161, 211, 91, 155, 155, 118, 237, 91, 237, 45, 194, 117, 117, 40, 93, 194, 93, 234, 28, 225, 225, 197, 36, 28, 36, 217, 174, 61, 61, 212, 233, 174, 233, 122, 106, 76, 76, 242, 190, 106, 190, 152, 90, 108, 108, 130, 238, 90, 238, 216, 65, 126, 126, 189, 195, 65, 195, 252, 2, 245, 245, 243, 6, 2, 6, 241, 79, 131, 131, 82, 209, 79, 209, 29, 92, 104, 104, 140, 228, 92, 228, 208, 244, 81, 81, 86, 7, 244, 7, 162, 52, 209, 209, 141, 92, 52, 92, 185, 8, 249, 249, 225, 24, 8, 24, 233, 147, 226, 226, 76, 174, 147, 174, 223, 115, 171, 171, 62, 149, 115, 149, 77, 83, 98, 98, 151, 245, 83, 245, 196, 63, 42, 42, 107, 65, 63, 65, 84, 12, 8, 8, 28, 20, 12, 20, 16, 82, 149, 149, 99, 246, 82, 246, 49, 101, 70, 70, 233, 175, 101, 175, 140, 94, 157, 157, 127, 226, 94, 226, 33, 40, 48, 48, 72, 120, 40, 120, 96, 161, 55, 55, 207, 248, 161, 248, 110, 15, 10, 10, 27, 17, 15, 17, 20, 181, 47, 47, 235, 196, 181, 196, 94, 9, 14, 14, 21, 27, 9, 27, 28, 54, 36, 36, 126, 90, 54, 90, 72, 155, 27, 27, 173, 182, 155, 182, 54, 61, 223, 223, 152, 71, 61, 71, 165, 38, 205, 205, 167, 106, 38, 106, 129, 105, 78, 78, 245, 187, 105, 187, 156, 205, 127, 127, 51, 76, 205, 76, 254, 159, 234, 234, 80, 186, 159, 186, 207, 27, 18, 18, 63, 45, 27, 45, 36, 158, 29, 29, 164, 185, 158, 185, 58, 116, 88, 88, 196, 156, 116, 156, 176, 46, 52, 52, 70, 114, 46, 114, 104, 45, 54, 54, 65, 119, 45, 119, 108, 178, 220, 220, 17, 205, 178, 205, 163, 238, 180, 180, 157, 41, 238, 41, 115, 251, 91, 91, 77, 22, 251, 22, 182, 246, 164, 164, 165, 1, 246, 1, 83, 77, 118, 118, 161, 215, 77, 215, 236, 97, 183, 183, 20, 163, 97, 163, 117, 206, 125, 125, 52, 73, 206, 73, 250, 123, 82, 82, 223, 141, 123, 141, 164, 62, 221, 221, 159, 66, 62, 66, 161, 113, 94, 94, 205, 147, 113, 147, 188, 151, 19, 19, 177, 162, 151, 162, 38, 245, 166, 166, 162, 4, 245, 4, 87, 104, 185, 185, 1, 184, 104, 184, 105, 0, 0, 0, 0, 0, 0, 0, 0, 44, 193, 193, 181, 116, 44, 116, 153, 96, 64, 64, 224, 160, 96, 160, 128, 31, 227, 227, 194, 33, 31, 33, 221, 200, 121, 121, 58, 67, 200, 67, 242, 237, 182, 182, 154, 44, 237, 44, 119, 190, 212, 212, 13, 217, 190, 217, 179, 70, 141, 141, 71, 202, 70, 202, 1, 217, 103, 103, 23, 112, 217, 112, 206, 75, 114, 114, 175, 221, 75, 221, 228, 222, 148, 148, 237, 121, 222, 121, 51, 212, 152, 152, 255, 103, 212, 103, 43, 232, 176, 176, 147, 35, 232, 35, 123, 74, 133, 133, 91, 222, 74, 222, 17, 107, 187, 187, 6, 189, 107, 189, 109, 42, 197, 197, 187, 126, 42, 126, 145, 229, 79, 79, 123, 52, 229, 52, 158, 22, 237, 237, 215, 58, 22, 58, 193, 197, 134, 134, 210, 84, 197, 84, 23, 215, 154, 154, 248, 98, 215, 98, 47, 85, 102, 102, 153, 255, 85, 255, 204, 148, 17, 17, 182, 167, 148, 167, 34, 207, 138, 138, 192, 74, 207, 74, 15, 16, 233, 233, 217, 48, 16, 48, 201, 6, 4, 4, 14, 10, 6, 10, 8, 129, 254, 254, 102, 152, 129, 152, 231, 240, 160, 160, 171, 11, 240, 11, 91, 68, 120, 120, 180, 204, 68, 204, 240, 186, 37, 37, 240, 213, 186, 213, 74, 227, 75, 75, 117, 62, 227, 62, 150, 243, 162, 162, 172, 14, 243, 14, 95, 254, 93, 93, 68, 25, 254, 25, 186, 192, 128, 128, 219, 91, 192, 91, 27, 138, 5, 5, 128, 133, 138, 133, 10, 173, 63, 63, 211, 236, 173, 236, 126, 188, 33, 33, 254, 223, 188, 223, 66, 72, 112, 112, 168, 216, 72, 216, 224, 4, 241, 241, 253, 12, 4, 12, 249, 223, 99, 99, 25, 122, 223, 122, 198, 193, 119, 119, 47, 88, 193, 88, 238, 117, 175, 175, 48, 159, 117, 159, 69, 99, 66, 66, 231, 165, 99, 165, 132, 48, 32, 32, 112, 80, 48, 80, 64, 26, 229, 229, 203, 46, 26, 46, 209, 14, 253, 253, 239, 18, 14, 18, 225, 109, 191, 191, 8, 183, 109, 183, 101, 76, 129, 129, 85, 212, 76, 212, 25, 20, 24, 24, 36, 60, 20, 60, 48, 53, 38, 38, 121, 95, 53, 95, 76, 47, 195, 195, 178, 113, 47, 113, 157, 225, 190, 190, 134, 56, 225, 56, 103, 162, 53, 53, 200, 253, 162, 253, 106, 204, 136, 136, 199, 79, 204, 79, 11, 57, 46, 46, 101, 75, 57, 75, 92, 87, 147, 147, 106, 249, 87, 249, 61, 242, 85, 85, 88, 13, 242, 13, 170, 130, 252, 252, 97, 157, 130, 157, 227, 71, 122, 122, 179, 201, 71, 201, 244, 172, 200, 200, 39, 239, 172, 239, 139, 231, 186, 186, 136, 50, 231, 50, 111, 43, 50, 50, 79, 125, 43, 125, 100, 149, 230, 230, 66, 164, 149, 164, 215, 160, 192, 192, 59, 251, 160, 251, 155, 152, 25, 25, 170, 179, 152, 179, 50, 209, 158, 158, 246, 104, 209, 104, 39, 127, 163, 163, 34, 129, 127, 129, 93, 102, 68, 68, 238, 170, 102, 170, 136, 126, 84, 84, 214, 130, 126, 130, 168, 171, 59, 59, 221, 230, 171, 230, 118, 131, 11, 11, 149, 158, 131, 158, 22, 202, 140, 140, 201, 69, 202, 69, 3, 41, 199, 199, 188, 123, 41, 123, 149, 211, 107, 107, 5, 110, 211, 110, 214, 60, 40, 40, 108, 68, 60, 68, 80, 121, 167, 167, 44, 139, 121, 139, 85, 226, 188, 188, 129, 61, 226, 61, 99, 29, 22, 22, 49, 39, 29, 39, 44, 118, 173, 173, 55, 154, 118, 154, 65, 59, 219, 219, 150, 77, 59, 77, 173, 86, 100, 100, 158, 250, 86, 250, 200, 78, 116, 116, 166, 210, 78, 210, 232, 30, 20, 20, 54, 34, 30, 34, 40, 219, 146, 146, 228, 118, 219, 118, 63, 10, 12, 12, 18, 30, 10, 30, 24, 108, 72, 72, 252, 180, 108, 180, 144, 228, 184, 184, 143, 55, 228, 55, 107, 93, 159, 159, 120, 231, 93, 231, 37, 110, 189, 189, 15, 178, 110, 178, 97, 239, 67, 67, 105, 42, 239, 42, 134, 166, 196, 196, 53, 241, 166, 241, 147, 168, 57, 57, 218, 227, 168, 227, 114, 164, 49, 49, 198, 247, 164, 247, 98, 55, 211, 211, 138, 89, 55, 89, 189, 139, 242, 242, 116, 134, 139, 134, 255, 50, 213, 213, 131, 86, 50, 86, 177, 67, 139, 139, 78, 197, 67, 197, 13, 89, 110, 110, 133, 235, 89, 235, 220, 183, 218, 218, 24, 194, 183, 194, 175, 140, 1, 1, 142, 143, 140, 143, 2, 100, 177, 177, 29, 172, 100, 172, 121, 210, 156, 156, 241, 109, 210, 109, 35, 224, 73, 73, 114, 59, 224, 59, 146, 180, 216, 216, 31, 199, 180, 199, 171, 250, 172, 172, 185, 21, 250, 21, 67, 7, 243, 243, 250, 9, 7, 9, 253, 37, 207, 207, 160, 111, 37, 111, 133, 175, 202, 202, 32, 234, 175, 234, 143, 142, 244, 244, 125, 137, 142, 137, 243, 233, 71, 71, 103, 32, 233, 32, 142, 24, 16, 16, 56, 40, 24, 40, 32, 213, 111, 111, 11, 100, 213, 100, 222, 136, 240, 240, 115, 131, 136, 131, 251, 111, 74, 74, 251, 177, 111, 177, 148, 114, 92, 92, 202, 150, 114, 150, 184, 36, 56, 56, 84, 108, 36, 108, 112, 241, 87, 87, 95, 8, 241, 8, 174, 199, 115, 115, 33, 82, 199, 82, 230, 81, 151, 151, 100, 243, 81, 243, 53, 35, 203, 203, 174, 101, 35, 101, 141, 124, 161, 161, 37, 132, 124, 132, 89, 156, 232, 232, 87, 191, 156, 191, 203, 33, 62, 62, 93, 99, 33, 99, 124, 221, 150, 150, 234, 124, 221, 124, 55, 220, 97, 97, 30, 127, 220, 127, 194, 134, 13, 13, 156, 145, 134, 145, 26, 133, 15, 15, 155, 148, 133, 148, 30, 144, 224, 224, 75, 171, 144, 171, 219, 66, 124, 124, 186, 198, 66, 198, 248, 196, 113, 113, 38, 87, 196, 87, 226, 170, 204, 204, 41, 229, 170, 229, 131, 216, 144, 144, 227, 115, 216, 115, 59, 5, 6, 6, 9, 15, 5, 15, 12, 1, 247, 247, 244, 3, 1, 3, 245, 18, 28, 28, 42, 54, 18, 54, 56, 163, 194, 194, 60, 254, 163, 254, 159, 95, 106, 106, 139, 225, 95, 225, 212, 249, 174, 174, 190, 16, 249, 16, 71, 208, 105, 105, 2, 107, 208, 107, 210, 145, 23, 23, 191, 168, 145, 168, 46, 88, 153, 153, 113, 232, 88, 232, 41, 39, 58, 58, 83, 105, 39, 105, 116, 185, 39, 39, 247, 208, 185, 208, 78, 56, 217, 217, 145, 72, 56, 72, 169, 19, 235, 235, 222, 53, 19, 53, 205, 179, 43, 43, 229, 206, 179, 206, 86, 51, 34, 34, 119, 85, 51, 85, 68, 187, 210, 210, 4, 214, 187, 214, 191, 112, 169, 169, 57, 144, 112, 144, 73, 137, 7, 7, 135, 128, 137, 128, 14, 167, 51, 51, 193, 242, 167, 242, 102, 182, 45, 45, 236, 193, 182, 193, 90, 34, 60, 60, 90, 102, 34, 102, 120, 146, 21, 21, 184, 173, 146, 173, 42, 32, 201, 201, 169, 96, 32, 96, 137, 73, 135, 135, 92, 219, 73, 219, 21, 255, 170, 170, 176, 26, 255, 26, 79, 120, 80, 80, 216, 136, 120, 136, 160, 122, 165, 165, 43, 142, 122, 142, 81, 143, 3, 3, 137, 138, 143, 138, 6, 248, 89, 89, 74, 19, 248, 19, 178, 128, 9, 9, 146, 155, 128, 155, 18, 23, 26, 26, 35, 57, 23, 57, 52, 218, 101, 101, 16, 117, 218, 117, 202, 49, 215, 215, 132, 83, 49, 83, 181, 198, 132, 132, 213, 81, 198, 81, 19, 184, 208, 208, 3, 211, 184, 211, 187, 195, 130, 130, 220, 94, 195, 94, 31, 176, 41, 41, 226, 203, 176, 203, 82, 119, 90, 90, 195, 153, 119, 153, 180, 17, 30, 30, 45, 51, 17, 51, 60, 203, 123, 123, 61, 70, 203, 70, 246, 252, 168, 168, 183, 31, 252, 31, 75, 214, 109, 109, 12, 97, 214, 97, 218, 58, 44, 44, 98, 78, 58, 78, 88};
.const .align 8 .b8 T3[2048] = {151, 165, 198, 198, 50, 244, 165, 244, 235, 132, 248, 248, 111, 151, 132, 151, 199, 153, 238, 238, 94, 176, 153, 176, 247, 141, 246, 246, 122, 140, 141, 140, 229, 13, 255, 255, 232, 23, 13, 23, 183, 189, 214, 214, 10, 220, 189, 220, 167, 177, 222, 222, 22, 200, 177, 200, 57, 84, 145, 145, 109, 252, 84, 252, 192, 80, 96, 96, 144, 240, 80, 240, 4, 3, 2, 2, 7, 5, 3, 5, 135, 169, 206, 206, 46, 224, 169, 224, 172, 125, 86, 86, 209, 135, 125, 135, 213, 25, 231, 231, 204, 43, 25, 43, 113, 98, 181, 181, 19, 166, 98, 166, 154, 230, 77, 77, 124, 49, 230, 49, 195, 154, 236, 236, 89, 181, 154, 181, 5, 69, 143, 143, 64, 207, 69, 207, 62, 157, 31, 31, 163, 188, 157, 188, 9, 64, 137, 137, 73, 192, 64, 192, 239, 135, 250, 250, 104, 146, 135, 146, 197, 21, 239, 239, 208, 63, 21, 63, 127, 235, 178, 178, 148, 38, 235, 38, 7, 201, 142, 142, 206, 64, 201, 64, 237, 11, 251, 251, 230, 29, 11, 29, 130, 236, 65, 65, 110, 47, 236, 47, 125, 103, 179, 179, 26, 169, 103, 169, 190, 253, 95, 95, 67, 28, 253, 28, 138, 234, 69, 69, 96, 37, 234, 37, 70, 191, 35, 35, 249, 218, 191, 218, 166, 247, 83, 83, 81, 2, 247, 2, 211, 150, 228, 228, 69, 161, 150, 161, 45, 91, 155, 155, 118, 237, 91, 237, 234, 194, 117, 117, 40, 93, 194, 93, 217, 28, 225, 225, 197, 36, 28, 36, 122, 174, 61, 61, 212, 233, 174, 233, 152, 106, 76, 76, 242, 190, 106, 190, 216, 90, 108, 108, 130, 238, 90, 238, 252, 65, 126, 126, 189, 195, 65, 195, 241, 2, 245, 245, 243, 6, 2, 6, 29, 79, 131, 131, 82, 209, 79, 209, 208, 92, 104, 104, 140, 228, 92, 228, 162, 244, 81, 81, 86, 7, 244, 7, 185, 52, 209, 209, 141, 92, 52, 92, 233, 8, 249, 249, 225, 24, 8, 24, 223, 147, 226, 226, 76, 174, 147, 174, 77, 115, 171, 171, 62, 149, 115, 149, 196, 83, 98, 98, 151, 245, 83, 245, 84, 63, 42, 42, 107, 65, 63, 65, 16, 12, 8, 8, 28, 20, 12, 20, 49, 82, 149, 149, 99, 246, 82, 246, 140, 101, 70, 70, 233, 175, 101, 175, 33, 94, 157, 157, 127, 226, 94, 226, 96, 40, 48, 48, 72, 120, 40, 120, 110, 161, 55, 55, 207, 248, 161, 248, 20, 15, 10, 10, 27, 17, 15, 17, 94, 181, 47, 47, 235, 196, 181, 196, 28, 9, 14, 14, 21, 27, 9, 27, 72, 54, 36, 36, 126, 90, 54, 90, 54, 155, 27, 27, 173, 182, 155, 182, 165, 61, 223, 223, 152, 71, 61, 71, 129, 38, 205, 205, 167, 106, 38, 106, 156, 105, 78, 78, 245, 187, 105, 187, 254, 205, 127, 127, 51, 76, 205, 76, 207, 159, 234, 234, 80, 186, 159, 186, 36, 27, 18, 18, 63, 45, 27, 45, 58, 158, 29, 29, 164, 185, 158, 185, 176, 116, 88, 88, 196, 156, 116, 156, 104, 46, 52, 52, 70, 114, 46, 114, 108, 45, 54, 54, 65, 119, 45, 119, 163, 178, 220, 220, 17, 205, 178, 205, 115, 238, 180, 180, 157, 41, 238, 41, 182, 251, 91, 91, 77, 22, 251, 22, 83, 246, 164, 164, 165, 1, 246, 1, 236, 77, 118, 118, 161, 215, 77, 215, 117, 97, 183, 183, 20, 163, 97, 163, 250, 206, 125, 125, 52, 73, 206, 73, 164, 123, 82, 82, 223, 141, 123, 141, 161, 62, 221, 221, 159, 66, 62, 66, 188, 113, 94, 94, 205, 147, 113, 147, 38, 151, 19, 19, 177, 162, 151, 162, 87, 245, 166, 166, 162, 4, 245, 4, 105, 104, 185, 185, 1, 184, 104, 184, 0, 0, 0, 0, 0, 0, 0, 0, 153, 44, 193, 193, 181, 116, 44, 116, 128, 96, 64, 64, 224, 160, 96, 160, 221, 31, 227, 227, 194, 33, 31, 33, 242, 200, 121, 121, 58, 67, 200, 67, 119, 237, 182, 182, 154, 44, 237, 44, 179, 190, 212, 212, 13, 217, 190, 217, 1, 70, 141, 141, 71, 202, 70, 202, 206, 217, 103, 103, 23, 112, 217, 112, 228, 75, 114, 114, 175, 221, 75, 221, 51, 222, 148, 148, 237, 121, 222, 121, 43, 212, 152, 152, 255, 103, 212, 103, 123, 232, 176, 176, 147, 35, 232, 35, 17, 74, 133, 133, 91, 222, 74, 222, 109, 107, 187, 187, 6, 189, 107, 189, 145, 42, 197, 197, 187, 126, 42, 126, 158, 229, 79, 79, 123, 52, 229, 52, 193, 22, 237, 237, 215, 58, 22, 58, 23, 197, 134, 134, 210, 84, 197, 84, 47, 215, 154, 154, 248, 98, 215, 98, 204, 85, 102, 102, 153, 255, 85, 255, 34, 148, 17, 17, 182, 167, 148, 167, 15, 207, 138, 138, 192, 74, 207, 74, 201, 16, 233, 233, 217, 48, 16, 48, 8, 6, 4, 4, 14, 10, 6, 10, 231, 129, 254, 254, 102, 152, 129, 152, 91, 240, 160, 160, 171, 11, 240, 11, 240, 68, 120, 120, 180, 204, 68, 204, 74, 186, 37, 37, 240, 213, 186, 213, 150, 227, 75, 75, 117, 62, 227, 62, 95, 243, 162, 162, 172, 14, 243, 14, 186, 254, 93, 93, 68, 25, 254, 25, 27, 192, 128, 128, 219, 91, 192, 91, 10, 138, 5, 5, 128, 133, 138, 133, 126, 173, 63, 63, 211, 236, 173, 236, 66, 188, 33, 33, 254, 223, 188, 223, 224, 72, 112, 112, 168, 216, 72, 216, 249, 4, 241, 241, 253, 12, 4, 12, 198, 223, 99, 99, 25, 122, 223, 122, 238, 193, 119, 119, 47, 88, 193, 88, 69, 117, 175, 175, 48, 159, 117, 159, 132, 99, 66, 66, 231, 165, 99, 165, 64, 48, 32, 32, 112, 80, 48, 80, 209, 26, 229, 229, 203, 46, 26, 46, 225, 14, 253, 253, 239, 18, 14, 18, 101, 109, 191, 191, 8, 183, 109, 183, 25, 76, 129, 129, 85, 212, 76, 212, 48, 20, 24, 24, 36, 60, 20, 60, 76, 53, 38, 38, 121, 95, 53, 95, 157, 47, 195, 195, 178, 113, 47, 113, 103, 225, 190, 190, 134, 56, 225, 56, 106, 162, 53, 53, 200, 253, 162, 253, 11, 204, 136, 136, 199, 79, 204, 79, 92, 57, 46, 46, 101, 75, 57, 75, 61, 87, 147, 147, 106, 249, 87, 249, 170, 242, 85, 85, 88, 13, 242, 13, 227, 130, 252, 252, 97, 157, 130, 157, 244, 71, 122, 122, 179, 201, 71, 201, 139, 172, 200, 200, 39, 239, 172, 239, 111, 231, 186, 186, 136, 50, 231, 50, 100, 43, 50, 50, 79, 125, 43, 125, 215, 149, 230, 230, 66, 164, 149, 164, 155, 160, 192, 192, 59, 251, 160, 251, 50, 152, 25, 25, 170, 179, 152, 179, 39, 209, 158, 158, 246, 104, 209, 104, 93, 127, 163, 163, 34, 129, 127, 129, 136, 102, 68, 68, 238, 170, 102, 170, 168, 126, 84, 84, 214, 130, 126, 130, 118, 171, 59, 59, 221, 230, 171, 230, 22, 131, 11, 11, 149, 158, 131, 158, 3, 202, 140, 140, 201, 69, 202, 69, 149, 41, 199, 199, 188, 123, 41, 123, 214, 211, 107, 107, 5, 110, 211, 110, 80, 60, 40, 40, 108, 68, 60, 68, 85, 121, 167, 167, 44, 139, 121, 139, 99, 226, 188, 188, 129, 61, 226, 61, 44, 29, 22, 22, 49, 39, 29, 39, 65, 118, 173, 173, 55, 154, 118, 154, 173, 59, 219, 219, 150, 77, 59, 77, 200, 86, 100, 100, 158, 250, 86, 250, 232, 78, 116, 116, 166, 210, 78, 210, 40, 30, 20, 20, 54, 34, 30, 34, 63, 219, 146, 146, 228, 118, 219, 118, 24, 10, 12, 12, 18, 30, 10, 30, 144, 108, 72, 72, 252, 180, 108, 180, 107, 228, 184, 184, 143, 55, 228, 55, 37, 93, 159, 159, 120, 231, 93, 231, 97, 110, 189, 189, 15, 178, 110, 178, 134, 239, 67, 67, 105, 42, 239, 42, 147, 166, 196, 196, 53, 241, 166, 241, 114, 168, 57, 57, 218, 227, 168, 227, 98, 164, 49, 49, 198, 247, 164, 247, 189, 55, 211, 211, 138, 89, 55, 89, 255, 139, 242, 242, 116, 134, 139, 134, 177, 50, 213, 213, 131, 86, 50, 86, 13, 67, 139, 139, 78, 197, 67, 197, 220, 89, 110, 110, 133, 235, 89, 235, 175, 183, 218, 218, 24, 194, 183, 194, 2, 140, 1, 1, 142, 143, 140, 143, 121, 100, 177, 177, 29, 172, 100, 172, 35, 210, 156, 156, 241, 109, 210, 109, 146, 224, 73, 73, 114, 59, 224, 59, 171, 180, 216, 216, 31, 199, 180, 199, 67, 250, 172, 172, 185, 21, 250, 21, 253, 7, 243, 243, 250, 9, 7, 9, 133, 37, 207, 207, 160, 111, 37, 111, 143, 175, 202, 202, 32, 234, 175, 234, 243, 142, 244, 244, 125, 137, 142, 137, 142, 233, 71, 71, 103, 32, 233, 32, 32, 24, 16, 16, 56, 40, 24, 40, 222, 213, 111, 111, 11, 100, 213, 100, 251, 136, 240, 240, 115, 131, 136, 131, 148, 111, 74, 74, 251, 177, 111, 177, 184, 114, 92, 92, 202, 150, 114, 150, 112, 36, 56, 56, 84, 108, 36, 108, 174, 241, 87, 87, 95, 8, 241, 8, 230, 199, 115, 115, 33, 82, 199, 82, 53, 81, 151, 151, 100, 243, 81, 243, 141, 35, 203, 203, 174, 101, 35, 101, 89, 124, 161, 161, 37, 132, 124, 132, 203, 156, 232, 232, 87, 191, 156, 191, 124, 33, 62, 62, 93, 99, 33, 99, 55, 221, 150, 150, 234, 124, 221, 124, 194, 220, 97, 97, 30, 127, 220, 127, 26, 134, 13, 13, 156, 145, 134, 145, 30, 133, 15, 15, 155, 148, 133, 148, 219, 144, 224, 224, 75, 171, 144, 171, 248, 66, 124, 124, 186, 198, 66, 198, 226, 196, 113, 113, 38, 87, 196, 87, 131, 170, 204, 204, 41, 229, 170, 229, 59, 216, 144, 144, 227, 115, 216, 115, 12, 5, 6, 6, 9, 15, 5, 15, 245, 1, 247, 247, 244, 3, 1, 3, 56, 18, 28, 28, 42, 54, 18, 54, 159, 163, 194, 194, 60, 254, 163, 254, 212, 95, 106, 106, 139, 225, 95, 225, 71, 249, 174, 174, 190, 16, 249, 16, 210, 208, 105, 105, 2, 107, 208, 107, 46, 145, 23, 23, 191, 168, 145, 168, 41, 88, 153, 153, 113, 232, 88, 232, 116, 39, 58, 58, 83, 105, 39, 105, 78, 185, 39, 39, 247, 208, 185, 208, 169, 56, 217, 217, 145, 72, 56, 72, 205, 19, 235, 235, 222, 53, 19, 53, 86, 179, 43, 43, 229, 206, 179, 206, 68, 51, 34, 34, 119, 85, 51, 85, 191, 187, 210, 210, 4, 214, 187, 214, 73, 112, 169, 169, 57, 144, 112, 144, 14, 137, 7, 7, 135, 128, 137, 128, 102, 167, 51, 51, 193, 242, 167, 242, 90, 182, 45, 45, 236, 193, 182, 193, 120, 34, 60, 60, 90, 102, 34, 102, 42, 146, 21, 21, 184, 173, 146, 173, 137, 32, 201, 201, 169, 96, 32, 96, 21, 73, 135, 135, 92, 219, 73, 219, 79, 255, 170, 170, 176, 26, 255, 26, 160, 120, 80, 80, 216, 136, 120, 136, 81, 122, 165, 165, 43, 142, 122, 142, 6, 143, 3, 3, 137, 138, 143, 138, 178, 248, 89, 89, 74, 19, 248, 19, 18, 128, 9, 9, 146, 155, 128, 155, 52, 23, 26, 26, 35, 57, 23, 57, 202, 218, 101, 101, 16, 117, 218, 117, 181, 49, 215, 215, 132, 83, 49, 83, 19, 198, 132, 132, 213, 81, 198, 81, 187, 184, 208, 208, 3, 211, 184, 211, 31, 195, 130, 130, 220, 94, 195, 94, 82, 176, 41, 41, 226, 203, 176, 203, 180, 119, 90, 90, 195, 153, 119, 153, 60, 17, 30, 30, 45, 51, 17, 51, 246, 203, 123, 123, 61, 70, 203, 70, 75, 252, 168, 168, 183, 31, 252, 31, 218, 214, 109, 109, 12, 97, 214, 97, 88, 58, 44, 44, 98, 78, 58, 78};
.const .align 8 .b8 T5[2048] = {165, 244, 151, 165, 198, 198, 50, 244, 132, 151, 235, 132, 248, 248, 111, 151, 153, 176, 199, 153, 238, 238, 94, 176, 141, 140, 247, 141, 246, 246, 122, 140, 13, 23, 229, 13, 255, 255, 232, 23, 189, 220, 183, 189, 214, 214, 10, 220, 177, 200, 167, 177, 222, 222, 22, 200, 84, 252, 57, 84, 145, 145, 109, 252, 80, 240, 192, 80, 96, 96, 144, 240, 3, 5, 4, 3, 2, 2, 7, 5, 169, 224, 135, 169, 206, 206, 46, 224, 125, 135, 172, 125, 86, 86, 209, 135, 25, 43, 213, 25, 231, 231, 204, 43, 98, 166, 113, 98, 181, 181, 19, 166, 230, 49, 154, 230, 77, 77, 124, 49, 154, 181, 195, 154, 236, 236, 89, 181, 69, 207, 5, 69, 143, 143, 64, 207, 157, 188, 62, 157, 31, 31, 163, 188, 64, 192, 9, 64, 137, 137, 73, 192, 135, 146, 239, 135, 250, 250, 104, 146, 21, 63, 197, 21, 239, 239, 208, 63, 235, 38, 127, 235, 178, 178, 148, 38, 201, 64, 7, 201, 142, 142, 206, 64, 11, 29, 237, 11, 251, 251, 230, 29, 236, 47, 130, 236, 65, 65, 110, 47, 103, 169, 125, 103, 179, 179, 26, 169, 253, 28, 190, 253, 95, 95, 67, 28, 234, 37, 138, 234, 69, 69, 96, 37, 191, 218, 70, 191, 35, 35, 249, 218, 247, 2, 166, 247, 83, 83, 81, 2, 150, 161, 211, 150, 228, 228, 69, 161, 91, 237, 45, 91, 155, 155, 118, 237, 194, 93, 234, 194, 117, 117, 40, 93, 28, 36, 217, 28, 225, 225, 197, 36, 174, 233, 122, 174, 61, 61, 212, 233, 106, 190, 152, 106, 76, 76, 242, 190, 90, 238, 216, 90, 108, 108, 130, 238, 65, 195, 252, 65, 126, 126, 189, 195, 2, 6, 241, 2, 245, 245, 243, 6, 79, 209, 29, 79, 131, 131, 82, 209, 92, 228, 208, 92, 104, 104, 140, 228, 244, 7, 162, 244, 81, 81, 86, 7, 52, 92, 185, 52, 209, 209, 141, 92, 8, 24, 233, 8, 249, 249, 225, 24, 147, 174, 223, 147, 226, 226, 76, 174, 115, 149, 77, 115, 171, 171, 62, 149, 83, 245, 196, 83, 98, 98, 151, 245, 63, 65, 84, 63, 42, 42, 107, 65, 12, 20, 16, 12, 8, 8, 28, 20, 82, 246, 49, 82, 149, 149, 99, 246, 101, 175, 140, 101, 70, 70, 233, 175, 94, 226, 33, 94, 157, 157, 127, 226, 40, 120, 96, 40, 48, 48, 72, 120, 161, 248, 110, 161, 55, 55, 207, 248, 15, 17, 20, 15, 10, 10, 27, 17, 181, 196, 94, 181, 47, 47, 235, 196, 9, 27, 28, 9, 14, 14, 21, 27, 54, 90, 72, 54, 36, 36, 126, 90, 155, 182, 54, 155, 27, 27, 173, 182, 61, 71, 165, 61, 223, 223, 152, 71, 38, 106, 129, 38, 205, 205, 167, 106, 105, 187, 156, 105, 78, 78, 245, 187, 205, 76, 254, 205, 127, 127, 51, 76, 159, 186, 207, 159, 234, 234, 80, 186, 27, 45, 36, 27, 18, 18, 63, 45, 158, 185, 58, 158, 29, 29, 164, 185, 116, 156, 176, 116, 88, 88, 196, 156, 46, 114, 104, 46, 52, 52, 70, 114, 45, 119, 108, 45, 54, 54, 65, 119, 178, 205, 163, 178, 220, 220, 17, 205, 238, 41, 115, 238, 180, 180, 157, 41, 251, 22, 182, 251, 91, 91, 77, 22, 246, 1, 83, 246, 164, 164, 165, 1, 77, 215, 236, 77, 118, 118, 161, 215, 97, 163, 117, 97, 183, 183, 20, 163, 206, 73, 250, 206, 125, 125, 52, 73, 123, 141, 164, 123, 82, 82, 223, 141, 62, 66, 161, 62, 221, 221, 159, 66, 113, 147, 188, 113, 94, 94, 205, 147, 151, 162, 38, 151, 19, 19, 177, 162, 245, 4, 87, 245, 166, 166, 162, 4, 104, 184, 105, 104, 185, 185, 1, 184, 0, 0, 0, 0, 0, 0, 0, 0, 44, 116, 153, 44, 193, 193, 181, 116, 96, 160, 128, 96, 64, 64, 224, 160, 31, 33, 221, 31, 227, 227, 194, 33, 200, 67, 242, 200, 121, 121, 58, 67, 237, 44, 119, 237, 182, 182, 154, 44, 190, 217, 179, 190, 212, 212, 13, 217, 70, 202, 1, 70, 141, 141, 71, 202, 217, 112, 206, 217, 103, 103, 23, 112, 75, 221, 228, 75, 114, 114, 175, 221, 222, 121, 51, 222, 148, 148, 237, 121, 212, 103, 43, 212, 152, 152, 255, 103, 232, 35, 123, 232, 176, 176, 147, 35, 74, 222, 17, 74, 133, 133, 91, 222, 107, 189, 109, 107, 187, 187, 6, 189, 42, 126, 145, 42, 197, 197, 187, 126, 229, 52, 158, 229, 79, 79, 123, 52, 22, 58, 193, 22, 237, 237, 215, 58, 197, 84, 23, 197, 134, 134, 210, 84, 215, 98, 47, 215, 154, 154, 248, 98, 85, 255, 204, 85, 102, 102, 153, 255, 148, 167, 34, 148, 17, 17, 182, 167, 207, 74, 15, 207, 138, 138, 192, 74, 16, 48, 201, 16, 233, 233, 217, 48, 6, 10, 8, 6, 4, 4, 14, 10, 129, 152, 231, 129, 254, 254, 102, 152, 240, 11, 91, 240, 160, 160, 171, 11, 68, 204, 240, 68, 120, 120, 180, 204, 186, 213, 74, 186, 37, 37, 240, 213, 227, 62, 150, 227, 75, 75, 117, 62, 243, 14, 95, 243, 162, 162, 172, 14, 254, 25, 186, 254, 93, 93, 68, 25, 192, 91, 27, 192, 128, 128, 219, 91, 138, 133, 10, 138, 5, 5, 128, 133, 173, 236, 126, 173, 63, 63, 211, 236, 188, 223, 66, 188, 33, 33, 254, 223, 72, 216, 224, 72, 112, 112, 168, 216, 4, 12, 249, 4, 241, 241, 253, 12, 223, 122, 198, 223, 99, 99, 25, 122, 193, 88, 238, 193, 119, 119, 47, 88, 117, 159, 69, 117, 175, 175, 48, 159, 99, 165, 132, 99, 66, 66, 231, 165, 48, 80, 64, 48, 32, 32, 112, 80, 26, 46, 209, 26, 229, 229, 203, 46, 14, 18, 225, 14, 253, 253, 239, 18, 109, 183, 101, 109, 191, 191, 8, 183, 76, 212, 25, 76, 129, 129, 85, 212, 20, 60, 48, 20, 24, 24, 36, 60, 53, 95, 76, 53, 38, 38, 121, 95, 47, 113, 157, 47, 195, 195, 178, 113, 225, 56, 103, 225, 190, 190, 134, 56, 162, 253, 106, 162, 53, 53, 200, 253, 204, 79, 11, 204, 136, 136, 199, 79, 57, 75, 92, 57, 46, 46, 101, 75, 87, 249, 61, 87, 147, 147, 106, 249, 242, 13, 170, 242, 85, 85, 88, 13, 130, 157, 227, 130, 252, 252, 97, 157, 71, 201, 244, 71, 122, 122, 179, 201, 172, 239, 139, 172, 200, 200, 39, 239, 231, 50, 111, 231, 186, 186, 136, 50, 43, 125, 100, 43, 50, 50, 79, 125, 149, 164, 215, 149, 230, 230, 66, 164, 160, 251, 155, 160, 192, 192, 59, 251, 152, 179, 50, 152, 25, 25, 170, 179, 209, 104, 39, 209, 158, 158, 246, 104, 127, 129, 93, 127, 163, 163, 34, 129, 102, 170, 136, 102, 68, 68, 238, 170, 126, 130, 168, 126, 84, 84, 214, 130, 171, 230, 118, 171, 59, 59, 221, 230, 131, 158, 22, 131, 11, 11, 149, 158, 202, 69, 3, 202, 140, 140, 201, 69, 41, 123, 149, 41, 199, 199, 188, 123, 211, 110, 214, 211, 107, 107, 5, 110, 60, 68, 80, 60, 40, 40, 108, 68, 121, 139, 85, 121, 167, 167, 44, 139, 226, 61, 99, 226, 188, 188, 129, 61, 29, 39, 44, 29, 22, 22, 49, 39, 118, 154, 65, 118, 173, 173, 55, 154, 59, 77, 173, 59, 219, 219, 150, 77, 86, 250, 200, 86, 100, 100, 158, 250, 78, 210, 232, 78, 116, 116, 166, 210, 30, 34, 40, 30, 20, 20, 54, 34, 219, 118, 63, 219, 146, 146, 228, 118, 10, 30, 24, 10, 12, 12, 18, 30, 108, 180, 144, 108, 72, 72, 252, 180, 228, 55, 107, 228, 184, 184, 143, 55, 93, 231, 37, 93, 159, 159, 120, 231, 110, 178, 97, 110, 189, 189, 15, 178, 239, 42, 134, 239, 67, 67, 105, 42, 166, 241, 147, 166, 196, 196, 53, 241, 168, 227, 114, 168, 57, 57, 218, 227, 164, 247, 98, 164, 49, 49, 198, 247, 55, 89, 189, 55, 211, 211, 138, 89, 139, 134, 255, 139, 242, 242, 116, 134, 50, 86, 177, 50, 213, 213, 131, 86, 67, 197, 13, 67, 139, 139, 78, 197, 89, 235, 220, 89, 110, 110, 133, 235, 183, 194, 175, 183, 218, 218, 24, 194, 140, 143, 2, 140, 1, 1, 142, 143, 100, 172, 121, 100, 177, 177, 29, 172, 210, 109, 35, 210, 156, 156, 241, 109, 224, 59, 146, 224, 73, 73, 114, 59, 180, 199, 171, 180, 216, 216, 31, 199, 250, 21, 67, 250, 172, 172, 185, 21, 7, 9, 253, 7, 243, 243, 250, 9, 37, 111, 133, 37, 207, 207, 160, 111, 175, 234, 143, 175, 202, 202, 32, 234, 142, 137, 243, 142, 244, 244, 125, 137, 233, 32, 142, 233, 71, 71, 103, 32, 24, 40, 32, 24, 16, 16, 56, 40, 213, 100, 222, 213, 111, 111, 11, 100, 136, 131, 251, 136, 240, 240, 115, 131, 111, 177, 148, 111, 74, 74, 251, 177, 114, 150, 184, 114, 92, 92, 202, 150, 36, 108, 112, 36, 56, 56, 84, 108, 241, 8, 174, 241, 87, 87, 95, 8, 199, 82, 230, 199, 115, 115, 33, 82, 81, 243, 53, 81, 151, 151, 100, 243, 35, 101, 141, 35, 203, 203, 174, 101, 124, 132, 89, 124, 161, 161, 37, 132, 156, 191, 203, 156, 232, 232, 87, 191, 33, 99, 124, 33, 62, 62, 93, 99, 221, 124, 55, 221, 150, 150, 234, 124, 220, 127, 194, 220, 97, 97, 30, 127, 134, 145, 26, 134, 13, 13, 156, 145, 133, 148, 30, 133, 15, 15, 155, 148, 144, 171, 219, 144, 224, 224, 75, 171, 66, 198, 248, 66, 124, 124, 186, 198, 196, 87, 226, 196, 113, 113, 38, 87, 170, 229, 131, 170, 204, 204, 41, 229, 216, 115, 59, 216, 144, 144, 227, 115, 5, 15, 12, 5, 6, 6, 9, 15, 1, 3, 245, 1, 247, 247, 244, 3, 18, 54, 56, 18, 28, 28, 42, 54, 163, 254, 159, 163, 194, 194, 60, 254, 95, 225, 212, 95, 106, 106, 139, 225, 249, 16, 71, 249, 174, 174, 190, 16, 208, 107, 210, 208, 105, 105, 2, 107, 145, 168, 46, 145, 23, 23, 191, 168, 88, 232, 41, 88, 153, 153, 113, 232, 39, 105, 116, 39, 58, 58, 83, 105, 185, 208, 78, 185, 39, 39, 247, 208, 56, 72, 169, 56, 217, 217, 145, 72, 19, 53, 205, 19, 235, 235, 222, 53, 179, 206, 86, 179, 43, 43, 229, 206, 51, 85, 68, 51, 34, 34, 119, 85, 187, 214, 191, 187, 210, 210, 4, 214, 112, 144, 73, 112, 169, 169, 57, 144, 137, 128, 14, 137, 7, 7, 135, 128, 167, 242, 102, 167, 51, 51, 193, 242, 182, 193, 90, 182, 45, 45, 236, 193, 34, 102, 120, 34, 60, 60, 90, 102, 146, 173, 42, 146, 21, 21, 184, 173, 32, 96, 137, 32, 201, 201, 169, 96, 73, 219, 21, 73, 135, 135, 92, 219, 255, 26, 79, 255, 170, 170, 176, 26, 120, 136, 160, 120, 80, 80, 216, 136, 122, 142, 81, 122, 165, 165, 43, 142, 143, 138, 6, 143, 3, 3, 137, 138, 248, 19, 178, 248, 89, 89, 74, 19, 128, 155, 18, 128, 9, 9, 146, 155, 23, 57, 52, 23, 26, 26, 35, 57, 218, 117, 202, 218, 101, 101, 16, 117, 49, 83, 181, 49, 215, 215, 132, 83, 198, 81, 19, 198, 132, 132, 213, 81, 184, 211, 187, 184, 208, 208, 3, 211, 195, 94, 31, 195, 130, 130, 220, 94, 176, 203, 82, 176, 41, 41, 226, 203, 119, 153, 180, 119, 90, 90, 195, 153, 17, 51, 60, 17, 30, 30, 45, 51, 203, 70, 246, 203, 123, 123, 61, 70, 252, 31, 75, 252, 168, 168, 183, 31, 214, 97, 218, 214, 109, 109, 12, 97, 58, 78, 88, 58, 44, 44, 98, 78};
.const .align 8 .b8 T6[2048] = {244, 165, 244, 151, 165, 198, 198, 50, 151, 132, 151, 235, 132, 248, 248, 111, 176, 153, 176, 199, 153, 238, 238, 94, 140, 141, 140, 247, 141, 246, 246, 122, 23, 13, 23, 229, 13, 255, 255, 232, 220, 189, 220, 183, 189, 214, 214, 10, 200, 177, 200, 167, 177, 222, 222, 22, 252, 84, 252, 57, 84, 145, 145, 109, 240, 80, 240, 192, 80, 96, 96, 144, 5, 3, 5, 4, 3, 2, 2, 7, 224, 169, 224, 135, 169, 206, 206, 46, 135, 125, 135, 172, 125, 86, 86, 209, 43, 25, 43, 213, 25, 231, 231, 204, 166, 98, 166, 113, 98, 181, 181, 19, 49, 230, 49, 154, 230, 77, 77, 124, 181, 154, 181, 195, 154, 236, 236, 89, 207, 69, 207, 5, 69, 143, 143, 64, 188, 157, 188, 62, 157, 31, 31, 163, 192, 64, 192, 9, 64, 137, 137, 73, 146, 135, 146, 239, 135, 250, 250, 104, 63, 21, 63, 197, 21, 239, 239, 208, 38, 235, 38, 127, 235, 178, 178, 148, 64, 201, 64, 7, 201, 142, 142, 206, 29, 11, 29, 237, 11, 251, 251, 230, 47, 236, 47, 130, 236, 65, 65, 110, 169, 103, 169, 125, 103, 179, 179, 26, 28, 253, 28, 190, 253, 95, 95, 67, 37, 234, 37, 138, 234, 69, 69, 96, 218, 191, 218, 70, 191, 35, 35, 249, 2, 247, 2, 166, 247, 83, 83, 81, 161, 150, 161, 211, 150, 228, 228, 69, 237, 91, 237, 45, 91, 155, 155, 118, 93, 194, 93, 234, 194, 117, 117, 40, 36, 28, 36, 217, 28, 225, 225, 197, 233, 174, 233, 122, 174, 61, 61, 212, 190, 106, 190, 152, 106, 76, 76, 242, 238, 90, 238, 216, 90, 108, 108, 130, 195, 65, 195, 252, 65, 126, 126, 189, 6, 2, 6, 241, 2, 245, 245, 243, 209, 79, 209, 29, 79, 131, 131, 82, 228, 92, 228, 208, 92, 104, 104, 140, 7, 244, 7, 162, 244, 81, 81, 86, 92, 52, 92, 185, 52, 209, 209, 141, 24, 8, 24, 233, 8, 249, 249, 225, 174, 147, 174, 223, 147, 226, 226, 76, 149, 115, 149, 77, 115, 171, 171, 62, 245, 83, 245, 196, 83, 98, 98, 151, 65, 63, 65, 84, 63, 42, 42, 107, 20, 12, 20, 16, 12, 8, 8, 28, 246, 82, 246, 49, 82, 149, 149, 99, 175, 101, 175, 140, 101, 70, 70, 233, 226, 94, 226, 33, 94, 157, 157, 127, 120, 40, 120, 96, 40, 48, 48, 72, 248, 161, 248, 110, 161, 55, 55, 207, 17, 15, 17, 20, 15, 10, 10, 27, 196, 181, 196, 94, 181, 47, 47, 235, 27, 9, 27, 28, 9, 14, 14, 21, 90, 54, 90, 72, 54, 36, 36, 126, 182, 155, 182, 54, 155, 27, 27, 173, 71, 61, 71, 165, 61, 223, 223, 152, 106, 38, 106, 129, 38, 205, 205, 167, 187, 105, 187, 156, 105, 78, 78, 245, 76, 205, 76, 254, 205, 127, 127, 51, 186, 159, 186, 207, 159, 234, 234, 80, 45, 27, 45, 36, 27, 18, 18, 63, 185, 158, 185, 58, 158, 29, 29, 164, 156, 116, 156, 176, 116, 88, 88, 196, 114, 46, 114, 104, 46, 52, 52, 70, 119, 45, 119, 108, 45, 54, 54, 65, 205, 178, 205, 163, 178, 220, 220, 17, 41, 238, 41, 115, 238, 180, 180, 157, 22, 251, 22, 182, 251, 91, 91, 77, 1, 246, 1, 83, 246, 164, 164, 165, 215, 77, 215, 236, 77, 118, 118, 161, 163, 97, 163, 117, 97, 183, 183, 20, 73, 206, 73, 250, 206, 125, 125, 52, 141, 123, 141, 164, 123, 82, 82, 223, 66, 62, 66, 161, 62, 221, 221, 159, 147, 113, 147, 188, 113, 94, 94, 205, 162, 151, 162, 38, 151, 19, 19, 177, 4, 245, 4, 87, 245, 166, 166, 162, 184, 104, 184, 105, 104, 185, 185, 1, 0, 0, 0, 0, 0, 0, 0, 0, 116, 44, 116, 153, 44, 193, 193, 181, 160, 96, 160, 128, 96, 64, 64, 224, 33, 31, 33, 221, 31, 227, 227, 194, 67, 200, 67, 242, 200, 121, 121, 58, 44, 237, 44, 119, 237, 182, 182, 154, 217, 190, 217, 179, 190, 212, 212, 13, 202, 70, 202, 1, 70, 141, 141, 71, 112, 217, 112, 206, 217, 103, 103, 23, 221, 75, 221, 228, 75, 114, 114, 175, 121, 222, 121, 51, 222, 148, 148, 237, 103, 212, 103, 43, 212, 152, 152, 255, 35, 232, 35, 123, 232, 176, 176, 147, 222, 74, 222, 17, 74, 133, 133, 91, 189, 107, 189, 109, 107, 187, 187, 6, 126, 42, 126, 145, 42, 197, 197, 187, 52, 229, 52, 158, 229, 79, 79, 123, 58, 22, 58, 193, 22, 237, 237, 215, 84, 197, 84, 23, 197, 134, 134, 210, 98, 215, 98, 47, 215, 154, 154, 248, 255, 85, 255, 204, 85, 102, 102, 153, 167, 148, 167, 34, 148, 17, 17, 182, 74, 207, 74, 15, 207, 138, 138, 192, 48, 16, 48, 201, 16, 233, 233, 217, 10, 6, 10, 8, 6, 4, 4, 14, 152, 129, 152, 231, 129, 254, 254, 102, 11, 240, 11, 91, 240, 160, 160, 171, 204, 68, 204, 240, 68, 120, 120, 180, 213, 186, 213, 74, 186, 37, 37, 240, 62, 227, 62, 150, 227, 75, 75, 117, 14, 243, 14, 95, 243, 162, 162, 172, 25, 254, 25, 186, 254, 93, 93, 68, 91, 192, 91, 27, 192, 128, 128, 219, 133, 138, 133, 10, 138, 5, 5, 128, 236, 173, 236, 126, 173, 63, 63, 211, 223, 188, 223, 66, 188, 33, 33, 254, 216, 72, 216, 224, 72, 112, 112, 168, 12, 4, 12, 249, 4, 241, 241, 253, 122, 223, 122, 198, 223, 99, 99, 25, 88, 193, 88, 238, 193, 119, 119, 47, 159, 117, 159, 69, 117, 175, 175, 48, 165, 99, 165, 132, 99, 66, 66, 231, 80, 48, 80, 64, 48, 32, 32, 112, 46, 26, 46, 209, 26, 229, 229, 203, 18, 14, 18, 225, 14, 253, 253, 239, 183, 109, 183, 101, 109, 191, 191, 8, 212, 76, 212, 25, 76, 129, 129, 85, 60, 20, 60, 48, 20, 24, 24, 36, 95, 53, 95, 76, 53, 38, 38, 121, 113, 47, 113, 157, 47, 195, 195, 178, 56, 225, 56, 103, 225, 190, 190, 134, 253, 162, 253, 106, 162, 53, 53, 200, 79, 204, 79, 11, 204, 136, 136, 199, 75, 57, 75, 92, 57, 46, 46, 101, 249, 87, 249, 61, 87, 147, 147, 106, 13, 242, 13, 170, 242, 85, 85, 88, 157, 130, 157, 227, 130, 252, 252, 97, 201, 71, 201, 244, 71, 122, 122, 179, 239, 172, 239, 139, 172, 200, 200, 39, 50, 231, 50, 111, 231, 186, 186, 136, 125, 43, 125, 100, 43, 50, 50, 79, 164, 149, 164, 215, 149, 230, 230, 66, 251, 160, 251, 155, 160, 192, 192, 59, 179, 152, 179, 50, 152, 25, 25, 170, 104, 209, 104, 39, 209, 158, 158, 246, 129, 127, 129, 93, 127, 163, 163, 34, 170, 102, 170, 136, 102, 68, 68, 238, 130, 126, 130, 168, 126, 84, 84, 214, 230, 171, 230, 118, 171, 59, 59, 221, 158, 131, 158, 22, 131, 11, 11, 149, 69, 202, 69, 3, 202, 140, 140, 201, 123, 41, 123, 149, 41, 199, 199, 188, 110, 211, 110, 214, 211, 107, 107, 5, 68, 60, 68, 80, 60, 40, 40, 108, 139, 121, 139, 85, 121, 167, 167, 44, 61, 226, 61, 99, 226, 188, 188, 129, 39, 29, 39, 44, 29, 22, 22, 49, 154, 118, 154, 65, 118, 173, 173, 55, 77, 59, 77, 173, 59, 219, 219, 150, 250, 86, 250, 200, 86, 100, 100, 158, 210, 78, 210, 232, 78, 116, 116, 166, 34, 30, 34, 40, 30, 20, 20, 54, 118, 219, 118, 63, 219, 146, 146, 228, 30, 10, 30, 24, 10, 12, 12, 18, 180, 108, 180, 144, 108, 72, 72, 252, 55, 228, 55, 107, 228, 184, 184, 143, 231, 93, 231, 37, 93, 159, 159, 120, 178, 110, 178, 97, 110, 189, 189, 15, 42, 239, 42, 134, 239, 67, 67, 105, 241, 166, 241, 147, 166, 196, 196, 53, 227, 168, 227, 114, 168, 57, 57, 218, 247, 164, 247, 98, 164, 49, 49, 198, 89, 55, 89, 189, 55, 211, 211, 138, 134, 139, 134, 255, 139, 242, 242, 116, 86, 50, 86, 177, 50, 213, 213, 131, 197, 67, 197, 13, 67, 139, 139, 78, 235, 89, 235, 220, 89, 110, 110, 133, 194, 183, 194, 175, 183, 218, 218, 24, 143, 140, 143, 2, 140, 1, 1, 142, 172, 100, 172, 121, 100, 177, 177, 29, 109, 210, 109, 35, 210, 156, 156, 241, 59, 224, 59, 146, 224, 73, 73, 114, 199, 180, 199, 171, 180, 216, 216, 31, 21, 250, 21, 67, 250, 172, 172, 185, 9, 7, 9, 253, 7, 243, 243, 250, 111, 37, 111, 133, 37, 207, 207, 160, 234, 175, 234, 143, 175, 202, 202, 32, 137, 142, 137, 243, 142, 244, 244, 125, 32, 233, 32, 142, 233, 71, 71, 103, 40, 24, 40, 32, 24, 16, 16, 56, 100, 213, 100, 222, 213, 111, 111, 11, 131, 136, 131, 251, 136, 240, 240, 115, 177, 111, 177, 148, 111, 74, 74, 251, 150, 114, 150, 184, 114, 92, 92, 202, 108, 36, 108, 112, 36, 56, 56, 84, 8, 241, 8, 174, 241, 87, 87, 95, 82, 199, 82, 230, 199, 115, 115, 33, 243, 81, 243, 53, 81, 151, 151, 100, 101, 35, 101, 141, 35, 203, 203, 174, 132, 124, 132, 89, 124, 161, 161, 37, 191, 156, 191, 203, 156, 232, 232, 87, 99, 33, 99, 124, 33, 62, 62, 93, 124, 221, 124, 55, 221, 150, 150, 234, 127, 220, 127, 194, 220, 97, 97, 30, 145, 134, 145, 26, 134, 13, 13, 156, 148, 133, 148, 30, 133, 15, 15, 155, 171, 144, 171, 219, 144, 224, 224, 75, 198, 66, 198, 248, 66, 124, 124, 186, 87, 196, 87, 226, 196, 113, 113, 38, 229, 170, 229, 131, 170, 204, 204, 41, 115, 216, 115, 59, 216, 144, 144, 227, 15, 5, 15, 12, 5, 6, 6, 9, 3, 1, 3, 245, 1, 247, 247, 244, 54, 18, 54, 56, 18, 28, 28, 42, 254, 163, 254, 159, 163, 194, 194, 60, 225, 95, 225, 212, 95, 106, 106, 139, 16, 249, 16, 71, 249, 174, 174, 190, 107, 208, 107, 210, 208, 105, 105, 2, 168, 145, 168, 46, 145, 23, 23, 191, 232, 88, 232, 41, 88, 153, 153, 113, 105, 39, 105, 116, 39, 58, 58, 83, 208, 185, 208, 78, 185, 39, 39, 247, 72, 56, 72, 169, 56, 217, 217, 145, 53, 19, 53, 205, 19, 235, 235, 222, 206, 179, 206, 86, 179, 43, 43, 229, 85, 51, 85, 68, 51, 34, 34, 119, 214, 187, 214, 191, 187, 210, 210, 4, 144, 112, 144, 73, 112, 169, 169, 57, 128, 137, 128, 14, 137, 7, 7, 135, 242, 167, 242, 102, 167, 51, 51, 193, 193, 182, 193, 90, 182, 45, 45, 236, 102, 34, 102, 120, 34, 60, 60, 90, 173, 146, 173, 42, 146, 21, 21, 184, 96, 32, 96, 137, 32, 201, 201, 169, 219, 73, 219, 21, 73, 135, 135, 92, 26, 255, 26, 79, 255, 170, 170, 176, 136, 120, 136, 160, 120, 80, 80, 216, 142, 122, 142, 81, 122, 165, 165, 43, 138, 143, 138, 6, 143, 3, 3, 137, 19, 248, 19, 178, 248, 89, 89, 74, 155, 128, 155, 18, 128, 9, 9, 146, 57, 23, 57, 52, 23, 26, 26, 35, 117, 218, 117, 202, 218, 101, 101, 16, 83, 49, 83, 181, 49, 215, 215, 132, 81, 198, 81, 19, 198, 132, 132, 213, 211, 184, 211, 187, 184, 208, 208, 3, 94, 195, 94, 31, 195, 130, 130, 220, 203, 176, 203, 82, 176, 41, 41, 226, 153, 119, 153, 180, 119, 90, 90, 195, 51, 17, 51, 60, 17, 30, 30, 45, 70, 203, 70, 246, 203, 123, 123, 61, 31, 252, 31, 75, 252, 168, 168, 183, 97, 214, 97, 218, 214, 109, 109, 12, 78, 58, 78, 88, 58, 44, 44, 98};
.const .align 8 .b8 T7[2048] = {50, 244, 165, 244, 151, 165, 198, 198, 111, 151, 132, 151, 235, 132, 248, 248, 94, 176, 153, 176, 199, 153, 238, 238, 122, 140, 141, 140, 247, 141, 246, 246, 232, 23, 13, 23, 229, 13, 255, 255, 10, 220, 189, 220, 183, 189, 214, 214, 22, 200, 177, 200, 167, 177, 222, 222, 109, 252, 84, 252, 57, 84, 145, 145, 144, 240, 80, 240, 192, 80, 96, 96, 7, 5, 3, 5, 4, 3, 2, 2, 46, 224, 169, 224, 135, 169, 206, 206, 209, 135, 125, 135, 172, 125, 86, 86, 204, 43, 25, 43, 213, 25, 231, 231, 19, 166, 98, 166, 113, 98, 181, 181, 124, 49, 230, 49, 154, 230, 77, 77, 89, 181, 154, 181, 195, 154, 236, 236, 64, 207, 69, 207, 5, 69, 143, 143, 163, 188, 157, 188, 62, 157, 31, 31, 73, 192, 64, 192, 9, 64, 137, 137, 104, 146, 135, 146, 239, 135, 250, 250, 208, 63, 21, 63, 197, 21, 239, 239, 148, 38, 235, 38, 127, 235, 178, 178, 206, 64, 201, 64, 7, 201, 142, 142, 230, 29, 11, 29, 237, 11, 251, 251, 110, 47, 236, 47, 130, 236, 65, 65, 26, 169, 103, 169, 125, 103, 179, 179, 67, 28, 253, 28, 190, 253, 95, 95, 96, 37, 234, 37, 138, 234, 69, 69, 249, 218, 191, 218, 70, 191, 35, 35, 81, 2, 247, 2, 166, 247, 83, 83, 69, 161, 150, 161, 211, 150, 228, 228, 118, 237, 91, 237, 45, 91, 155, 155, 40, 93, 194, 93, 234, 194, 117, 117, 197, 36, 28, 36, 217, 28, 225, 225, 212, 233, 174, 233, 122, 174, 61, 61, 242, 190, 106, 190, 152, 106, 76, 76, 130, 238, 90, 238, 216, 90, 108, 108, 189, 195, 65, 195, 252, 65, 126, 126, 243, 6, 2, 6, 241, 2, 245, 245, 82, 209, 79, 209, 29, 79, 131, 131, 140, 228, 92, 228, 208, 92, 104, 104, 86, 7, 244, 7, 162, 244, 81, 81, 141, 92, 52, 92, 185, 52, 209, 209, 225, 24, 8, 24, 233, 8, 249, 249, 76, 174, 147, 174, 223, 147, 226, 226, 62, 149, 115, 149, 77, 115, 171, 171, 151, 245, 83, 245, 196, 83, 98, 98, 107, 65, 63, 65, 84, 63, 42, 42, 28, 20, 12, 20, 16, 12, 8, 8, 99, 246, 82, 246, 49, 82, 149, 149, 233, 175, 101, 175, 140, 101, 70, 70, 127, 226, 94, 226, 33, 94, 157, 157, 72, 120, 40, 120, 96, 40, 48, 48, 207, 248, 161, 248, 110, 161, 55, 55, 27, 17, 15, 17, 20, 15, 10, 10, 235, 196, 181, 196, 94, 181, 47, 47, 21, 27, 9, 27, 28, 9, 14, 14, 126, 90, 54, 90, 72, 54, 36, 36, 173, 182, 155, 182, 54, 155, 27, 27, 152, 71, 61, 71, 165, 61, 223, 223, 167, 106, 38, 106, 129, 38, 205, 205, 245, 187, 105, 187, 156, 105, 78, 78, 51, 76, 205, 76, 254, 205, 127, 127, 80, 186, 159, 186, 207, 159, 234, 234, 63, 45, 27, 45, 36, 27, 18, 18, 164, 185, 158, 185, 58, 158, 29, 29, 196, 156, 116, 156, 176, 116, 88, 88, 70, 114, 46, 114, 104, 46, 52, 52, 65, 119, 45, 119, 108, 45, 54, 54, 17, 205, 178, 205, 163, 178, 220, 220, 157, 41, 238, 41, 115, 238, 180, 180, 77, 22, 251, 22, 182, 251, 91, 91, 165, 1, 246, 1, 83, 246, 164, 164, 161, 215, 77, 215, 236, 77, 118, 118, 20, 163, 97, 163, 117, 97, 183, 183, 52, 73, 206, 73, 250, 206, 125, 125, 223, 141, 123, 141, 164, 123, 82, 82, 159, 66, 62, 66, 161, 62, 221, 221, 205, 147, 113, 147, 188, 113, 94, 94, 177, 162, 151, 162, 38, 151, 19, 19, 162, 4, 245, 4, 87, 245, 166, 166, 1, 184, 104, 184, 105, 104, 185, 185, 0, 0, 0, 0, 0, 0, 0, 0, 181, 116, 44, 116, 153, 44, 193, 193, 224, 160, 96, 160, 128, 96, 64, 64, 194, 33, 31, 33, 221, 31, 227, 227, 58, 67, 200, 67, 242, 200, 121, 121, 154, 44, 237, 44, 119, 237, 182, 182, 13, 217, 190, 217, 179, 190, 212, 212, 71, 202, 70, 202, 1, 70, 141, 141, 23, 112, 217, 112, 206, 217, 103, 103, 175, 221, 75, 221, 228, 75, 114, 114, 237, 121, 222, 121, 51, 222, 148, 148, 255, 103, 212, 103, 43, 212, 152, 152, 147, 35, 232, 35, 123, 232, 176, 176, 91, 222, 74, 222, 17, 74, 133, 133, 6, 189, 107, 189, 109, 107, 187, 187, 187, 126, 42, 126, 145, 42, 197, 197, 123, 52, 229, 52, 158, 229, 79, 79, 215, 58, 22, 58, 193, 22, 237, 237, 210, 84, 197, 84, 23, 197, 134, 134, 248, 98, 215, 98, 47, 215, 154, 154, 153, 255, 85, 255, 204, 85, 102, 102, 182, 167, 148, 167, 34, 148, 17, 17, 192, 74, 207, 74, 15, 207, 138, 138, 217, 48, 16, 48, 201, 16, 233, 233, 14, 10, 6, 10, 8, 6, 4, 4, 102, 152, 129, 152, 231, 129, 254, 254, 171, 11, 240, 11, 91, 240, 160, 160, 180, 204, 68, 204, 240, 68, 120, 120, 240, 213, 186, 213, 74, 186, 37, 37, 117, 62, 227, 62, 150, 227, 75, 75, 172, 14, 243, 14, 95, 243, 162, 162, 68, 25, 254, 25, 186, 254, 93, 93, 219, 91, 192, 91, 27, 192, 128, 128, 128, 133, 138, 133, 10, 138, 5, 5, 211, 236, 173, 236, 126, 173, 63, 63, 254, 223, 188, 223, 66, 188, 33, 33, 168, 216, 72, 216, 224, 72, 112, 112, 253, 12, 4, 12, 249, 4, 241, 241, 25, 122, 223, 122, 198, 223, 99, 99, 47, 88, 193, 88, 238, 193, 119, 119, 48, 159, 117, 159, 69, 117, 175, 175, 231, 165, 99, 165, 132, 99, 66, 66, 112, 80, 48, 80, 64, 48, 32, 32, 203, 46, 26, 46, 209, 26, 229, 229, 239, 18, 14, 18, 225, 14, 253, 253, 8, 183, 109, 183, 101, 109, 191, 191, 85, 212, 76, 212, 25, 76, 129, 129, 36, 60, 20, 60, 48, 20, 24, 24, 121, 95, 53, 95, 76, 53, 38, 38, 178, 113, 47, 113, 157, 47, 195, 195, 134, 56, 225, 56, 103, 225, 190, 190, 200, 253, 162, 253, 106, 162, 53, 53, 199, 79, 204, 79, 11, 204, 136, 136, 101, 75, 57, 75, 92, 57, 46, 46, 106, 249, 87, 249, 61, 87, 147, 147, 88, 13, 242, 13, 170, 242, 85, 85, 97, 157, 130, 157, 227, 130, 252, 252, 179, 201, 71, 201, 244, 71, 122, 122, 39, 239, 172, 239, 139, 172, 200, 200, 136, 50, 231, 50, 111, 231, 186, 186, 79, 125, 43, 125, 100, 43, 50, 50, 66, 164, 149, 164, 215, 149, 230, 230, 59, 251, 160, 251, 155, 160, 192, 192, 170, 179, 152, 179, 50, 152, 25, 25, 246, 104, 209, 104, 39, 209, 158, 158, 34, 129, 127, 129, 93, 127, 163, 163, 238, 170, 102, 170, 136, 102, 68, 68, 214, 130, 126, 130, 168, 126, 84, 84, 221, 230, 171, 230, 118, 171, 59, 59, 149, 158, 131, 158, 22, 131, 11, 11, 201, 69, 202, 69, 3, 202, 140, 140, 188, 123, 41, 123, 149, 41, 199, 199, 5, 110, 211, 110, 214, 211, 107, 107, 108, 68, 60, 68, 80, 60, 40, 40, 44, 139, 121, 139, 85, 121, 167, 167, 129, 61, 226, 61, 99, 226, 188, 188, 49, 39, 29, 39, 44, 29, 22, 22, 55, 154, 118, 154, 65, 118, 173, 173, 150, 77, 59, 77, 173, 59, 219, 219, 158, 250, 86, 250, 200, 86, 100, 100, 166, 210, 78, 210, 232, 78, 116, 116, 54, 34, 30, 34, 40, 30, 20, 20, 228, 118, 219, 118, 63, 219, 146, 146, 18, 30, 10, 30, 24, 10, 12, 12, 252, 180, 108, 180, 144, 108, 72, 72, 143, 55, 228, 55, 107, 228, 184, 184, 120, 231, 93, 231, 37, 93, 159, 159, 15, 178, 110, 178, 97, 110, 189, 189, 105, 42, 239, 42, 134, 239, 67, 67, 53, 241, 166, 241, 147, 166, 196, 196, 218, 227, 168, 227, 114, 168, 57, 57, 198, 247, 164, 247, 98, 164, 49, 49, 138, 89, 55, 89, 189, 55, 211, 211, 116, 134, 139, 134, 255, 139, 242, 242, 131, 86, 50, 86, 177, 50, 213, 213, 78, 197, 67, 197, 13, 67, 139, 139, 133, 235, 89, 235, 220, 89, 110, 110, 24, 194, 183, 194, 175, 183, 218, 218, 142, 143, 140, 143, 2, 140, 1, 1, 29, 172, 100, 172, 121, 100, 177, 177, 241, 109, 210, 109, 35, 210, 156, 156, 114, 59, 224, 59, 146, 224, 73, 73, 31, 199, 180, 199, 171, 180, 216, 216, 185, 21, 250, 21, 67, 250, 172, 172, 250, 9, 7, 9, 253, 7, 243, 243, 160, 111, 37, 111, 133, 37, 207, 207, 32, 234, 175, 234, 143, 175, 202, 202, 125, 137, 142, 137, 243, 142, 244, 244, 103, 32, 233, 32, 142, 233, 71, 71, 56, 40, 24, 40, 32, 24, 16, 16, 11, 100, 213, 100, 222, 213, 111, 111, 115, 131, 136, 131, 251, 136, 240, 240, 251, 177, 111, 177, 148, 111, 74, 74, 202, 150, 114, 150, 184, 114, 92, 92, 84, 108, 36, 108, 112, 36, 56, 56, 95, 8, 241, 8, 174, 241, 87, 87, 33, 82, 199, 82, 230, 199, 115, 115, 100, 243, 81, 243, 53, 81, 151, 151, 174, 101, 35, 101, 141, 35, 203, 203, 37, 132, 124, 132, 89, 124, 161, 161, 87, 191, 156, 191, 203, 156, 232, 232, 93, 99, 33, 99, 124, 33, 62, 62, 234, 124, 221, 124, 55, 221, 150, 150, 30, 127, 220, 127, 194, 220, 97, 97, 156, 145, 134, 145, 26, 134, 13, 13, 155, 148, 133, 148, 30, 133, 15, 15, 75, 171, 144, 171, 219, 144, 224, 224, 186, 198, 66, 198, 248, 66, 124, 124, 38, 87, 196, 87, 226, 196, 113, 113, 41, 229, 170, 229, 131, 170, 204, 204, 227, 115, 216, 115, 59, 216, 144, 144, 9, 15, 5, 15, 12, 5, 6, 6, 244, 3, 1, 3, 245, 1, 247, 247, 42, 54, 18, 54, 56, 18, 28, 28, 60, 254, 163, 254, 159, 163, 194, 194, 139, 225, 95, 225, 212, 95, 106, 106, 190, 16, 249, 16, 71, 249, 174, 174, 2, 107, 208, 107, 210, 208, 105, 105, 191, 168, 145, 168, 46, 145, 23, 23, 113, 232, 88, 232, 41, 88, 153, 153, 83, 105, 39, 105, 116, 39, 58, 58, 247, 208, 185, 208, 78, 185, 39, 39, 145, 72, 56, 72, 169, 56, 217, 217, 222, 53, 19, 53, 205, 19, 235, 235, 229, 206, 179, 206, 86, 179, 43, 43, 119, 85, 51, 85, 68, 51, 34, 34, 4, 214, 187, 214, 191, 187, 210, 210, 57, 144, 112, 144, 73, 112, 169, 169, 135, 128, 137, 128, 14, 137, 7, 7, 193, 242, 167, 242, 102, 167, 51, 51, 236, 193, 182, 193, 90, 182, 45, 45, 90, 102, 34, 102, 120, 34, 60, 60, 184, 173, 146, 173, 42, 146, 21, 21, 169, 96, 32, 96, 137, 32, 201, 201, 92, 219, 73, 219, 21, 73, 135, 135, 176, 26, 255, 26, 79, 255, 170, 170, 216, 136, 120, 136, 160, 120, 80, 80, 43, 142, 122, 142, 81, 122, 165, 165, 137, 138, 143, 138, 6, 143, 3, 3, 74, 19, 248, 19, 178, 248, 89, 89, 146, 155, 128, 155, 18, 128, 9, 9, 35, 57, 23, 57, 52, 23, 26, 26, 16, 117, 218, 117, 202, 218, 101, 101, 132, 83, 49, 83, 181, 49, 215, 215, 213, 81, 198, 81, 19, 198, 132, 132, 3, 211, 184, 211, 187, 184, 208, 208, 220, 94, 195, 94, 31, 195, 130, 130, 226, 203, 176, 203, 82, 176, 41, 41, 195, 153, 119, 153, 180, 119, 90, 90, 45, 51, 17, 51, 60, 17, 30, 30, 61, 70, 203, 70, 246, 203, 123, 123, 183, 31, 252, 31, 75, 252, 168, 168, 12, 97, 214, 97, 218, 214, 109, 109, 98, 78, 58, 78, 88, 58, 44, 44};

.entry search(
	.param .u64 .ptr .global .align 1 search_param_0,
	.param .u64 .ptr .global .align 8 search_param_1
)
.reqntid 256, 1, 1
{
	.reg .b16 	%rs<121>;
	.reg .b32 	%r<1945>;
	.reg .b64 	%rd<1909>;


	ld.param.u64 	%rd1, [search_param_0];
	ld.param.u64 	%rd2, [search_param_1];
	mov.b32	%r1, %envreg3;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	mov.u32 	%r5, %tid.x;
	add.s32 	%r6, %r4, %r5;
	cvt.u64.u32	%rd3, %r6;
	mov.b32	%r7, %envreg0;
	mul.lo.s32 	%r8, %r2, %r7;
	sub.s32 	%r9, %r1, %r8;
	cvt.s64.s32	%rd4, %r9;
	sub.s64 	%rd5, %rd3, %rd4;
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd1];
	cvt.u32.u16	%r10, %rs4;
	cvt.u32.u16	%r11, %rs3;
	bfi.b32 	%r12, %r11, %r10, 8, 8;
	cvt.u32.u16	%r13, %rs2;
	cvt.u32.u16	%r14, %rs1;
	bfi.b32 	%r15, %r14, %r13, 8, 8;
	bfi.b32 	%r16, %r15, %r12, 16, 16;
	ld.global.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd1+4];
	cvt.u32.u16	%r17, %rs10;
	cvt.u32.u16	%r18, %rs9;
	bfi.b32 	%r19, %r18, %r17, 8, 8;
	cvt.u32.u16	%r20, %rs8;
	cvt.u32.u16	%r21, %rs7;
	bfi.b32 	%r22, %r21, %r20, 8, 8;
	bfi.b32 	%r23, %r22, %r19, 16, 16;
	mov.b64	%rd6, {%r23, %r16};
	ld.global.v4.u8 	{%rs13, %rs14, %rs15, %rs16}, [%rd1+8];
	cvt.u32.u16	%r24, %rs16;
	cvt.u32.u16	%r25, %rs15;
	bfi.b32 	%r26, %r25, %r24, 8, 8;
	cvt.u32.u16	%r27, %rs14;
	cvt.u32.u16	%r28, %rs13;
	bfi.b32 	%r29, %r28, %r27, 8, 8;
	bfi.b32 	%r30, %r29, %r26, 16, 16;
	ld.global.v4.u8 	{%rs19, %rs20, %rs21, %rs22}, [%rd1+12];
	cvt.u32.u16	%r31, %rs22;
	cvt.u32.u16	%r32, %rs21;
	bfi.b32 	%r33, %r32, %r31, 8, 8;
	cvt.u32.u16	%r34, %rs20;
	cvt.u32.u16	%r35, %rs19;
	bfi.b32 	%r36, %r35, %r34, 8, 8;
	bfi.b32 	%r37, %r36, %r33, 16, 16;
	mov.b64	%rd7, {%r37, %r30};
	ld.global.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd1+16];
	cvt.u32.u16	%r38, %rs28;
	cvt.u32.u16	%r39, %rs27;
	bfi.b32 	%r40, %r39, %r38, 8, 8;
	cvt.u32.u16	%r41, %rs26;
	cvt.u32.u16	%r42, %rs25;
	bfi.b32 	%r43, %r42, %r41, 8, 8;
	bfi.b32 	%r44, %r43, %r40, 16, 16;
	ld.global.v4.u8 	{%rs31, %rs32, %rs33, %rs34}, [%rd1+20];
	cvt.u32.u16	%r45, %rs34;
	cvt.u32.u16	%r46, %rs33;
	bfi.b32 	%r47, %r46, %r45, 8, 8;
	cvt.u32.u16	%r48, %rs32;
	cvt.u32.u16	%r49, %rs31;
	bfi.b32 	%r50, %r49, %r48, 8, 8;
	bfi.b32 	%r51, %r50, %r47, 16, 16;
	mov.b64	%rd8, {%r51, %r44};
	ld.global.v4.u8 	{%rs37, %rs38, %rs39, %rs40}, [%rd1+24];
	cvt.u32.u16	%r52, %rs40;
	cvt.u32.u16	%r53, %rs39;
	bfi.b32 	%r54, %r53, %r52, 8, 8;
	cvt.u32.u16	%r55, %rs38;
	cvt.u32.u16	%r56, %rs37;
	bfi.b32 	%r57, %r56, %r55, 8, 8;
	bfi.b32 	%r58, %r57, %r54, 16, 16;
	ld.global.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd1+28];
	cvt.u32.u16	%r59, %rs46;
	cvt.u32.u16	%r60, %rs45;
	bfi.b32 	%r61, %r60, %r59, 8, 8;
	cvt.u32.u16	%r62, %rs44;
	cvt.u32.u16	%r63, %rs43;
	bfi.b32 	%r64, %r63, %r62, 8, 8;
	bfi.b32 	%r65, %r64, %r61, 16, 16;
	mov.b64	%rd9, {%r65, %r58};
	ld.global.v4.u8 	{%rs49, %rs50, %rs51, %rs52}, [%rd1+32];
	cvt.u32.u16	%r66, %rs52;
	cvt.u32.u16	%r67, %rs51;
	bfi.b32 	%r68, %r67, %r66, 8, 8;
	cvt.u32.u16	%r69, %rs50;
	cvt.u32.u16	%r70, %rs49;
	bfi.b32 	%r71, %r70, %r69, 8, 8;
	bfi.b32 	%r72, %r71, %r68, 16, 16;
	ld.global.v4.u8 	{%rs55, %rs56, %rs57, %rs58}, [%rd1+36];
	cvt.u32.u16	%r73, %rs58;
	cvt.u32.u16	%r74, %rs57;
	bfi.b32 	%r75, %r74, %r73, 8, 8;
	cvt.u32.u16	%r76, %rs56;
	cvt.u32.u16	%r77, %rs55;
	bfi.b32 	%r78, %r77, %r76, 8, 8;
	bfi.b32 	%r79, %r78, %r75, 16, 16;
	mov.b64	%rd10, {%r79, %r72};
	ld.global.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd1+40];
	cvt.u32.u16	%r80, %rs64;
	cvt.u32.u16	%r81, %rs63;
	bfi.b32 	%r82, %r81, %r80, 8, 8;
	cvt.u32.u16	%r83, %rs62;
	cvt.u32.u16	%r84, %rs61;
	bfi.b32 	%r85, %r84, %r83, 8, 8;
	bfi.b32 	%r86, %r85, %r82, 16, 16;
	ld.global.v4.u8 	{%rs67, %rs68, %rs69, %rs70}, [%rd1+44];
	cvt.u32.u16	%r87, %rs70;
	cvt.u32.u16	%r88, %rs69;
	bfi.b32 	%r89, %r88, %r87, 8, 8;
	cvt.u32.u16	%r90, %rs68;
	cvt.u32.u16	%r91, %rs67;
	bfi.b32 	%r92, %r91, %r90, 8, 8;
	bfi.b32 	%r93, %r92, %r89, 16, 16;
	mov.b64	%rd11, {%r93, %r86};
	ld.global.v4.u8 	{%rs73, %rs74, %rs75, %rs76}, [%rd1+48];
	cvt.u32.u16	%r94, %rs76;
	cvt.u32.u16	%r95, %rs75;
	bfi.b32 	%r96, %r95, %r94, 8, 8;
	cvt.u32.u16	%r97, %rs74;
	cvt.u32.u16	%r98, %rs73;
	bfi.b32 	%r99, %r98, %r97, 8, 8;
	bfi.b32 	%r100, %r99, %r96, 16, 16;
	ld.global.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd1+52];
	cvt.u32.u16	%r101, %rs82;
	cvt.u32.u16	%r102, %rs81;
	bfi.b32 	%r103, %r102, %r101, 8, 8;
	cvt.u32.u16	%r104, %rs80;
	cvt.u32.u16	%r105, %rs79;
	bfi.b32 	%r106, %r105, %r104, 8, 8;
	bfi.b32 	%r107, %r106, %r103, 16, 16;
	mov.b64	%rd12, {%r107, %r100};
	ld.global.v4.u8 	{%rs85, %rs86, %rs87, %rs88}, [%rd1+56];
	cvt.u32.u16	%r108, %rs88;
	cvt.u32.u16	%r109, %rs87;
	bfi.b32 	%r110, %r109, %r108, 8, 8;
	cvt.u32.u16	%r111, %rs86;
	cvt.u32.u16	%r112, %rs85;
	bfi.b32 	%r113, %r112, %r111, 8, 8;
	bfi.b32 	%r114, %r113, %r110, 16, 16;
	ld.global.v4.u8 	{%rs91, %rs92, %rs93, %rs94}, [%rd1+60];
	cvt.u32.u16	%r115, %rs94;
	cvt.u32.u16	%r116, %rs93;
	bfi.b32 	%r117, %r116, %r115, 8, 8;
	cvt.u32.u16	%r118, %rs92;
	cvt.u32.u16	%r119, %rs91;
	bfi.b32 	%r120, %r119, %r118, 8, 8;
	bfi.b32 	%r121, %r120, %r117, 16, 16;
	mov.b64	%rd13, {%r121, %r114};
	ld.global.v4.u8 	{%rs97, %rs98, %rs99, %rs100}, [%rd1+64];
	cvt.u32.u16	%r122, %rs100;
	cvt.u32.u16	%r123, %rs99;
	bfi.b32 	%r124, %r123, %r122, 8, 8;
	cvt.u32.u16	%r125, %rs98;
	cvt.u32.u16	%r126, %rs97;
	bfi.b32 	%r127, %r126, %r125, 8, 8;
	bfi.b32 	%r128, %r127, %r124, 16, 16;
	ld.global.v4.u8 	{%rs103, %rs104, %rs105, %rs106}, [%rd1+68];
	cvt.u32.u16	%r129, %rs106;
	cvt.u32.u16	%r130, %rs105;
	bfi.b32 	%r131, %r130, %r129, 8, 8;
	cvt.u32.u16	%r132, %rs104;
	cvt.u32.u16	%r133, %rs103;
	bfi.b32 	%r134, %r133, %r132, 8, 8;
	bfi.b32 	%r135, %r134, %r131, 16, 16;
	mov.b64	%rd14, {%r135, %r128};
	ld.global.v4.u8 	{%rs109, %rs110, %rs111, %rs112}, [%rd1+72];
	cvt.u32.u16	%r136, %rs112;
	cvt.u32.u16	%r137, %rs111;
	bfi.b32 	%r138, %r137, %r136, 8, 8;
	cvt.u32.u16	%r139, %rs110;
	cvt.u32.u16	%r140, %rs109;
	bfi.b32 	%r141, %r140, %r139, 8, 8;
	bfi.b32 	%r142, %r141, %r138, 16, 16;
	ld.global.v4.u8 	{%rs115, %rs116, %rs117, %rs118}, [%rd1+76];
	cvt.u32.u16	%r143, %rs118;
	cvt.u32.u16	%r144, %rs117;
	bfi.b32 	%r145, %r144, %r143, 8, 8;
	cvt.u32.u16	%r146, %rs116;
	cvt.u32.u16	%r147, %rs115;
	bfi.b32 	%r148, %r147, %r146, 8, 8;
	bfi.b32 	%r149, %r148, %r145, 16, 16;
	mov.b64	%rd15, {%r149, %r142};
	and.b64  	%rd16, %rd15, -4294967296;
	mov.u32 	%r150, 291;
	mov.u32 	%r151, 0;
	prmt.b32 	%r152, %r6, %r151, %r150;
	cvt.u64.u32	%rd17, %r152;
	or.b64  	%rd18, %rd16, %rd17;
	xor.b64  	%rd19, %rd6, 1376283091369227076;
	add.s64 	%rd20, %rd19, -4965156021675537447;
	xor.b64  	%rd21, %rd20, 4983270260364808695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd21;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd21;
	}
	mov.b64 	%rd22, {%r154, %r153};
	add.s64 	%rd23, %rd22, 2611923443488327891;
	xor.b64  	%rd24, %rd23, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd24;
	}
	shf.r.wrap.b32 	%r157, %r156, %r155, 25;
	shf.r.wrap.b32 	%r158, %r155, %r156, 25;
	mov.b64 	%rd25, {%r158, %r157};
	xor.b64  	%rd26, %rd7, 2611923443488327891;
	add.s64 	%rd27, %rd26, %rd20;
	add.s64 	%rd28, %rd27, %rd25;
	xor.b64  	%rd29, %rd28, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd29;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 16;
	shf.r.wrap.b32 	%r162, %r159, %r160, 16;
	mov.b64 	%rd30, {%r162, %r161};
	add.s64 	%rd31, %rd30, %rd23;
	xor.b64  	%rd32, %rd31, %rd25;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r163,%dummy}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd32;
	}
	shf.r.wrap.b32 	%r165, %r164, %r163, 11;
	shf.r.wrap.b32 	%r166, %r163, %r164, 11;
	mov.b64 	%rd33, {%r166, %r165};
	xor.b64  	%rd34, %rd8, 589684135938649225;
	add.s64 	%rd35, %rd34, 6227659224458531674;
	xor.b64  	%rd36, %rd35, -4732044268327596308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd36;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd36;
	}
	mov.b64 	%rd37, {%r168, %r167};
	add.s64 	%rd38, %rd37, 1376283091369227076;
	xor.b64  	%rd39, %rd38, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r169,%dummy}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r170}, %rd39;
	}
	shf.r.wrap.b32 	%r171, %r170, %r169, 25;
	shf.r.wrap.b32 	%r172, %r169, %r170, 25;
	mov.b64 	%rd40, {%r172, %r171};
	xor.b64  	%rd41, %rd9, -6626703657320631856;
	add.s64 	%rd42, %rd41, %rd35;
	add.s64 	%rd43, %rd42, %rd40;
	xor.b64  	%rd44, %rd43, %rd37;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r173,%dummy}, %rd44;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd44;
	}
	shf.r.wrap.b32 	%r175, %r174, %r173, 16;
	shf.r.wrap.b32 	%r176, %r173, %r174, 16;
	mov.b64 	%rd45, {%r176, %r175};
	add.s64 	%rd46, %rd45, %rd38;
	xor.b64  	%rd47, %rd46, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd47;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd47;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 11;
	shf.r.wrap.b32 	%r180, %r177, %r178, 11;
	mov.b64 	%rd48, {%r180, %r179};
	xor.b64  	%rd49, %rd10, -4732044268327596948;
	add.s64 	%rd50, %rd49, 6625583534739731862;
	xor.b64  	%rd51, %rd50, -4563226453097033507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd51;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd51;
	}
	mov.b64 	%rd52, {%r182, %r181};
	add.s64 	%rd53, %rd52, -6626703657320631856;
	xor.b64  	%rd54, %rd53, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd54;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 25;
	shf.r.wrap.b32 	%r186, %r183, %r184, 25;
	mov.b64 	%rd55, {%r186, %r185};
	xor.b64  	%rd56, %rd11, 4983270260364809079;
	add.s64 	%rd57, %rd56, %rd50;
	add.s64 	%rd58, %rd57, %rd55;
	xor.b64  	%rd59, %rd58, %rd52;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r187,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r188}, %rd59;
	}
	shf.r.wrap.b32 	%r189, %r188, %r187, 16;
	shf.r.wrap.b32 	%r190, %r187, %r188, 16;
	mov.b64 	%rd60, {%r190, %r189};
	add.s64 	%rd61, %rd60, %rd53;
	xor.b64  	%rd62, %rd61, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd62;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 11;
	shf.r.wrap.b32 	%r194, %r191, %r192, 11;
	mov.b64 	%rd63, {%r194, %r193};
	xor.b64  	%rd64, %rd12, 4577018097722394903;
	add.s64 	%rd65, %rd64, 85782056580896874;
	xor.b64  	%rd66, %rd65, 4577018097722394903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r195,%dummy}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r196}, %rd66;
	}
	mov.b64 	%rd67, {%r196, %r195};
	add.s64 	%rd68, %rd67, 589684135938649225;
	xor.b64  	%rd69, %rd68, 6620516959819538809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd69;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd69;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 25;
	shf.r.wrap.b32 	%r200, %r197, %r198, 25;
	mov.b64 	%rd70, {%r200, %r199};
	xor.b64  	%rd71, %rd13, -4563226453097033507;
	add.s64 	%rd72, %rd71, %rd65;
	add.s64 	%rd73, %rd72, %rd70;
	xor.b64  	%rd74, %rd73, %rd67;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r201,%dummy}, %rd74;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd74;
	}
	shf.r.wrap.b32 	%r203, %r202, %r201, 16;
	shf.r.wrap.b32 	%r204, %r201, %r202, 16;
	mov.b64 	%rd75, {%r204, %r203};
	add.s64 	%rd76, %rd75, %rd68;
	xor.b64  	%rd77, %rd76, %rd70;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r205,%dummy}, %rd77;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd77;
	}
	shf.r.wrap.b32 	%r207, %r206, %r205, 11;
	shf.r.wrap.b32 	%r208, %r205, %r206, 11;
	mov.b64 	%rd78, {%r208, %r207};
	xor.b64  	%rd79, %rd14, -3372901835766516308;
	add.s64 	%rd80, %rd79, %rd28;
	add.s64 	%rd81, %rd80, %rd48;
	xor.b64  	%rd82, %rd75, %rd81;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd82;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd82;
	}
	mov.b64 	%rd83, {%r210, %r209};
	add.s64 	%rd84, %rd83, %rd61;
	xor.b64  	%rd85, %rd84, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd85;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r212}, %rd85;
	}
	shf.r.wrap.b32 	%r213, %r212, %r211, 25;
	shf.r.wrap.b32 	%r214, %r211, %r212, 25;
	mov.b64 	%rd86, {%r214, %r213};
	xor.b64  	%rd87, %rd18, -7919907764393346277;
	add.s64 	%rd88, %rd81, %rd87;
	add.s64 	%rd89, %rd88, %rd86;
	xor.b64  	%rd90, %rd89, %rd83;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd90;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd90;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 16;
	shf.r.wrap.b32 	%r218, %r215, %r216, 16;
	mov.b64 	%rd91, {%r218, %r217};
	add.s64 	%rd92, %rd91, %rd84;
	xor.b64  	%rd93, %rd92, %rd86;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd93;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd93;
	}
	shf.r.wrap.b32 	%r221, %r220, %r219, 11;
	shf.r.wrap.b32 	%r222, %r219, %r220, 11;
	mov.b64 	%rd94, {%r222, %r221};
	add.s64 	%rd95, %rd43, %rd63;
	add.s64 	%rd96, %rd95, 4098750570106879638;
	xor.b64  	%rd97, %rd96, %rd30;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd97;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd97;
	}
	mov.b64 	%rd98, {%r224, %r223};
	add.s64 	%rd99, %rd98, %rd76;
	xor.b64  	%rd100, %rd99, %rd63;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd100;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 25;
	shf.r.wrap.b32 	%r228, %r225, %r226, 25;
	mov.b64 	%rd101, {%r228, %r227};
	add.s64 	%rd102, %rd96, %rd101;
	add.s64 	%rd103, %rd102, 3458046377305235383;
	xor.b64  	%rd104, %rd103, %rd98;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd104;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 16;
	shf.r.wrap.b32 	%r232, %r229, %r230, 16;
	mov.b64 	%rd105, {%r232, %r231};
	add.s64 	%rd106, %rd105, %rd99;
	xor.b64  	%rd107, %rd106, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd107;
	}
	shf.r.wrap.b32 	%r235, %r234, %r233, 11;
	shf.r.wrap.b32 	%r236, %r233, %r234, 11;
	mov.b64 	%rd108, {%r236, %r235};
	add.s64 	%rd109, %rd58, %rd78;
	add.s64 	%rd110, %rd109, 2639559389850201335;
	xor.b64  	%rd111, %rd110, %rd45;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r238}, %rd111;
	}
	mov.b64 	%rd112, {%r238, %r237};
	add.s64 	%rd113, %rd112, %rd31;
	xor.b64  	%rd114, %rd113, %rd78;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd114;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 25;
	shf.r.wrap.b32 	%r242, %r239, %r240, 25;
	mov.b64 	%rd115, {%r242, %r241};
	add.s64 	%rd116, %rd110, %rd115;
	add.s64 	%rd117, %rd116, -5008970055469465704;
	xor.b64  	%rd118, %rd117, %rd112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r243,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd118;
	}
	shf.r.wrap.b32 	%r245, %r244, %r243, 16;
	shf.r.wrap.b32 	%r246, %r243, %r244, 16;
	mov.b64 	%rd119, {%r246, %r245};
	add.s64 	%rd120, %rd119, %rd113;
	xor.b64  	%rd121, %rd120, %rd115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd121;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 11;
	shf.r.wrap.b32 	%r250, %r247, %r248, 11;
	mov.b64 	%rd122, {%r250, %r249};
	add.s64 	%rd123, %rd33, %rd73;
	add.s64 	%rd124, %rd123, 7163292796296056425;
	xor.b64  	%rd125, %rd124, %rd60;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r251,%dummy}, %rd125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd125;
	}
	mov.b64 	%rd126, {%r252, %r251};
	add.s64 	%rd127, %rd126, %rd46;
	xor.b64  	%rd128, %rd127, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r254}, %rd128;
	}
	shf.r.wrap.b32 	%r255, %r254, %r253, 25;
	shf.r.wrap.b32 	%r256, %r253, %r254, 25;
	mov.b64 	%rd129, {%r256, %r255};
	add.s64 	%rd130, %rd124, %rd129;
	add.s64 	%rd131, %rd130, 577009281997405846;
	xor.b64  	%rd132, %rd131, %rd126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd132;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 16;
	shf.r.wrap.b32 	%r260, %r257, %r258, 16;
	mov.b64 	%rd133, {%r260, %r259};
	add.s64 	%rd134, %rd133, %rd127;
	xor.b64  	%rd135, %rd134, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd135;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 11;
	shf.r.wrap.b32 	%r264, %r261, %r262, 11;
	mov.b64 	%rd136, {%r264, %r263};
	add.s64 	%rd137, %rd89, %rd136;
	add.s64 	%rd138, %rd137, 3458046377305235383;
	xor.b64  	%rd139, %rd138, %rd105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r266}, %rd139;
	}
	mov.b64 	%rd140, {%r266, %r265};
	add.s64 	%rd141, %rd140, %rd120;
	xor.b64  	%rd142, %rd141, %rd136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r267,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r268}, %rd142;
	}
	shf.r.wrap.b32 	%r269, %r268, %r267, 25;
	shf.r.wrap.b32 	%r270, %r267, %r268, 25;
	mov.b64 	%rd143, {%r270, %r269};
	add.s64 	%rd144, %rd138, %rd143;
	add.s64 	%rd145, %rd144, -8646362754857370602;
	xor.b64  	%rd146, %rd145, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd146;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 16;
	shf.r.wrap.b32 	%r274, %r271, %r272, 16;
	mov.b64 	%rd147, {%r274, %r273};
	add.s64 	%rd148, %rd147, %rd141;
	xor.b64  	%rd149, %rd148, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r276}, %rd149;
	}
	shf.r.wrap.b32 	%r277, %r276, %r275, 11;
	shf.r.wrap.b32 	%r278, %r275, %r276, 11;
	mov.b64 	%rd150, {%r278, %r277};
	xor.b64  	%rd151, %rd10, -7919907764393346277;
	add.s64 	%rd152, %rd94, %rd151;
	add.s64 	%rd153, %rd152, %rd103;
	xor.b64  	%rd154, %rd119, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd154;
	}
	mov.b64 	%rd155, {%r280, %r279};
	add.s64 	%rd156, %rd155, %rd134;
	xor.b64  	%rd157, %rd156, %rd94;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd157;
	}
	shf.r.wrap.b32 	%r283, %r282, %r281, 25;
	shf.r.wrap.b32 	%r284, %r281, %r282, 25;
	mov.b64 	%rd158, {%r284, %r283};
	xor.b64  	%rd159, %rd14, 4983270260364809079;
	add.s64 	%rd160, %rd153, %rd159;
	add.s64 	%rd161, %rd160, %rd158;
	xor.b64  	%rd162, %rd161, %rd155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r285,%dummy}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r286}, %rd162;
	}
	shf.r.wrap.b32 	%r287, %r286, %r285, 16;
	shf.r.wrap.b32 	%r288, %r285, %r286, 16;
	mov.b64 	%rd163, {%r288, %r287};
	add.s64 	%rd164, %rd163, %rd156;
	xor.b64  	%rd165, %rd164, %rd158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd165;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 11;
	shf.r.wrap.b32 	%r292, %r289, %r290, 11;
	mov.b64 	%rd166, {%r292, %r291};
	xor.b64  	%rd167, %rd18, 7163292796296056425;
	add.s64 	%rd168, %rd108, %rd167;
	add.s64 	%rd169, %rd168, %rd117;
	xor.b64  	%rd170, %rd133, %rd169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd170;
	}
	mov.b64 	%rd171, {%r294, %r293};
	add.s64 	%rd172, %rd171, %rd92;
	xor.b64  	%rd173, %rd172, %rd108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd173;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 25;
	shf.r.wrap.b32 	%r298, %r295, %r296, 25;
	mov.b64 	%rd174, {%r298, %r297};
	add.s64 	%rd175, %rd169, %rd174;
	add.s64 	%rd176, %rd175, -3372901835766515924;
	xor.b64  	%rd177, %rd176, %rd171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r299,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r300}, %rd177;
	}
	shf.r.wrap.b32 	%r301, %r300, %r299, 16;
	shf.r.wrap.b32 	%r302, %r299, %r300, 16;
	mov.b64 	%rd178, {%r302, %r301};
	add.s64 	%rd179, %rd178, %rd172;
	xor.b64  	%rd180, %rd179, %rd174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd180;
	}
	shf.r.wrap.b32 	%r305, %r304, %r303, 11;
	shf.r.wrap.b32 	%r306, %r303, %r304, 11;
	mov.b64 	%rd181, {%r306, %r305};
	add.s64 	%rd182, %rd122, %rd131;
	add.s64 	%rd183, %rd182, -4563226453097033508;
	xor.b64  	%rd184, %rd183, %rd91;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd184;
	}
	mov.b64 	%rd185, {%r308, %r307};
	add.s64 	%rd186, %rd185, %rd106;
	xor.b64  	%rd187, %rd186, %rd122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r310}, %rd187;
	}
	shf.r.wrap.b32 	%r311, %r310, %r309, 25;
	shf.r.wrap.b32 	%r312, %r309, %r310, 25;
	mov.b64 	%rd188, {%r312, %r311};
	xor.b64  	%rd189, %rd12, 2639559389850201335;
	add.s64 	%rd190, %rd183, %rd189;
	add.s64 	%rd191, %rd190, %rd188;
	xor.b64  	%rd192, %rd191, %rd185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd192;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 16;
	shf.r.wrap.b32 	%r316, %r313, %r314, 16;
	mov.b64 	%rd193, {%r316, %r315};
	add.s64 	%rd194, %rd193, %rd186;
	xor.b64  	%rd195, %rd194, %rd188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd195;
	}
	shf.r.wrap.b32 	%r319, %r318, %r317, 11;
	shf.r.wrap.b32 	%r320, %r317, %r318, 11;
	mov.b64 	%rd196, {%r320, %r319};
	xor.b64  	%rd197, %rd7, -5008970055469465703;
	add.s64 	%rd198, %rd145, %rd197;
	add.s64 	%rd199, %rd198, %rd166;
	xor.b64  	%rd200, %rd193, %rd199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd200;
	}
	mov.b64 	%rd201, {%r322, %r321};
	add.s64 	%rd202, %rd201, %rd179;
	xor.b64  	%rd203, %rd202, %rd166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r323,%dummy}, %rd203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r324}, %rd203;
	}
	shf.r.wrap.b32 	%r325, %r324, %r323, 25;
	shf.r.wrap.b32 	%r326, %r323, %r324, 25;
	mov.b64 	%rd204, {%r326, %r325};
	add.s64 	%rd205, %rd199, %rd204;
	add.s64 	%rd206, %rd205, 1376283091369227076;
	xor.b64  	%rd207, %rd206, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r327,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd207;
	}
	shf.r.wrap.b32 	%r329, %r328, %r327, 16;
	shf.r.wrap.b32 	%r330, %r327, %r328, 16;
	mov.b64 	%rd208, {%r330, %r329};
	add.s64 	%rd209, %rd208, %rd202;
	xor.b64  	%rd210, %rd209, %rd204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd210;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 11;
	shf.r.wrap.b32 	%r334, %r331, %r332, 11;
	mov.b64 	%rd211, {%r334, %r333};
	xor.b64  	%rd212, %rd6, -6626703657320631856;
	add.s64 	%rd213, %rd161, %rd212;
	add.s64 	%rd214, %rd213, %rd181;
	xor.b64  	%rd215, %rd214, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r335,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd215;
	}
	mov.b64 	%rd216, {%r336, %r335};
	add.s64 	%rd217, %rd216, %rd194;
	xor.b64  	%rd218, %rd217, %rd181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd218;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 25;
	shf.r.wrap.b32 	%r340, %r337, %r338, 25;
	mov.b64 	%rd219, {%r340, %r339};
	xor.b64  	%rd220, %rd8, 2611923443488327891;
	add.s64 	%rd221, %rd214, %rd220;
	add.s64 	%rd222, %rd221, %rd219;
	xor.b64  	%rd223, %rd222, %rd216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd223;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 16;
	shf.r.wrap.b32 	%r344, %r341, %r342, 16;
	mov.b64 	%rd224, {%r344, %r343};
	add.s64 	%rd225, %rd224, %rd217;
	xor.b64  	%rd226, %rd225, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd226;
	}
	shf.r.wrap.b32 	%r347, %r346, %r345, 11;
	shf.r.wrap.b32 	%r348, %r345, %r346, 11;
	mov.b64 	%rd227, {%r348, %r347};
	add.s64 	%rd228, %rd176, %rd196;
	add.s64 	%rd229, %rd228, 4577018097722394903;
	xor.b64  	%rd230, %rd229, %rd163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd230;
	}
	mov.b64 	%rd231, {%r350, %r349};
	add.s64 	%rd232, %rd231, %rd148;
	xor.b64  	%rd233, %rd232, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd233;
	}
	shf.r.wrap.b32 	%r353, %r352, %r351, 25;
	shf.r.wrap.b32 	%r354, %r351, %r352, 25;
	mov.b64 	%rd234, {%r354, %r353};
	xor.b64  	%rd235, %rd13, -5124621466747896170;
	add.s64 	%rd236, %rd229, %rd235;
	add.s64 	%rd237, %rd236, %rd234;
	xor.b64  	%rd238, %rd237, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd238;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 16;
	shf.r.wrap.b32 	%r358, %r355, %r356, 16;
	mov.b64 	%rd239, {%r358, %r357};
	add.s64 	%rd240, %rd239, %rd232;
	xor.b64  	%rd241, %rd240, %rd234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r359,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd241;
	}
	shf.r.wrap.b32 	%r361, %r360, %r359, 11;
	shf.r.wrap.b32 	%r362, %r359, %r360, 11;
	mov.b64 	%rd242, {%r362, %r361};
	xor.b64  	%rd243, %rd11, 589684135938649225;
	add.s64 	%rd244, %rd150, %rd243;
	add.s64 	%rd245, %rd244, %rd191;
	xor.b64  	%rd246, %rd245, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r364}, %rd246;
	}
	mov.b64 	%rd247, {%r364, %r363};
	add.s64 	%rd248, %rd247, %rd164;
	xor.b64  	%rd249, %rd248, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r365,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r366}, %rd249;
	}
	shf.r.wrap.b32 	%r367, %r366, %r365, 25;
	shf.r.wrap.b32 	%r368, %r365, %r366, 25;
	mov.b64 	%rd250, {%r368, %r367};
	xor.b64  	%rd251, %rd9, -4732044268327596948;
	add.s64 	%rd252, %rd245, %rd251;
	add.s64 	%rd253, %rd252, %rd250;
	xor.b64  	%rd254, %rd253, %rd247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd254;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 16;
	shf.r.wrap.b32 	%r372, %r369, %r370, 16;
	mov.b64 	%rd255, {%r372, %r371};
	add.s64 	%rd256, %rd255, %rd248;
	xor.b64  	%rd257, %rd256, %rd250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd257;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 11;
	shf.r.wrap.b32 	%r376, %r373, %r374, 11;
	mov.b64 	%rd258, {%r376, %r375};
	add.s64 	%rd259, %rd206, %rd258;
	add.s64 	%rd260, %rd259, -7919907764393346277;
	xor.b64  	%rd261, %rd260, %rd224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r377,%dummy}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r378}, %rd261;
	}
	mov.b64 	%rd262, {%r378, %r377};
	add.s64 	%rd263, %rd262, %rd240;
	xor.b64  	%rd264, %rd263, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd264;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 25;
	shf.r.wrap.b32 	%r382, %r379, %r380, 25;
	mov.b64 	%rd265, {%r382, %r381};
	xor.b64  	%rd266, %rd14, -5124621466747896170;
	add.s64 	%rd267, %rd260, %rd266;
	add.s64 	%rd268, %rd267, %rd265;
	xor.b64  	%rd269, %rd268, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r383,%dummy}, %rd269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r384}, %rd269;
	}
	shf.r.wrap.b32 	%r385, %r384, %r383, 16;
	shf.r.wrap.b32 	%r386, %r383, %r384, 16;
	mov.b64 	%rd270, {%r386, %r385};
	add.s64 	%rd271, %rd270, %rd263;
	xor.b64  	%rd272, %rd271, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd272;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 11;
	shf.r.wrap.b32 	%r390, %r387, %r388, 11;
	mov.b64 	%rd273, {%r390, %r389};
	add.s64 	%rd274, %rd211, %rd222;
	add.s64 	%rd275, %rd274, 2611923443488327891;
	xor.b64  	%rd276, %rd239, %rd275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd276;
	}
	mov.b64 	%rd277, {%r392, %r391};
	add.s64 	%rd278, %rd277, %rd256;
	xor.b64  	%rd279, %rd278, %rd211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r393,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r394}, %rd279;
	}
	shf.r.wrap.b32 	%r395, %r394, %r393, 25;
	shf.r.wrap.b32 	%r396, %r393, %r394, 25;
	mov.b64 	%rd280, {%r396, %r395};
	xor.b64  	%rd281, %rd6, -5008970055469465703;
	add.s64 	%rd282, %rd275, %rd281;
	add.s64 	%rd283, %rd282, %rd280;
	xor.b64  	%rd284, %rd283, %rd277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd284;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 16;
	shf.r.wrap.b32 	%r400, %r397, %r398, 16;
	mov.b64 	%rd285, {%r400, %r399};
	add.s64 	%rd286, %rd285, %rd278;
	xor.b64  	%rd287, %rd286, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd287;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 11;
	shf.r.wrap.b32 	%r404, %r401, %r402, 11;
	mov.b64 	%rd288, {%r404, %r403};
	xor.b64  	%rd289, %rd11, -6626703657320631856;
	add.s64 	%rd290, %rd227, %rd289;
	add.s64 	%rd291, %rd290, %rd237;
	xor.b64  	%rd292, %rd255, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd292;
	}
	mov.b64 	%rd293, {%r406, %r405};
	add.s64 	%rd294, %rd293, %rd209;
	xor.b64  	%rd295, %rd294, %rd227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r407,%dummy}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r408}, %rd295;
	}
	shf.r.wrap.b32 	%r409, %r408, %r407, 25;
	shf.r.wrap.b32 	%r410, %r407, %r408, 25;
	mov.b64 	%rd296, {%r410, %r409};
	xor.b64  	%rd297, %rd8, -4732044268327596948;
	add.s64 	%rd298, %rd291, %rd297;
	add.s64 	%rd299, %rd298, %rd296;
	xor.b64  	%rd300, %rd299, %rd293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd300;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 16;
	shf.r.wrap.b32 	%r414, %r411, %r412, 16;
	mov.b64 	%rd301, {%r414, %r413};
	add.s64 	%rd302, %rd301, %rd294;
	xor.b64  	%rd303, %rd302, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd303;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 11;
	shf.r.wrap.b32 	%r418, %r415, %r416, 11;
	mov.b64 	%rd304, {%r418, %r417};
	add.s64 	%rd305, %rd242, %rd253;
	add.s64 	%rd306, %rd305, 2639559389850201719;
	xor.b64  	%rd307, %rd306, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd307;
	}
	mov.b64 	%rd308, {%r420, %r419};
	add.s64 	%rd309, %rd308, %rd225;
	xor.b64  	%rd310, %rd309, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd310;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 25;
	shf.r.wrap.b32 	%r424, %r421, %r422, 25;
	mov.b64 	%rd311, {%r424, %r423};
	add.s64 	%rd312, %rd306, %rd311;
	add.s64 	%rd313, %rd312, 7163292796296056424;
	xor.b64  	%rd314, %rd313, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r426}, %rd314;
	}
	shf.r.wrap.b32 	%r427, %r426, %r425, 16;
	shf.r.wrap.b32 	%r428, %r425, %r426, 16;
	mov.b64 	%rd315, {%r428, %r427};
	add.s64 	%rd316, %rd315, %rd309;
	xor.b64  	%rd317, %rd316, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r429,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd317;
	}
	shf.r.wrap.b32 	%r431, %r430, %r429, 11;
	shf.r.wrap.b32 	%r432, %r429, %r430, 11;
	mov.b64 	%rd318, {%r432, %r431};
	add.s64 	%rd319, %rd268, %rd288;
	add.s64 	%rd320, %rd319, -8646362754857370602;
	xor.b64  	%rd321, %rd315, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd321;
	}
	mov.b64 	%rd322, {%r434, %r433};
	add.s64 	%rd323, %rd322, %rd302;
	xor.b64  	%rd324, %rd323, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd324;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 25;
	shf.r.wrap.b32 	%r438, %r435, %r436, 25;
	mov.b64 	%rd325, {%r438, %r437};
	add.s64 	%rd326, %rd320, %rd325;
	add.s64 	%rd327, %rd326, 3458046377305235383;
	xor.b64  	%rd328, %rd327, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd328;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 16;
	shf.r.wrap.b32 	%r442, %r439, %r440, 16;
	mov.b64 	%rd329, {%r442, %r441};
	add.s64 	%rd330, %rd329, %rd323;
	xor.b64  	%rd331, %rd330, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd331;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 11;
	shf.r.wrap.b32 	%r446, %r443, %r444, 11;
	mov.b64 	%rd332, {%r446, %r445};
	xor.b64  	%rd333, %rd9, -4563226453097033507;
	add.s64 	%rd334, %rd283, %rd333;
	add.s64 	%rd335, %rd334, %rd304;
	xor.b64  	%rd336, %rd335, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd336;
	}
	mov.b64 	%rd337, {%r448, %r447};
	add.s64 	%rd338, %rd337, %rd316;
	xor.b64  	%rd339, %rd338, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd339;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 25;
	shf.r.wrap.b32 	%r452, %r449, %r450, 25;
	mov.b64 	%rd340, {%r452, %r451};
	xor.b64  	%rd341, %rd12, 589684135938649225;
	add.s64 	%rd342, %rd335, %rd341;
	add.s64 	%rd343, %rd342, %rd340;
	xor.b64  	%rd344, %rd343, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd344;
	}
	shf.r.wrap.b32 	%r455, %r454, %r453, 16;
	shf.r.wrap.b32 	%r456, %r453, %r454, 16;
	mov.b64 	%rd345, {%r456, %r455};
	add.s64 	%rd346, %rd345, %rd338;
	xor.b64  	%rd347, %rd346, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd347;
	}
	shf.r.wrap.b32 	%r459, %r458, %r457, 11;
	shf.r.wrap.b32 	%r460, %r457, %r458, 11;
	mov.b64 	%rd348, {%r460, %r459};
	xor.b64  	%rd349, %rd13, 1376283091369227076;
	add.s64 	%rd350, %rd299, %rd349;
	add.s64 	%rd351, %rd350, %rd318;
	xor.b64  	%rd352, %rd351, %rd285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r461,%dummy}, %rd352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r462}, %rd352;
	}
	mov.b64 	%rd353, {%r462, %r461};
	add.s64 	%rd354, %rd353, %rd271;
	xor.b64  	%rd355, %rd354, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd355;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 25;
	shf.r.wrap.b32 	%r466, %r463, %r464, 25;
	mov.b64 	%rd356, {%r466, %r465};
	xor.b64  	%rd357, %rd7, 4577018097722394903;
	add.s64 	%rd358, %rd351, %rd357;
	add.s64 	%rd359, %rd358, %rd356;
	xor.b64  	%rd360, %rd359, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd360;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 16;
	shf.r.wrap.b32 	%r470, %r467, %r468, 16;
	mov.b64 	%rd361, {%r470, %r469};
	add.s64 	%rd362, %rd361, %rd354;
	xor.b64  	%rd363, %rd362, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd363;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 11;
	shf.r.wrap.b32 	%r474, %r471, %r472, 11;
	mov.b64 	%rd364, {%r474, %r473};
	xor.b64  	%rd365, %rd18, 4983270260364809079;
	add.s64 	%rd366, %rd273, %rd365;
	add.s64 	%rd367, %rd366, %rd313;
	xor.b64  	%rd368, %rd367, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd368;
	}
	mov.b64 	%rd369, {%r476, %r475};
	add.s64 	%rd370, %rd369, %rd286;
	xor.b64  	%rd371, %rd370, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd371;
	}
	shf.r.wrap.b32 	%r479, %r478, %r477, 25;
	shf.r.wrap.b32 	%r480, %r477, %r478, 25;
	mov.b64 	%rd372, {%r480, %r479};
	xor.b64  	%rd373, %rd10, -3372901835766516308;
	add.s64 	%rd374, %rd367, %rd373;
	add.s64 	%rd375, %rd374, %rd372;
	xor.b64  	%rd376, %rd375, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd376;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 16;
	shf.r.wrap.b32 	%r484, %r481, %r482, 16;
	mov.b64 	%rd377, {%r484, %r483};
	add.s64 	%rd378, %rd377, %rd370;
	xor.b64  	%rd379, %rd378, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd379;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 11;
	shf.r.wrap.b32 	%r488, %r485, %r486, 11;
	mov.b64 	%rd380, {%r488, %r487};
	xor.b64  	%rd381, %rd13, -3372901835766516308;
	add.s64 	%rd382, %rd327, %rd381;
	add.s64 	%rd383, %rd382, %rd380;
	xor.b64  	%rd384, %rd383, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd384;
	}
	mov.b64 	%rd385, {%r490, %r489};
	add.s64 	%rd386, %rd385, %rd362;
	xor.b64  	%rd387, %rd386, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd387;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 25;
	shf.r.wrap.b32 	%r494, %r491, %r492, 25;
	mov.b64 	%rd388, {%r494, %r493};
	xor.b64  	%rd389, %rd18, 4577018097722394903;
	add.s64 	%rd390, %rd383, %rd389;
	add.s64 	%rd391, %rd390, %rd388;
	xor.b64  	%rd392, %rd391, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd392;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 16;
	shf.r.wrap.b32 	%r498, %r495, %r496, 16;
	mov.b64 	%rd393, {%r498, %r497};
	add.s64 	%rd394, %rd393, %rd386;
	xor.b64  	%rd395, %rd394, %rd388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd395;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 11;
	shf.r.wrap.b32 	%r502, %r499, %r500, 11;
	mov.b64 	%rd396, {%r502, %r501};
	xor.b64  	%rd397, %rd9, 1376283091369227076;
	add.s64 	%rd398, %rd332, %rd397;
	add.s64 	%rd399, %rd398, %rd343;
	xor.b64  	%rd400, %rd361, %rd399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd400;
	}
	mov.b64 	%rd401, {%r504, %r503};
	add.s64 	%rd402, %rd401, %rd378;
	xor.b64  	%rd403, %rd402, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r506}, %rd403;
	}
	shf.r.wrap.b32 	%r507, %r506, %r505, 25;
	shf.r.wrap.b32 	%r508, %r505, %r506, 25;
	mov.b64 	%rd404, {%r508, %r507};
	xor.b64  	%rd405, %rd7, 589684135938649225;
	add.s64 	%rd406, %rd399, %rd405;
	add.s64 	%rd407, %rd406, %rd404;
	xor.b64  	%rd408, %rd407, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r509,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r510}, %rd408;
	}
	shf.r.wrap.b32 	%r511, %r510, %r509, 16;
	shf.r.wrap.b32 	%r512, %r509, %r510, 16;
	mov.b64 	%rd409, {%r512, %r511};
	add.s64 	%rd410, %rd409, %rd402;
	xor.b64  	%rd411, %rd410, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd411;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 11;
	shf.r.wrap.b32 	%r516, %r513, %r514, 11;
	mov.b64 	%rd412, {%r516, %r515};
	add.s64 	%rd413, %rd348, %rd359;
	add.s64 	%rd414, %rd413, -5008970055469465704;
	xor.b64  	%rd415, %rd377, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd415;
	}
	mov.b64 	%rd416, {%r518, %r517};
	add.s64 	%rd417, %rd416, %rd330;
	xor.b64  	%rd418, %rd417, %rd348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd418;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 25;
	shf.r.wrap.b32 	%r522, %r519, %r520, 25;
	mov.b64 	%rd419, {%r522, %r521};
	add.s64 	%rd420, %rd414, %rd419;
	add.s64 	%rd421, %rd420, 2639559389850201335;
	xor.b64  	%rd422, %rd421, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd422;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 16;
	shf.r.wrap.b32 	%r526, %r523, %r524, 16;
	mov.b64 	%rd423, {%r526, %r525};
	add.s64 	%rd424, %rd423, %rd417;
	xor.b64  	%rd425, %rd424, %rd419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd425;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 11;
	shf.r.wrap.b32 	%r530, %r527, %r528, 11;
	mov.b64 	%rd426, {%r530, %r529};
	add.s64 	%rd427, %rd364, %rd375;
	add.s64 	%rd428, %rd427, 577009281997405206;
	xor.b64  	%rd429, %rd428, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd429;
	}
	mov.b64 	%rd430, {%r532, %r531};
	add.s64 	%rd431, %rd430, %rd346;
	xor.b64  	%rd432, %rd431, %rd364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd432;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 25;
	shf.r.wrap.b32 	%r536, %r533, %r534, 25;
	mov.b64 	%rd433, {%r536, %r535};
	add.s64 	%rd434, %rd428, %rd433;
	add.s64 	%rd435, %rd434, -5124621466747896170;
	xor.b64  	%rd436, %rd435, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd436;
	}
	shf.r.wrap.b32 	%r539, %r538, %r537, 16;
	shf.r.wrap.b32 	%r540, %r537, %r538, 16;
	mov.b64 	%rd437, {%r540, %r539};
	add.s64 	%rd438, %rd437, %rd431;
	xor.b64  	%rd439, %rd438, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r542}, %rd439;
	}
	shf.r.wrap.b32 	%r543, %r542, %r541, 11;
	shf.r.wrap.b32 	%r544, %r541, %r542, 11;
	mov.b64 	%rd440, {%r544, %r543};
	xor.b64  	%rd441, %rd8, -4563226453097033507;
	add.s64 	%rd442, %rd391, %rd441;
	add.s64 	%rd443, %rd442, %rd412;
	xor.b64  	%rd444, %rd437, %rd443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd444;
	}
	mov.b64 	%rd445, {%r546, %r545};
	add.s64 	%rd446, %rd445, %rd424;
	xor.b64  	%rd447, %rd446, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd447;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 25;
	shf.r.wrap.b32 	%r550, %r547, %r548, 25;
	mov.b64 	%rd448, {%r550, %r549};
	xor.b64  	%rd449, %rd12, -6626703657320631856;
	add.s64 	%rd450, %rd443, %rd449;
	add.s64 	%rd451, %rd450, %rd448;
	xor.b64  	%rd452, %rd451, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd452;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 16;
	shf.r.wrap.b32 	%r554, %r551, %r552, 16;
	mov.b64 	%rd453, {%r554, %r553};
	add.s64 	%rd454, %rd453, %rd446;
	xor.b64  	%rd455, %rd454, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd455;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 11;
	shf.r.wrap.b32 	%r558, %r555, %r556, 11;
	mov.b64 	%rd456, {%r558, %r557};
	xor.b64  	%rd457, %rd11, 3458046377305235383;
	add.s64 	%rd458, %rd407, %rd457;
	add.s64 	%rd459, %rd458, %rd426;
	xor.b64  	%rd460, %rd459, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd460;
	}
	mov.b64 	%rd461, {%r560, %r559};
	add.s64 	%rd462, %rd461, %rd438;
	xor.b64  	%rd463, %rd462, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd463;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 25;
	shf.r.wrap.b32 	%r564, %r561, %r562, 25;
	mov.b64 	%rd464, {%r564, %r563};
	add.s64 	%rd465, %rd459, %rd464;
	add.s64 	%rd466, %rd465, 4491327768527178860;
	xor.b64  	%rd467, %rd466, %rd461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd467;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 16;
	shf.r.wrap.b32 	%r568, %r565, %r566, 16;
	mov.b64 	%rd468, {%r568, %r567};
	add.s64 	%rd469, %rd468, %rd462;
	xor.b64  	%rd470, %rd469, %rd464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r570}, %rd470;
	}
	shf.r.wrap.b32 	%r571, %r570, %r569, 11;
	shf.r.wrap.b32 	%r572, %r569, %r570, 11;
	mov.b64 	%rd471, {%r572, %r571};
	xor.b64  	%rd472, %rd10, 2611923443488327891;
	add.s64 	%rd473, %rd421, %rd472;
	add.s64 	%rd474, %rd473, %rd440;
	xor.b64  	%rd475, %rd474, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r574}, %rd475;
	}
	mov.b64 	%rd476, {%r574, %r573};
	add.s64 	%rd477, %rd476, %rd394;
	xor.b64  	%rd478, %rd477, %rd440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd478;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 25;
	shf.r.wrap.b32 	%r578, %r575, %r576, 25;
	mov.b64 	%rd479, {%r578, %r577};
	xor.b64  	%rd480, %rd6, 4983270260364809079;
	add.s64 	%rd481, %rd474, %rd480;
	add.s64 	%rd482, %rd481, %rd479;
	xor.b64  	%rd483, %rd482, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd483;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 16;
	shf.r.wrap.b32 	%r582, %r579, %r580, 16;
	mov.b64 	%rd484, {%r582, %r581};
	add.s64 	%rd485, %rd484, %rd477;
	xor.b64  	%rd486, %rd485, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd486;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 11;
	shf.r.wrap.b32 	%r586, %r583, %r584, 11;
	mov.b64 	%rd487, {%r586, %r585};
	add.s64 	%rd488, %rd396, %rd435;
	add.s64 	%rd489, %rd488, -7919907764393346661;
	xor.b64  	%rd490, %rd489, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd490;
	}
	mov.b64 	%rd491, {%r588, %r587};
	add.s64 	%rd492, %rd491, %rd410;
	xor.b64  	%rd493, %rd492, %rd396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r589,%dummy}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r590}, %rd493;
	}
	shf.r.wrap.b32 	%r591, %r590, %r589, 25;
	shf.r.wrap.b32 	%r592, %r589, %r590, 25;
	mov.b64 	%rd494, {%r592, %r591};
	xor.b64  	%rd495, %rd14, 7163292796296056425;
	add.s64 	%rd496, %rd489, %rd495;
	add.s64 	%rd497, %rd496, %rd494;
	xor.b64  	%rd498, %rd497, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd498;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 16;
	shf.r.wrap.b32 	%r596, %r593, %r594, 16;
	mov.b64 	%rd499, {%r596, %r595};
	add.s64 	%rd500, %rd499, %rd492;
	xor.b64  	%rd501, %rd500, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd501;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 11;
	shf.r.wrap.b32 	%r600, %r597, %r598, 11;
	mov.b64 	%rd502, {%r600, %r599};
	xor.b64  	%rd503, %rd18, 2611923443488327891;
	add.s64 	%rd504, %rd451, %rd503;
	add.s64 	%rd505, %rd504, %rd502;
	xor.b64  	%rd506, %rd505, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd506;
	}
	mov.b64 	%rd507, {%r602, %r601};
	add.s64 	%rd508, %rd507, %rd485;
	xor.b64  	%rd509, %rd508, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd509;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 25;
	shf.r.wrap.b32 	%r606, %r603, %r604, 25;
	mov.b64 	%rd510, {%r606, %r605};
	xor.b64  	%rd511, %rd6, -3372901835766516308;
	add.s64 	%rd512, %rd505, %rd511;
	add.s64 	%rd513, %rd512, %rd510;
	xor.b64  	%rd514, %rd513, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd514;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 16;
	shf.r.wrap.b32 	%r610, %r607, %r608, 16;
	mov.b64 	%rd515, {%r610, %r609};
	add.s64 	%rd516, %rd515, %rd508;
	xor.b64  	%rd517, %rd516, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd517;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 11;
	shf.r.wrap.b32 	%r614, %r611, %r612, 11;
	mov.b64 	%rd518, {%r614, %r613};
	xor.b64  	%rd519, %rd11, 4577018097722394903;
	add.s64 	%rd520, %rd456, %rd519;
	add.s64 	%rd521, %rd520, %rd466;
	xor.b64  	%rd522, %rd484, %rd521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd522;
	}
	mov.b64 	%rd523, {%r616, %r615};
	add.s64 	%rd524, %rd523, %rd500;
	xor.b64  	%rd525, %rd524, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd525;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 25;
	shf.r.wrap.b32 	%r620, %r617, %r618, 25;
	mov.b64 	%rd526, {%r620, %r619};
	xor.b64  	%rd527, %rd13, -4732044268327596948;
	add.s64 	%rd528, %rd521, %rd527;
	add.s64 	%rd529, %rd528, %rd526;
	xor.b64  	%rd530, %rd529, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r622}, %rd530;
	}
	shf.r.wrap.b32 	%r623, %r622, %r621, 16;
	shf.r.wrap.b32 	%r624, %r621, %r622, 16;
	mov.b64 	%rd531, {%r624, %r623};
	add.s64 	%rd532, %rd531, %rd524;
	xor.b64  	%rd533, %rd532, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd533;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 11;
	shf.r.wrap.b32 	%r628, %r625, %r626, 11;
	mov.b64 	%rd534, {%r628, %r627};
	xor.b64  	%rd535, %rd8, 4983270260364809079;
	add.s64 	%rd536, %rd471, %rd535;
	add.s64 	%rd537, %rd536, %rd482;
	xor.b64  	%rd538, %rd499, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd538;
	}
	mov.b64 	%rd539, {%r630, %r629};
	add.s64 	%rd540, %rd539, %rd454;
	xor.b64  	%rd541, %rd540, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd541;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 25;
	shf.r.wrap.b32 	%r634, %r631, %r632, 25;
	mov.b64 	%rd542, {%r634, %r633};
	xor.b64  	%rd543, %rd10, -6626703657320631856;
	add.s64 	%rd544, %rd537, %rd543;
	add.s64 	%rd545, %rd544, %rd542;
	xor.b64  	%rd546, %rd545, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd546;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 16;
	shf.r.wrap.b32 	%r638, %r635, %r636, 16;
	mov.b64 	%rd547, {%r638, %r637};
	add.s64 	%rd548, %rd547, %rd540;
	xor.b64  	%rd549, %rd548, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd549;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 11;
	shf.r.wrap.b32 	%r642, %r639, %r640, 11;
	mov.b64 	%rd550, {%r642, %r641};
	add.s64 	%rd551, %rd487, %rd497;
	add.s64 	%rd552, %rd551, -2060079240558719383;
	xor.b64  	%rd553, %rd552, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd553;
	}
	mov.b64 	%rd554, {%r644, %r643};
	add.s64 	%rd555, %rd554, %rd469;
	xor.b64  	%rd556, %rd555, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd556;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 25;
	shf.r.wrap.b32 	%r648, %r645, %r646, 25;
	mov.b64 	%rd557, {%r648, %r647};
	add.s64 	%rd558, %rd552, %rd557;
	add.s64 	%rd559, %rd558, 3458046377305234743;
	xor.b64  	%rd560, %rd559, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r649,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r650}, %rd560;
	}
	shf.r.wrap.b32 	%r651, %r650, %r649, 16;
	shf.r.wrap.b32 	%r652, %r649, %r650, 16;
	mov.b64 	%rd561, {%r652, %r651};
	add.s64 	%rd562, %rd561, %rd555;
	xor.b64  	%rd563, %rd562, %rd557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd563;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 11;
	shf.r.wrap.b32 	%r656, %r653, %r654, 11;
	mov.b64 	%rd564, {%r656, %r655};
	add.s64 	%rd565, %rd513, %rd534;
	add.s64 	%rd566, %rd565, 1376283091369227076;
	xor.b64  	%rd567, %rd561, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd567;
	}
	mov.b64 	%rd568, {%r658, %r657};
	add.s64 	%rd569, %rd568, %rd548;
	xor.b64  	%rd570, %rd569, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd570;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 25;
	shf.r.wrap.b32 	%r662, %r659, %r660, 25;
	mov.b64 	%rd571, {%r662, %r661};
	xor.b64  	%rd572, %rd7, 577009281997405206;
	add.s64 	%rd573, %rd566, %rd572;
	add.s64 	%rd574, %rd573, %rd571;
	xor.b64  	%rd575, %rd574, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd575;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 16;
	shf.r.wrap.b32 	%r666, %r663, %r664, 16;
	mov.b64 	%rd576, {%r666, %r665};
	add.s64 	%rd577, %rd576, %rd569;
	xor.b64  	%rd578, %rd577, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd578;
	}
	shf.r.wrap.b32 	%r669, %r668, %r667, 11;
	shf.r.wrap.b32 	%r670, %r667, %r668, 11;
	mov.b64 	%rd579, {%r670, %r669};
	add.s64 	%rd580, %rd529, %rd550;
	add.s64 	%rd581, %rd580, -5008970055469465703;
	xor.b64  	%rd582, %rd581, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd582;
	}
	mov.b64 	%rd583, {%r672, %r671};
	add.s64 	%rd584, %rd583, %rd562;
	xor.b64  	%rd585, %rd584, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd585;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 25;
	shf.r.wrap.b32 	%r676, %r673, %r674, 25;
	mov.b64 	%rd586, {%r676, %r675};
	add.s64 	%rd587, %rd581, %rd586;
	add.s64 	%rd588, %rd587, -5124621466747896170;
	xor.b64  	%rd589, %rd588, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd589;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 16;
	shf.r.wrap.b32 	%r680, %r677, %r678, 16;
	mov.b64 	%rd590, {%r680, %r679};
	add.s64 	%rd591, %rd590, %rd584;
	xor.b64  	%rd592, %rd591, %rd586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r682}, %rd592;
	}
	shf.r.wrap.b32 	%r683, %r682, %r681, 11;
	shf.r.wrap.b32 	%r684, %r681, %r682, 11;
	mov.b64 	%rd593, {%r684, %r683};
	xor.b64  	%rd594, %rd12, -7919907764393346277;
	add.s64 	%rd595, %rd545, %rd594;
	add.s64 	%rd596, %rd595, %rd564;
	xor.b64  	%rd597, %rd596, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd597;
	}
	mov.b64 	%rd598, {%r686, %r685};
	add.s64 	%rd599, %rd598, %rd516;
	xor.b64  	%rd600, %rd599, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd600;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 25;
	shf.r.wrap.b32 	%r690, %r687, %r688, 25;
	mov.b64 	%rd601, {%r690, %r689};
	xor.b64  	%rd602, %rd14, -4563226453097033507;
	add.s64 	%rd603, %rd596, %rd602;
	add.s64 	%rd604, %rd603, %rd601;
	xor.b64  	%rd605, %rd604, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r691,%dummy}, %rd605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd605;
	}
	shf.r.wrap.b32 	%r693, %r692, %r691, 16;
	shf.r.wrap.b32 	%r694, %r691, %r692, 16;
	mov.b64 	%rd606, {%r694, %r693};
	add.s64 	%rd607, %rd606, %rd599;
	xor.b64  	%rd608, %rd607, %rd601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd608;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 11;
	shf.r.wrap.b32 	%r698, %r695, %r696, 11;
	mov.b64 	%rd609, {%r698, %r697};
	xor.b64  	%rd610, %rd9, 2639559389850201335;
	add.s64 	%rd611, %rd518, %rd610;
	add.s64 	%rd612, %rd611, %rd559;
	xor.b64  	%rd613, %rd612, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r699,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd613;
	}
	mov.b64 	%rd614, {%r700, %r699};
	add.s64 	%rd615, %rd614, %rd532;
	xor.b64  	%rd616, %rd615, %rd518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd616;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 25;
	shf.r.wrap.b32 	%r704, %r701, %r702, 25;
	mov.b64 	%rd617, {%r704, %r703};
	add.s64 	%rd618, %rd612, %rd617;
	add.s64 	%rd619, %rd618, 589684135938649224;
	xor.b64  	%rd620, %rd619, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd620;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 16;
	shf.r.wrap.b32 	%r708, %r705, %r706, 16;
	mov.b64 	%rd621, {%r708, %r707};
	add.s64 	%rd622, %rd621, %rd615;
	xor.b64  	%rd623, %rd622, %rd617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd623;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 11;
	shf.r.wrap.b32 	%r712, %r709, %r710, 11;
	mov.b64 	%rd624, {%r712, %r711};
	xor.b64  	%rd625, %rd8, -5008970055469465703;
	add.s64 	%rd626, %rd574, %rd625;
	add.s64 	%rd627, %rd626, %rd624;
	xor.b64  	%rd628, %rd627, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd628;
	}
	mov.b64 	%rd629, {%r714, %r713};
	add.s64 	%rd630, %rd629, %rd607;
	xor.b64  	%rd631, %rd630, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd631;
	}
	shf.r.wrap.b32 	%r717, %r716, %r715, 25;
	shf.r.wrap.b32 	%r718, %r715, %r716, 25;
	mov.b64 	%rd632, {%r718, %r717};
	add.s64 	%rd633, %rd627, %rd632;
	add.s64 	%rd634, %rd633, -6626703657320631856;
	xor.b64  	%rd635, %rd634, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd635;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 16;
	shf.r.wrap.b32 	%r722, %r719, %r720, 16;
	mov.b64 	%rd636, {%r722, %r721};
	add.s64 	%rd637, %rd636, %rd630;
	xor.b64  	%rd638, %rd637, %rd632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r724}, %rd638;
	}
	shf.r.wrap.b32 	%r725, %r724, %r723, 11;
	shf.r.wrap.b32 	%r726, %r723, %r724, 11;
	mov.b64 	%rd639, {%r726, %r725};
	xor.b64  	%rd640, %rd12, 3458046377305235383;
	add.s64 	%rd641, %rd579, %rd640;
	add.s64 	%rd642, %rd641, %rd588;
	xor.b64  	%rd643, %rd606, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd643;
	}
	mov.b64 	%rd644, {%r728, %r727};
	add.s64 	%rd645, %rd644, %rd622;
	xor.b64  	%rd646, %rd645, %rd579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd646;
	}
	shf.r.wrap.b32 	%r731, %r730, %r729, 25;
	shf.r.wrap.b32 	%r732, %r729, %r730, 25;
	mov.b64 	%rd647, {%r732, %r731};
	add.s64 	%rd648, %rd642, %rd647;
	add.s64 	%rd649, %rd648, 4660145583757742301;
	xor.b64  	%rd650, %rd649, %rd644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd650;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 16;
	shf.r.wrap.b32 	%r736, %r733, %r734, 16;
	mov.b64 	%rd651, {%r736, %r735};
	add.s64 	%rd652, %rd651, %rd645;
	xor.b64  	%rd653, %rd652, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd653;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 11;
	shf.r.wrap.b32 	%r740, %r737, %r738, 11;
	mov.b64 	%rd654, {%r740, %r739};
	xor.b64  	%rd655, %rd6, -5124621466747896170;
	add.s64 	%rd656, %rd593, %rd655;
	add.s64 	%rd657, %rd656, %rd604;
	xor.b64  	%rd658, %rd621, %rd657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd658;
	}
	mov.b64 	%rd659, {%r742, %r741};
	add.s64 	%rd660, %rd659, %rd577;
	xor.b64  	%rd661, %rd660, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd661;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 25;
	shf.r.wrap.b32 	%r746, %r743, %r744, 25;
	mov.b64 	%rd662, {%r746, %r745};
	add.s64 	%rd663, %rd657, %rd662;
	add.s64 	%rd664, %rd663, 2611923443488327891;
	xor.b64  	%rd665, %rd664, %rd659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd665;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 16;
	shf.r.wrap.b32 	%r750, %r747, %r748, 16;
	mov.b64 	%rd666, {%r750, %r749};
	add.s64 	%rd667, %rd666, %rd660;
	xor.b64  	%rd668, %rd667, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r751,%dummy}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd668;
	}
	shf.r.wrap.b32 	%r753, %r752, %r751, 11;
	shf.r.wrap.b32 	%r754, %r751, %r752, 11;
	mov.b64 	%rd669, {%r754, %r753};
	xor.b64  	%rd670, %rd14, 589684135938649225;
	add.s64 	%rd671, %rd609, %rd670;
	add.s64 	%rd672, %rd671, %rd619;
	xor.b64  	%rd673, %rd672, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd673;
	}
	mov.b64 	%rd674, {%r756, %r755};
	add.s64 	%rd675, %rd674, %rd591;
	xor.b64  	%rd676, %rd675, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd676;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 25;
	shf.r.wrap.b32 	%r760, %r757, %r758, 25;
	mov.b64 	%rd677, {%r760, %r759};
	xor.b64  	%rd678, %rd9, -7919907764393346277;
	add.s64 	%rd679, %rd672, %rd678;
	add.s64 	%rd680, %rd679, %rd677;
	xor.b64  	%rd681, %rd680, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd681;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 16;
	shf.r.wrap.b32 	%r764, %r761, %r762, 16;
	mov.b64 	%rd682, {%r764, %r763};
	add.s64 	%rd683, %rd682, %rd675;
	xor.b64  	%rd684, %rd683, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd684;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 11;
	shf.r.wrap.b32 	%r768, %r765, %r766, 11;
	mov.b64 	%rd685, {%r768, %r767};
	xor.b64  	%rd686, %rd10, 2639559389850201335;
	add.s64 	%rd687, %rd634, %rd686;
	add.s64 	%rd688, %rd687, %rd654;
	xor.b64  	%rd689, %rd682, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd689;
	}
	mov.b64 	%rd690, {%r770, %r769};
	add.s64 	%rd691, %rd690, %rd667;
	xor.b64  	%rd692, %rd691, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd692;
	}
	shf.r.wrap.b32 	%r773, %r772, %r771, 25;
	shf.r.wrap.b32 	%r774, %r771, %r772, 25;
	mov.b64 	%rd693, {%r774, %r773};
	add.s64 	%rd694, %rd688, %rd693;
	add.s64 	%rd695, %rd694, 4983270260364809078;
	xor.b64  	%rd696, %rd695, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r775,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r776}, %rd696;
	}
	shf.r.wrap.b32 	%r777, %r776, %r775, 16;
	shf.r.wrap.b32 	%r778, %r775, %r776, 16;
	mov.b64 	%rd697, {%r778, %r777};
	add.s64 	%rd698, %rd697, %rd691;
	xor.b64  	%rd699, %rd698, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r779,%dummy}, %rd699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd699;
	}
	shf.r.wrap.b32 	%r781, %r780, %r779, 11;
	shf.r.wrap.b32 	%r782, %r779, %r780, 11;
	mov.b64 	%rd700, {%r782, %r781};
	add.s64 	%rd701, %rd649, %rd527;
	add.s64 	%rd702, %rd701, %rd669;
	xor.b64  	%rd703, %rd702, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd703;
	}
	mov.b64 	%rd704, {%r784, %r783};
	add.s64 	%rd705, %rd704, %rd683;
	xor.b64  	%rd706, %rd705, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd706;
	}
	shf.r.wrap.b32 	%r787, %r786, %r785, 25;
	shf.r.wrap.b32 	%r788, %r785, %r786, 25;
	mov.b64 	%rd707, {%r788, %r787};
	add.s64 	%rd708, %rd702, %rd519;
	add.s64 	%rd709, %rd708, %rd707;
	xor.b64  	%rd710, %rd709, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd710;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 16;
	shf.r.wrap.b32 	%r792, %r789, %r790, 16;
	mov.b64 	%rd711, {%r792, %r791};
	add.s64 	%rd712, %rd711, %rd705;
	xor.b64  	%rd713, %rd712, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd713;
	}
	shf.r.wrap.b32 	%r795, %r794, %r793, 11;
	shf.r.wrap.b32 	%r796, %r793, %r794, 11;
	mov.b64 	%rd714, {%r796, %r795};
	add.s64 	%rd715, %rd664, %rd685;
	add.s64 	%rd716, %rd715, 577009281997405846;
	xor.b64  	%rd717, %rd716, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd717;
	}
	mov.b64 	%rd718, {%r798, %r797};
	add.s64 	%rd719, %rd718, %rd637;
	xor.b64  	%rd720, %rd719, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r799,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd720;
	}
	shf.r.wrap.b32 	%r801, %r800, %r799, 25;
	shf.r.wrap.b32 	%r802, %r799, %r800, 25;
	mov.b64 	%rd721, {%r802, %r801};
	add.s64 	%rd722, %rd716, %rd721;
	add.s64 	%rd723, %rd722, 7163292796296056425;
	xor.b64  	%rd724, %rd723, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r803,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd724;
	}
	shf.r.wrap.b32 	%r805, %r804, %r803, 16;
	shf.r.wrap.b32 	%r806, %r803, %r804, 16;
	mov.b64 	%rd725, {%r806, %r805};
	add.s64 	%rd726, %rd725, %rd719;
	xor.b64  	%rd727, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd727;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 11;
	shf.r.wrap.b32 	%r810, %r807, %r808, 11;
	mov.b64 	%rd728, {%r810, %r809};
	xor.b64  	%rd729, %rd7, -3372901835766516308;
	add.s64 	%rd730, %rd639, %rd729;
	add.s64 	%rd731, %rd730, %rd680;
	xor.b64  	%rd732, %rd731, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r811,%dummy}, %rd732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd732;
	}
	mov.b64 	%rd733, {%r812, %r811};
	add.s64 	%rd734, %rd733, %rd652;
	xor.b64  	%rd735, %rd734, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd735;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 25;
	shf.r.wrap.b32 	%r816, %r813, %r814, 25;
	mov.b64 	%rd736, {%r816, %r815};
	xor.b64  	%rd737, %rd18, 1376283091369227076;
	add.s64 	%rd738, %rd731, %rd737;
	add.s64 	%rd739, %rd738, %rd736;
	xor.b64  	%rd740, %rd739, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd740;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 16;
	shf.r.wrap.b32 	%r820, %r817, %r818, 16;
	mov.b64 	%rd741, {%r820, %r819};
	add.s64 	%rd742, %rd741, %rd734;
	xor.b64  	%rd743, %rd742, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd743;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 11;
	shf.r.wrap.b32 	%r824, %r821, %r822, 11;
	mov.b64 	%rd744, {%r824, %r823};
	add.s64 	%rd745, %rd695, %rd744;
	add.s64 	%rd746, %rd745, -4732044268327596948;
	xor.b64  	%rd747, %rd746, %rd711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r826}, %rd747;
	}
	mov.b64 	%rd748, {%r826, %r825};
	add.s64 	%rd749, %rd748, %rd726;
	xor.b64  	%rd750, %rd749, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd750;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 25;
	shf.r.wrap.b32 	%r830, %r827, %r828, 25;
	mov.b64 	%rd751, {%r830, %r829};
	xor.b64  	%rd752, %rd11, -5008970055469465703;
	add.s64 	%rd753, %rd746, %rd752;
	add.s64 	%rd754, %rd753, %rd751;
	xor.b64  	%rd755, %rd754, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd755;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 16;
	shf.r.wrap.b32 	%r834, %r831, %r832, 16;
	mov.b64 	%rd756, {%r834, %r833};
	add.s64 	%rd757, %rd756, %rd749;
	xor.b64  	%rd758, %rd757, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r835,%dummy}, %rd758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd758;
	}
	shf.r.wrap.b32 	%r837, %r836, %r835, 11;
	shf.r.wrap.b32 	%r838, %r835, %r836, 11;
	mov.b64 	%rd759, {%r838, %r837};
	xor.b64  	%rd760, %rd7, 7163292796296056425;
	add.s64 	%rd761, %rd700, %rd760;
	add.s64 	%rd762, %rd761, %rd709;
	xor.b64  	%rd763, %rd725, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd763;
	}
	mov.b64 	%rd764, {%r840, %r839};
	add.s64 	%rd765, %rd764, %rd742;
	xor.b64  	%rd766, %rd765, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r841,%dummy}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd766;
	}
	shf.r.wrap.b32 	%r843, %r842, %r841, 25;
	shf.r.wrap.b32 	%r844, %r841, %r842, 25;
	mov.b64 	%rd767, {%r844, %r843};
	add.s64 	%rd768, %rd762, %rd767;
	add.s64 	%rd769, %rd768, 1376283091369226692;
	xor.b64  	%rd770, %rd769, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd770;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 16;
	shf.r.wrap.b32 	%r848, %r845, %r846, 16;
	mov.b64 	%rd771, {%r848, %r847};
	add.s64 	%rd772, %rd771, %rd765;
	xor.b64  	%rd773, %rd772, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r850}, %rd773;
	}
	shf.r.wrap.b32 	%r851, %r850, %r849, 11;
	shf.r.wrap.b32 	%r852, %r849, %r850, 11;
	mov.b64 	%rd774, {%r852, %r851};
	add.s64 	%rd775, %rd714, %rd723;
	add.s64 	%rd776, %rd775, 2639559389850201335;
	xor.b64  	%rd777, %rd741, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd777;
	}
	mov.b64 	%rd778, {%r854, %r853};
	add.s64 	%rd779, %rd778, %rd698;
	xor.b64  	%rd780, %rd779, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd780;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 25;
	shf.r.wrap.b32 	%r858, %r855, %r856, 25;
	mov.b64 	%rd781, {%r858, %r857};
	add.s64 	%rd782, %rd776, %rd781;
	add.s64 	%rd783, %rd782, 577009281997405207;
	xor.b64  	%rd784, %rd783, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd784;
	}
	shf.r.wrap.b32 	%r861, %r860, %r859, 16;
	shf.r.wrap.b32 	%r862, %r859, %r860, 16;
	mov.b64 	%rd785, {%r862, %r861};
	add.s64 	%rd786, %rd785, %rd779;
	xor.b64  	%rd787, %rd786, %rd781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd787;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 11;
	shf.r.wrap.b32 	%r866, %r863, %r864, 11;
	mov.b64 	%rd788, {%r866, %r865};
	xor.b64  	%rd789, %rd10, 3458046377305235383;
	add.s64 	%rd790, %rd728, %rd789;
	add.s64 	%rd791, %rd790, %rd739;
	xor.b64  	%rd792, %rd791, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r867,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd792;
	}
	mov.b64 	%rd793, {%r868, %r867};
	add.s64 	%rd794, %rd793, %rd712;
	xor.b64  	%rd795, %rd794, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd795;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 25;
	shf.r.wrap.b32 	%r872, %r869, %r870, 25;
	mov.b64 	%rd796, {%r872, %r871};
	add.s64 	%rd797, %rd791, %rd796;
	add.s64 	%rd798, %rd797, -4240101776489966729;
	xor.b64  	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd799;
	}
	shf.r.wrap.b32 	%r875, %r874, %r873, 16;
	shf.r.wrap.b32 	%r876, %r873, %r874, 16;
	mov.b64 	%rd800, {%r876, %r875};
	add.s64 	%rd801, %rd800, %rd794;
	xor.b64  	%rd802, %rd801, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd802;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 11;
	shf.r.wrap.b32 	%r880, %r877, %r878, 11;
	mov.b64 	%rd803, {%r880, %r879};
	xor.b64  	%rd804, %rd6, 4577018097722394903;
	add.s64 	%rd805, %rd754, %rd804;
	add.s64 	%rd806, %rd805, %rd774;
	xor.b64  	%rd807, %rd800, %rd806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r882}, %rd807;
	}
	mov.b64 	%rd808, {%r882, %r881};
	add.s64 	%rd809, %rd808, %rd786;
	xor.b64  	%rd810, %rd809, %rd774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r883,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd810;
	}
	shf.r.wrap.b32 	%r885, %r884, %r883, 25;
	shf.r.wrap.b32 	%r886, %r883, %r884, 25;
	mov.b64 	%rd811, {%r886, %r885};
	xor.b64  	%rd812, %rd13, 2611923443488327891;
	add.s64 	%rd813, %rd806, %rd812;
	add.s64 	%rd814, %rd813, %rd811;
	xor.b64  	%rd815, %rd814, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd815;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 16;
	shf.r.wrap.b32 	%r890, %r887, %r888, 16;
	mov.b64 	%rd816, {%r890, %r889};
	add.s64 	%rd817, %rd816, %rd809;
	xor.b64  	%rd818, %rd817, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r891,%dummy}, %rd818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r892}, %rd818;
	}
	shf.r.wrap.b32 	%r893, %r892, %r891, 11;
	shf.r.wrap.b32 	%r894, %r891, %r892, 11;
	mov.b64 	%rd819, {%r894, %r893};
	add.s64 	%rd820, %rd769, %rd341;
	add.s64 	%rd821, %rd820, %rd788;
	xor.b64  	%rd822, %rd821, %rd756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd822;
	}
	mov.b64 	%rd823, {%r896, %r895};
	add.s64 	%rd824, %rd823, %rd801;
	xor.b64  	%rd825, %rd824, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd825;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 25;
	shf.r.wrap.b32 	%r900, %r897, %r898, 25;
	mov.b64 	%rd826, {%r900, %r899};
	add.s64 	%rd827, %rd821, %rd333;
	add.s64 	%rd828, %rd827, %rd826;
	xor.b64  	%rd829, %rd828, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd829;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 16;
	shf.r.wrap.b32 	%r904, %r901, %r902, 16;
	mov.b64 	%rd830, {%r904, %r903};
	add.s64 	%rd831, %rd830, %rd824;
	xor.b64  	%rd832, %rd831, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r905,%dummy}, %rd832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r906}, %rd832;
	}
	shf.r.wrap.b32 	%r907, %r906, %r905, 11;
	shf.r.wrap.b32 	%r908, %r905, %r906, 11;
	mov.b64 	%rd833, {%r908, %r907};
	xor.b64  	%rd834, %rd18, -6626703657320631856;
	add.s64 	%rd835, %rd783, %rd834;
	add.s64 	%rd836, %rd835, %rd803;
	xor.b64  	%rd837, %rd836, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd837;
	}
	mov.b64 	%rd838, {%r910, %r909};
	add.s64 	%rd839, %rd838, %rd757;
	xor.b64  	%rd840, %rd839, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd840;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 25;
	shf.r.wrap.b32 	%r914, %r911, %r912, 25;
	mov.b64 	%rd841, {%r914, %r913};
	xor.b64  	%rd842, %rd8, -3372901835766516308;
	add.s64 	%rd843, %rd836, %rd842;
	add.s64 	%rd844, %rd843, %rd841;
	xor.b64  	%rd845, %rd844, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd845;
	}
	shf.r.wrap.b32 	%r917, %r916, %r915, 16;
	shf.r.wrap.b32 	%r918, %r915, %r916, 16;
	mov.b64 	%rd846, {%r918, %r917};
	add.s64 	%rd847, %rd846, %rd839;
	xor.b64  	%rd848, %rd847, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd848;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 11;
	shf.r.wrap.b32 	%r922, %r919, %r920, 11;
	mov.b64 	%rd849, {%r922, %r921};
	add.s64 	%rd850, %rd759, %rd266;
	add.s64 	%rd851, %rd850, %rd798;
	xor.b64  	%rd852, %rd851, %rd785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd852;
	}
	mov.b64 	%rd853, {%r924, %r923};
	add.s64 	%rd854, %rd853, %rd772;
	xor.b64  	%rd855, %rd854, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd855;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 25;
	shf.r.wrap.b32 	%r928, %r925, %r926, 25;
	mov.b64 	%rd856, {%r928, %r927};
	add.s64 	%rd857, %rd851, %rd856;
	add.s64 	%rd858, %rd857, -7919907764393346277;
	xor.b64  	%rd859, %rd858, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r930}, %rd859;
	}
	shf.r.wrap.b32 	%r931, %r930, %r929, 16;
	shf.r.wrap.b32 	%r932, %r929, %r930, 16;
	mov.b64 	%rd860, {%r932, %r931};
	add.s64 	%rd861, %rd860, %rd854;
	xor.b64  	%rd862, %rd861, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd862;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 11;
	shf.r.wrap.b32 	%r936, %r933, %r934, 11;
	mov.b64 	%rd863, {%r936, %r935};
	add.s64 	%rd864, %rd814, %rd863;
	add.s64 	%rd865, %rd864, -5124621466747896169;
	xor.b64  	%rd866, %rd865, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r937,%dummy}, %rd866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r938}, %rd866;
	}
	mov.b64 	%rd867, {%r938, %r937};
	add.s64 	%rd868, %rd867, %rd847;
	xor.b64  	%rd869, %rd868, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r939,%dummy}, %rd869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd869;
	}
	shf.r.wrap.b32 	%r941, %r940, %r939, 25;
	shf.r.wrap.b32 	%r942, %r939, %r940, 25;
	mov.b64 	%rd870, {%r942, %r941};
	add.s64 	%rd871, %rd865, %rd870;
	add.s64 	%rd872, %rd871, 2639559389850201335;
	xor.b64  	%rd873, %rd872, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd873;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 16;
	shf.r.wrap.b32 	%r946, %r943, %r944, 16;
	mov.b64 	%rd874, {%r946, %r945};
	add.s64 	%rd875, %rd874, %rd868;
	xor.b64  	%rd876, %rd875, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r947,%dummy}, %rd876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd876;
	}
	shf.r.wrap.b32 	%r949, %r948, %r947, 11;
	shf.r.wrap.b32 	%r950, %r947, %r948, 11;
	mov.b64 	%rd877, {%r950, %r949};
	xor.b64  	%rd878, %rd13, 577009281997405206;
	add.s64 	%rd879, %rd819, %rd878;
	add.s64 	%rd880, %rd879, %rd828;
	xor.b64  	%rd881, %rd846, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd881;
	}
	mov.b64 	%rd882, {%r952, %r951};
	add.s64 	%rd883, %rd882, %rd861;
	xor.b64  	%rd884, %rd883, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r953,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r954}, %rd884;
	}
	shf.r.wrap.b32 	%r955, %r954, %r953, 25;
	shf.r.wrap.b32 	%r956, %r953, %r954, 25;
	mov.b64 	%rd885, {%r956, %r955};
	add.s64 	%rd886, %rd880, %rd885;
	add.s64 	%rd887, %rd886, 4577018097722394903;
	xor.b64  	%rd888, %rd887, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd888;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 16;
	shf.r.wrap.b32 	%r960, %r957, %r958, 16;
	mov.b64 	%rd889, {%r960, %r959};
	add.s64 	%rd890, %rd889, %rd883;
	xor.b64  	%rd891, %rd890, %rd885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r962}, %rd891;
	}
	shf.r.wrap.b32 	%r963, %r962, %r961, 11;
	shf.r.wrap.b32 	%r964, %r961, %r962, 11;
	mov.b64 	%rd892, {%r964, %r963};
	add.s64 	%rd893, %rd833, %rd844;
	add.s64 	%rd894, %rd893, 1376283091369227076;
	xor.b64  	%rd895, %rd860, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd895;
	}
	mov.b64 	%rd896, {%r966, %r965};
	add.s64 	%rd897, %rd896, %rd817;
	xor.b64  	%rd898, %rd897, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd898;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 25;
	shf.r.wrap.b32 	%r970, %r967, %r968, 25;
	mov.b64 	%rd899, {%r970, %r969};
	add.s64 	%rd900, %rd894, %rd197;
	add.s64 	%rd901, %rd900, %rd899;
	xor.b64  	%rd902, %rd901, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r972}, %rd902;
	}
	shf.r.wrap.b32 	%r973, %r972, %r971, 16;
	shf.r.wrap.b32 	%r974, %r971, %r972, 16;
	mov.b64 	%rd903, {%r974, %r973};
	add.s64 	%rd904, %rd903, %rd897;
	xor.b64  	%rd905, %rd904, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd905;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 11;
	shf.r.wrap.b32 	%r978, %r975, %r976, 11;
	mov.b64 	%rd906, {%r978, %r977};
	xor.b64  	%rd907, %rd9, -3372901835766516308;
	add.s64 	%rd908, %rd849, %rd907;
	add.s64 	%rd909, %rd908, %rd858;
	xor.b64  	%rd910, %rd909, %rd816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd910;
	}
	mov.b64 	%rd911, {%r980, %r979};
	add.s64 	%rd912, %rd911, %rd831;
	xor.b64  	%rd913, %rd912, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd913;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 25;
	shf.r.wrap.b32 	%r984, %r981, %r982, 25;
	mov.b64 	%rd914, {%r984, %r983};
	xor.b64  	%rd915, %rd18, 589684135938649225;
	add.s64 	%rd916, %rd909, %rd915;
	add.s64 	%rd917, %rd916, %rd914;
	xor.b64  	%rd918, %rd917, %rd911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd918;
	}
	shf.r.wrap.b32 	%r987, %r986, %r985, 16;
	shf.r.wrap.b32 	%r988, %r985, %r986, 16;
	mov.b64 	%rd919, {%r988, %r987};
	add.s64 	%rd920, %rd919, %rd912;
	xor.b64  	%rd921, %rd920, %rd914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r989,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd921;
	}
	shf.r.wrap.b32 	%r991, %r990, %r989, 11;
	shf.r.wrap.b32 	%r992, %r989, %r990, 11;
	mov.b64 	%rd922, {%r992, %r991};
	xor.b64  	%rd923, %rd11, 2611923443488327891;
	add.s64 	%rd924, %rd872, %rd923;
	add.s64 	%rd925, %rd924, %rd892;
	xor.b64  	%rd926, %rd919, %rd925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd926;
	}
	mov.b64 	%rd927, {%r994, %r993};
	add.s64 	%rd928, %rd927, %rd904;
	xor.b64  	%rd929, %rd928, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r995,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r996}, %rd929;
	}
	shf.r.wrap.b32 	%r997, %r996, %r995, 25;
	shf.r.wrap.b32 	%r998, %r995, %r996, 25;
	mov.b64 	%rd930, {%r998, %r997};
	xor.b64  	%rd931, %rd6, -4732044268327596948;
	add.s64 	%rd932, %rd925, %rd931;
	add.s64 	%rd933, %rd932, %rd930;
	xor.b64  	%rd934, %rd933, %rd927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd934;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 16;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 16;
	mov.b64 	%rd935, {%r1002, %r1001};
	add.s64 	%rd936, %rd935, %rd928;
	xor.b64  	%rd937, %rd936, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd937;
	}
	shf.r.wrap.b32 	%r1005, %r1004, %r1003, 11;
	shf.r.wrap.b32 	%r1006, %r1003, %r1004, 11;
	mov.b64 	%rd938, {%r1006, %r1005};
	add.s64 	%rd939, %rd887, %rd906;
	add.s64 	%rd940, %rd939, 4983270260364808695;
	xor.b64  	%rd941, %rd940, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd941;
	}
	mov.b64 	%rd942, {%r1008, %r1007};
	add.s64 	%rd943, %rd942, %rd920;
	xor.b64  	%rd944, %rd943, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd944;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 25;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 25;
	mov.b64 	%rd945, {%r1012, %r1011};
	xor.b64  	%rd946, %rd10, 7163292796296056425;
	add.s64 	%rd947, %rd940, %rd946;
	add.s64 	%rd948, %rd947, %rd945;
	xor.b64  	%rd949, %rd948, %rd942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd949;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 16;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 16;
	mov.b64 	%rd950, {%r1016, %r1015};
	add.s64 	%rd951, %rd950, %rd943;
	xor.b64  	%rd952, %rd951, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1018}, %rd952;
	}
	shf.r.wrap.b32 	%r1019, %r1018, %r1017, 11;
	shf.r.wrap.b32 	%r1020, %r1017, %r1018, 11;
	mov.b64 	%rd953, {%r1020, %r1019};
	add.s64 	%rd954, %rd901, %rd602;
	add.s64 	%rd955, %rd954, %rd922;
	xor.b64  	%rd956, %rd955, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd956;
	}
	mov.b64 	%rd957, {%r1022, %r1021};
	add.s64 	%rd958, %rd957, %rd875;
	xor.b64  	%rd959, %rd958, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd959;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 25;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 25;
	mov.b64 	%rd960, {%r1026, %r1025};
	add.s64 	%rd961, %rd955, %rd594;
	add.s64 	%rd962, %rd961, %rd960;
	xor.b64  	%rd963, %rd962, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd963;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 16;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 16;
	mov.b64 	%rd964, {%r1030, %r1029};
	add.s64 	%rd965, %rd964, %rd958;
	xor.b64  	%rd966, %rd965, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd966;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 11;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 11;
	mov.b64 	%rd967, {%r1034, %r1033};
	xor.b64  	%rd968, %rd8, 3458046377305235383;
	add.s64 	%rd969, %rd877, %rd968;
	add.s64 	%rd970, %rd969, %rd917;
	xor.b64  	%rd971, %rd970, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd971;
	}
	mov.b64 	%rd972, {%r1036, %r1035};
	add.s64 	%rd973, %rd972, %rd890;
	xor.b64  	%rd974, %rd973, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd974;
	}
	shf.r.wrap.b32 	%r1039, %r1038, %r1037, 25;
	shf.r.wrap.b32 	%r1040, %r1037, %r1038, 25;
	mov.b64 	%rd975, {%r1040, %r1039};
	add.s64 	%rd976, %rd970, %rd975;
	add.s64 	%rd977, %rd976, 2596668379534143952;
	xor.b64  	%rd978, %rd977, %rd972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd978;
	}
	shf.r.wrap.b32 	%r1043, %r1042, %r1041, 16;
	shf.r.wrap.b32 	%r1044, %r1041, %r1042, 16;
	mov.b64 	%rd979, {%r1044, %r1043};
	add.s64 	%rd980, %rd979, %rd973;
	xor.b64  	%rd981, %rd980, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd981;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 11;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 11;
	mov.b64 	%rd982, {%r1048, %r1047};
	xor.b64  	%rd983, %rd12, 7163292796296056425;
	add.s64 	%rd984, %rd933, %rd983;
	add.s64 	%rd985, %rd984, %rd982;
	xor.b64  	%rd986, %rd985, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd986;
	}
	mov.b64 	%rd987, {%r1050, %r1049};
	add.s64 	%rd988, %rd987, %rd965;
	xor.b64  	%rd989, %rd988, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd989;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 25;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 25;
	mov.b64 	%rd990, {%r1054, %r1053};
	add.s64 	%rd991, %rd985, %rd990;
	add.s64 	%rd992, %rd991, -4563226453097033123;
	xor.b64  	%rd993, %rd992, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd993;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 16;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 16;
	mov.b64 	%rd994, {%r1058, %r1057};
	add.s64 	%rd995, %rd994, %rd988;
	xor.b64  	%rd996, %rd995, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1059,%dummy}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1060}, %rd996;
	}
	shf.r.wrap.b32 	%r1061, %r1060, %r1059, 11;
	shf.r.wrap.b32 	%r1062, %r1059, %r1060, 11;
	mov.b64 	%rd997, {%r1062, %r1061};
	add.s64 	%rd998, %rd938, %rd948;
	add.s64 	%rd999, %rd998, -3372901835766516308;
	xor.b64  	%rd1000, %rd964, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1000;
	}
	mov.b64 	%rd1001, {%r1064, %r1063};
	add.s64 	%rd1002, %rd1001, %rd980;
	xor.b64  	%rd1003, %rd1002, %rd938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1066}, %rd1003;
	}
	shf.r.wrap.b32 	%r1067, %r1066, %r1065, 25;
	shf.r.wrap.b32 	%r1068, %r1065, %r1066, 25;
	mov.b64 	%rd1004, {%r1068, %r1067};
	xor.b64  	%rd1005, %rd18, 577009281997405206;
	add.s64 	%rd1006, %rd999, %rd1005;
	add.s64 	%rd1007, %rd1006, %rd1004;
	xor.b64  	%rd1008, %rd1007, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd1008;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 16;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 16;
	mov.b64 	%rd1009, {%r1072, %r1071};
	add.s64 	%rd1010, %rd1009, %rd1002;
	xor.b64  	%rd1011, %rd1010, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1073,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd1011;
	}
	shf.r.wrap.b32 	%r1075, %r1074, %r1073, 11;
	shf.r.wrap.b32 	%r1076, %r1073, %r1074, 11;
	mov.b64 	%rd1012, {%r1076, %r1075};
	add.s64 	%rd1013, %rd953, %rd962;
	add.s64 	%rd1014, %rd1013, 589684135938649225;
	xor.b64  	%rd1015, %rd979, %rd1014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd1015;
	}
	mov.b64 	%rd1016, {%r1078, %r1077};
	add.s64 	%rd1017, %rd1016, %rd936;
	xor.b64  	%rd1018, %rd1017, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1018;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 25;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 25;
	mov.b64 	%rd1019, {%r1082, %r1081};
	xor.b64  	%rd1020, %rd9, -5124621466747896170;
	add.s64 	%rd1021, %rd1014, %rd1020;
	add.s64 	%rd1022, %rd1021, %rd1019;
	xor.b64  	%rd1023, %rd1022, %rd1016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1083,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd1023;
	}
	shf.r.wrap.b32 	%r1085, %r1084, %r1083, 16;
	shf.r.wrap.b32 	%r1086, %r1083, %r1084, 16;
	mov.b64 	%rd1024, {%r1086, %r1085};
	add.s64 	%rd1025, %rd1024, %rd1017;
	xor.b64  	%rd1026, %rd1025, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1026;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 11;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 11;
	mov.b64 	%rd1027, {%r1090, %r1089};
	xor.b64  	%rd1028, %rd6, -7919907764393346277;
	add.s64 	%rd1029, %rd967, %rd1028;
	add.s64 	%rd1030, %rd1029, %rd977;
	xor.b64  	%rd1031, %rd1030, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1091,%dummy}, %rd1031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd1031;
	}
	mov.b64 	%rd1032, {%r1092, %r1091};
	add.s64 	%rd1033, %rd1032, %rd951;
	xor.b64  	%rd1034, %rd1033, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd1034;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 25;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 25;
	mov.b64 	%rd1035, {%r1096, %r1095};
	xor.b64  	%rd1036, %rd14, 2611923443488327891;
	add.s64 	%rd1037, %rd1030, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1035;
	xor.b64  	%rd1039, %rd1038, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1097,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd1039;
	}
	shf.r.wrap.b32 	%r1099, %r1098, %r1097, 16;
	shf.r.wrap.b32 	%r1100, %r1097, %r1098, 16;
	mov.b64 	%rd1040, {%r1100, %r1099};
	add.s64 	%rd1041, %rd1040, %rd1033;
	xor.b64  	%rd1042, %rd1041, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd1042;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 11;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 11;
	mov.b64 	%rd1043, {%r1104, %r1103};
	add.s64 	%rd1044, %rd992, %rd1012;
	add.s64 	%rd1045, %rd1044, -6626703657320631856;
	xor.b64  	%rd1046, %rd1040, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd1046;
	}
	mov.b64 	%rd1047, {%r1106, %r1105};
	add.s64 	%rd1048, %rd1047, %rd1025;
	xor.b64  	%rd1049, %rd1048, %rd1012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd1049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd1049;
	}
	shf.r.wrap.b32 	%r1109, %r1108, %r1107, 25;
	shf.r.wrap.b32 	%r1110, %r1107, %r1108, 25;
	mov.b64 	%rd1050, {%r1110, %r1109};
	add.s64 	%rd1051, %rd1045, %rd625;
	add.s64 	%rd1052, %rd1051, %rd1050;
	xor.b64  	%rd1053, %rd1052, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd1053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd1053;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 16;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 16;
	mov.b64 	%rd1054, {%r1114, %r1113};
	add.s64 	%rd1055, %rd1054, %rd1048;
	xor.b64  	%rd1056, %rd1055, %rd1050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1056;
	}
	shf.r.wrap.b32 	%r1117, %r1116, %r1115, 11;
	shf.r.wrap.b32 	%r1118, %r1115, %r1116, 11;
	mov.b64 	%rd1057, {%r1118, %r1117};
	add.s64 	%rd1058, %rd1007, %rd1027;
	add.s64 	%rd1059, %rd1058, 4577018097722394902;
	xor.b64  	%rd1060, %rd1059, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd1060;
	}
	mov.b64 	%rd1061, {%r1120, %r1119};
	add.s64 	%rd1062, %rd1061, %rd1041;
	xor.b64  	%rd1063, %rd1062, %rd1027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd1063;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 25;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 25;
	mov.b64 	%rd1064, {%r1124, %r1123};
	xor.b64  	%rd1065, %rd13, 2639559389850201335;
	add.s64 	%rd1066, %rd1059, %rd1065;
	add.s64 	%rd1067, %rd1066, %rd1064;
	xor.b64  	%rd1068, %rd1067, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1068;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 16;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 16;
	mov.b64 	%rd1069, {%r1128, %r1127};
	add.s64 	%rd1070, %rd1069, %rd1062;
	xor.b64  	%rd1071, %rd1070, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1071;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 11;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 11;
	mov.b64 	%rd1072, {%r1132, %r1131};
	xor.b64  	%rd1073, %rd7, 4983270260364809079;
	add.s64 	%rd1074, %rd1022, %rd1073;
	add.s64 	%rd1075, %rd1074, %rd1043;
	xor.b64  	%rd1076, %rd1075, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1076;
	}
	mov.b64 	%rd1077, {%r1134, %r1133};
	add.s64 	%rd1078, %rd1077, %rd995;
	xor.b64  	%rd1079, %rd1078, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1135,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1136}, %rd1079;
	}
	shf.r.wrap.b32 	%r1137, %r1136, %r1135, 25;
	shf.r.wrap.b32 	%r1138, %r1135, %r1136, 25;
	mov.b64 	%rd1080, {%r1138, %r1137};
	xor.b64  	%rd1081, %rd10, 1376283091369227076;
	add.s64 	%rd1082, %rd1075, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1080;
	xor.b64  	%rd1084, %rd1083, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1084;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 16;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 16;
	mov.b64 	%rd1085, {%r1142, %r1141};
	add.s64 	%rd1086, %rd1085, %rd1078;
	xor.b64  	%rd1087, %rd1086, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd1087;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 11;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 11;
	mov.b64 	%rd1088, {%r1146, %r1145};
	add.s64 	%rd1089, %rd997, %rd1038;
	add.s64 	%rd1090, %rd1089, 4491327768527178860;
	xor.b64  	%rd1091, %rd1090, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1147,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1091;
	}
	mov.b64 	%rd1092, {%r1148, %r1147};
	add.s64 	%rd1093, %rd1092, %rd1010;
	xor.b64  	%rd1094, %rd1093, %rd997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1094;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 25;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 25;
	mov.b64 	%rd1095, {%r1152, %r1151};
	add.s64 	%rd1096, %rd1090, %rd457;
	add.s64 	%rd1097, %rd1096, %rd1095;
	xor.b64  	%rd1098, %rd1097, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1098;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd1098;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 16;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 16;
	mov.b64 	%rd1099, {%r1156, %r1155};
	add.s64 	%rd1100, %rd1099, %rd1093;
	xor.b64  	%rd1101, %rd1100, %rd1095;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1101;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 11;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 11;
	mov.b64 	%rd1102, {%r1160, %r1159};
	add.s64 	%rd1103, %rd1052, %rd1102;
	add.s64 	%rd1104, %rd1103, 2596668379534143952;
	xor.b64  	%rd1105, %rd1104, %rd1069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1161,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1162}, %rd1105;
	}
	mov.b64 	%rd1106, {%r1162, %r1161};
	add.s64 	%rd1107, %rd1106, %rd1086;
	xor.b64  	%rd1108, %rd1107, %rd1102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1108;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 25;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 25;
	mov.b64 	%rd1109, {%r1166, %r1165};
	add.s64 	%rd1110, %rd1104, %rd968;
	add.s64 	%rd1111, %rd1110, %rd1109;
	xor.b64  	%rd1112, %rd1111, %rd1106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1167,%dummy}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd1112;
	}
	shf.r.wrap.b32 	%r1169, %r1168, %r1167, 16;
	shf.r.wrap.b32 	%r1170, %r1167, %r1168, 16;
	mov.b64 	%rd1113, {%r1170, %r1169};
	add.s64 	%rd1114, %rd1113, %rd1107;
	xor.b64  	%rd1115, %rd1114, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd1115;
	}
	shf.r.wrap.b32 	%r1173, %r1172, %r1171, 11;
	shf.r.wrap.b32 	%r1174, %r1171, %r1172, 11;
	mov.b64 	%rd1116, {%r1174, %r1173};
	add.s64 	%rd1117, %rd1057, %rd159;
	add.s64 	%rd1118, %rd1117, %rd1067;
	xor.b64  	%rd1119, %rd1085, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1175,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd1119;
	}
	mov.b64 	%rd1120, {%r1176, %r1175};
	add.s64 	%rd1121, %rd1120, %rd1100;
	xor.b64  	%rd1122, %rd1121, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1177,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1178}, %rd1122;
	}
	shf.r.wrap.b32 	%r1179, %r1178, %r1177, 25;
	shf.r.wrap.b32 	%r1180, %r1177, %r1178, 25;
	mov.b64 	%rd1123, {%r1180, %r1179};
	add.s64 	%rd1124, %rd1118, %rd151;
	add.s64 	%rd1125, %rd1124, %rd1123;
	xor.b64  	%rd1126, %rd1125, %rd1120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1126;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 16;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 16;
	mov.b64 	%rd1127, {%r1184, %r1183};
	add.s64 	%rd1128, %rd1127, %rd1121;
	xor.b64  	%rd1129, %rd1128, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd1129;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 11;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 11;
	mov.b64 	%rd1130, {%r1188, %r1187};
	add.s64 	%rd1131, %rd1072, %rd71;
	add.s64 	%rd1132, %rd1131, %rd1083;
	xor.b64  	%rd1133, %rd1099, %rd1132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1133;
	}
	mov.b64 	%rd1134, {%r1190, %r1189};
	add.s64 	%rd1135, %rd1134, %rd1055;
	xor.b64  	%rd1136, %rd1135, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1136;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 25;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 25;
	mov.b64 	%rd1137, {%r1194, %r1193};
	add.s64 	%rd1138, %rd1132, %rd64;
	add.s64 	%rd1139, %rd1138, %rd1137;
	xor.b64  	%rd1140, %rd1139, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1195,%dummy}, %rd1140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1196}, %rd1140;
	}
	shf.r.wrap.b32 	%r1197, %r1196, %r1195, 16;
	shf.r.wrap.b32 	%r1198, %r1195, %r1196, 16;
	mov.b64 	%rd1141, {%r1198, %r1197};
	add.s64 	%rd1142, %rd1141, %rd1135;
	xor.b64  	%rd1143, %rd1142, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1143;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 11;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 11;
	mov.b64 	%rd1144, {%r1202, %r1201};
	xor.b64  	%rd1145, %rd7, -4732044268327596948;
	add.s64 	%rd1146, %rd1088, %rd1145;
	add.s64 	%rd1147, %rd1146, %rd1097;
	xor.b64  	%rd1148, %rd1147, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd1148;
	}
	mov.b64 	%rd1149, {%r1204, %r1203};
	add.s64 	%rd1150, %rd1149, %rd1070;
	xor.b64  	%rd1151, %rd1150, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1151;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 25;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 25;
	mov.b64 	%rd1152, {%r1208, %r1207};
	xor.b64  	%rd1153, %rd11, 1376283091369227076;
	add.s64 	%rd1154, %rd1147, %rd1153;
	add.s64 	%rd1155, %rd1154, %rd1152;
	xor.b64  	%rd1156, %rd1155, %rd1149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd1156;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 16;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 16;
	mov.b64 	%rd1157, {%r1212, %r1211};
	add.s64 	%rd1158, %rd1157, %rd1150;
	xor.b64  	%rd1159, %rd1158, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1159;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 11;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 11;
	mov.b64 	%rd1160, {%r1216, %r1215};
	add.s64 	%rd1161, %rd1111, %rd1130;
	add.s64 	%rd1162, %rd1161, -5124621466747896810;
	xor.b64  	%rd1163, %rd1157, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd1163;
	}
	mov.b64 	%rd1164, {%r1218, %r1217};
	add.s64 	%rd1165, %rd1164, %rd1142;
	xor.b64  	%rd1166, %rd1165, %rd1130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1219,%dummy}, %rd1166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1220}, %rd1166;
	}
	shf.r.wrap.b32 	%r1221, %r1220, %r1219, 25;
	shf.r.wrap.b32 	%r1222, %r1219, %r1220, 25;
	mov.b64 	%rd1167, {%r1222, %r1221};
	add.s64 	%rd1168, %rd1162, %rd1167;
	add.s64 	%rd1169, %rd1168, 7163292796296056425;
	xor.b64  	%rd1170, %rd1169, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1170;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 16;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 16;
	mov.b64 	%rd1171, {%r1226, %r1225};
	add.s64 	%rd1172, %rd1171, %rd1165;
	xor.b64  	%rd1173, %rd1172, %rd1167;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1227,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1228}, %rd1173;
	}
	shf.r.wrap.b32 	%r1229, %r1228, %r1227, 11;
	shf.r.wrap.b32 	%r1230, %r1227, %r1228, 11;
	mov.b64 	%rd1174, {%r1230, %r1229};
	add.s64 	%rd1175, %rd1125, %rd1005;
	add.s64 	%rd1176, %rd1175, %rd1144;
	xor.b64  	%rd1177, %rd1176, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1231,%dummy}, %rd1177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1177;
	}
	mov.b64 	%rd1178, {%r1232, %r1231};
	add.s64 	%rd1179, %rd1178, %rd1158;
	xor.b64  	%rd1180, %rd1179, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1180;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 25;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 25;
	mov.b64 	%rd1181, {%r1236, %r1235};
	add.s64 	%rd1182, %rd1176, %rd1181;
	add.s64 	%rd1183, %rd1182, -3372901835766516308;
	xor.b64  	%rd1184, %rd1183, %rd1178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1184;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 16;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 16;
	mov.b64 	%rd1185, {%r1240, %r1239};
	add.s64 	%rd1186, %rd1185, %rd1179;
	xor.b64  	%rd1187, %rd1186, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd1187;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 11;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 11;
	mov.b64 	%rd1188, {%r1244, %r1243};
	xor.b64  	%rd1189, %rd9, -5008970055469465703;
	add.s64 	%rd1190, %rd1139, %rd1189;
	add.s64 	%rd1191, %rd1190, %rd1160;
	xor.b64  	%rd1192, %rd1191, %rd1127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1192;
	}
	mov.b64 	%rd1193, {%r1246, %r1245};
	add.s64 	%rd1194, %rd1193, %rd1114;
	xor.b64  	%rd1195, %rd1194, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd1195;
	}
	shf.r.wrap.b32 	%r1249, %r1248, %r1247, 25;
	shf.r.wrap.b32 	%r1250, %r1247, %r1248, 25;
	mov.b64 	%rd1196, {%r1250, %r1249};
	add.s64 	%rd1197, %rd1191, %rd1196;
	add.s64 	%rd1198, %rd1197, 589684135938649225;
	xor.b64  	%rd1199, %rd1198, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1251,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1252}, %rd1199;
	}
	shf.r.wrap.b32 	%r1253, %r1252, %r1251, 16;
	shf.r.wrap.b32 	%r1254, %r1251, %r1252, 16;
	mov.b64 	%rd1200, {%r1254, %r1253};
	add.s64 	%rd1201, %rd1200, %rd1194;
	xor.b64  	%rd1202, %rd1201, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1255,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1202;
	}
	shf.r.wrap.b32 	%r1257, %r1256, %r1255, 11;
	shf.r.wrap.b32 	%r1258, %r1255, %r1256, 11;
	mov.b64 	%rd1203, {%r1258, %r1257};
	add.s64 	%rd1204, %rd1116, %rd1155;
	add.s64 	%rd1205, %rd1204, 2611923443488327890;
	xor.b64  	%rd1206, %rd1205, %rd1141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd1206;
	}
	mov.b64 	%rd1207, {%r1260, %r1259};
	add.s64 	%rd1208, %rd1207, %rd1128;
	xor.b64  	%rd1209, %rd1208, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1209;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 25;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 25;
	mov.b64 	%rd1210, {%r1264, %r1263};
	xor.b64  	%rd1211, %rd6, 2639559389850201335;
	add.s64 	%rd1212, %rd1205, %rd1211;
	add.s64 	%rd1213, %rd1212, %rd1210;
	xor.b64  	%rd1214, %rd1213, %rd1207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd1214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd1214;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 16;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 16;
	mov.b64 	%rd1215, {%r1268, %r1267};
	add.s64 	%rd1216, %rd1215, %rd1208;
	xor.b64  	%rd1217, %rd1216, %rd1210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1217;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 11;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 11;
	mov.b64 	%rd1218, {%r1272, %r1271};
	add.s64 	%rd1219, %rd1169, %rd19;
	add.s64 	%rd1220, %rd1219, %rd1218;
	xor.b64  	%rd1221, %rd1220, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1274}, %rd1221;
	}
	mov.b64 	%rd1222, {%r1274, %r1273};
	add.s64 	%rd1223, %rd1222, %rd1201;
	xor.b64  	%rd1224, %rd1223, %rd1218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1275,%dummy}, %rd1224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd1224;
	}
	shf.r.wrap.b32 	%r1277, %r1276, %r1275, 25;
	shf.r.wrap.b32 	%r1278, %r1275, %r1276, 25;
	mov.b64 	%rd1225, {%r1278, %r1277};
	add.s64 	%rd1226, %rd1220, %rd26;
	add.s64 	%rd1227, %rd1226, %rd1225;
	xor.b64  	%rd1228, %rd1227, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1228;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 16;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 16;
	mov.b64 	%rd1229, {%r1282, %r1281};
	add.s64 	%rd1230, %rd1229, %rd1223;
	xor.b64  	%rd1231, %rd1230, %rd1225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1284}, %rd1231;
	}
	shf.r.wrap.b32 	%r1285, %r1284, %r1283, 11;
	shf.r.wrap.b32 	%r1286, %r1283, %r1284, 11;
	mov.b64 	%rd1232, {%r1286, %r1285};
	add.s64 	%rd1233, %rd1174, %rd34;
	add.s64 	%rd1234, %rd1233, %rd1183;
	xor.b64  	%rd1235, %rd1200, %rd1234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1235;
	}
	mov.b64 	%rd1236, {%r1288, %r1287};
	add.s64 	%rd1237, %rd1236, %rd1216;
	xor.b64  	%rd1238, %rd1237, %rd1174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd1238;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 25;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 25;
	mov.b64 	%rd1239, {%r1292, %r1291};
	add.s64 	%rd1240, %rd1234, %rd41;
	add.s64 	%rd1241, %rd1240, %rd1239;
	xor.b64  	%rd1242, %rd1241, %rd1236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1242;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 16;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 16;
	mov.b64 	%rd1243, {%r1296, %r1295};
	add.s64 	%rd1244, %rd1243, %rd1237;
	xor.b64  	%rd1245, %rd1244, %rd1239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd1245;
	}
	shf.r.wrap.b32 	%r1299, %r1298, %r1297, 11;
	shf.r.wrap.b32 	%r1300, %r1297, %r1298, 11;
	mov.b64 	%rd1246, {%r1300, %r1299};
	add.s64 	%rd1247, %rd1188, %rd49;
	add.s64 	%rd1248, %rd1247, %rd1198;
	xor.b64  	%rd1249, %rd1215, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1249;
	}
	mov.b64 	%rd1250, {%r1302, %r1301};
	add.s64 	%rd1251, %rd1250, %rd1172;
	xor.b64  	%rd1252, %rd1251, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1252;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 25;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 25;
	mov.b64 	%rd1253, {%r1306, %r1305};
	add.s64 	%rd1254, %rd1248, %rd56;
	add.s64 	%rd1255, %rd1254, %rd1253;
	xor.b64  	%rd1256, %rd1255, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1307,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1308}, %rd1256;
	}
	shf.r.wrap.b32 	%r1309, %r1308, %r1307, 16;
	shf.r.wrap.b32 	%r1310, %r1307, %r1308, 16;
	mov.b64 	%rd1257, {%r1310, %r1309};
	add.s64 	%rd1258, %rd1257, %rd1251;
	xor.b64  	%rd1259, %rd1258, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1259;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 11;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 11;
	mov.b64 	%rd1260, {%r1314, %r1313};
	add.s64 	%rd1261, %rd1203, %rd64;
	add.s64 	%rd1262, %rd1261, %rd1213;
	xor.b64  	%rd1263, %rd1262, %rd1171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1315,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1316}, %rd1263;
	}
	mov.b64 	%rd1264, {%r1316, %r1315};
	add.s64 	%rd1265, %rd1264, %rd1186;
	xor.b64  	%rd1266, %rd1265, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd1266;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 25;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 25;
	mov.b64 	%rd1267, {%r1320, %r1319};
	add.s64 	%rd1268, %rd1262, %rd71;
	add.s64 	%rd1269, %rd1268, %rd1267;
	xor.b64  	%rd1270, %rd1269, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd1270;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 16;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 16;
	mov.b64 	%rd1271, {%r1324, %r1323};
	add.s64 	%rd1272, %rd1271, %rd1265;
	xor.b64  	%rd1273, %rd1272, %rd1267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1273;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 11;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 11;
	mov.b64 	%rd1274, {%r1328, %r1327};
	add.s64 	%rd1275, %rd1227, %rd79;
	add.s64 	%rd1276, %rd1275, %rd1246;
	xor.b64  	%rd1277, %rd1271, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd1277;
	}
	mov.b64 	%rd1278, {%r1330, %r1329};
	add.s64 	%rd1279, %rd1278, %rd1258;
	xor.b64  	%rd1280, %rd1279, %rd1246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1331,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1332}, %rd1280;
	}
	shf.r.wrap.b32 	%r1333, %r1332, %r1331, 25;
	shf.r.wrap.b32 	%r1334, %r1331, %r1332, 25;
	mov.b64 	%rd1281, {%r1334, %r1333};
	add.s64 	%rd1282, %rd1276, %rd87;
	add.s64 	%rd1283, %rd1282, %rd1281;
	xor.b64  	%rd1284, %rd1283, %rd1278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1284;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 16;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 16;
	mov.b64 	%rd1285, {%r1338, %r1337};
	add.s64 	%rd1286, %rd1285, %rd1279;
	xor.b64  	%rd1287, %rd1286, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1339,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1340}, %rd1287;
	}
	shf.r.wrap.b32 	%r1341, %r1340, %r1339, 11;
	shf.r.wrap.b32 	%r1342, %r1339, %r1340, 11;
	mov.b64 	%rd1288, {%r1342, %r1341};
	add.s64 	%rd1289, %rd1241, %rd1260;
	add.s64 	%rd1290, %rd1289, 4098750570106879638;
	xor.b64  	%rd1291, %rd1290, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1291;
	}
	mov.b64 	%rd1292, {%r1344, %r1343};
	add.s64 	%rd1293, %rd1292, %rd1272;
	xor.b64  	%rd1294, %rd1293, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd1294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd1294;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 25;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 25;
	mov.b64 	%rd1295, {%r1348, %r1347};
	add.s64 	%rd1296, %rd1290, %rd1295;
	add.s64 	%rd1297, %rd1296, 3458046377305235383;
	xor.b64  	%rd1298, %rd1297, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1298;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 16;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 16;
	mov.b64 	%rd1299, {%r1352, %r1351};
	add.s64 	%rd1300, %rd1299, %rd1293;
	xor.b64  	%rd1301, %rd1300, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd1301;
	}
	shf.r.wrap.b32 	%r1355, %r1354, %r1353, 11;
	shf.r.wrap.b32 	%r1356, %r1353, %r1354, 11;
	mov.b64 	%rd1302, {%r1356, %r1355};
	add.s64 	%rd1303, %rd1255, %rd1274;
	add.s64 	%rd1304, %rd1303, 2639559389850201335;
	xor.b64  	%rd1305, %rd1304, %rd1243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd1305;
	}
	mov.b64 	%rd1306, {%r1358, %r1357};
	add.s64 	%rd1307, %rd1306, %rd1230;
	xor.b64  	%rd1308, %rd1307, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1308;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 25;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 25;
	mov.b64 	%rd1309, {%r1362, %r1361};
	add.s64 	%rd1310, %rd1304, %rd1309;
	add.s64 	%rd1311, %rd1310, -5008970055469465704;
	xor.b64  	%rd1312, %rd1311, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd1312;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 16;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 16;
	mov.b64 	%rd1313, {%r1366, %r1365};
	add.s64 	%rd1314, %rd1313, %rd1307;
	xor.b64  	%rd1315, %rd1314, %rd1309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd1315;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 11;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 11;
	mov.b64 	%rd1316, {%r1370, %r1369};
	add.s64 	%rd1317, %rd1232, %rd1269;
	add.s64 	%rd1318, %rd1317, 7163292796296056425;
	xor.b64  	%rd1319, %rd1318, %rd1257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1371,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1372}, %rd1319;
	}
	mov.b64 	%rd1320, {%r1372, %r1371};
	add.s64 	%rd1321, %rd1320, %rd1244;
	xor.b64  	%rd1322, %rd1321, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1322;
	}
	shf.r.wrap.b32 	%r1375, %r1374, %r1373, 25;
	shf.r.wrap.b32 	%r1376, %r1373, %r1374, 25;
	mov.b64 	%rd1323, {%r1376, %r1375};
	add.s64 	%rd1324, %rd1318, %rd1323;
	add.s64 	%rd1325, %rd1324, 577009281997405846;
	xor.b64  	%rd1326, %rd1325, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd1326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd1326;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 16;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 16;
	mov.b64 	%rd1327, {%r1380, %r1379};
	add.s64 	%rd1328, %rd1327, %rd1321;
	xor.b64  	%rd1329, %rd1328, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd1329;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 11;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 11;
	mov.b64 	%rd1330, {%r1384, %r1383};
	add.s64 	%rd1331, %rd1283, %rd1330;
	add.s64 	%rd1332, %rd1331, 3458046377305235383;
	xor.b64  	%rd1333, %rd1332, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1385,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1386}, %rd1333;
	}
	mov.b64 	%rd1334, {%r1386, %r1385};
	add.s64 	%rd1335, %rd1334, %rd1314;
	xor.b64  	%rd1336, %rd1335, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1387,%dummy}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1388}, %rd1336;
	}
	shf.r.wrap.b32 	%r1389, %r1388, %r1387, 25;
	shf.r.wrap.b32 	%r1390, %r1387, %r1388, 25;
	mov.b64 	%rd1337, {%r1390, %r1389};
	add.s64 	%rd1338, %rd1332, %rd1337;
	add.s64 	%rd1339, %rd1338, -8646362754857370602;
	xor.b64  	%rd1340, %rd1339, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1340;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 16;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 16;
	mov.b64 	%rd1341, {%r1394, %r1393};
	add.s64 	%rd1342, %rd1341, %rd1335;
	xor.b64  	%rd1343, %rd1342, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1395,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1396}, %rd1343;
	}
	shf.r.wrap.b32 	%r1397, %r1396, %r1395, 11;
	shf.r.wrap.b32 	%r1398, %r1395, %r1396, 11;
	mov.b64 	%rd1344, {%r1398, %r1397};
	add.s64 	%rd1345, %rd1288, %rd151;
	add.s64 	%rd1346, %rd1345, %rd1297;
	xor.b64  	%rd1347, %rd1313, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd1347;
	}
	mov.b64 	%rd1348, {%r1400, %r1399};
	add.s64 	%rd1349, %rd1348, %rd1328;
	xor.b64  	%rd1350, %rd1349, %rd1288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd1350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd1350;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 25;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 25;
	mov.b64 	%rd1351, {%r1404, %r1403};
	add.s64 	%rd1352, %rd1346, %rd159;
	add.s64 	%rd1353, %rd1352, %rd1351;
	xor.b64  	%rd1354, %rd1353, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd1354;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 16;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 16;
	mov.b64 	%rd1355, {%r1408, %r1407};
	add.s64 	%rd1356, %rd1355, %rd1349;
	xor.b64  	%rd1357, %rd1356, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1409,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1410}, %rd1357;
	}
	shf.r.wrap.b32 	%r1411, %r1410, %r1409, 11;
	shf.r.wrap.b32 	%r1412, %r1409, %r1410, 11;
	mov.b64 	%rd1358, {%r1412, %r1411};
	add.s64 	%rd1359, %rd1302, %rd167;
	add.s64 	%rd1360, %rd1359, %rd1311;
	xor.b64  	%rd1361, %rd1327, %rd1360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd1361;
	}
	mov.b64 	%rd1362, {%r1414, %r1413};
	add.s64 	%rd1363, %rd1362, %rd1286;
	xor.b64  	%rd1364, %rd1363, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd1364;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 25;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 25;
	mov.b64 	%rd1365, {%r1418, %r1417};
	add.s64 	%rd1366, %rd1360, %rd1365;
	add.s64 	%rd1367, %rd1366, -3372901835766515924;
	xor.b64  	%rd1368, %rd1367, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1419,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1420}, %rd1368;
	}
	shf.r.wrap.b32 	%r1421, %r1420, %r1419, 16;
	shf.r.wrap.b32 	%r1422, %r1419, %r1420, 16;
	mov.b64 	%rd1369, {%r1422, %r1421};
	add.s64 	%rd1370, %rd1369, %rd1363;
	xor.b64  	%rd1371, %rd1370, %rd1365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd1371;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 11;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 11;
	mov.b64 	%rd1372, {%r1426, %r1425};
	add.s64 	%rd1373, %rd1316, %rd1325;
	add.s64 	%rd1374, %rd1373, -4563226453097033508;
	xor.b64  	%rd1375, %rd1374, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1427,%dummy}, %rd1375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1428}, %rd1375;
	}
	mov.b64 	%rd1376, {%r1428, %r1427};
	add.s64 	%rd1377, %rd1376, %rd1300;
	xor.b64  	%rd1378, %rd1377, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd1378;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 25;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 25;
	mov.b64 	%rd1379, {%r1432, %r1431};
	add.s64 	%rd1380, %rd1374, %rd189;
	add.s64 	%rd1381, %rd1380, %rd1379;
	xor.b64  	%rd1382, %rd1381, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd1382;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 16;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 16;
	mov.b64 	%rd1383, {%r1436, %r1435};
	add.s64 	%rd1384, %rd1383, %rd1377;
	xor.b64  	%rd1385, %rd1384, %rd1379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1437,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1438}, %rd1385;
	}
	shf.r.wrap.b32 	%r1439, %r1438, %r1437, 11;
	shf.r.wrap.b32 	%r1440, %r1437, %r1438, 11;
	mov.b64 	%rd1386, {%r1440, %r1439};
	add.s64 	%rd1387, %rd1339, %rd197;
	add.s64 	%rd1388, %rd1387, %rd1358;
	xor.b64  	%rd1389, %rd1383, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd1389;
	}
	mov.b64 	%rd1390, {%r1442, %r1441};
	add.s64 	%rd1391, %rd1390, %rd1370;
	xor.b64  	%rd1392, %rd1391, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1443,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1444}, %rd1392;
	}
	shf.r.wrap.b32 	%r1445, %r1444, %r1443, 25;
	shf.r.wrap.b32 	%r1446, %r1443, %r1444, 25;
	mov.b64 	%rd1393, {%r1446, %r1445};
	add.s64 	%rd1394, %rd1388, %rd1393;
	add.s64 	%rd1395, %rd1394, 1376283091369227076;
	xor.b64  	%rd1396, %rd1395, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd1396;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 16;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 16;
	mov.b64 	%rd1397, {%r1450, %r1449};
	add.s64 	%rd1398, %rd1397, %rd1391;
	xor.b64  	%rd1399, %rd1398, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1451,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1452}, %rd1399;
	}
	shf.r.wrap.b32 	%r1453, %r1452, %r1451, 11;
	shf.r.wrap.b32 	%r1454, %r1451, %r1452, 11;
	mov.b64 	%rd1400, {%r1454, %r1453};
	add.s64 	%rd1401, %rd1353, %rd212;
	add.s64 	%rd1402, %rd1401, %rd1372;
	xor.b64  	%rd1403, %rd1402, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd1403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd1403;
	}
	mov.b64 	%rd1404, {%r1456, %r1455};
	add.s64 	%rd1405, %rd1404, %rd1384;
	xor.b64  	%rd1406, %rd1405, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd1406;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 25;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 25;
	mov.b64 	%rd1407, {%r1460, %r1459};
	add.s64 	%rd1408, %rd1402, %rd220;
	add.s64 	%rd1409, %rd1408, %rd1407;
	xor.b64  	%rd1410, %rd1409, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd1410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd1410;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 16;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 16;
	mov.b64 	%rd1411, {%r1464, %r1463};
	add.s64 	%rd1412, %rd1411, %rd1405;
	xor.b64  	%rd1413, %rd1412, %rd1407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd1413;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 11;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 11;
	mov.b64 	%rd1414, {%r1468, %r1467};
	add.s64 	%rd1415, %rd1367, %rd1386;
	add.s64 	%rd1416, %rd1415, 4577018097722394903;
	xor.b64  	%rd1417, %rd1416, %rd1355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd1417;
	}
	mov.b64 	%rd1418, {%r1470, %r1469};
	add.s64 	%rd1419, %rd1418, %rd1342;
	xor.b64  	%rd1420, %rd1419, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd1420;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 25;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 25;
	mov.b64 	%rd1421, {%r1474, %r1473};
	add.s64 	%rd1422, %rd1416, %rd235;
	add.s64 	%rd1423, %rd1422, %rd1421;
	xor.b64  	%rd1424, %rd1423, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1475,%dummy}, %rd1424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1476}, %rd1424;
	}
	shf.r.wrap.b32 	%r1477, %r1476, %r1475, 16;
	shf.r.wrap.b32 	%r1478, %r1475, %r1476, 16;
	mov.b64 	%rd1425, {%r1478, %r1477};
	add.s64 	%rd1426, %rd1425, %rd1419;
	xor.b64  	%rd1427, %rd1426, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd1427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd1427;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 11;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 11;
	mov.b64 	%rd1428, {%r1482, %r1481};
	add.s64 	%rd1429, %rd1344, %rd243;
	add.s64 	%rd1430, %rd1429, %rd1381;
	xor.b64  	%rd1431, %rd1430, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd1431;
	}
	mov.b64 	%rd1432, {%r1484, %r1483};
	add.s64 	%rd1433, %rd1432, %rd1356;
	xor.b64  	%rd1434, %rd1433, %rd1344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd1434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd1434;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 25;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 25;
	mov.b64 	%rd1435, {%r1488, %r1487};
	add.s64 	%rd1436, %rd1430, %rd251;
	add.s64 	%rd1437, %rd1436, %rd1435;
	xor.b64  	%rd1438, %rd1437, %rd1432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd1438;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 16;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 16;
	mov.b64 	%rd1439, {%r1492, %r1491};
	add.s64 	%rd1440, %rd1439, %rd1433;
	xor.b64  	%rd1441, %rd1440, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd1441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd1441;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 11;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 11;
	mov.b64 	%rd1442, {%r1496, %r1495};
	add.s64 	%rd1443, %rd1395, %rd1442;
	add.s64 	%rd1444, %rd1443, -7919907764393346277;
	xor.b64  	%rd1445, %rd1444, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1497,%dummy}, %rd1445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1498}, %rd1445;
	}
	mov.b64 	%rd1446, {%r1498, %r1497};
	add.s64 	%rd1447, %rd1446, %rd1426;
	xor.b64  	%rd1448, %rd1447, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1499,%dummy}, %rd1448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1500}, %rd1448;
	}
	shf.r.wrap.b32 	%r1501, %r1500, %r1499, 25;
	shf.r.wrap.b32 	%r1502, %r1499, %r1500, 25;
	mov.b64 	%rd1449, {%r1502, %r1501};
	add.s64 	%rd1450, %rd1444, %rd266;
	add.s64 	%rd1451, %rd1450, %rd1449;
	xor.b64  	%rd1452, %rd1451, %rd1446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd1452;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 16;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 16;
	mov.b64 	%rd1453, {%r1506, %r1505};
	add.s64 	%rd1454, %rd1453, %rd1447;
	xor.b64  	%rd1455, %rd1454, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1507,%dummy}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1508}, %rd1455;
	}
	shf.r.wrap.b32 	%r1509, %r1508, %r1507, 11;
	shf.r.wrap.b32 	%r1510, %r1507, %r1508, 11;
	mov.b64 	%rd1456, {%r1510, %r1509};
	add.s64 	%rd1457, %rd1400, %rd1409;
	add.s64 	%rd1458, %rd1457, 2611923443488327891;
	xor.b64  	%rd1459, %rd1425, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1459;
	}
	mov.b64 	%rd1460, {%r1512, %r1511};
	add.s64 	%rd1461, %rd1460, %rd1440;
	xor.b64  	%rd1462, %rd1461, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1513,%dummy}, %rd1462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1514}, %rd1462;
	}
	shf.r.wrap.b32 	%r1515, %r1514, %r1513, 25;
	shf.r.wrap.b32 	%r1516, %r1513, %r1514, 25;
	mov.b64 	%rd1463, {%r1516, %r1515};
	add.s64 	%rd1464, %rd1458, %rd281;
	add.s64 	%rd1465, %rd1464, %rd1463;
	xor.b64  	%rd1466, %rd1465, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1518}, %rd1466;
	}
	shf.r.wrap.b32 	%r1519, %r1518, %r1517, 16;
	shf.r.wrap.b32 	%r1520, %r1517, %r1518, 16;
	mov.b64 	%rd1467, {%r1520, %r1519};
	add.s64 	%rd1468, %rd1467, %rd1461;
	xor.b64  	%rd1469, %rd1468, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd1469;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 11;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 11;
	mov.b64 	%rd1470, {%r1524, %r1523};
	add.s64 	%rd1471, %rd1414, %rd289;
	add.s64 	%rd1472, %rd1471, %rd1423;
	xor.b64  	%rd1473, %rd1439, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd1473;
	}
	mov.b64 	%rd1474, {%r1526, %r1525};
	add.s64 	%rd1475, %rd1474, %rd1398;
	xor.b64  	%rd1476, %rd1475, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd1476;
	}
	shf.r.wrap.b32 	%r1529, %r1528, %r1527, 25;
	shf.r.wrap.b32 	%r1530, %r1527, %r1528, 25;
	mov.b64 	%rd1477, {%r1530, %r1529};
	add.s64 	%rd1478, %rd1472, %rd297;
	add.s64 	%rd1479, %rd1478, %rd1477;
	xor.b64  	%rd1480, %rd1479, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd1480;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 16;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 16;
	mov.b64 	%rd1481, {%r1534, %r1533};
	add.s64 	%rd1482, %rd1481, %rd1475;
	xor.b64  	%rd1483, %rd1482, %rd1477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd1483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd1483;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 11;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 11;
	mov.b64 	%rd1484, {%r1538, %r1537};
	add.s64 	%rd1485, %rd1428, %rd1437;
	add.s64 	%rd1486, %rd1485, 2639559389850201719;
	xor.b64  	%rd1487, %rd1486, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd1487;
	}
	mov.b64 	%rd1488, {%r1540, %r1539};
	add.s64 	%rd1489, %rd1488, %rd1412;
	xor.b64  	%rd1490, %rd1489, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd1490;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 25;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 25;
	mov.b64 	%rd1491, {%r1544, %r1543};
	add.s64 	%rd1492, %rd1486, %rd1491;
	add.s64 	%rd1493, %rd1492, 7163292796296056424;
	xor.b64  	%rd1494, %rd1493, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd1494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd1494;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 16;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 16;
	mov.b64 	%rd1495, {%r1548, %r1547};
	add.s64 	%rd1496, %rd1495, %rd1489;
	xor.b64  	%rd1497, %rd1496, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd1497;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 11;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 11;
	mov.b64 	%rd1498, {%r1552, %r1551};
	add.s64 	%rd1499, %rd1451, %rd1470;
	add.s64 	%rd1500, %rd1499, -8646362754857370602;
	xor.b64  	%rd1501, %rd1495, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1553,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd1501;
	}
	mov.b64 	%rd1502, {%r1554, %r1553};
	add.s64 	%rd1503, %rd1502, %rd1482;
	xor.b64  	%rd1504, %rd1503, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd1504;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 25;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 25;
	mov.b64 	%rd1505, {%r1558, %r1557};
	add.s64 	%rd1506, %rd1500, %rd1505;
	add.s64 	%rd1507, %rd1506, 3458046377305235383;
	xor.b64  	%rd1508, %rd1507, %rd1502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd1508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd1508;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 16;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 16;
	mov.b64 	%rd1509, {%r1562, %r1561};
	add.s64 	%rd1510, %rd1509, %rd1503;
	xor.b64  	%rd1511, %rd1510, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd1511;
	}
	shf.r.wrap.b32 	%r1565, %r1564, %r1563, 11;
	shf.r.wrap.b32 	%r1566, %r1563, %r1564, 11;
	mov.b64 	%rd1512, {%r1566, %r1565};
	add.s64 	%rd1513, %rd1465, %rd333;
	add.s64 	%rd1514, %rd1513, %rd1484;
	xor.b64  	%rd1515, %rd1514, %rd1453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1567,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1568}, %rd1515;
	}
	mov.b64 	%rd1516, {%r1568, %r1567};
	add.s64 	%rd1517, %rd1516, %rd1496;
	xor.b64  	%rd1518, %rd1517, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd1518;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 25;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 25;
	mov.b64 	%rd1519, {%r1572, %r1571};
	add.s64 	%rd1520, %rd1514, %rd341;
	add.s64 	%rd1521, %rd1520, %rd1519;
	xor.b64  	%rd1522, %rd1521, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd1522;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 16;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 16;
	mov.b64 	%rd1523, {%r1576, %r1575};
	add.s64 	%rd1524, %rd1523, %rd1517;
	xor.b64  	%rd1525, %rd1524, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1577,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1578}, %rd1525;
	}
	shf.r.wrap.b32 	%r1579, %r1578, %r1577, 11;
	shf.r.wrap.b32 	%r1580, %r1577, %r1578, 11;
	mov.b64 	%rd1526, {%r1580, %r1579};
	add.s64 	%rd1527, %rd1479, %rd349;
	add.s64 	%rd1528, %rd1527, %rd1498;
	xor.b64  	%rd1529, %rd1528, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd1529;
	}
	mov.b64 	%rd1530, {%r1582, %r1581};
	add.s64 	%rd1531, %rd1530, %rd1454;
	xor.b64  	%rd1532, %rd1531, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1583,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1584}, %rd1532;
	}
	shf.r.wrap.b32 	%r1585, %r1584, %r1583, 25;
	shf.r.wrap.b32 	%r1586, %r1583, %r1584, 25;
	mov.b64 	%rd1533, {%r1586, %r1585};
	add.s64 	%rd1534, %rd1528, %rd357;
	add.s64 	%rd1535, %rd1534, %rd1533;
	xor.b64  	%rd1536, %rd1535, %rd1530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1587,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1588}, %rd1536;
	}
	shf.r.wrap.b32 	%r1589, %r1588, %r1587, 16;
	shf.r.wrap.b32 	%r1590, %r1587, %r1588, 16;
	mov.b64 	%rd1537, {%r1590, %r1589};
	add.s64 	%rd1538, %rd1537, %rd1531;
	xor.b64  	%rd1539, %rd1538, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd1539;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 11;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 11;
	mov.b64 	%rd1540, {%r1594, %r1593};
	add.s64 	%rd1541, %rd1456, %rd365;
	add.s64 	%rd1542, %rd1541, %rd1493;
	xor.b64  	%rd1543, %rd1542, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1595,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd1543;
	}
	mov.b64 	%rd1544, {%r1596, %r1595};
	add.s64 	%rd1545, %rd1544, %rd1468;
	xor.b64  	%rd1546, %rd1545, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd1546;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 25;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 25;
	mov.b64 	%rd1547, {%r1600, %r1599};
	add.s64 	%rd1548, %rd1542, %rd373;
	add.s64 	%rd1549, %rd1548, %rd1547;
	xor.b64  	%rd1550, %rd1549, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd1550;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 16;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 16;
	mov.b64 	%rd1551, {%r1604, %r1603};
	add.s64 	%rd1552, %rd1551, %rd1545;
	xor.b64  	%rd1553, %rd1552, %rd1547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd1553;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 11;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 11;
	mov.b64 	%rd1554, {%r1608, %r1607};
	add.s64 	%rd1555, %rd1507, %rd381;
	add.s64 	%rd1556, %rd1555, %rd1554;
	xor.b64  	%rd1557, %rd1556, %rd1523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd1557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd1557;
	}
	mov.b64 	%rd1558, {%r1610, %r1609};
	add.s64 	%rd1559, %rd1558, %rd1538;
	xor.b64  	%rd1560, %rd1559, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd1560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd1560;
	}
	shf.r.wrap.b32 	%r1613, %r1612, %r1611, 25;
	shf.r.wrap.b32 	%r1614, %r1611, %r1612, 25;
	mov.b64 	%rd1561, {%r1614, %r1613};
	add.s64 	%rd1562, %rd1556, %rd389;
	add.s64 	%rd1563, %rd1562, %rd1561;
	xor.b64  	%rd1564, %rd1563, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd1564;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 16;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 16;
	mov.b64 	%rd1565, {%r1618, %r1617};
	add.s64 	%rd1566, %rd1565, %rd1559;
	xor.b64  	%rd1567, %rd1566, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd1567;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 11;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 11;
	mov.b64 	%rd1568, {%r1622, %r1621};
	add.s64 	%rd1569, %rd1512, %rd397;
	add.s64 	%rd1570, %rd1569, %rd1521;
	xor.b64  	%rd1571, %rd1537, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd1571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd1571;
	}
	mov.b64 	%rd1572, {%r1624, %r1623};
	add.s64 	%rd1573, %rd1572, %rd1552;
	xor.b64  	%rd1574, %rd1573, %rd1512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1625,%dummy}, %rd1574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1626}, %rd1574;
	}
	shf.r.wrap.b32 	%r1627, %r1626, %r1625, 25;
	shf.r.wrap.b32 	%r1628, %r1625, %r1626, 25;
	mov.b64 	%rd1575, {%r1628, %r1627};
	add.s64 	%rd1576, %rd1570, %rd405;
	add.s64 	%rd1577, %rd1576, %rd1575;
	xor.b64  	%rd1578, %rd1577, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd1578;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 16;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 16;
	mov.b64 	%rd1579, {%r1632, %r1631};
	add.s64 	%rd1580, %rd1579, %rd1573;
	xor.b64  	%rd1581, %rd1580, %rd1575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd1581;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 11;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 11;
	mov.b64 	%rd1582, {%r1636, %r1635};
	add.s64 	%rd1583, %rd1526, %rd1535;
	add.s64 	%rd1584, %rd1583, -5008970055469465704;
	xor.b64  	%rd1585, %rd1551, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd1585;
	}
	mov.b64 	%rd1586, {%r1638, %r1637};
	add.s64 	%rd1587, %rd1586, %rd1510;
	xor.b64  	%rd1588, %rd1587, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd1588;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 25;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 25;
	mov.b64 	%rd1589, {%r1642, %r1641};
	add.s64 	%rd1590, %rd1584, %rd1589;
	add.s64 	%rd1591, %rd1590, 2639559389850201335;
	xor.b64  	%rd1592, %rd1591, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1643,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1644}, %rd1592;
	}
	shf.r.wrap.b32 	%r1645, %r1644, %r1643, 16;
	shf.r.wrap.b32 	%r1646, %r1643, %r1644, 16;
	mov.b64 	%rd1593, {%r1646, %r1645};
	add.s64 	%rd1594, %rd1593, %rd1587;
	xor.b64  	%rd1595, %rd1594, %rd1589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd1595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd1595;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 11;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 11;
	mov.b64 	%rd1596, {%r1650, %r1649};
	add.s64 	%rd1597, %rd1540, %rd1549;
	add.s64 	%rd1598, %rd1597, 577009281997405206;
	xor.b64  	%rd1599, %rd1598, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1651,%dummy}, %rd1599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1652}, %rd1599;
	}
	mov.b64 	%rd1600, {%r1652, %r1651};
	add.s64 	%rd1601, %rd1600, %rd1524;
	xor.b64  	%rd1602, %rd1601, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1653,%dummy}, %rd1602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd1602;
	}
	shf.r.wrap.b32 	%r1655, %r1654, %r1653, 25;
	shf.r.wrap.b32 	%r1656, %r1653, %r1654, 25;
	mov.b64 	%rd1603, {%r1656, %r1655};
	add.s64 	%rd1604, %rd1598, %rd1603;
	add.s64 	%rd1605, %rd1604, -5124621466747896170;
	xor.b64  	%rd1606, %rd1605, %rd1600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1657,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1658}, %rd1606;
	}
	shf.r.wrap.b32 	%r1659, %r1658, %r1657, 16;
	shf.r.wrap.b32 	%r1660, %r1657, %r1658, 16;
	mov.b64 	%rd1607, {%r1660, %r1659};
	add.s64 	%rd1608, %rd1607, %rd1601;
	xor.b64  	%rd1609, %rd1608, %rd1603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd1609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd1609;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 11;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 11;
	mov.b64 	%rd1610, {%r1664, %r1663};
	add.s64 	%rd1611, %rd1563, %rd441;
	add.s64 	%rd1612, %rd1611, %rd1582;
	xor.b64  	%rd1613, %rd1607, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd1613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd1613;
	}
	mov.b64 	%rd1614, {%r1666, %r1665};
	add.s64 	%rd1615, %rd1614, %rd1594;
	xor.b64  	%rd1616, %rd1615, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1668}, %rd1616;
	}
	shf.r.wrap.b32 	%r1669, %r1668, %r1667, 25;
	shf.r.wrap.b32 	%r1670, %r1667, %r1668, 25;
	mov.b64 	%rd1617, {%r1670, %r1669};
	add.s64 	%rd1618, %rd1612, %rd449;
	add.s64 	%rd1619, %rd1618, %rd1617;
	xor.b64  	%rd1620, %rd1619, %rd1614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd1620;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 16;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 16;
	mov.b64 	%rd1621, {%r1674, %r1673};
	add.s64 	%rd1622, %rd1621, %rd1615;
	xor.b64  	%rd1623, %rd1622, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1675,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1676}, %rd1623;
	}
	shf.r.wrap.b32 	%r1677, %r1676, %r1675, 11;
	shf.r.wrap.b32 	%r1678, %r1675, %r1676, 11;
	mov.b64 	%rd1624, {%r1678, %r1677};
	add.s64 	%rd1625, %rd1577, %rd457;
	add.s64 	%rd1626, %rd1625, %rd1596;
	xor.b64  	%rd1627, %rd1626, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd1627;
	}
	mov.b64 	%rd1628, {%r1680, %r1679};
	add.s64 	%rd1629, %rd1628, %rd1608;
	xor.b64  	%rd1630, %rd1629, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd1630;
	}
	shf.r.wrap.b32 	%r1683, %r1682, %r1681, 25;
	shf.r.wrap.b32 	%r1684, %r1681, %r1682, 25;
	mov.b64 	%rd1631, {%r1684, %r1683};
	add.s64 	%rd1632, %rd1626, %rd1631;
	add.s64 	%rd1633, %rd1632, 4491327768527178860;
	xor.b64  	%rd1634, %rd1633, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd1634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd1634;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 16;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 16;
	mov.b64 	%rd1635, {%r1688, %r1687};
	add.s64 	%rd1636, %rd1635, %rd1629;
	xor.b64  	%rd1637, %rd1636, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd1637;
	}
	shf.r.wrap.b32 	%r1691, %r1690, %r1689, 11;
	shf.r.wrap.b32 	%r1692, %r1689, %r1690, 11;
	mov.b64 	%rd1638, {%r1692, %r1691};
	add.s64 	%rd1639, %rd1591, %rd472;
	add.s64 	%rd1640, %rd1639, %rd1610;
	xor.b64  	%rd1641, %rd1640, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1693,%dummy}, %rd1641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1694}, %rd1641;
	}
	mov.b64 	%rd1642, {%r1694, %r1693};
	add.s64 	%rd1643, %rd1642, %rd1566;
	xor.b64  	%rd1644, %rd1643, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd1644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd1644;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 25;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 25;
	mov.b64 	%rd1645, {%r1698, %r1697};
	add.s64 	%rd1646, %rd1640, %rd480;
	add.s64 	%rd1647, %rd1646, %rd1645;
	xor.b64  	%rd1648, %rd1647, %rd1642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1699,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1700}, %rd1648;
	}
	shf.r.wrap.b32 	%r1701, %r1700, %r1699, 16;
	shf.r.wrap.b32 	%r1702, %r1699, %r1700, 16;
	mov.b64 	%rd1649, {%r1702, %r1701};
	add.s64 	%rd1650, %rd1649, %rd1643;
	xor.b64  	%rd1651, %rd1650, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd1651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd1651;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 11;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 11;
	mov.b64 	%rd1652, {%r1706, %r1705};
	add.s64 	%rd1653, %rd1568, %rd1605;
	add.s64 	%rd1654, %rd1653, -7919907764393346661;
	xor.b64  	%rd1655, %rd1654, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1707,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1708}, %rd1655;
	}
	mov.b64 	%rd1656, {%r1708, %r1707};
	add.s64 	%rd1657, %rd1656, %rd1580;
	xor.b64  	%rd1658, %rd1657, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd1658;
	}
	shf.r.wrap.b32 	%r1711, %r1710, %r1709, 25;
	shf.r.wrap.b32 	%r1712, %r1709, %r1710, 25;
	mov.b64 	%rd1659, {%r1712, %r1711};
	add.s64 	%rd1660, %rd1654, %rd495;
	add.s64 	%rd1661, %rd1660, %rd1659;
	xor.b64  	%rd1662, %rd1661, %rd1656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1713,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1714}, %rd1662;
	}
	shf.r.wrap.b32 	%r1715, %r1714, %r1713, 16;
	shf.r.wrap.b32 	%r1716, %r1713, %r1714, 16;
	mov.b64 	%rd1663, {%r1716, %r1715};
	add.s64 	%rd1664, %rd1663, %rd1657;
	xor.b64  	%rd1665, %rd1664, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd1665;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 11;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 11;
	mov.b64 	%rd1666, {%r1720, %r1719};
	add.s64 	%rd1667, %rd1619, %rd503;
	add.s64 	%rd1668, %rd1667, %rd1666;
	xor.b64  	%rd1669, %rd1668, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1721,%dummy}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1722}, %rd1669;
	}
	mov.b64 	%rd1670, {%r1722, %r1721};
	add.s64 	%rd1671, %rd1670, %rd1650;
	xor.b64  	%rd1672, %rd1671, %rd1666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1723,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1724}, %rd1672;
	}
	shf.r.wrap.b32 	%r1725, %r1724, %r1723, 25;
	shf.r.wrap.b32 	%r1726, %r1723, %r1724, 25;
	mov.b64 	%rd1673, {%r1726, %r1725};
	add.s64 	%rd1674, %rd1668, %rd511;
	add.s64 	%rd1675, %rd1674, %rd1673;
	xor.b64  	%rd1676, %rd1675, %rd1670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd1676;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 16;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 16;
	mov.b64 	%rd1677, {%r1730, %r1729};
	add.s64 	%rd1678, %rd1677, %rd1671;
	xor.b64  	%rd1679, %rd1678, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1731,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1732}, %rd1679;
	}
	shf.r.wrap.b32 	%r1733, %r1732, %r1731, 11;
	shf.r.wrap.b32 	%r1734, %r1731, %r1732, 11;
	mov.b64 	%rd1680, {%r1734, %r1733};
	add.s64 	%rd1681, %rd1624, %rd519;
	add.s64 	%rd1682, %rd1681, %rd1633;
	xor.b64  	%rd1683, %rd1649, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd1683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd1683;
	}
	mov.b64 	%rd1684, {%r1736, %r1735};
	add.s64 	%rd1685, %rd1684, %rd1664;
	xor.b64  	%rd1686, %rd1685, %rd1624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd1686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd1686;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 25;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 25;
	mov.b64 	%rd1687, {%r1740, %r1739};
	add.s64 	%rd1688, %rd1682, %rd527;
	add.s64 	%rd1689, %rd1688, %rd1687;
	xor.b64  	%rd1690, %rd1689, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1741,%dummy}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1742}, %rd1690;
	}
	shf.r.wrap.b32 	%r1743, %r1742, %r1741, 16;
	shf.r.wrap.b32 	%r1744, %r1741, %r1742, 16;
	mov.b64 	%rd1691, {%r1744, %r1743};
	add.s64 	%rd1692, %rd1691, %rd1685;
	xor.b64  	%rd1693, %rd1692, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd1693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd1693;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 11;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 11;
	mov.b64 	%rd1694, {%r1748, %r1747};
	add.s64 	%rd1695, %rd1638, %rd535;
	add.s64 	%rd1696, %rd1695, %rd1647;
	xor.b64  	%rd1697, %rd1663, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd1697;
	}
	mov.b64 	%rd1698, {%r1750, %r1749};
	add.s64 	%rd1699, %rd1698, %rd1622;
	xor.b64  	%rd1700, %rd1699, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd1700;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 25;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 25;
	mov.b64 	%rd1701, {%r1754, %r1753};
	add.s64 	%rd1702, %rd1696, %rd543;
	add.s64 	%rd1703, %rd1702, %rd1701;
	xor.b64  	%rd1704, %rd1703, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1755,%dummy}, %rd1704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1756}, %rd1704;
	}
	shf.r.wrap.b32 	%r1757, %r1756, %r1755, 16;
	shf.r.wrap.b32 	%r1758, %r1755, %r1756, 16;
	mov.b64 	%rd1705, {%r1758, %r1757};
	add.s64 	%rd1706, %rd1705, %rd1699;
	xor.b64  	%rd1707, %rd1706, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd1707;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 11;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 11;
	mov.b64 	%rd1708, {%r1762, %r1761};
	add.s64 	%rd1709, %rd1652, %rd1661;
	add.s64 	%rd1710, %rd1709, -2060079240558719383;
	xor.b64  	%rd1711, %rd1710, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd1711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd1711;
	}
	mov.b64 	%rd1712, {%r1764, %r1763};
	add.s64 	%rd1713, %rd1712, %rd1636;
	xor.b64  	%rd1714, %rd1713, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1765,%dummy}, %rd1714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1766}, %rd1714;
	}
	shf.r.wrap.b32 	%r1767, %r1766, %r1765, 25;
	shf.r.wrap.b32 	%r1768, %r1765, %r1766, 25;
	mov.b64 	%rd1715, {%r1768, %r1767};
	add.s64 	%rd1716, %rd1710, %rd1715;
	add.s64 	%rd1717, %rd1716, 3458046377305234743;
	xor.b64  	%rd1718, %rd1717, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1769,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd1718;
	}
	shf.r.wrap.b32 	%r1771, %r1770, %r1769, 16;
	shf.r.wrap.b32 	%r1772, %r1769, %r1770, 16;
	mov.b64 	%rd1719, {%r1772, %r1771};
	add.s64 	%rd1720, %rd1719, %rd1713;
	xor.b64  	%rd1721, %rd1720, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1773,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1774}, %rd1721;
	}
	shf.r.wrap.b32 	%r1775, %r1774, %r1773, 11;
	shf.r.wrap.b32 	%r1776, %r1773, %r1774, 11;
	mov.b64 	%rd1722, {%r1776, %r1775};
	add.s64 	%rd1723, %rd1675, %rd1694;
	add.s64 	%rd1724, %rd1723, 1376283091369227076;
	xor.b64  	%rd1725, %rd1719, %rd1724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1777,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1778}, %rd1725;
	}
	mov.b64 	%rd1726, {%r1778, %r1777};
	add.s64 	%rd1727, %rd1726, %rd1706;
	xor.b64  	%rd1728, %rd1727, %rd1694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1779,%dummy}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd1728;
	}
	shf.r.wrap.b32 	%r1781, %r1780, %r1779, 25;
	shf.r.wrap.b32 	%r1782, %r1779, %r1780, 25;
	mov.b64 	%rd1729, {%r1782, %r1781};
	add.s64 	%rd1730, %rd1724, %rd572;
	add.s64 	%rd1731, %rd1730, %rd1729;
	xor.b64  	%rd1732, %rd1731, %rd1726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd1732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd1732;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 16;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 16;
	mov.b64 	%rd1733, {%r1786, %r1785};
	add.s64 	%rd1734, %rd1733, %rd1727;
	xor.b64  	%rd1735, %rd1734, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1787,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd1735;
	}
	shf.r.wrap.b32 	%r1789, %r1788, %r1787, 11;
	shf.r.wrap.b32 	%r1790, %r1787, %r1788, 11;
	mov.b64 	%rd1736, {%r1790, %r1789};
	add.s64 	%rd1737, %rd1689, %rd1708;
	add.s64 	%rd1738, %rd1737, -5008970055469465703;
	xor.b64  	%rd1739, %rd1738, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd1739;
	}
	mov.b64 	%rd1740, {%r1792, %r1791};
	add.s64 	%rd1741, %rd1740, %rd1720;
	xor.b64  	%rd1742, %rd1741, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1793,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd1742;
	}
	shf.r.wrap.b32 	%r1795, %r1794, %r1793, 25;
	shf.r.wrap.b32 	%r1796, %r1793, %r1794, 25;
	mov.b64 	%rd1743, {%r1796, %r1795};
	add.s64 	%rd1744, %rd1738, %rd1743;
	add.s64 	%rd1745, %rd1744, -5124621466747896170;
	xor.b64  	%rd1746, %rd1745, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd1746;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 16;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 16;
	mov.b64 	%rd1747, {%r1800, %r1799};
	add.s64 	%rd1748, %rd1747, %rd1741;
	xor.b64  	%rd1749, %rd1748, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1801,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1802}, %rd1749;
	}
	shf.r.wrap.b32 	%r1803, %r1802, %r1801, 11;
	shf.r.wrap.b32 	%r1804, %r1801, %r1802, 11;
	mov.b64 	%rd1750, {%r1804, %r1803};
	add.s64 	%rd1751, %rd1703, %rd594;
	add.s64 	%rd1752, %rd1751, %rd1722;
	xor.b64  	%rd1753, %rd1752, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd1753;
	}
	mov.b64 	%rd1754, {%r1806, %r1805};
	add.s64 	%rd1755, %rd1754, %rd1678;
	xor.b64  	%rd1756, %rd1755, %rd1722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd1756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd1756;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 25;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 25;
	mov.b64 	%rd1757, {%r1810, %r1809};
	add.s64 	%rd1758, %rd1752, %rd602;
	add.s64 	%rd1759, %rd1758, %rd1757;
	xor.b64  	%rd1760, %rd1759, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1811,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1812}, %rd1760;
	}
	shf.r.wrap.b32 	%r1813, %r1812, %r1811, 16;
	shf.r.wrap.b32 	%r1814, %r1811, %r1812, 16;
	mov.b64 	%rd1761, {%r1814, %r1813};
	add.s64 	%rd1762, %rd1761, %rd1755;
	xor.b64  	%rd1763, %rd1762, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd1763;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 11;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 11;
	mov.b64 	%rd1764, {%r1818, %r1817};
	add.s64 	%rd1765, %rd1680, %rd610;
	add.s64 	%rd1766, %rd1765, %rd1717;
	xor.b64  	%rd1767, %rd1766, %rd1705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1819,%dummy}, %rd1767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1820}, %rd1767;
	}
	mov.b64 	%rd1768, {%r1820, %r1819};
	add.s64 	%rd1769, %rd1768, %rd1692;
	xor.b64  	%rd1770, %rd1769, %rd1680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1821,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1822}, %rd1770;
	}
	shf.r.wrap.b32 	%r1823, %r1822, %r1821, 25;
	shf.r.wrap.b32 	%r1824, %r1821, %r1822, 25;
	mov.b64 	%rd1771, {%r1824, %r1823};
	add.s64 	%rd1772, %rd1766, %rd1771;
	add.s64 	%rd1773, %rd1772, 589684135938649224;
	xor.b64  	%rd1774, %rd1773, %rd1768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1825,%dummy}, %rd1774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1826}, %rd1774;
	}
	shf.r.wrap.b32 	%r1827, %r1826, %r1825, 16;
	shf.r.wrap.b32 	%r1828, %r1825, %r1826, 16;
	mov.b64 	%rd1775, {%r1828, %r1827};
	add.s64 	%rd1776, %rd1775, %rd1769;
	xor.b64  	%rd1777, %rd1776, %rd1771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd1777;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 11;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 11;
	mov.b64 	%rd1778, {%r1832, %r1831};
	add.s64 	%rd1779, %rd1731, %rd625;
	add.s64 	%rd1780, %rd1779, %rd1778;
	xor.b64  	%rd1781, %rd1780, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1833,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1834}, %rd1781;
	}
	mov.b64 	%rd1782, {%r1834, %r1833};
	add.s64 	%rd1783, %rd1782, %rd1762;
	xor.b64  	%rd1784, %rd1783, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1835,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1836}, %rd1784;
	}
	shf.r.wrap.b32 	%r1837, %r1836, %r1835, 25;
	shf.r.wrap.b32 	%r1838, %r1835, %r1836, 25;
	mov.b64 	%rd1785, {%r1838, %r1837};
	add.s64 	%rd1786, %rd1780, %rd1785;
	add.s64 	%rd1787, %rd1786, -6626703657320631856;
	xor.b64  	%rd1788, %rd1787, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd1788;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 16;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 16;
	mov.b64 	%rd1789, {%r1842, %r1841};
	add.s64 	%rd1790, %rd1789, %rd1783;
	xor.b64  	%rd1791, %rd1790, %rd1785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1843,%dummy}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1844}, %rd1791;
	}
	shf.r.wrap.b32 	%r1845, %r1844, %r1843, 11;
	shf.r.wrap.b32 	%r1846, %r1843, %r1844, 11;
	mov.b64 	%rd1792, {%r1846, %r1845};
	add.s64 	%rd1793, %rd1736, %rd640;
	add.s64 	%rd1794, %rd1793, %rd1745;
	xor.b64  	%rd1795, %rd1761, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd1795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd1795;
	}
	mov.b64 	%rd1796, {%r1848, %r1847};
	add.s64 	%rd1797, %rd1796, %rd1776;
	xor.b64  	%rd1798, %rd1797, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1850}, %rd1798;
	}
	shf.r.wrap.b32 	%r1851, %r1850, %r1849, 25;
	shf.r.wrap.b32 	%r1852, %r1849, %r1850, 25;
	mov.b64 	%rd1799, {%r1852, %r1851};
	add.s64 	%rd1800, %rd1794, %rd1799;
	add.s64 	%rd1801, %rd1800, 4660145583757742301;
	xor.b64  	%rd1802, %rd1801, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1853,%dummy}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1854}, %rd1802;
	}
	shf.r.wrap.b32 	%r1855, %r1854, %r1853, 16;
	shf.r.wrap.b32 	%r1856, %r1853, %r1854, 16;
	mov.b64 	%rd1803, {%r1856, %r1855};
	add.s64 	%rd1804, %rd1803, %rd1797;
	xor.b64  	%rd1805, %rd1804, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd1805;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 11;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 11;
	mov.b64 	%rd1806, {%r1860, %r1859};
	add.s64 	%rd1807, %rd1750, %rd655;
	add.s64 	%rd1808, %rd1807, %rd1759;
	xor.b64  	%rd1809, %rd1775, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd1809;
	}
	mov.b64 	%rd1810, {%r1862, %r1861};
	add.s64 	%rd1811, %rd1810, %rd1734;
	xor.b64  	%rd1812, %rd1811, %rd1750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd1812;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 25;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 25;
	mov.b64 	%rd1813, {%r1866, %r1865};
	add.s64 	%rd1814, %rd1808, %rd1813;
	add.s64 	%rd1815, %rd1814, 2611923443488327891;
	xor.b64  	%rd1816, %rd1815, %rd1810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd1816;
	}
	shf.r.wrap.b32 	%r1869, %r1868, %r1867, 16;
	shf.r.wrap.b32 	%r1870, %r1867, %r1868, 16;
	mov.b64 	%rd1817, {%r1870, %r1869};
	add.s64 	%rd1818, %rd1817, %rd1811;
	xor.b64  	%rd1819, %rd1818, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd1819;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 11;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 11;
	mov.b64 	%rd1820, {%r1874, %r1873};
	add.s64 	%rd1821, %rd1764, %rd670;
	add.s64 	%rd1822, %rd1821, %rd1773;
	xor.b64  	%rd1823, %rd1822, %rd1733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd1823;
	}
	mov.b64 	%rd1824, {%r1876, %r1875};
	add.s64 	%rd1825, %rd1824, %rd1748;
	xor.b64  	%rd1826, %rd1825, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd1826;
	}
	shf.r.wrap.b32 	%r1879, %r1878, %r1877, 25;
	shf.r.wrap.b32 	%r1880, %r1877, %r1878, 25;
	mov.b64 	%rd1827, {%r1880, %r1879};
	add.s64 	%rd1828, %rd1822, %rd678;
	add.s64 	%rd1829, %rd1828, %rd1827;
	xor.b64  	%rd1830, %rd1829, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1881,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1882}, %rd1830;
	}
	shf.r.wrap.b32 	%r1883, %r1882, %r1881, 16;
	shf.r.wrap.b32 	%r1884, %r1881, %r1882, 16;
	mov.b64 	%rd1831, {%r1884, %r1883};
	add.s64 	%rd1832, %rd1831, %rd1825;
	xor.b64  	%rd1833, %rd1832, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1885,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd1833;
	}
	shf.r.wrap.b32 	%r1887, %r1886, %r1885, 11;
	shf.r.wrap.b32 	%r1888, %r1885, %r1886, 11;
	mov.b64 	%rd1834, {%r1888, %r1887};
	add.s64 	%rd1835, %rd1787, %rd686;
	add.s64 	%rd1836, %rd1835, %rd1806;
	xor.b64  	%rd1837, %rd1831, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1889,%dummy}, %rd1837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1890}, %rd1837;
	}
	mov.b64 	%rd1838, {%r1890, %r1889};
	add.s64 	%rd1839, %rd1838, %rd1818;
	xor.b64  	%rd1840, %rd1839, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd1840;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 25;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 25;
	mov.b64 	%rd1841, {%r1894, %r1893};
	add.s64 	%rd1842, %rd1836, %rd1841;
	add.s64 	%rd1843, %rd1842, 4983270260364809078;
	xor.b64  	%rd1844, %rd1843, %rd1838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd1844;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 16;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 16;
	mov.b64 	%rd1845, {%r1898, %r1897};
	add.s64 	%rd1846, %rd1845, %rd1839;
	xor.b64  	%rd1847, %rd1846, %rd1841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1899,%dummy}, %rd1847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1900}, %rd1847;
	}
	shf.r.wrap.b32 	%r1901, %r1900, %r1899, 11;
	shf.r.wrap.b32 	%r1902, %r1899, %r1900, 11;
	mov.b64 	%rd1848, {%r1902, %r1901};
	add.s64 	%rd1849, %rd1801, %rd527;
	add.s64 	%rd1850, %rd1849, %rd1820;
	xor.b64  	%rd1851, %rd1850, %rd1789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd1851;
	}
	mov.b64 	%rd1852, {%r1904, %r1903};
	add.s64 	%rd1853, %rd1852, %rd1832;
	xor.b64  	%rd1854, %rd1853, %rd1820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1905,%dummy}, %rd1854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1906}, %rd1854;
	}
	shf.r.wrap.b32 	%r1907, %r1906, %r1905, 25;
	shf.r.wrap.b32 	%r1908, %r1905, %r1906, 25;
	mov.b64 	%rd1855, {%r1908, %r1907};
	add.s64 	%rd1856, %rd1850, %rd519;
	add.s64 	%rd1857, %rd1856, %rd1855;
	xor.b64  	%rd1858, %rd1857, %rd1852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd1858;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 16;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 16;
	mov.b64 	%rd1859, {%r1912, %r1911};
	add.s64 	%rd1860, %rd1859, %rd1853;
	xor.b64  	%rd1861, %rd1860, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1913,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1914}, %rd1861;
	}
	shf.r.wrap.b32 	%r1915, %r1914, %r1913, 11;
	shf.r.wrap.b32 	%r1916, %r1913, %r1914, 11;
	mov.b64 	%rd1862, {%r1916, %r1915};
	add.s64 	%rd1863, %rd1815, %rd1834;
	add.s64 	%rd1864, %rd1863, 577009281997405846;
	xor.b64  	%rd1865, %rd1864, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1917,%dummy}, %rd1865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1918}, %rd1865;
	}
	mov.b64 	%rd1866, {%r1918, %r1917};
	add.s64 	%rd1867, %rd1866, %rd1790;
	xor.b64  	%rd1868, %rd1867, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd1868;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 25;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 25;
	mov.b64 	%rd1869, {%r1922, %r1921};
	add.s64 	%rd1870, %rd1864, %rd1869;
	add.s64 	%rd1871, %rd1870, 7163292796296056425;
	xor.b64  	%rd1872, %rd1871, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1923,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1924}, %rd1872;
	}
	shf.r.wrap.b32 	%r1925, %r1924, %r1923, 16;
	shf.r.wrap.b32 	%r1926, %r1923, %r1924, 16;
	mov.b64 	%rd1873, {%r1926, %r1925};
	add.s64 	%rd1874, %rd1873, %rd1867;
	xor.b64  	%rd1875, %rd1874, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd1875;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 11;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 11;
	mov.b64 	%rd1876, {%r1930, %r1929};
	add.s64 	%rd1877, %rd1792, %rd729;
	add.s64 	%rd1878, %rd1877, %rd1829;
	xor.b64  	%rd1879, %rd1878, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd1879;
	}
	mov.b64 	%rd1880, {%r1932, %r1931};
	add.s64 	%rd1881, %rd1880, %rd1804;
	xor.b64  	%rd1882, %rd1881, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd1882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd1882;
	}
	shf.r.wrap.b32 	%r1935, %r1934, %r1933, 25;
	shf.r.wrap.b32 	%r1936, %r1933, %r1934, 25;
	mov.b64 	%rd1883, {%r1936, %r1935};
	add.s64 	%rd1884, %rd1878, %rd737;
	add.s64 	%rd1885, %rd1884, %rd1883;
	xor.b64  	%rd1886, %rd1885, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1937,%dummy}, %rd1886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1938}, %rd1886;
	}
	shf.r.wrap.b32 	%r1939, %r1938, %r1937, 16;
	shf.r.wrap.b32 	%r1940, %r1937, %r1938, 16;
	mov.b64 	%rd1887, {%r1940, %r1939};
	add.s64 	%rd1888, %rd1887, %rd1881;
	xor.b64  	%rd1889, %rd1888, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd1889;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 11;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 11;
	mov.b64 	%rd1890, {%r1944, %r1943};
	xor.b64  	%rd1891, %rd1845, %rd1876;
	xor.b64  	%rd1892, %rd1891, 6620516959819538809;
	xor.b64  	%rd1893, %rd1862, %rd1887;
	xor.b64  	%rd1894, %rd1893, 2270897969802886507;
	xor.b64  	%rd1895, %rd1848, %rd1873;
	xor.b64  	%rd1896, %rd1895, -7276294671716946913;
	xor.b64  	%rd1897, %rd1859, %rd1890;
	xor.b64  	%rd1898, %rd1897, 5840696475078001361;
	xor.b64  	%rd1899, %rd1860, %rd1885;
	xor.b64  	%rd1900, %rd1899, -6534734903238641935;
	xor.b64  	%rd1901, %rd1846, %rd1871;
	xor.b64  	%rd1902, %rd1901, 4354685564936845355;
	xor.b64  	%rd1903, %rd1857, %rd1888;
	xor.b64  	%rd1904, %rd1903, -4942790177534073029;
	xor.b64  	%rd1905, %rd1843, %rd1874;
	xor.b64  	%rd1906, %rd1905, 7640891576956012808;
	shl.b64 	%rd1907, %rd5, 6;
	add.s64 	%rd1908, %rd2, %rd1907;
	st.global.u64 	[%rd1908], %rd1906;
	st.global.u64 	[%rd1908+8], %rd1904;
	st.global.u64 	[%rd1908+16], %rd1902;
	st.global.u64 	[%rd1908+24], %rd1900;
	st.global.u64 	[%rd1908+32], %rd1898;
	st.global.u64 	[%rd1908+40], %rd1896;
	st.global.u64 	[%rd1908+48], %rd1894;
	st.global.u64 	[%rd1908+56], %rd1892;
	bar.sync 	0;
	ret;
}

	// .globl	search1
.entry search1(
	.param .u64 .ptr .global .align 8 search1_param_0
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<545>;
	.reg .b32 	%r<826>;
	.reg .b64 	%rd<1850>;
	// demoted variable
	.shared .align 8 .b8 search1$T0_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T1_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T2_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T3_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T4_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T5_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T6_C[2048];
	// demoted variable
	.shared .align 8 .b8 search1$T7_C[2048];

	ld.param.u64 	%rd131, [search1_param_0];
	mov.b32	%r11, %envreg3;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r13, %r12, %r1, %r11;
	mov.u32 	%r822, %tid.x;
	add.s32 	%r14, %r13, %r822;
	cvt.u64.u32	%rd132, %r14;
	mov.b32	%r15, %envreg0;
	mul.lo.s32 	%r16, %r1, %r15;
	sub.s32 	%r17, %r11, %r16;
	cvt.s64.s32	%rd133, %r17;
	sub.s64 	%rd1, %rd132, %rd133;
	setp.gt.s32	%p1, %r822, 255;
	@%p1 bra 	BB1_2;

BB1_1:
	mul.wide.s32 	%rd134, %r822, 8;
	mov.u64 	%rd135, T0;
	add.s64 	%rd136, %rd135, %rd134;
	ld.const.u64 	%rd137, [%rd136];
	mov.u64 	%rd138, search1$T0_C;
	add.s64 	%rd139, %rd138, %rd134;
	st.shared.u64 	[%rd139], %rd137;
	mov.u64 	%rd140, T4;
	add.s64 	%rd141, %rd140, %rd134;
	ld.const.u64 	%rd142, [%rd141];
	mov.u64 	%rd143, search1$T4_C;
	add.s64 	%rd144, %rd143, %rd134;
	st.shared.u64 	[%rd144], %rd142;
	mov.u64 	%rd145, T1;
	add.s64 	%rd146, %rd145, %rd134;
	ld.const.u64 	%rd147, [%rd146];
	mov.u64 	%rd148, search1$T1_C;
	add.s64 	%rd149, %rd148, %rd134;
	st.shared.u64 	[%rd149], %rd147;
	mov.u64 	%rd150, T2;
	add.s64 	%rd151, %rd150, %rd134;
	ld.const.u64 	%rd152, [%rd151];
	mov.u64 	%rd153, search1$T2_C;
	add.s64 	%rd154, %rd153, %rd134;
	st.shared.u64 	[%rd154], %rd152;
	mov.u64 	%rd155, T3;
	add.s64 	%rd156, %rd155, %rd134;
	ld.const.u64 	%rd157, [%rd156];
	mov.u64 	%rd158, search1$T3_C;
	add.s64 	%rd159, %rd158, %rd134;
	st.shared.u64 	[%rd159], %rd157;
	mov.u64 	%rd160, T5;
	add.s64 	%rd161, %rd160, %rd134;
	ld.const.u64 	%rd162, [%rd161];
	mov.u64 	%rd163, search1$T5_C;
	add.s64 	%rd164, %rd163, %rd134;
	st.shared.u64 	[%rd164], %rd162;
	mov.u64 	%rd165, T6;
	add.s64 	%rd166, %rd165, %rd134;
	ld.const.u64 	%rd167, [%rd166];
	mov.u64 	%rd168, search1$T6_C;
	add.s64 	%rd169, %rd168, %rd134;
	st.shared.u64 	[%rd169], %rd167;
	mov.u64 	%rd170, T7;
	add.s64 	%rd171, %rd170, %rd134;
	ld.const.u64 	%rd172, [%rd171];
	mov.u64 	%rd173, search1$T7_C;
	add.s64 	%rd174, %rd173, %rd134;
	st.shared.u64 	[%rd174], %rd172;
	add.s32 	%r822, %r822, %r1;
	setp.lt.s32	%p2, %r822, 256;
	@%p2 bra 	BB1_1;

BB1_2:
	bar.sync 	0;
	shl.b64 	%rd184, %rd1, 6;
	add.s64 	%rd2, %rd131, %rd184;
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd2];
	cvt.u32.u16	%r19, %rs4;
	cvt.u32.u16	%r20, %rs3;
	bfi.b32 	%r21, %r20, %r19, 8, 8;
	cvt.u32.u16	%r22, %rs2;
	cvt.u32.u16	%r23, %rs1;
	bfi.b32 	%r24, %r23, %r22, 8, 8;
	bfi.b32 	%r25, %r24, %r21, 16, 16;
	ld.global.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd2+4];
	cvt.u32.u16	%r26, %rs10;
	cvt.u32.u16	%r27, %rs9;
	bfi.b32 	%r28, %r27, %r26, 8, 8;
	cvt.u32.u16	%r29, %rs8;
	cvt.u32.u16	%r30, %rs7;
	bfi.b32 	%r31, %r30, %r29, 8, 8;
	bfi.b32 	%r32, %r31, %r28, 16, 16;
	mov.b64	%rd3, {%r32, %r25};
	ld.global.v4.u8 	{%rs13, %rs14, %rs15, %rs16}, [%rd2+8];
	cvt.u32.u16	%r33, %rs16;
	cvt.u32.u16	%r34, %rs15;
	bfi.b32 	%r35, %r34, %r33, 8, 8;
	cvt.u32.u16	%r36, %rs14;
	cvt.u32.u16	%r37, %rs13;
	bfi.b32 	%r38, %r37, %r36, 8, 8;
	bfi.b32 	%r39, %r38, %r35, 16, 16;
	ld.global.v4.u8 	{%rs19, %rs20, %rs21, %rs22}, [%rd2+12];
	cvt.u32.u16	%r40, %rs22;
	cvt.u32.u16	%r41, %rs21;
	bfi.b32 	%r42, %r41, %r40, 8, 8;
	cvt.u32.u16	%r43, %rs20;
	cvt.u32.u16	%r44, %rs19;
	bfi.b32 	%r45, %r44, %r43, 8, 8;
	bfi.b32 	%r46, %r45, %r42, 16, 16;
	mov.b64	%rd4, {%r46, %r39};
	ld.global.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd2+16];
	cvt.u32.u16	%r47, %rs28;
	cvt.u32.u16	%r48, %rs27;
	bfi.b32 	%r49, %r48, %r47, 8, 8;
	cvt.u32.u16	%r50, %rs26;
	cvt.u32.u16	%r51, %rs25;
	bfi.b32 	%r52, %r51, %r50, 8, 8;
	bfi.b32 	%r53, %r52, %r49, 16, 16;
	ld.global.v4.u8 	{%rs31, %rs32, %rs33, %rs34}, [%rd2+20];
	cvt.u32.u16	%r54, %rs34;
	cvt.u32.u16	%r55, %rs33;
	bfi.b32 	%r56, %r55, %r54, 8, 8;
	cvt.u32.u16	%r57, %rs32;
	cvt.u32.u16	%r58, %rs31;
	bfi.b32 	%r59, %r58, %r57, 8, 8;
	bfi.b32 	%r60, %r59, %r56, 16, 16;
	mov.b64	%rd5, {%r60, %r53};
	ld.global.v4.u8 	{%rs37, %rs38, %rs39, %rs40}, [%rd2+24];
	cvt.u32.u16	%r61, %rs40;
	cvt.u32.u16	%r62, %rs39;
	bfi.b32 	%r63, %r62, %r61, 8, 8;
	cvt.u32.u16	%r64, %rs38;
	cvt.u32.u16	%r65, %rs37;
	bfi.b32 	%r66, %r65, %r64, 8, 8;
	bfi.b32 	%r67, %r66, %r63, 16, 16;
	ld.global.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd2+28];
	cvt.u32.u16	%r68, %rs46;
	cvt.u32.u16	%r69, %rs45;
	bfi.b32 	%r70, %r69, %r68, 8, 8;
	cvt.u32.u16	%r71, %rs44;
	cvt.u32.u16	%r72, %rs43;
	bfi.b32 	%r73, %r72, %r71, 8, 8;
	bfi.b32 	%r74, %r73, %r70, 16, 16;
	mov.b64	%rd6, {%r74, %r67};
	ld.global.v4.u8 	{%rs49, %rs50, %rs51, %rs52}, [%rd2+32];
	cvt.u32.u16	%r75, %rs52;
	cvt.u32.u16	%r76, %rs51;
	bfi.b32 	%r77, %r76, %r75, 8, 8;
	cvt.u32.u16	%r78, %rs50;
	cvt.u32.u16	%r79, %rs49;
	bfi.b32 	%r80, %r79, %r78, 8, 8;
	bfi.b32 	%r81, %r80, %r77, 16, 16;
	ld.global.v4.u8 	{%rs55, %rs56, %rs57, %rs58}, [%rd2+36];
	cvt.u32.u16	%r82, %rs58;
	cvt.u32.u16	%r83, %rs57;
	bfi.b32 	%r84, %r83, %r82, 8, 8;
	cvt.u32.u16	%r85, %rs56;
	cvt.u32.u16	%r86, %rs55;
	bfi.b32 	%r87, %r86, %r85, 8, 8;
	bfi.b32 	%r88, %r87, %r84, 16, 16;
	mov.b64	%rd7, {%r88, %r81};
	ld.global.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd2+40];
	cvt.u32.u16	%r89, %rs64;
	cvt.u32.u16	%r90, %rs63;
	bfi.b32 	%r91, %r90, %r89, 8, 8;
	cvt.u32.u16	%r92, %rs62;
	cvt.u32.u16	%r93, %rs61;
	bfi.b32 	%r94, %r93, %r92, 8, 8;
	bfi.b32 	%r95, %r94, %r91, 16, 16;
	ld.global.v4.u8 	{%rs67, %rs68, %rs69, %rs70}, [%rd2+44];
	cvt.u32.u16	%r96, %rs70;
	cvt.u32.u16	%r97, %rs69;
	bfi.b32 	%r98, %r97, %r96, 8, 8;
	cvt.u32.u16	%r99, %rs68;
	cvt.u32.u16	%r100, %rs67;
	bfi.b32 	%r101, %r100, %r99, 8, 8;
	bfi.b32 	%r102, %r101, %r98, 16, 16;
	mov.b64	%rd8, {%r102, %r95};
	ld.global.v4.u8 	{%rs73, %rs74, %rs75, %rs76}, [%rd2+48];
	cvt.u32.u16	%r103, %rs76;
	cvt.u32.u16	%r104, %rs75;
	bfi.b32 	%r105, %r104, %r103, 8, 8;
	cvt.u32.u16	%r106, %rs74;
	cvt.u32.u16	%r107, %rs73;
	bfi.b32 	%r108, %r107, %r106, 8, 8;
	bfi.b32 	%r109, %r108, %r105, 16, 16;
	ld.global.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd2+52];
	cvt.u32.u16	%r110, %rs82;
	cvt.u32.u16	%r111, %rs81;
	bfi.b32 	%r112, %r111, %r110, 8, 8;
	cvt.u32.u16	%r113, %rs80;
	cvt.u32.u16	%r114, %rs79;
	bfi.b32 	%r115, %r114, %r113, 8, 8;
	bfi.b32 	%r116, %r115, %r112, 16, 16;
	mov.b64	%rd9, {%r116, %r109};
	ld.global.v4.u8 	{%rs85, %rs86, %rs87, %rs88}, [%rd2+56];
	cvt.u32.u16	%r117, %rs88;
	cvt.u32.u16	%r118, %rs87;
	bfi.b32 	%r119, %r118, %r117, 8, 8;
	cvt.u32.u16	%r120, %rs86;
	cvt.u32.u16	%r121, %rs85;
	bfi.b32 	%r122, %r121, %r120, 8, 8;
	bfi.b32 	%r123, %r122, %r119, 16, 16;
	ld.global.v4.u8 	{%rs91, %rs92, %rs93, %rs94}, [%rd2+60];
	cvt.u32.u16	%r124, %rs94;
	cvt.u32.u16	%r125, %rs93;
	bfi.b32 	%r126, %r125, %r124, 8, 8;
	cvt.u32.u16	%r127, %rs92;
	cvt.u32.u16	%r128, %rs91;
	bfi.b32 	%r129, %r128, %r127, 8, 8;
	bfi.b32 	%r130, %r129, %r126, 16, 16;
	mov.b64	%rd10, {%r130, %r123};
	mov.u64 	%rd1796, 128;
	mov.u64 	%rd182, 0;
	mov.u64 	%rd1795, %rd182;
	mov.u64 	%rd1794, %rd182;
	mov.u64 	%rd1793, %rd182;
	mov.u64 	%rd1792, %rd182;
	mov.u64 	%rd1791, %rd182;
	mov.u64 	%rd1790, 72620543991349248;
	mov.u32 	%r823, -14;
	mov.u64 	%rd1789, %rd182;
	mov.u64 	%rd1807, %rd182;
	mov.u64 	%rd1811, %rd10;
	mov.u64 	%rd1814, %rd9;
	mov.u64 	%rd1817, %rd8;
	mov.u64 	%rd1820, %rd7;
	mov.u64 	%rd1823, %rd6;
	mov.u64 	%rd1826, %rd5;
	mov.u64 	%rd1829, %rd4;
	mov.u64 	%rd1832, %rd3;

BB1_3:
	mov.u64 	%rd27, %rd1832;
	mov.u64 	%rd26, %rd1829;
	mov.u64 	%rd25, %rd1826;
	mov.u64 	%rd24, %rd1823;
	mov.u64 	%rd23, %rd1820;
	mov.u64 	%rd22, %rd1817;
	mov.u64 	%rd21, %rd1814;
	mov.u64 	%rd20, %rd1811;
	mov.u64 	%rd18, %rd1807;
	add.s64 	%rd195, %rd1789, 16;
	xor.b64  	%rd196, %rd26, %rd195;
	mov.b64	{%r132, %r133}, %rd196;
	add.s64 	%rd197, %rd1789, 32;
	xor.b64  	%rd198, %rd25, %rd197;
	mov.b64	{%r134, %r135}, %rd198;
	add.s64 	%rd199, %rd1789, 48;
	xor.b64  	%rd200, %rd24, %rd199;
	mov.b64	{%r136, %r137}, %rd200;
	add.s64 	%rd201, %rd1789, 64;
	xor.b64  	%rd202, %rd23, %rd201;
	mov.b64	{%r138, %r139}, %rd202;
	add.s64 	%rd203, %rd1789, 80;
	xor.b64  	%rd204, %rd22, %rd203;
	mov.b64	{%r140, %r141}, %rd204;
	add.s64 	%rd205, %rd1789, 96;
	xor.b64  	%rd206, %rd21, %rd205;
	mov.b64	{%r142, %r143}, %rd206;
	add.s64 	%rd207, %rd1789, 112;
	xor.b64  	%rd208, %rd20, %rd207;
	mov.b64	{%r144, %r145}, %rd208;
	add.s64 	%rd209, %rd1789, 128;
	xor.b64  	%rd210, %rd1796, %rd209;
	mov.b64	{%r146, %r147}, %rd210;
	add.s64 	%rd211, %rd1789, 144;
	xor.b64  	%rd212, %rd18, %rd211;
	mov.b64	{%r148, %r149}, %rd212;
	add.s64 	%rd213, %rd1789, 160;
	xor.b64  	%rd214, %rd1795, %rd213;
	mov.b64	{%r150, %r151}, %rd214;
	add.s64 	%rd215, %rd1789, 176;
	xor.b64  	%rd216, %rd1794, %rd215;
	mov.b64	{%r152, %r153}, %rd216;
	add.s64 	%rd217, %rd1789, 192;
	xor.b64  	%rd218, %rd1793, %rd217;
	mov.b64	{%r154, %r155}, %rd218;
	add.s64 	%rd219, %rd1789, 208;
	xor.b64  	%rd220, %rd1792, %rd219;
	mov.b64	{%r156, %r157}, %rd220;
	add.s64 	%rd221, %rd1789, 224;
	xor.b64  	%rd222, %rd1791, %rd221;
	mov.b64	{%r158, %r159}, %rd222;
	add.s64 	%rd223, %rd1789, 240;
	xor.b64  	%rd224, %rd1790, %rd223;
	mov.b64	{%r160, %r161}, %rd224;
	xor.b64  	%rd225, %rd27, %rd1789;
	mov.b64	{%r162, %r163}, %rd225;
	mov.b32	{%rs97, %rs98}, %r162;
	cvt.u32.u16	%r164, %rs97;
	and.b32  	%r165, %r164, 255;
	mul.wide.u32 	%rd226, %r165, 8;
	mov.u64 	%rd227, search1$T0_C;
	add.s64 	%rd228, %rd227, %rd226;
	mov.b32	{%rs99, %rs100}, %r132;
	shr.u16 	%rs101, %rs99, 8;
	cvt.u32.u16	%r166, %rs101;
	mul.wide.u32 	%rd229, %r166, 8;
	mov.u64 	%rd230, search1$T1_C;
	add.s64 	%rd231, %rd230, %rd229;
	ld.shared.u64 	%rd232, [%rd231];
	ld.shared.u64 	%rd233, [%rd228];
	xor.b64  	%rd234, %rd232, %rd233;
	mov.b32	{%rs102, %rs103}, %r134;
	cvt.u32.u16	%r167, %rs103;
	and.b32  	%r168, %r167, 255;
	mul.wide.u32 	%rd235, %r168, 8;
	mov.u64 	%rd236, search1$T2_C;
	add.s64 	%rd237, %rd236, %rd235;
	ld.shared.u64 	%rd238, [%rd237];
	xor.b64  	%rd239, %rd234, %rd238;
	mov.b32	{%rs104, %rs105}, %r136;
	shr.u16 	%rs106, %rs105, 8;
	cvt.u32.u16	%r169, %rs106;
	mul.wide.u32 	%rd240, %r169, 8;
	mov.u64 	%rd241, search1$T3_C;
	add.s64 	%rd242, %rd241, %rd240;
	ld.shared.u64 	%rd243, [%rd242];
	xor.b64  	%rd244, %rd239, %rd243;
	mov.b32	{%rs107, %rs108}, %r139;
	cvt.u32.u16	%r170, %rs107;
	and.b32  	%r171, %r170, 255;
	mul.wide.u32 	%rd245, %r171, 8;
	mov.u64 	%rd246, search1$T4_C;
	add.s64 	%rd247, %rd246, %rd245;
	ld.shared.u64 	%rd248, [%rd247];
	xor.b64  	%rd249, %rd244, %rd248;
	mov.b32	{%rs109, %rs110}, %r141;
	shr.u16 	%rs111, %rs109, 8;
	cvt.u32.u16	%r172, %rs111;
	mul.wide.u32 	%rd250, %r172, 8;
	mov.u64 	%rd251, search1$T5_C;
	add.s64 	%rd252, %rd251, %rd250;
	ld.shared.u64 	%rd253, [%rd252];
	xor.b64  	%rd254, %rd249, %rd253;
	mov.b32	{%rs112, %rs113}, %r143;
	cvt.u32.u16	%r173, %rs113;
	and.b32  	%r174, %r173, 255;
	mul.wide.u32 	%rd255, %r174, 8;
	mov.u64 	%rd256, search1$T6_C;
	add.s64 	%rd257, %rd256, %rd255;
	ld.shared.u64 	%rd258, [%rd257];
	xor.b64  	%rd259, %rd254, %rd258;
	mov.b32	{%rs114, %rs115}, %r153;
	shr.u16 	%rs116, %rs115, 8;
	cvt.u32.u16	%r175, %rs116;
	mul.wide.u32 	%rd260, %r175, 8;
	mov.u64 	%rd261, search1$T7_C;
	add.s64 	%rd262, %rd261, %rd260;
	ld.shared.u64 	%rd263, [%rd262];
	xor.b64  	%rd28, %rd259, %rd263;
	cvt.u32.u16	%r176, %rs99;
	and.b32  	%r177, %r176, 255;
	mul.wide.u32 	%rd264, %r177, 8;
	add.s64 	%rd265, %rd227, %rd264;
	shr.u16 	%rs117, %rs102, 8;
	cvt.u32.u16	%r178, %rs117;
	mul.wide.u32 	%rd266, %r178, 8;
	add.s64 	%rd267, %rd230, %rd266;
	ld.shared.u64 	%rd268, [%rd267];
	ld.shared.u64 	%rd269, [%rd265];
	xor.b64  	%rd270, %rd268, %rd269;
	cvt.u32.u16	%r179, %rs105;
	and.b32  	%r180, %r179, 255;
	mul.wide.u32 	%rd271, %r180, 8;
	add.s64 	%rd272, %rd236, %rd271;
	ld.shared.u64 	%rd273, [%rd272];
	xor.b64  	%rd274, %rd270, %rd273;
	mov.b32	{%rs118, %rs119}, %r138;
	shr.u16 	%rs120, %rs119, 8;
	cvt.u32.u16	%r181, %rs120;
	mul.wide.u32 	%rd275, %r181, 8;
	add.s64 	%rd276, %rd241, %rd275;
	ld.shared.u64 	%rd277, [%rd276];
	xor.b64  	%rd278, %rd274, %rd277;
	cvt.u32.u16	%r182, %rs109;
	and.b32  	%r183, %r182, 255;
	mul.wide.u32 	%rd279, %r183, 8;
	add.s64 	%rd280, %rd246, %rd279;
	ld.shared.u64 	%rd281, [%rd280];
	xor.b64  	%rd282, %rd278, %rd281;
	shr.u16 	%rs121, %rs112, 8;
	cvt.u32.u16	%r184, %rs121;
	mul.wide.u32 	%rd283, %r184, 8;
	add.s64 	%rd284, %rd251, %rd283;
	ld.shared.u64 	%rd285, [%rd284];
	xor.b64  	%rd286, %rd282, %rd285;
	mov.b32	{%rs122, %rs123}, %r145;
	cvt.u32.u16	%r185, %rs123;
	and.b32  	%r186, %r185, 255;
	mul.wide.u32 	%rd287, %r186, 8;
	add.s64 	%rd288, %rd256, %rd287;
	ld.shared.u64 	%rd289, [%rd288];
	xor.b64  	%rd290, %rd286, %rd289;
	mov.b32	{%rs124, %rs125}, %r155;
	shr.u16 	%rs126, %rs125, 8;
	cvt.u32.u16	%r187, %rs126;
	mul.wide.u32 	%rd291, %r187, 8;
	add.s64 	%rd292, %rd261, %rd291;
	ld.shared.u64 	%rd293, [%rd292];
	xor.b64  	%rd29, %rd290, %rd293;
	cvt.u32.u16	%r188, %rs102;
	and.b32  	%r189, %r188, 255;
	mul.wide.u32 	%rd294, %r189, 8;
	add.s64 	%rd295, %rd227, %rd294;
	shr.u16 	%rs127, %rs104, 8;
	cvt.u32.u16	%r190, %rs127;
	mul.wide.u32 	%rd296, %r190, 8;
	add.s64 	%rd297, %rd230, %rd296;
	ld.shared.u64 	%rd298, [%rd297];
	ld.shared.u64 	%rd299, [%rd295];
	xor.b64  	%rd300, %rd298, %rd299;
	cvt.u32.u16	%r191, %rs119;
	and.b32  	%r192, %r191, 255;
	mul.wide.u32 	%rd301, %r192, 8;
	add.s64 	%rd302, %rd236, %rd301;
	ld.shared.u64 	%rd303, [%rd302];
	xor.b64  	%rd304, %rd300, %rd303;
	mov.b32	{%rs128, %rs129}, %r140;
	shr.u16 	%rs130, %rs129, 8;
	cvt.u32.u16	%r193, %rs130;
	mul.wide.u32 	%rd305, %r193, 8;
	add.s64 	%rd306, %rd241, %rd305;
	ld.shared.u64 	%rd307, [%rd306];
	xor.b64  	%rd308, %rd304, %rd307;
	cvt.u32.u16	%r194, %rs112;
	and.b32  	%r195, %r194, 255;
	mul.wide.u32 	%rd309, %r195, 8;
	add.s64 	%rd310, %rd246, %rd309;
	ld.shared.u64 	%rd311, [%rd310];
	xor.b64  	%rd312, %rd308, %rd311;
	shr.u16 	%rs131, %rs122, 8;
	cvt.u32.u16	%r196, %rs131;
	mul.wide.u32 	%rd313, %r196, 8;
	add.s64 	%rd314, %rd251, %rd313;
	ld.shared.u64 	%rd315, [%rd314];
	xor.b64  	%rd316, %rd312, %rd315;
	mov.b32	{%rs132, %rs133}, %r147;
	cvt.u32.u16	%r197, %rs133;
	and.b32  	%r198, %r197, 255;
	mul.wide.u32 	%rd317, %r198, 8;
	add.s64 	%rd318, %rd256, %rd317;
	ld.shared.u64 	%rd319, [%rd318];
	xor.b64  	%rd320, %rd316, %rd319;
	mov.b32	{%rs134, %rs135}, %r157;
	shr.u16 	%rs136, %rs135, 8;
	cvt.u32.u16	%r199, %rs136;
	mul.wide.u32 	%rd321, %r199, 8;
	add.s64 	%rd322, %rd261, %rd321;
	ld.shared.u64 	%rd323, [%rd322];
	xor.b64  	%rd30, %rd320, %rd323;
	cvt.u32.u16	%r200, %rs104;
	and.b32  	%r201, %r200, 255;
	mul.wide.u32 	%rd324, %r201, 8;
	add.s64 	%rd325, %rd227, %rd324;
	shr.u16 	%rs137, %rs118, 8;
	cvt.u32.u16	%r202, %rs137;
	mul.wide.u32 	%rd326, %r202, 8;
	add.s64 	%rd327, %rd230, %rd326;
	ld.shared.u64 	%rd328, [%rd327];
	ld.shared.u64 	%rd329, [%rd325];
	xor.b64  	%rd330, %rd328, %rd329;
	cvt.u32.u16	%r203, %rs129;
	and.b32  	%r204, %r203, 255;
	mul.wide.u32 	%rd331, %r204, 8;
	add.s64 	%rd332, %rd236, %rd331;
	ld.shared.u64 	%rd333, [%rd332];
	xor.b64  	%rd334, %rd330, %rd333;
	mov.b32	{%rs138, %rs139}, %r142;
	shr.u16 	%rs140, %rs139, 8;
	cvt.u32.u16	%r205, %rs140;
	mul.wide.u32 	%rd335, %r205, 8;
	add.s64 	%rd336, %rd241, %rd335;
	ld.shared.u64 	%rd337, [%rd336];
	xor.b64  	%rd338, %rd334, %rd337;
	cvt.u32.u16	%r206, %rs122;
	and.b32  	%r207, %r206, 255;
	mul.wide.u32 	%rd339, %r207, 8;
	add.s64 	%rd340, %rd246, %rd339;
	ld.shared.u64 	%rd341, [%rd340];
	xor.b64  	%rd342, %rd338, %rd341;
	shr.u16 	%rs141, %rs132, 8;
	cvt.u32.u16	%r208, %rs141;
	mul.wide.u32 	%rd343, %r208, 8;
	add.s64 	%rd344, %rd251, %rd343;
	ld.shared.u64 	%rd345, [%rd344];
	xor.b64  	%rd346, %rd342, %rd345;
	mov.b32	{%rs142, %rs143}, %r149;
	cvt.u32.u16	%r209, %rs143;
	and.b32  	%r210, %r209, 255;
	mul.wide.u32 	%rd347, %r210, 8;
	add.s64 	%rd348, %rd256, %rd347;
	ld.shared.u64 	%rd349, [%rd348];
	xor.b64  	%rd350, %rd346, %rd349;
	mov.b32	{%rs144, %rs145}, %r159;
	shr.u16 	%rs146, %rs145, 8;
	cvt.u32.u16	%r211, %rs146;
	mul.wide.u32 	%rd351, %r211, 8;
	add.s64 	%rd352, %rd261, %rd351;
	ld.shared.u64 	%rd353, [%rd352];
	xor.b64  	%rd31, %rd350, %rd353;
	cvt.u32.u16	%r212, %rs118;
	and.b32  	%r213, %r212, 255;
	mul.wide.u32 	%rd354, %r213, 8;
	add.s64 	%rd355, %rd227, %rd354;
	shr.u16 	%rs147, %rs128, 8;
	cvt.u32.u16	%r214, %rs147;
	mul.wide.u32 	%rd356, %r214, 8;
	add.s64 	%rd357, %rd230, %rd356;
	ld.shared.u64 	%rd358, [%rd357];
	ld.shared.u64 	%rd359, [%rd355];
	xor.b64  	%rd360, %rd358, %rd359;
	cvt.u32.u16	%r215, %rs139;
	and.b32  	%r216, %r215, 255;
	mul.wide.u32 	%rd361, %r216, 8;
	add.s64 	%rd362, %rd236, %rd361;
	ld.shared.u64 	%rd363, [%rd362];
	xor.b64  	%rd364, %rd360, %rd363;
	mov.b32	{%rs148, %rs149}, %r144;
	shr.u16 	%rs150, %rs149, 8;
	cvt.u32.u16	%r217, %rs150;
	mul.wide.u32 	%rd365, %r217, 8;
	add.s64 	%rd366, %rd241, %rd365;
	ld.shared.u64 	%rd367, [%rd366];
	xor.b64  	%rd368, %rd364, %rd367;
	cvt.u32.u16	%r218, %rs132;
	and.b32  	%r219, %r218, 255;
	mul.wide.u32 	%rd369, %r219, 8;
	add.s64 	%rd370, %rd246, %rd369;
	ld.shared.u64 	%rd371, [%rd370];
	xor.b64  	%rd372, %rd368, %rd371;
	shr.u16 	%rs151, %rs142, 8;
	cvt.u32.u16	%r220, %rs151;
	mul.wide.u32 	%rd373, %r220, 8;
	add.s64 	%rd374, %rd251, %rd373;
	ld.shared.u64 	%rd375, [%rd374];
	xor.b64  	%rd376, %rd372, %rd375;
	mov.b32	{%rs152, %rs153}, %r151;
	cvt.u32.u16	%r221, %rs153;
	and.b32  	%r222, %r221, 255;
	mul.wide.u32 	%rd377, %r222, 8;
	add.s64 	%rd378, %rd256, %rd377;
	ld.shared.u64 	%rd379, [%rd378];
	xor.b64  	%rd380, %rd376, %rd379;
	mov.b32	{%rs154, %rs155}, %r161;
	shr.u16 	%rs156, %rs155, 8;
	cvt.u32.u16	%r223, %rs156;
	mul.wide.u32 	%rd381, %r223, 8;
	add.s64 	%rd382, %rd261, %rd381;
	ld.shared.u64 	%rd383, [%rd382];
	xor.b64  	%rd32, %rd380, %rd383;
	cvt.u32.u16	%r224, %rs128;
	and.b32  	%r225, %r224, 255;
	mul.wide.u32 	%rd384, %r225, 8;
	add.s64 	%rd385, %rd227, %rd384;
	shr.u16 	%rs157, %rs138, 8;
	cvt.u32.u16	%r226, %rs157;
	mul.wide.u32 	%rd386, %r226, 8;
	add.s64 	%rd387, %rd230, %rd386;
	ld.shared.u64 	%rd388, [%rd387];
	ld.shared.u64 	%rd389, [%rd385];
	xor.b64  	%rd390, %rd388, %rd389;
	cvt.u32.u16	%r227, %rs149;
	and.b32  	%r228, %r227, 255;
	mul.wide.u32 	%rd391, %r228, 8;
	add.s64 	%rd392, %rd236, %rd391;
	ld.shared.u64 	%rd393, [%rd392];
	xor.b64  	%rd394, %rd390, %rd393;
	mov.b32	{%rs158, %rs159}, %r146;
	shr.u16 	%rs160, %rs159, 8;
	cvt.u32.u16	%r229, %rs160;
	mul.wide.u32 	%rd395, %r229, 8;
	add.s64 	%rd396, %rd241, %rd395;
	ld.shared.u64 	%rd397, [%rd396];
	xor.b64  	%rd398, %rd394, %rd397;
	cvt.u32.u16	%r230, %rs142;
	and.b32  	%r231, %r230, 255;
	mul.wide.u32 	%rd399, %r231, 8;
	add.s64 	%rd400, %rd246, %rd399;
	ld.shared.u64 	%rd401, [%rd400];
	xor.b64  	%rd402, %rd398, %rd401;
	shr.u16 	%rs161, %rs152, 8;
	cvt.u32.u16	%r232, %rs161;
	mul.wide.u32 	%rd403, %r232, 8;
	add.s64 	%rd404, %rd251, %rd403;
	ld.shared.u64 	%rd405, [%rd404];
	xor.b64  	%rd406, %rd402, %rd405;
	cvt.u32.u16	%r233, %rs115;
	and.b32  	%r234, %r233, 255;
	mul.wide.u32 	%rd407, %r234, 8;
	add.s64 	%rd408, %rd256, %rd407;
	ld.shared.u64 	%rd409, [%rd408];
	xor.b64  	%rd410, %rd406, %rd409;
	mov.b32	{%rs162, %rs163}, %r163;
	shr.u16 	%rs164, %rs163, 8;
	cvt.u32.u16	%r235, %rs164;
	mul.wide.u32 	%rd411, %r235, 8;
	add.s64 	%rd412, %rd261, %rd411;
	ld.shared.u64 	%rd413, [%rd412];
	xor.b64  	%rd33, %rd410, %rd413;
	cvt.u32.u16	%r236, %rs138;
	and.b32  	%r237, %r236, 255;
	mul.wide.u32 	%rd414, %r237, 8;
	add.s64 	%rd415, %rd227, %rd414;
	shr.u16 	%rs165, %rs148, 8;
	cvt.u32.u16	%r238, %rs165;
	mul.wide.u32 	%rd416, %r238, 8;
	add.s64 	%rd417, %rd230, %rd416;
	ld.shared.u64 	%rd418, [%rd417];
	ld.shared.u64 	%rd419, [%rd415];
	xor.b64  	%rd420, %rd418, %rd419;
	cvt.u32.u16	%r239, %rs159;
	and.b32  	%r240, %r239, 255;
	mul.wide.u32 	%rd421, %r240, 8;
	add.s64 	%rd422, %rd236, %rd421;
	ld.shared.u64 	%rd423, [%rd422];
	xor.b64  	%rd424, %rd420, %rd423;
	mov.b32	{%rs166, %rs167}, %r148;
	shr.u16 	%rs168, %rs167, 8;
	cvt.u32.u16	%r241, %rs168;
	mul.wide.u32 	%rd425, %r241, 8;
	add.s64 	%rd426, %rd241, %rd425;
	ld.shared.u64 	%rd427, [%rd426];
	xor.b64  	%rd428, %rd424, %rd427;
	cvt.u32.u16	%r242, %rs152;
	and.b32  	%r243, %r242, 255;
	mul.wide.u32 	%rd429, %r243, 8;
	add.s64 	%rd430, %rd246, %rd429;
	ld.shared.u64 	%rd431, [%rd430];
	xor.b64  	%rd432, %rd428, %rd431;
	shr.u16 	%rs169, %rs114, 8;
	cvt.u32.u16	%r244, %rs169;
	mul.wide.u32 	%rd433, %r244, 8;
	add.s64 	%rd434, %rd251, %rd433;
	ld.shared.u64 	%rd435, [%rd434];
	xor.b64  	%rd436, %rd432, %rd435;
	cvt.u32.u16	%r245, %rs125;
	and.b32  	%r246, %r245, 255;
	mul.wide.u32 	%rd437, %r246, 8;
	add.s64 	%rd438, %rd256, %rd437;
	ld.shared.u64 	%rd439, [%rd438];
	xor.b64  	%rd440, %rd436, %rd439;
	mov.b32	{%rs170, %rs171}, %r133;
	shr.u16 	%rs172, %rs171, 8;
	cvt.u32.u16	%r247, %rs172;
	mul.wide.u32 	%rd441, %r247, 8;
	add.s64 	%rd442, %rd261, %rd441;
	ld.shared.u64 	%rd443, [%rd442];
	xor.b64  	%rd34, %rd440, %rd443;
	cvt.u32.u16	%r248, %rs148;
	and.b32  	%r249, %r248, 255;
	mul.wide.u32 	%rd444, %r249, 8;
	add.s64 	%rd445, %rd227, %rd444;
	shr.u16 	%rs173, %rs158, 8;
	cvt.u32.u16	%r250, %rs173;
	mul.wide.u32 	%rd446, %r250, 8;
	add.s64 	%rd447, %rd230, %rd446;
	ld.shared.u64 	%rd448, [%rd447];
	ld.shared.u64 	%rd449, [%rd445];
	xor.b64  	%rd450, %rd448, %rd449;
	cvt.u32.u16	%r251, %rs167;
	and.b32  	%r252, %r251, 255;
	mul.wide.u32 	%rd451, %r252, 8;
	add.s64 	%rd452, %rd236, %rd451;
	ld.shared.u64 	%rd453, [%rd452];
	xor.b64  	%rd454, %rd450, %rd453;
	mov.b32	{%rs174, %rs175}, %r150;
	shr.u16 	%rs176, %rs175, 8;
	cvt.u32.u16	%r253, %rs176;
	mul.wide.u32 	%rd455, %r253, 8;
	add.s64 	%rd456, %rd241, %rd455;
	ld.shared.u64 	%rd457, [%rd456];
	xor.b64  	%rd458, %rd454, %rd457;
	cvt.u32.u16	%r254, %rs114;
	and.b32  	%r255, %r254, 255;
	mul.wide.u32 	%rd459, %r255, 8;
	add.s64 	%rd460, %rd246, %rd459;
	ld.shared.u64 	%rd461, [%rd460];
	xor.b64  	%rd462, %rd458, %rd461;
	shr.u16 	%rs177, %rs124, 8;
	cvt.u32.u16	%r256, %rs177;
	mul.wide.u32 	%rd463, %r256, 8;
	add.s64 	%rd464, %rd251, %rd463;
	ld.shared.u64 	%rd465, [%rd464];
	xor.b64  	%rd466, %rd462, %rd465;
	cvt.u32.u16	%r257, %rs135;
	and.b32  	%r258, %r257, 255;
	mul.wide.u32 	%rd467, %r258, 8;
	add.s64 	%rd468, %rd256, %rd467;
	ld.shared.u64 	%rd469, [%rd468];
	xor.b64  	%rd470, %rd466, %rd469;
	mov.b32	{%rs178, %rs179}, %r135;
	shr.u16 	%rs180, %rs179, 8;
	cvt.u32.u16	%r259, %rs180;
	mul.wide.u32 	%rd471, %r259, 8;
	add.s64 	%rd472, %rd261, %rd471;
	ld.shared.u64 	%rd473, [%rd472];
	xor.b64  	%rd35, %rd470, %rd473;
	cvt.u32.u16	%r260, %rs158;
	and.b32  	%r261, %r260, 255;
	mul.wide.u32 	%rd474, %r261, 8;
	add.s64 	%rd475, %rd227, %rd474;
	shr.u16 	%rs181, %rs166, 8;
	cvt.u32.u16	%r262, %rs181;
	mul.wide.u32 	%rd476, %r262, 8;
	add.s64 	%rd477, %rd230, %rd476;
	ld.shared.u64 	%rd478, [%rd477];
	ld.shared.u64 	%rd479, [%rd475];
	xor.b64  	%rd480, %rd478, %rd479;
	cvt.u32.u16	%r263, %rs175;
	and.b32  	%r264, %r263, 255;
	mul.wide.u32 	%rd481, %r264, 8;
	add.s64 	%rd482, %rd236, %rd481;
	ld.shared.u64 	%rd483, [%rd482];
	xor.b64  	%rd484, %rd480, %rd483;
	mov.b32	{%rs182, %rs183}, %r152;
	shr.u16 	%rs184, %rs183, 8;
	cvt.u32.u16	%r265, %rs184;
	mul.wide.u32 	%rd485, %r265, 8;
	add.s64 	%rd486, %rd241, %rd485;
	ld.shared.u64 	%rd487, [%rd486];
	xor.b64  	%rd488, %rd484, %rd487;
	cvt.u32.u16	%r266, %rs124;
	and.b32  	%r267, %r266, 255;
	mul.wide.u32 	%rd489, %r267, 8;
	add.s64 	%rd490, %rd246, %rd489;
	ld.shared.u64 	%rd491, [%rd490];
	xor.b64  	%rd492, %rd488, %rd491;
	shr.u16 	%rs185, %rs134, 8;
	cvt.u32.u16	%r268, %rs185;
	mul.wide.u32 	%rd493, %r268, 8;
	add.s64 	%rd494, %rd251, %rd493;
	ld.shared.u64 	%rd495, [%rd494];
	xor.b64  	%rd496, %rd492, %rd495;
	cvt.u32.u16	%r269, %rs145;
	and.b32  	%r270, %r269, 255;
	mul.wide.u32 	%rd497, %r270, 8;
	add.s64 	%rd498, %rd256, %rd497;
	ld.shared.u64 	%rd499, [%rd498];
	xor.b64  	%rd500, %rd496, %rd499;
	mov.b32	{%rs186, %rs187}, %r137;
	shr.u16 	%rs188, %rs187, 8;
	cvt.u32.u16	%r271, %rs188;
	mul.wide.u32 	%rd501, %r271, 8;
	add.s64 	%rd502, %rd261, %rd501;
	ld.shared.u64 	%rd503, [%rd502];
	xor.b64  	%rd1796, %rd500, %rd503;
	cvt.u32.u16	%r272, %rs166;
	and.b32  	%r273, %r272, 255;
	mul.wide.u32 	%rd504, %r273, 8;
	add.s64 	%rd505, %rd227, %rd504;
	shr.u16 	%rs189, %rs174, 8;
	cvt.u32.u16	%r274, %rs189;
	mul.wide.u32 	%rd506, %r274, 8;
	add.s64 	%rd507, %rd230, %rd506;
	ld.shared.u64 	%rd508, [%rd507];
	ld.shared.u64 	%rd509, [%rd505];
	xor.b64  	%rd510, %rd508, %rd509;
	cvt.u32.u16	%r275, %rs183;
	and.b32  	%r276, %r275, 255;
	mul.wide.u32 	%rd511, %r276, 8;
	add.s64 	%rd512, %rd236, %rd511;
	ld.shared.u64 	%rd513, [%rd512];
	xor.b64  	%rd514, %rd510, %rd513;
	mov.b32	{%rs190, %rs191}, %r154;
	shr.u16 	%rs192, %rs191, 8;
	cvt.u32.u16	%r277, %rs192;
	mul.wide.u32 	%rd515, %r277, 8;
	add.s64 	%rd516, %rd241, %rd515;
	ld.shared.u64 	%rd517, [%rd516];
	xor.b64  	%rd518, %rd514, %rd517;
	cvt.u32.u16	%r278, %rs134;
	and.b32  	%r279, %r278, 255;
	mul.wide.u32 	%rd519, %r279, 8;
	add.s64 	%rd520, %rd246, %rd519;
	ld.shared.u64 	%rd521, [%rd520];
	xor.b64  	%rd522, %rd518, %rd521;
	shr.u16 	%rs193, %rs144, 8;
	cvt.u32.u16	%r280, %rs193;
	mul.wide.u32 	%rd523, %r280, 8;
	add.s64 	%rd524, %rd251, %rd523;
	ld.shared.u64 	%rd525, [%rd524];
	xor.b64  	%rd526, %rd522, %rd525;
	cvt.u32.u16	%r281, %rs155;
	and.b32  	%r282, %r281, 255;
	mul.wide.u32 	%rd527, %r282, 8;
	add.s64 	%rd528, %rd256, %rd527;
	ld.shared.u64 	%rd529, [%rd528];
	xor.b64  	%rd530, %rd526, %rd529;
	shr.u16 	%rs194, %rs108, 8;
	cvt.u32.u16	%r283, %rs194;
	mul.wide.u32 	%rd531, %r283, 8;
	add.s64 	%rd532, %rd261, %rd531;
	ld.shared.u64 	%rd533, [%rd532];
	xor.b64  	%rd37, %rd530, %rd533;
	cvt.u32.u16	%r284, %rs174;
	and.b32  	%r285, %r284, 255;
	mul.wide.u32 	%rd534, %r285, 8;
	add.s64 	%rd535, %rd227, %rd534;
	shr.u16 	%rs195, %rs182, 8;
	cvt.u32.u16	%r286, %rs195;
	mul.wide.u32 	%rd536, %r286, 8;
	add.s64 	%rd537, %rd230, %rd536;
	ld.shared.u64 	%rd538, [%rd537];
	ld.shared.u64 	%rd539, [%rd535];
	xor.b64  	%rd540, %rd538, %rd539;
	cvt.u32.u16	%r287, %rs191;
	and.b32  	%r288, %r287, 255;
	mul.wide.u32 	%rd541, %r288, 8;
	add.s64 	%rd542, %rd236, %rd541;
	ld.shared.u64 	%rd543, [%rd542];
	xor.b64  	%rd544, %rd540, %rd543;
	mov.b32	{%rs196, %rs197}, %r156;
	shr.u16 	%rs198, %rs197, 8;
	cvt.u32.u16	%r289, %rs198;
	mul.wide.u32 	%rd545, %r289, 8;
	add.s64 	%rd546, %rd241, %rd545;
	ld.shared.u64 	%rd547, [%rd546];
	xor.b64  	%rd548, %rd544, %rd547;
	cvt.u32.u16	%r290, %rs144;
	and.b32  	%r291, %r290, 255;
	mul.wide.u32 	%rd549, %r291, 8;
	add.s64 	%rd550, %rd246, %rd549;
	ld.shared.u64 	%rd551, [%rd550];
	xor.b64  	%rd552, %rd548, %rd551;
	shr.u16 	%rs199, %rs154, 8;
	cvt.u32.u16	%r292, %rs199;
	mul.wide.u32 	%rd553, %r292, 8;
	add.s64 	%rd554, %rd251, %rd553;
	ld.shared.u64 	%rd555, [%rd554];
	xor.b64  	%rd556, %rd552, %rd555;
	cvt.u32.u16	%r293, %rs163;
	and.b32  	%r294, %r293, 255;
	mul.wide.u32 	%rd557, %r294, 8;
	add.s64 	%rd558, %rd256, %rd557;
	ld.shared.u64 	%rd559, [%rd558];
	xor.b64  	%rd560, %rd556, %rd559;
	shr.u16 	%rs200, %rs110, 8;
	cvt.u32.u16	%r295, %rs200;
	mul.wide.u32 	%rd561, %r295, 8;
	add.s64 	%rd562, %rd261, %rd561;
	ld.shared.u64 	%rd563, [%rd562];
	xor.b64  	%rd1795, %rd560, %rd563;
	cvt.u32.u16	%r296, %rs182;
	and.b32  	%r297, %r296, 255;
	mul.wide.u32 	%rd564, %r297, 8;
	add.s64 	%rd565, %rd227, %rd564;
	shr.u16 	%rs201, %rs190, 8;
	cvt.u32.u16	%r298, %rs201;
	mul.wide.u32 	%rd566, %r298, 8;
	add.s64 	%rd567, %rd230, %rd566;
	ld.shared.u64 	%rd568, [%rd567];
	ld.shared.u64 	%rd569, [%rd565];
	xor.b64  	%rd570, %rd568, %rd569;
	cvt.u32.u16	%r299, %rs197;
	and.b32  	%r300, %r299, 255;
	mul.wide.u32 	%rd571, %r300, 8;
	add.s64 	%rd572, %rd236, %rd571;
	ld.shared.u64 	%rd573, [%rd572];
	xor.b64  	%rd574, %rd570, %rd573;
	mov.b32	{%rs202, %rs203}, %r158;
	shr.u16 	%rs204, %rs203, 8;
	cvt.u32.u16	%r301, %rs204;
	mul.wide.u32 	%rd575, %r301, 8;
	add.s64 	%rd576, %rd241, %rd575;
	ld.shared.u64 	%rd577, [%rd576];
	xor.b64  	%rd578, %rd574, %rd577;
	cvt.u32.u16	%r302, %rs154;
	and.b32  	%r303, %r302, 255;
	mul.wide.u32 	%rd579, %r303, 8;
	add.s64 	%rd580, %rd246, %rd579;
	ld.shared.u64 	%rd581, [%rd580];
	xor.b64  	%rd582, %rd578, %rd581;
	shr.u16 	%rs205, %rs162, 8;
	cvt.u32.u16	%r304, %rs205;
	mul.wide.u32 	%rd583, %r304, 8;
	add.s64 	%rd584, %rd251, %rd583;
	ld.shared.u64 	%rd585, [%rd584];
	xor.b64  	%rd586, %rd582, %rd585;
	cvt.u32.u16	%r305, %rs171;
	and.b32  	%r306, %r305, 255;
	mul.wide.u32 	%rd587, %r306, 8;
	add.s64 	%rd588, %rd256, %rd587;
	ld.shared.u64 	%rd589, [%rd588];
	xor.b64  	%rd590, %rd586, %rd589;
	shr.u16 	%rs206, %rs113, 8;
	cvt.u32.u16	%r307, %rs206;
	mul.wide.u32 	%rd591, %r307, 8;
	add.s64 	%rd592, %rd261, %rd591;
	ld.shared.u64 	%rd593, [%rd592];
	xor.b64  	%rd1794, %rd590, %rd593;
	cvt.u32.u16	%r308, %rs190;
	and.b32  	%r309, %r308, 255;
	mul.wide.u32 	%rd594, %r309, 8;
	add.s64 	%rd595, %rd227, %rd594;
	shr.u16 	%rs207, %rs196, 8;
	cvt.u32.u16	%r310, %rs207;
	mul.wide.u32 	%rd596, %r310, 8;
	add.s64 	%rd597, %rd230, %rd596;
	ld.shared.u64 	%rd598, [%rd597];
	ld.shared.u64 	%rd599, [%rd595];
	xor.b64  	%rd600, %rd598, %rd599;
	cvt.u32.u16	%r311, %rs203;
	and.b32  	%r312, %r311, 255;
	mul.wide.u32 	%rd601, %r312, 8;
	add.s64 	%rd602, %rd236, %rd601;
	ld.shared.u64 	%rd603, [%rd602];
	xor.b64  	%rd604, %rd600, %rd603;
	mov.b32	{%rs208, %rs209}, %r160;
	shr.u16 	%rs210, %rs209, 8;
	cvt.u32.u16	%r313, %rs210;
	mul.wide.u32 	%rd605, %r313, 8;
	add.s64 	%rd606, %rd241, %rd605;
	ld.shared.u64 	%rd607, [%rd606];
	xor.b64  	%rd608, %rd604, %rd607;
	cvt.u32.u16	%r314, %rs162;
	and.b32  	%r315, %r314, 255;
	mul.wide.u32 	%rd609, %r315, 8;
	add.s64 	%rd610, %rd246, %rd609;
	ld.shared.u64 	%rd611, [%rd610];
	xor.b64  	%rd612, %rd608, %rd611;
	shr.u16 	%rs211, %rs170, 8;
	cvt.u32.u16	%r316, %rs211;
	mul.wide.u32 	%rd613, %r316, 8;
	add.s64 	%rd614, %rd251, %rd613;
	ld.shared.u64 	%rd615, [%rd614];
	xor.b64  	%rd616, %rd612, %rd615;
	cvt.u32.u16	%r317, %rs179;
	and.b32  	%r318, %r317, 255;
	mul.wide.u32 	%rd617, %r318, 8;
	add.s64 	%rd618, %rd256, %rd617;
	ld.shared.u64 	%rd619, [%rd618];
	xor.b64  	%rd620, %rd616, %rd619;
	shr.u16 	%rs212, %rs123, 8;
	cvt.u32.u16	%r319, %rs212;
	mul.wide.u32 	%rd621, %r319, 8;
	add.s64 	%rd622, %rd261, %rd621;
	ld.shared.u64 	%rd623, [%rd622];
	xor.b64  	%rd1793, %rd620, %rd623;
	cvt.u32.u16	%r320, %rs196;
	and.b32  	%r321, %r320, 255;
	mul.wide.u32 	%rd624, %r321, 8;
	add.s64 	%rd625, %rd227, %rd624;
	shr.u16 	%rs213, %rs202, 8;
	cvt.u32.u16	%r322, %rs213;
	mul.wide.u32 	%rd626, %r322, 8;
	add.s64 	%rd627, %rd230, %rd626;
	ld.shared.u64 	%rd628, [%rd627];
	ld.shared.u64 	%rd629, [%rd625];
	xor.b64  	%rd630, %rd628, %rd629;
	cvt.u32.u16	%r323, %rs209;
	and.b32  	%r324, %r323, 255;
	mul.wide.u32 	%rd631, %r324, 8;
	add.s64 	%rd632, %rd236, %rd631;
	ld.shared.u64 	%rd633, [%rd632];
	xor.b64  	%rd634, %rd630, %rd633;
	shr.u16 	%rs214, %rs98, 8;
	cvt.u32.u16	%r325, %rs214;
	mul.wide.u32 	%rd635, %r325, 8;
	add.s64 	%rd636, %rd241, %rd635;
	ld.shared.u64 	%rd637, [%rd636];
	xor.b64  	%rd638, %rd634, %rd637;
	cvt.u32.u16	%r326, %rs170;
	and.b32  	%r327, %r326, 255;
	mul.wide.u32 	%rd639, %r327, 8;
	add.s64 	%rd640, %rd246, %rd639;
	ld.shared.u64 	%rd641, [%rd640];
	xor.b64  	%rd642, %rd638, %rd641;
	shr.u16 	%rs215, %rs178, 8;
	cvt.u32.u16	%r328, %rs215;
	mul.wide.u32 	%rd643, %r328, 8;
	add.s64 	%rd644, %rd251, %rd643;
	ld.shared.u64 	%rd645, [%rd644];
	xor.b64  	%rd646, %rd642, %rd645;
	cvt.u32.u16	%r329, %rs187;
	and.b32  	%r330, %r329, 255;
	mul.wide.u32 	%rd647, %r330, 8;
	add.s64 	%rd648, %rd256, %rd647;
	ld.shared.u64 	%rd649, [%rd648];
	xor.b64  	%rd650, %rd646, %rd649;
	shr.u16 	%rs216, %rs133, 8;
	cvt.u32.u16	%r331, %rs216;
	mul.wide.u32 	%rd651, %r331, 8;
	add.s64 	%rd652, %rd261, %rd651;
	ld.shared.u64 	%rd653, [%rd652];
	xor.b64  	%rd1792, %rd650, %rd653;
	cvt.u32.u16	%r332, %rs202;
	and.b32  	%r333, %r332, 255;
	mul.wide.u32 	%rd654, %r333, 8;
	add.s64 	%rd655, %rd227, %rd654;
	shr.u16 	%rs217, %rs208, 8;
	cvt.u32.u16	%r334, %rs217;
	mul.wide.u32 	%rd656, %r334, 8;
	add.s64 	%rd657, %rd230, %rd656;
	ld.shared.u64 	%rd658, [%rd657];
	ld.shared.u64 	%rd659, [%rd655];
	xor.b64  	%rd660, %rd658, %rd659;
	cvt.u32.u16	%r335, %rs98;
	and.b32  	%r336, %r335, 255;
	mul.wide.u32 	%rd661, %r336, 8;
	add.s64 	%rd662, %rd236, %rd661;
	ld.shared.u64 	%rd663, [%rd662];
	xor.b64  	%rd664, %rd660, %rd663;
	shr.u16 	%rs218, %rs100, 8;
	cvt.u32.u16	%r337, %rs218;
	mul.wide.u32 	%rd665, %r337, 8;
	add.s64 	%rd666, %rd241, %rd665;
	ld.shared.u64 	%rd667, [%rd666];
	xor.b64  	%rd668, %rd664, %rd667;
	cvt.u32.u16	%r338, %rs178;
	and.b32  	%r339, %r338, 255;
	mul.wide.u32 	%rd669, %r339, 8;
	add.s64 	%rd670, %rd246, %rd669;
	ld.shared.u64 	%rd671, [%rd670];
	xor.b64  	%rd672, %rd668, %rd671;
	shr.u16 	%rs219, %rs186, 8;
	cvt.u32.u16	%r340, %rs219;
	mul.wide.u32 	%rd673, %r340, 8;
	add.s64 	%rd674, %rd251, %rd673;
	ld.shared.u64 	%rd675, [%rd674];
	xor.b64  	%rd676, %rd672, %rd675;
	cvt.u32.u16	%r341, %rs108;
	and.b32  	%r342, %r341, 255;
	mul.wide.u32 	%rd677, %r342, 8;
	add.s64 	%rd678, %rd256, %rd677;
	ld.shared.u64 	%rd679, [%rd678];
	xor.b64  	%rd680, %rd676, %rd679;
	shr.u16 	%rs220, %rs143, 8;
	cvt.u32.u16	%r343, %rs220;
	mul.wide.u32 	%rd681, %r343, 8;
	add.s64 	%rd682, %rd261, %rd681;
	ld.shared.u64 	%rd683, [%rd682];
	xor.b64  	%rd1791, %rd680, %rd683;
	cvt.u32.u16	%r344, %rs208;
	and.b32  	%r345, %r344, 255;
	mul.wide.u32 	%rd684, %r345, 8;
	add.s64 	%rd685, %rd227, %rd684;
	shr.u16 	%rs221, %rs97, 8;
	cvt.u32.u16	%r346, %rs221;
	mul.wide.u32 	%rd686, %r346, 8;
	add.s64 	%rd687, %rd230, %rd686;
	ld.shared.u64 	%rd688, [%rd687];
	ld.shared.u64 	%rd689, [%rd685];
	xor.b64  	%rd690, %rd688, %rd689;
	cvt.u32.u16	%r347, %rs100;
	and.b32  	%r348, %r347, 255;
	mul.wide.u32 	%rd691, %r348, 8;
	add.s64 	%rd692, %rd236, %rd691;
	ld.shared.u64 	%rd693, [%rd692];
	xor.b64  	%rd694, %rd690, %rd693;
	shr.u16 	%rs222, %rs103, 8;
	cvt.u32.u16	%r349, %rs222;
	mul.wide.u32 	%rd695, %r349, 8;
	add.s64 	%rd696, %rd241, %rd695;
	ld.shared.u64 	%rd697, [%rd696];
	xor.b64  	%rd698, %rd694, %rd697;
	cvt.u32.u16	%r350, %rs186;
	and.b32  	%r351, %r350, 255;
	mul.wide.u32 	%rd699, %r351, 8;
	add.s64 	%rd700, %rd246, %rd699;
	ld.shared.u64 	%rd701, [%rd700];
	xor.b64  	%rd702, %rd698, %rd701;
	shr.u16 	%rs223, %rs107, 8;
	cvt.u32.u16	%r352, %rs223;
	mul.wide.u32 	%rd703, %r352, 8;
	add.s64 	%rd704, %rd251, %rd703;
	ld.shared.u64 	%rd705, [%rd704];
	xor.b64  	%rd706, %rd702, %rd705;
	cvt.u32.u16	%r353, %rs110;
	and.b32  	%r354, %r353, 255;
	mul.wide.u32 	%rd707, %r354, 8;
	add.s64 	%rd708, %rd256, %rd707;
	ld.shared.u64 	%rd709, [%rd708];
	xor.b64  	%rd710, %rd706, %rd709;
	shr.u16 	%rs224, %rs153, 8;
	cvt.u32.u16	%r355, %rs224;
	mul.wide.u32 	%rd711, %r355, 8;
	add.s64 	%rd712, %rd261, %rd711;
	ld.shared.u64 	%rd713, [%rd712];
	xor.b64  	%rd1790, %rd710, %rd713;
	add.s64 	%rd1789, %rd1789, 1;
	add.s32 	%r823, %r823, 1;
	setp.ne.s32	%p3, %r823, 0;
	mov.u64 	%rd1807, %rd37;
	mov.u64 	%rd1811, %rd35;
	mov.u64 	%rd1814, %rd34;
	mov.u64 	%rd1817, %rd33;
	mov.u64 	%rd1820, %rd32;
	mov.u64 	%rd1823, %rd31;
	mov.u64 	%rd1826, %rd30;
	mov.u64 	%rd1829, %rd29;
	mov.u64 	%rd1832, %rd28;
	@%p3 bra 	BB1_3;

	mov.u64 	%rd1808, 128;
	mov.u64 	%rd1804, %rd182;
	mov.u64 	%rd1803, %rd182;
	mov.u64 	%rd1802, %rd182;
	mov.u64 	%rd1801, %rd182;
	mov.u64 	%rd1800, %rd182;
	mov.u64 	%rd1799, 72057594037927936;
	mov.u32 	%r824, -14;
	mov.u64 	%rd1798, %rd182;
	mov.u64 	%rd1797, -1;
	mov.u64 	%rd1806, %rd182;
	mov.u64 	%rd1810, %rd10;
	mov.u64 	%rd1813, %rd9;
	mov.u64 	%rd1816, %rd8;
	mov.u64 	%rd1819, %rd7;
	mov.u64 	%rd1822, %rd6;
	mov.u64 	%rd1825, %rd5;
	mov.u64 	%rd1828, %rd4;
	mov.u64 	%rd1831, %rd3;

BB1_5:
	mov.u64 	%rd1785, search1$T7_C;
	mov.u64 	%rd1782, search1$T6_C;
	mov.u64 	%rd1781, search1$T5_C;
	mov.u64 	%rd1775, search1$T4_C;
	mov.u64 	%rd1774, search1$T3_C;
	mov.u64 	%rd1773, search1$T2_C;
	mov.u64 	%rd1772, search1$T1_C;
	mov.u64 	%rd1771, search1$T0_C;
	xor.b64  	%rd714, %rd1798, %rd1828;
	xor.b64  	%rd715, %rd714, -1152921504606846977;
	mov.b64	{%r356, %r357}, %rd715;
	xor.b64  	%rd716, %rd1798, %rd1825;
	xor.b64  	%rd717, %rd716, -2305843009213693953;
	mov.b64	{%r358, %r359}, %rd717;
	xor.b64  	%rd718, %rd1798, %rd1822;
	xor.b64  	%rd719, %rd718, -3458764513820540929;
	mov.b64	{%r360, %r361}, %rd719;
	xor.b64  	%rd720, %rd1798, %rd1819;
	xor.b64  	%rd721, %rd720, -4611686018427387905;
	mov.b64	{%r362, %r363}, %rd721;
	xor.b64  	%rd722, %rd1798, %rd1816;
	xor.b64  	%rd723, %rd722, -5764607523034234881;
	mov.b64	{%r364, %r365}, %rd723;
	xor.b64  	%rd724, %rd1798, %rd1813;
	xor.b64  	%rd725, %rd724, -6917529027641081857;
	mov.b64	{%r366, %r367}, %rd725;
	xor.b64  	%rd726, %rd1798, %rd1810;
	xor.b64  	%rd727, %rd726, -8070450532247928833;
	mov.b64	{%r368, %r369}, %rd727;
	xor.b64  	%rd728, %rd1798, %rd1808;
	xor.b64  	%rd729, %rd728, 9223372036854775807;
	mov.b64	{%r370, %r371}, %rd729;
	xor.b64  	%rd730, %rd1798, %rd1806;
	xor.b64  	%rd731, %rd730, 8070450532247928831;
	mov.b64	{%r372, %r373}, %rd731;
	xor.b64  	%rd732, %rd1798, %rd1804;
	xor.b64  	%rd733, %rd732, 6917529027641081855;
	mov.b64	{%r374, %r375}, %rd733;
	xor.b64  	%rd734, %rd1798, %rd1803;
	xor.b64  	%rd735, %rd734, 5764607523034234879;
	mov.b64	{%r376, %r377}, %rd735;
	xor.b64  	%rd736, %rd1798, %rd1802;
	xor.b64  	%rd737, %rd736, 4611686018427387903;
	mov.b64	{%r378, %r379}, %rd737;
	xor.b64  	%rd738, %rd1798, %rd1801;
	xor.b64  	%rd739, %rd738, 3458764513820540927;
	mov.b64	{%r380, %r381}, %rd739;
	xor.b64  	%rd740, %rd1798, %rd1800;
	xor.b64  	%rd741, %rd740, 2305843009213693951;
	mov.b64	{%r382, %r383}, %rd741;
	xor.b64  	%rd742, %rd1798, %rd1799;
	xor.b64  	%rd743, %rd742, 1152921504606846975;
	mov.b64	{%r384, %r385}, %rd743;
	mov.b32	{%rs225, %rs226}, %r356;
	cvt.u32.u16	%r386, %rs225;
	and.b32  	%r387, %r386, 255;
	mul.wide.u32 	%rd744, %r387, 8;
	add.s64 	%rd746, %rd1771, %rd744;
	mov.b32	{%rs227, %rs228}, %r360;
	shr.u16 	%rs229, %rs227, 8;
	cvt.u32.u16	%r388, %rs229;
	mul.wide.u32 	%rd747, %r388, 8;
	add.s64 	%rd749, %rd1772, %rd747;
	ld.shared.u64 	%rd750, [%rd749];
	ld.shared.u64 	%rd751, [%rd746];
	xor.b64  	%rd752, %rd750, %rd751;
	mov.b32	{%rs230, %rs231}, %r364;
	cvt.u32.u16	%r389, %rs231;
	and.b32  	%r390, %r389, 255;
	mul.wide.u32 	%rd753, %r390, 8;
	add.s64 	%rd755, %rd1773, %rd753;
	ld.shared.u64 	%rd756, [%rd755];
	xor.b64  	%rd757, %rd752, %rd756;
	mov.b32	{%rs232, %rs233}, %r376;
	shr.u16 	%rs234, %rs233, 8;
	cvt.u32.u16	%r391, %rs234;
	mul.wide.u32 	%rd758, %r391, 8;
	add.s64 	%rd760, %rd1774, %rd758;
	ld.shared.u64 	%rd761, [%rd760];
	xor.b64  	%rd762, %rd757, %rd761;
	xor.b64  	%rd763, %rd1831, %rd1797;
	mov.b64	{%r392, %r393}, %rd763;
	mov.b32	{%rs235, %rs236}, %r393;
	cvt.u32.u16	%r394, %rs235;
	and.b32  	%r395, %r394, 255;
	mul.wide.u32 	%rd764, %r395, 8;
	add.s64 	%rd766, %rd1775, %rd764;
	ld.shared.u64 	%rd767, [%rd766];
	xor.b64  	%rd768, %rd762, %rd767;
	mov.b32	{%rs237, %rs238}, %r359;
	shr.u16 	%rs239, %rs237, 8;
	cvt.u32.u16	%r396, %rs239;
	mul.wide.u32 	%rd769, %r396, 8;
	add.s64 	%rd771, %rd1781, %rd769;
	ld.shared.u64 	%rd772, [%rd771];
	xor.b64  	%rd773, %rd768, %rd772;
	mov.b32	{%rs240, %rs241}, %r363;
	cvt.u32.u16	%r397, %rs241;
	and.b32  	%r398, %r397, 255;
	mul.wide.u32 	%rd774, %r398, 8;
	add.s64 	%rd776, %rd1782, %rd774;
	ld.shared.u64 	%rd777, [%rd776];
	xor.b64  	%rd778, %rd773, %rd777;
	mov.b32	{%rs242, %rs243}, %r367;
	shr.u16 	%rs244, %rs243, 8;
	cvt.u32.u16	%r399, %rs244;
	mul.wide.u32 	%rd779, %r399, 8;
	add.s64 	%rd781, %rd1785, %rd779;
	ld.shared.u64 	%rd782, [%rd781];
	xor.b64  	%rd1831, %rd778, %rd782;
	mov.b32	{%rs245, %rs246}, %r358;
	cvt.u32.u16	%r400, %rs245;
	and.b32  	%r401, %r400, 255;
	mul.wide.u32 	%rd783, %r401, 8;
	add.s64 	%rd784, %rd1771, %rd783;
	mov.b32	{%rs247, %rs248}, %r362;
	shr.u16 	%rs249, %rs247, 8;
	cvt.u32.u16	%r402, %rs249;
	mul.wide.u32 	%rd785, %r402, 8;
	add.s64 	%rd786, %rd1772, %rd785;
	ld.shared.u64 	%rd787, [%rd786];
	ld.shared.u64 	%rd788, [%rd784];
	xor.b64  	%rd789, %rd787, %rd788;
	mov.b32	{%rs250, %rs251}, %r366;
	cvt.u32.u16	%r403, %rs251;
	and.b32  	%r404, %r403, 255;
	mul.wide.u32 	%rd790, %r404, 8;
	add.s64 	%rd791, %rd1773, %rd790;
	ld.shared.u64 	%rd792, [%rd791];
	xor.b64  	%rd793, %rd789, %rd792;
	mov.b32	{%rs252, %rs253}, %r378;
	shr.u16 	%rs254, %rs253, 8;
	cvt.u32.u16	%r405, %rs254;
	mul.wide.u32 	%rd794, %r405, 8;
	add.s64 	%rd795, %rd1774, %rd794;
	ld.shared.u64 	%rd796, [%rd795];
	xor.b64  	%rd797, %rd793, %rd796;
	mov.b32	{%rs255, %rs256}, %r357;
	cvt.u32.u16	%r406, %rs255;
	and.b32  	%r407, %r406, 255;
	mul.wide.u32 	%rd798, %r407, 8;
	add.s64 	%rd799, %rd1775, %rd798;
	ld.shared.u64 	%rd800, [%rd799];
	xor.b64  	%rd801, %rd797, %rd800;
	mov.b32	{%rs257, %rs258}, %r361;
	shr.u16 	%rs259, %rs257, 8;
	cvt.u32.u16	%r408, %rs259;
	mul.wide.u32 	%rd802, %r408, 8;
	add.s64 	%rd803, %rd1781, %rd802;
	ld.shared.u64 	%rd804, [%rd803];
	xor.b64  	%rd805, %rd801, %rd804;
	mov.b32	{%rs260, %rs261}, %r365;
	cvt.u32.u16	%r409, %rs261;
	and.b32  	%r410, %r409, 255;
	mul.wide.u32 	%rd806, %r410, 8;
	add.s64 	%rd807, %rd1782, %rd806;
	ld.shared.u64 	%rd808, [%rd807];
	xor.b64  	%rd809, %rd805, %rd808;
	mov.b32	{%rs262, %rs263}, %r369;
	shr.u16 	%rs264, %rs263, 8;
	cvt.u32.u16	%r411, %rs264;
	mul.wide.u32 	%rd810, %r411, 8;
	add.s64 	%rd811, %rd1785, %rd810;
	ld.shared.u64 	%rd812, [%rd811];
	xor.b64  	%rd1828, %rd809, %rd812;
	cvt.u32.u16	%r412, %rs227;
	and.b32  	%r413, %r412, 255;
	mul.wide.u32 	%rd813, %r413, 8;
	add.s64 	%rd814, %rd1771, %rd813;
	shr.u16 	%rs265, %rs230, 8;
	cvt.u32.u16	%r414, %rs265;
	mul.wide.u32 	%rd815, %r414, 8;
	add.s64 	%rd816, %rd1772, %rd815;
	ld.shared.u64 	%rd817, [%rd816];
	ld.shared.u64 	%rd818, [%rd814];
	xor.b64  	%rd819, %rd817, %rd818;
	mov.b32	{%rs266, %rs267}, %r368;
	cvt.u32.u16	%r415, %rs267;
	and.b32  	%r416, %r415, 255;
	mul.wide.u32 	%rd820, %r416, 8;
	add.s64 	%rd821, %rd1773, %rd820;
	ld.shared.u64 	%rd822, [%rd821];
	xor.b64  	%rd823, %rd819, %rd822;
	mov.b32	{%rs268, %rs269}, %r380;
	shr.u16 	%rs270, %rs269, 8;
	cvt.u32.u16	%r417, %rs270;
	mul.wide.u32 	%rd824, %r417, 8;
	add.s64 	%rd825, %rd1774, %rd824;
	ld.shared.u64 	%rd826, [%rd825];
	xor.b64  	%rd827, %rd823, %rd826;
	cvt.u32.u16	%r418, %rs237;
	and.b32  	%r419, %r418, 255;
	mul.wide.u32 	%rd828, %r419, 8;
	add.s64 	%rd829, %rd1775, %rd828;
	ld.shared.u64 	%rd830, [%rd829];
	xor.b64  	%rd831, %rd827, %rd830;
	shr.u16 	%rs271, %rs240, 8;
	cvt.u32.u16	%r420, %rs271;
	mul.wide.u32 	%rd832, %r420, 8;
	add.s64 	%rd833, %rd1781, %rd832;
	ld.shared.u64 	%rd834, [%rd833];
	xor.b64  	%rd835, %rd831, %rd834;
	cvt.u32.u16	%r421, %rs243;
	and.b32  	%r422, %r421, 255;
	mul.wide.u32 	%rd836, %r422, 8;
	add.s64 	%rd837, %rd1782, %rd836;
	ld.shared.u64 	%rd838, [%rd837];
	xor.b64  	%rd839, %rd835, %rd838;
	mov.b32	{%rs272, %rs273}, %r371;
	shr.u16 	%rs274, %rs273, 8;
	cvt.u32.u16	%r423, %rs274;
	mul.wide.u32 	%rd840, %r423, 8;
	add.s64 	%rd841, %rd1785, %rd840;
	ld.shared.u64 	%rd842, [%rd841];
	xor.b64  	%rd1825, %rd839, %rd842;
	cvt.u32.u16	%r424, %rs247;
	and.b32  	%r425, %r424, 255;
	mul.wide.u32 	%rd843, %r425, 8;
	add.s64 	%rd844, %rd1771, %rd843;
	shr.u16 	%rs275, %rs250, 8;
	cvt.u32.u16	%r426, %rs275;
	mul.wide.u32 	%rd845, %r426, 8;
	add.s64 	%rd846, %rd1772, %rd845;
	ld.shared.u64 	%rd847, [%rd846];
	ld.shared.u64 	%rd848, [%rd844];
	xor.b64  	%rd849, %rd847, %rd848;
	mov.b32	{%rs276, %rs277}, %r370;
	cvt.u32.u16	%r427, %rs277;
	and.b32  	%r428, %r427, 255;
	mul.wide.u32 	%rd850, %r428, 8;
	add.s64 	%rd851, %rd1773, %rd850;
	ld.shared.u64 	%rd852, [%rd851];
	xor.b64  	%rd853, %rd849, %rd852;
	mov.b32	{%rs278, %rs279}, %r382;
	shr.u16 	%rs280, %rs279, 8;
	cvt.u32.u16	%r429, %rs280;
	mul.wide.u32 	%rd854, %r429, 8;
	add.s64 	%rd855, %rd1774, %rd854;
	ld.shared.u64 	%rd856, [%rd855];
	xor.b64  	%rd857, %rd853, %rd856;
	cvt.u32.u16	%r430, %rs257;
	and.b32  	%r431, %r430, 255;
	mul.wide.u32 	%rd858, %r431, 8;
	add.s64 	%rd859, %rd1775, %rd858;
	ld.shared.u64 	%rd860, [%rd859];
	xor.b64  	%rd861, %rd857, %rd860;
	shr.u16 	%rs281, %rs260, 8;
	cvt.u32.u16	%r432, %rs281;
	mul.wide.u32 	%rd862, %r432, 8;
	add.s64 	%rd863, %rd1781, %rd862;
	ld.shared.u64 	%rd864, [%rd863];
	xor.b64  	%rd865, %rd861, %rd864;
	cvt.u32.u16	%r433, %rs263;
	and.b32  	%r434, %r433, 255;
	mul.wide.u32 	%rd866, %r434, 8;
	add.s64 	%rd867, %rd1782, %rd866;
	ld.shared.u64 	%rd868, [%rd867];
	xor.b64  	%rd869, %rd865, %rd868;
	mov.b32	{%rs282, %rs283}, %r373;
	shr.u16 	%rs284, %rs283, 8;
	cvt.u32.u16	%r435, %rs284;
	mul.wide.u32 	%rd870, %r435, 8;
	add.s64 	%rd871, %rd1785, %rd870;
	ld.shared.u64 	%rd872, [%rd871];
	xor.b64  	%rd1822, %rd869, %rd872;
	cvt.u32.u16	%r436, %rs230;
	and.b32  	%r437, %r436, 255;
	mul.wide.u32 	%rd873, %r437, 8;
	add.s64 	%rd874, %rd1771, %rd873;
	shr.u16 	%rs285, %rs266, 8;
	cvt.u32.u16	%r438, %rs285;
	mul.wide.u32 	%rd875, %r438, 8;
	add.s64 	%rd876, %rd1772, %rd875;
	ld.shared.u64 	%rd877, [%rd876];
	ld.shared.u64 	%rd878, [%rd874];
	xor.b64  	%rd879, %rd877, %rd878;
	mov.b32	{%rs286, %rs287}, %r372;
	cvt.u32.u16	%r439, %rs287;
	and.b32  	%r440, %r439, 255;
	mul.wide.u32 	%rd880, %r440, 8;
	add.s64 	%rd881, %rd1773, %rd880;
	ld.shared.u64 	%rd882, [%rd881];
	xor.b64  	%rd883, %rd879, %rd882;
	mov.b32	{%rs288, %rs289}, %r384;
	shr.u16 	%rs290, %rs289, 8;
	cvt.u32.u16	%r441, %rs290;
	mul.wide.u32 	%rd884, %r441, 8;
	add.s64 	%rd885, %rd1774, %rd884;
	ld.shared.u64 	%rd886, [%rd885];
	xor.b64  	%rd887, %rd883, %rd886;
	cvt.u32.u16	%r442, %rs240;
	and.b32  	%r443, %r442, 255;
	mul.wide.u32 	%rd888, %r443, 8;
	add.s64 	%rd889, %rd1775, %rd888;
	ld.shared.u64 	%rd890, [%rd889];
	xor.b64  	%rd891, %rd887, %rd890;
	shr.u16 	%rs291, %rs242, 8;
	cvt.u32.u16	%r444, %rs291;
	mul.wide.u32 	%rd892, %r444, 8;
	add.s64 	%rd893, %rd1781, %rd892;
	ld.shared.u64 	%rd894, [%rd893];
	xor.b64  	%rd895, %rd891, %rd894;
	cvt.u32.u16	%r445, %rs273;
	and.b32  	%r446, %r445, 255;
	mul.wide.u32 	%rd896, %r446, 8;
	add.s64 	%rd897, %rd1782, %rd896;
	ld.shared.u64 	%rd898, [%rd897];
	xor.b64  	%rd899, %rd895, %rd898;
	mov.b32	{%rs292, %rs293}, %r375;
	shr.u16 	%rs294, %rs293, 8;
	cvt.u32.u16	%r447, %rs294;
	mul.wide.u32 	%rd900, %r447, 8;
	add.s64 	%rd901, %rd1785, %rd900;
	ld.shared.u64 	%rd902, [%rd901];
	xor.b64  	%rd1819, %rd899, %rd902;
	cvt.u32.u16	%r448, %rs250;
	and.b32  	%r449, %r448, 255;
	mul.wide.u32 	%rd903, %r449, 8;
	add.s64 	%rd904, %rd1771, %rd903;
	shr.u16 	%rs295, %rs276, 8;
	cvt.u32.u16	%r450, %rs295;
	mul.wide.u32 	%rd905, %r450, 8;
	add.s64 	%rd906, %rd1772, %rd905;
	ld.shared.u64 	%rd907, [%rd906];
	ld.shared.u64 	%rd908, [%rd904];
	xor.b64  	%rd909, %rd907, %rd908;
	mov.b32	{%rs296, %rs297}, %r374;
	cvt.u32.u16	%r451, %rs297;
	and.b32  	%r452, %r451, 255;
	mul.wide.u32 	%rd910, %r452, 8;
	add.s64 	%rd911, %rd1773, %rd910;
	ld.shared.u64 	%rd912, [%rd911];
	xor.b64  	%rd913, %rd909, %rd912;
	mov.b32	{%rs298, %rs299}, %r392;
	shr.u16 	%rs300, %rs299, 8;
	cvt.u32.u16	%r453, %rs300;
	mul.wide.u32 	%rd914, %r453, 8;
	add.s64 	%rd915, %rd1774, %rd914;
	ld.shared.u64 	%rd916, [%rd915];
	xor.b64  	%rd917, %rd913, %rd916;
	cvt.u32.u16	%r454, %rs260;
	and.b32  	%r455, %r454, 255;
	mul.wide.u32 	%rd918, %r455, 8;
	add.s64 	%rd919, %rd1775, %rd918;
	ld.shared.u64 	%rd920, [%rd919];
	xor.b64  	%rd921, %rd917, %rd920;
	shr.u16 	%rs301, %rs262, 8;
	cvt.u32.u16	%r456, %rs301;
	mul.wide.u32 	%rd922, %r456, 8;
	add.s64 	%rd923, %rd1781, %rd922;
	ld.shared.u64 	%rd924, [%rd923];
	xor.b64  	%rd925, %rd921, %rd924;
	cvt.u32.u16	%r457, %rs283;
	and.b32  	%r458, %r457, 255;
	mul.wide.u32 	%rd926, %r458, 8;
	add.s64 	%rd927, %rd1782, %rd926;
	ld.shared.u64 	%rd928, [%rd927];
	xor.b64  	%rd929, %rd925, %rd928;
	mov.b32	{%rs302, %rs303}, %r377;
	shr.u16 	%rs304, %rs303, 8;
	cvt.u32.u16	%r459, %rs304;
	mul.wide.u32 	%rd930, %r459, 8;
	add.s64 	%rd931, %rd1785, %rd930;
	ld.shared.u64 	%rd932, [%rd931];
	xor.b64  	%rd1816, %rd929, %rd932;
	cvt.u32.u16	%r460, %rs266;
	and.b32  	%r461, %r460, 255;
	mul.wide.u32 	%rd933, %r461, 8;
	add.s64 	%rd934, %rd1771, %rd933;
	shr.u16 	%rs305, %rs286, 8;
	cvt.u32.u16	%r462, %rs305;
	mul.wide.u32 	%rd935, %r462, 8;
	add.s64 	%rd936, %rd1772, %rd935;
	ld.shared.u64 	%rd937, [%rd936];
	ld.shared.u64 	%rd938, [%rd934];
	xor.b64  	%rd939, %rd937, %rd938;
	cvt.u32.u16	%r463, %rs233;
	and.b32  	%r464, %r463, 255;
	mul.wide.u32 	%rd940, %r464, 8;
	add.s64 	%rd941, %rd1773, %rd940;
	ld.shared.u64 	%rd942, [%rd941];
	xor.b64  	%rd943, %rd939, %rd942;
	shr.u16 	%rs306, %rs226, 8;
	cvt.u32.u16	%r465, %rs306;
	mul.wide.u32 	%rd944, %r465, 8;
	add.s64 	%rd945, %rd1774, %rd944;
	ld.shared.u64 	%rd946, [%rd945];
	xor.b64  	%rd947, %rd943, %rd946;
	cvt.u32.u16	%r466, %rs242;
	and.b32  	%r467, %r466, 255;
	mul.wide.u32 	%rd948, %r467, 8;
	add.s64 	%rd949, %rd1775, %rd948;
	ld.shared.u64 	%rd950, [%rd949];
	xor.b64  	%rd951, %rd947, %rd950;
	shr.u16 	%rs307, %rs272, 8;
	cvt.u32.u16	%r468, %rs307;
	mul.wide.u32 	%rd952, %r468, 8;
	add.s64 	%rd953, %rd1781, %rd952;
	ld.shared.u64 	%rd954, [%rd953];
	xor.b64  	%rd955, %rd951, %rd954;
	cvt.u32.u16	%r469, %rs293;
	and.b32  	%r470, %r469, 255;
	mul.wide.u32 	%rd956, %r470, 8;
	add.s64 	%rd957, %rd1782, %rd956;
	ld.shared.u64 	%rd958, [%rd957];
	xor.b64  	%rd959, %rd955, %rd958;
	mov.b32	{%rs308, %rs309}, %r379;
	shr.u16 	%rs310, %rs309, 8;
	cvt.u32.u16	%r471, %rs310;
	mul.wide.u32 	%rd960, %r471, 8;
	add.s64 	%rd961, %rd1785, %rd960;
	ld.shared.u64 	%rd962, [%rd961];
	xor.b64  	%rd1813, %rd959, %rd962;
	cvt.u32.u16	%r472, %rs276;
	and.b32  	%r473, %r472, 255;
	mul.wide.u32 	%rd963, %r473, 8;
	add.s64 	%rd964, %rd1771, %rd963;
	shr.u16 	%rs311, %rs296, 8;
	cvt.u32.u16	%r474, %rs311;
	mul.wide.u32 	%rd965, %r474, 8;
	add.s64 	%rd966, %rd1772, %rd965;
	ld.shared.u64 	%rd967, [%rd966];
	ld.shared.u64 	%rd968, [%rd964];
	xor.b64  	%rd969, %rd967, %rd968;
	cvt.u32.u16	%r475, %rs253;
	and.b32  	%r476, %r475, 255;
	mul.wide.u32 	%rd970, %r476, 8;
	add.s64 	%rd971, %rd1773, %rd970;
	ld.shared.u64 	%rd972, [%rd971];
	xor.b64  	%rd973, %rd969, %rd972;
	shr.u16 	%rs312, %rs246, 8;
	cvt.u32.u16	%r477, %rs312;
	mul.wide.u32 	%rd974, %r477, 8;
	add.s64 	%rd975, %rd1774, %rd974;
	ld.shared.u64 	%rd976, [%rd975];
	xor.b64  	%rd977, %rd973, %rd976;
	cvt.u32.u16	%r478, %rs262;
	and.b32  	%r479, %r478, 255;
	mul.wide.u32 	%rd978, %r479, 8;
	add.s64 	%rd979, %rd1775, %rd978;
	ld.shared.u64 	%rd980, [%rd979];
	xor.b64  	%rd981, %rd977, %rd980;
	shr.u16 	%rs313, %rs282, 8;
	cvt.u32.u16	%r480, %rs313;
	mul.wide.u32 	%rd982, %r480, 8;
	add.s64 	%rd983, %rd1781, %rd982;
	ld.shared.u64 	%rd984, [%rd983];
	xor.b64  	%rd985, %rd981, %rd984;
	cvt.u32.u16	%r481, %rs303;
	and.b32  	%r482, %r481, 255;
	mul.wide.u32 	%rd986, %r482, 8;
	add.s64 	%rd987, %rd1782, %rd986;
	ld.shared.u64 	%rd988, [%rd987];
	xor.b64  	%rd989, %rd985, %rd988;
	mov.b32	{%rs314, %rs315}, %r381;
	shr.u16 	%rs316, %rs315, 8;
	cvt.u32.u16	%r483, %rs316;
	mul.wide.u32 	%rd990, %r483, 8;
	add.s64 	%rd991, %rd1785, %rd990;
	ld.shared.u64 	%rd992, [%rd991];
	xor.b64  	%rd1810, %rd989, %rd992;
	cvt.u32.u16	%r484, %rs286;
	and.b32  	%r485, %r484, 255;
	mul.wide.u32 	%rd993, %r485, 8;
	add.s64 	%rd994, %rd1771, %rd993;
	shr.u16 	%rs317, %rs232, 8;
	cvt.u32.u16	%r486, %rs317;
	mul.wide.u32 	%rd995, %r486, 8;
	add.s64 	%rd996, %rd1772, %rd995;
	ld.shared.u64 	%rd997, [%rd996];
	ld.shared.u64 	%rd998, [%rd994];
	xor.b64  	%rd999, %rd997, %rd998;
	cvt.u32.u16	%r487, %rs269;
	and.b32  	%r488, %r487, 255;
	mul.wide.u32 	%rd1000, %r488, 8;
	add.s64 	%rd1001, %rd1773, %rd1000;
	ld.shared.u64 	%rd1002, [%rd1001];
	xor.b64  	%rd1003, %rd999, %rd1002;
	shr.u16 	%rs318, %rs228, 8;
	cvt.u32.u16	%r489, %rs318;
	mul.wide.u32 	%rd1004, %r489, 8;
	add.s64 	%rd1005, %rd1774, %rd1004;
	ld.shared.u64 	%rd1006, [%rd1005];
	xor.b64  	%rd1007, %rd1003, %rd1006;
	cvt.u32.u16	%r490, %rs272;
	and.b32  	%r491, %r490, 255;
	mul.wide.u32 	%rd1008, %r491, 8;
	add.s64 	%rd1009, %rd1775, %rd1008;
	ld.shared.u64 	%rd1010, [%rd1009];
	xor.b64  	%rd1011, %rd1007, %rd1010;
	shr.u16 	%rs319, %rs292, 8;
	cvt.u32.u16	%r492, %rs319;
	mul.wide.u32 	%rd1012, %r492, 8;
	add.s64 	%rd1013, %rd1781, %rd1012;
	ld.shared.u64 	%rd1014, [%rd1013];
	xor.b64  	%rd1015, %rd1011, %rd1014;
	cvt.u32.u16	%r493, %rs309;
	and.b32  	%r494, %r493, 255;
	mul.wide.u32 	%rd1016, %r494, 8;
	add.s64 	%rd1017, %rd1782, %rd1016;
	ld.shared.u64 	%rd1018, [%rd1017];
	xor.b64  	%rd1019, %rd1015, %rd1018;
	mov.b32	{%rs320, %rs321}, %r383;
	shr.u16 	%rs322, %rs321, 8;
	cvt.u32.u16	%r495, %rs322;
	mul.wide.u32 	%rd1020, %r495, 8;
	add.s64 	%rd1021, %rd1785, %rd1020;
	ld.shared.u64 	%rd1022, [%rd1021];
	xor.b64  	%rd1808, %rd1019, %rd1022;
	cvt.u32.u16	%r496, %rs296;
	and.b32  	%r497, %r496, 255;
	mul.wide.u32 	%rd1023, %r497, 8;
	add.s64 	%rd1024, %rd1771, %rd1023;
	shr.u16 	%rs323, %rs252, 8;
	cvt.u32.u16	%r498, %rs323;
	mul.wide.u32 	%rd1025, %r498, 8;
	add.s64 	%rd1026, %rd1772, %rd1025;
	ld.shared.u64 	%rd1027, [%rd1026];
	ld.shared.u64 	%rd1028, [%rd1024];
	xor.b64  	%rd1029, %rd1027, %rd1028;
	cvt.u32.u16	%r499, %rs279;
	and.b32  	%r500, %r499, 255;
	mul.wide.u32 	%rd1030, %r500, 8;
	add.s64 	%rd1031, %rd1773, %rd1030;
	ld.shared.u64 	%rd1032, [%rd1031];
	xor.b64  	%rd1033, %rd1029, %rd1032;
	shr.u16 	%rs324, %rs248, 8;
	cvt.u32.u16	%r501, %rs324;
	mul.wide.u32 	%rd1034, %r501, 8;
	add.s64 	%rd1035, %rd1774, %rd1034;
	ld.shared.u64 	%rd1036, [%rd1035];
	xor.b64  	%rd1037, %rd1033, %rd1036;
	cvt.u32.u16	%r502, %rs282;
	and.b32  	%r503, %r502, 255;
	mul.wide.u32 	%rd1038, %r503, 8;
	add.s64 	%rd1039, %rd1775, %rd1038;
	ld.shared.u64 	%rd1040, [%rd1039];
	xor.b64  	%rd1041, %rd1037, %rd1040;
	shr.u16 	%rs325, %rs302, 8;
	cvt.u32.u16	%r504, %rs325;
	mul.wide.u32 	%rd1042, %r504, 8;
	add.s64 	%rd1043, %rd1781, %rd1042;
	ld.shared.u64 	%rd1044, [%rd1043];
	xor.b64  	%rd1045, %rd1041, %rd1044;
	cvt.u32.u16	%r505, %rs315;
	and.b32  	%r506, %r505, 255;
	mul.wide.u32 	%rd1046, %r506, 8;
	add.s64 	%rd1047, %rd1782, %rd1046;
	ld.shared.u64 	%rd1048, [%rd1047];
	xor.b64  	%rd1049, %rd1045, %rd1048;
	mov.b32	{%rs326, %rs327}, %r385;
	shr.u16 	%rs328, %rs327, 8;
	cvt.u32.u16	%r507, %rs328;
	mul.wide.u32 	%rd1050, %r507, 8;
	add.s64 	%rd1051, %rd1785, %rd1050;
	ld.shared.u64 	%rd1052, [%rd1051];
	xor.b64  	%rd1806, %rd1049, %rd1052;
	cvt.u32.u16	%r508, %rs232;
	and.b32  	%r509, %r508, 255;
	mul.wide.u32 	%rd1053, %r509, 8;
	add.s64 	%rd1054, %rd1771, %rd1053;
	shr.u16 	%rs329, %rs268, 8;
	cvt.u32.u16	%r510, %rs329;
	mul.wide.u32 	%rd1055, %r510, 8;
	add.s64 	%rd1056, %rd1772, %rd1055;
	ld.shared.u64 	%rd1057, [%rd1056];
	ld.shared.u64 	%rd1058, [%rd1054];
	xor.b64  	%rd1059, %rd1057, %rd1058;
	cvt.u32.u16	%r511, %rs289;
	and.b32  	%r512, %r511, 255;
	mul.wide.u32 	%rd1060, %r512, 8;
	add.s64 	%rd1061, %rd1773, %rd1060;
	ld.shared.u64 	%rd1062, [%rd1061];
	xor.b64  	%rd1063, %rd1059, %rd1062;
	shr.u16 	%rs330, %rs231, 8;
	cvt.u32.u16	%r513, %rs330;
	mul.wide.u32 	%rd1064, %r513, 8;
	add.s64 	%rd1065, %rd1774, %rd1064;
	ld.shared.u64 	%rd1066, [%rd1065];
	xor.b64  	%rd1067, %rd1063, %rd1066;
	cvt.u32.u16	%r514, %rs292;
	and.b32  	%r515, %r514, 255;
	mul.wide.u32 	%rd1068, %r515, 8;
	add.s64 	%rd1069, %rd1775, %rd1068;
	ld.shared.u64 	%rd1070, [%rd1069];
	xor.b64  	%rd1071, %rd1067, %rd1070;
	shr.u16 	%rs331, %rs308, 8;
	cvt.u32.u16	%r516, %rs331;
	mul.wide.u32 	%rd1072, %r516, 8;
	add.s64 	%rd1073, %rd1781, %rd1072;
	ld.shared.u64 	%rd1074, [%rd1073];
	xor.b64  	%rd1075, %rd1071, %rd1074;
	cvt.u32.u16	%r517, %rs321;
	and.b32  	%r518, %r517, 255;
	mul.wide.u32 	%rd1076, %r518, 8;
	add.s64 	%rd1077, %rd1782, %rd1076;
	ld.shared.u64 	%rd1078, [%rd1077];
	xor.b64  	%rd1079, %rd1075, %rd1078;
	shr.u16 	%rs332, %rs236, 8;
	cvt.u32.u16	%r519, %rs332;
	mul.wide.u32 	%rd1080, %r519, 8;
	add.s64 	%rd1081, %rd1785, %rd1080;
	ld.shared.u64 	%rd1082, [%rd1081];
	xor.b64  	%rd1804, %rd1079, %rd1082;
	cvt.u32.u16	%r520, %rs252;
	and.b32  	%r521, %r520, 255;
	mul.wide.u32 	%rd1083, %r521, 8;
	add.s64 	%rd1084, %rd1771, %rd1083;
	shr.u16 	%rs333, %rs278, 8;
	cvt.u32.u16	%r522, %rs333;
	mul.wide.u32 	%rd1085, %r522, 8;
	add.s64 	%rd1086, %rd1772, %rd1085;
	ld.shared.u64 	%rd1087, [%rd1086];
	ld.shared.u64 	%rd1088, [%rd1084];
	xor.b64  	%rd1089, %rd1087, %rd1088;
	cvt.u32.u16	%r523, %rs299;
	and.b32  	%r524, %r523, 255;
	mul.wide.u32 	%rd1090, %r524, 8;
	add.s64 	%rd1091, %rd1773, %rd1090;
	ld.shared.u64 	%rd1092, [%rd1091];
	xor.b64  	%rd1093, %rd1089, %rd1092;
	shr.u16 	%rs334, %rs251, 8;
	cvt.u32.u16	%r525, %rs334;
	mul.wide.u32 	%rd1094, %r525, 8;
	add.s64 	%rd1095, %rd1774, %rd1094;
	ld.shared.u64 	%rd1096, [%rd1095];
	xor.b64  	%rd1097, %rd1093, %rd1096;
	cvt.u32.u16	%r526, %rs302;
	and.b32  	%r527, %r526, 255;
	mul.wide.u32 	%rd1098, %r527, 8;
	add.s64 	%rd1099, %rd1775, %rd1098;
	ld.shared.u64 	%rd1100, [%rd1099];
	xor.b64  	%rd1101, %rd1097, %rd1100;
	shr.u16 	%rs335, %rs314, 8;
	cvt.u32.u16	%r528, %rs335;
	mul.wide.u32 	%rd1102, %r528, 8;
	add.s64 	%rd1103, %rd1781, %rd1102;
	ld.shared.u64 	%rd1104, [%rd1103];
	xor.b64  	%rd1105, %rd1101, %rd1104;
	cvt.u32.u16	%r529, %rs327;
	and.b32  	%r530, %r529, 255;
	mul.wide.u32 	%rd1106, %r530, 8;
	add.s64 	%rd1107, %rd1782, %rd1106;
	ld.shared.u64 	%rd1108, [%rd1107];
	xor.b64  	%rd1109, %rd1105, %rd1108;
	shr.u16 	%rs336, %rs256, 8;
	cvt.u32.u16	%r531, %rs336;
	mul.wide.u32 	%rd1110, %r531, 8;
	add.s64 	%rd1111, %rd1785, %rd1110;
	ld.shared.u64 	%rd1112, [%rd1111];
	xor.b64  	%rd1803, %rd1109, %rd1112;
	cvt.u32.u16	%r532, %rs268;
	and.b32  	%r533, %r532, 255;
	mul.wide.u32 	%rd1113, %r533, 8;
	add.s64 	%rd1114, %rd1771, %rd1113;
	shr.u16 	%rs337, %rs288, 8;
	cvt.u32.u16	%r534, %rs337;
	mul.wide.u32 	%rd1115, %r534, 8;
	add.s64 	%rd1116, %rd1772, %rd1115;
	ld.shared.u64 	%rd1117, [%rd1116];
	ld.shared.u64 	%rd1118, [%rd1114];
	xor.b64  	%rd1119, %rd1117, %rd1118;
	cvt.u32.u16	%r535, %rs226;
	and.b32  	%r536, %r535, 255;
	mul.wide.u32 	%rd1120, %r536, 8;
	add.s64 	%rd1121, %rd1773, %rd1120;
	ld.shared.u64 	%rd1122, [%rd1121];
	xor.b64  	%rd1123, %rd1119, %rd1122;
	shr.u16 	%rs338, %rs267, 8;
	cvt.u32.u16	%r537, %rs338;
	mul.wide.u32 	%rd1124, %r537, 8;
	add.s64 	%rd1125, %rd1774, %rd1124;
	ld.shared.u64 	%rd1126, [%rd1125];
	xor.b64  	%rd1127, %rd1123, %rd1126;
	cvt.u32.u16	%r538, %rs308;
	and.b32  	%r539, %r538, 255;
	mul.wide.u32 	%rd1128, %r539, 8;
	add.s64 	%rd1129, %rd1775, %rd1128;
	ld.shared.u64 	%rd1130, [%rd1129];
	xor.b64  	%rd1131, %rd1127, %rd1130;
	shr.u16 	%rs339, %rs320, 8;
	cvt.u32.u16	%r540, %rs339;
	mul.wide.u32 	%rd1132, %r540, 8;
	add.s64 	%rd1133, %rd1781, %rd1132;
	ld.shared.u64 	%rd1134, [%rd1133];
	xor.b64  	%rd1135, %rd1131, %rd1134;
	cvt.u32.u16	%r541, %rs236;
	and.b32  	%r542, %r541, 255;
	mul.wide.u32 	%rd1136, %r542, 8;
	add.s64 	%rd1137, %rd1782, %rd1136;
	ld.shared.u64 	%rd1138, [%rd1137];
	xor.b64  	%rd1139, %rd1135, %rd1138;
	shr.u16 	%rs340, %rs238, 8;
	cvt.u32.u16	%r543, %rs340;
	mul.wide.u32 	%rd1140, %r543, 8;
	add.s64 	%rd1141, %rd1785, %rd1140;
	ld.shared.u64 	%rd1142, [%rd1141];
	xor.b64  	%rd1802, %rd1139, %rd1142;
	cvt.u32.u16	%r544, %rs278;
	and.b32  	%r545, %r544, 255;
	mul.wide.u32 	%rd1143, %r545, 8;
	add.s64 	%rd1144, %rd1771, %rd1143;
	shr.u16 	%rs341, %rs298, 8;
	cvt.u32.u16	%r546, %rs341;
	mul.wide.u32 	%rd1145, %r546, 8;
	add.s64 	%rd1146, %rd1772, %rd1145;
	ld.shared.u64 	%rd1147, [%rd1146];
	ld.shared.u64 	%rd1148, [%rd1144];
	xor.b64  	%rd1149, %rd1147, %rd1148;
	cvt.u32.u16	%r547, %rs246;
	and.b32  	%r548, %r547, 255;
	mul.wide.u32 	%rd1150, %r548, 8;
	add.s64 	%rd1151, %rd1773, %rd1150;
	ld.shared.u64 	%rd1152, [%rd1151];
	xor.b64  	%rd1153, %rd1149, %rd1152;
	shr.u16 	%rs342, %rs277, 8;
	cvt.u32.u16	%r549, %rs342;
	mul.wide.u32 	%rd1154, %r549, 8;
	add.s64 	%rd1155, %rd1774, %rd1154;
	ld.shared.u64 	%rd1156, [%rd1155];
	xor.b64  	%rd1157, %rd1153, %rd1156;
	cvt.u32.u16	%r550, %rs314;
	and.b32  	%r551, %r550, 255;
	mul.wide.u32 	%rd1158, %r551, 8;
	add.s64 	%rd1159, %rd1775, %rd1158;
	ld.shared.u64 	%rd1160, [%rd1159];
	xor.b64  	%rd1161, %rd1157, %rd1160;
	shr.u16 	%rs343, %rs326, 8;
	cvt.u32.u16	%r552, %rs343;
	mul.wide.u32 	%rd1162, %r552, 8;
	add.s64 	%rd1163, %rd1781, %rd1162;
	ld.shared.u64 	%rd1164, [%rd1163];
	xor.b64  	%rd1165, %rd1161, %rd1164;
	cvt.u32.u16	%r553, %rs256;
	and.b32  	%r554, %r553, 255;
	mul.wide.u32 	%rd1166, %r554, 8;
	add.s64 	%rd1167, %rd1782, %rd1166;
	ld.shared.u64 	%rd1168, [%rd1167];
	xor.b64  	%rd1169, %rd1165, %rd1168;
	shr.u16 	%rs344, %rs258, 8;
	cvt.u32.u16	%r555, %rs344;
	mul.wide.u32 	%rd1170, %r555, 8;
	add.s64 	%rd1171, %rd1785, %rd1170;
	ld.shared.u64 	%rd1172, [%rd1171];
	xor.b64  	%rd1801, %rd1169, %rd1172;
	cvt.u32.u16	%r556, %rs288;
	and.b32  	%r557, %r556, 255;
	mul.wide.u32 	%rd1173, %r557, 8;
	add.s64 	%rd1174, %rd1771, %rd1173;
	shr.u16 	%rs345, %rs225, 8;
	cvt.u32.u16	%r558, %rs345;
	mul.wide.u32 	%rd1175, %r558, 8;
	add.s64 	%rd1176, %rd1772, %rd1175;
	ld.shared.u64 	%rd1177, [%rd1176];
	ld.shared.u64 	%rd1178, [%rd1174];
	xor.b64  	%rd1179, %rd1177, %rd1178;
	cvt.u32.u16	%r559, %rs228;
	and.b32  	%r560, %r559, 255;
	mul.wide.u32 	%rd1180, %r560, 8;
	add.s64 	%rd1181, %rd1773, %rd1180;
	ld.shared.u64 	%rd1182, [%rd1181];
	xor.b64  	%rd1183, %rd1179, %rd1182;
	shr.u16 	%rs346, %rs287, 8;
	cvt.u32.u16	%r561, %rs346;
	mul.wide.u32 	%rd1184, %r561, 8;
	add.s64 	%rd1185, %rd1774, %rd1184;
	ld.shared.u64 	%rd1186, [%rd1185];
	xor.b64  	%rd1187, %rd1183, %rd1186;
	cvt.u32.u16	%r562, %rs320;
	and.b32  	%r563, %r562, 255;
	mul.wide.u32 	%rd1188, %r563, 8;
	add.s64 	%rd1189, %rd1775, %rd1188;
	ld.shared.u64 	%rd1190, [%rd1189];
	xor.b64  	%rd1191, %rd1187, %rd1190;
	shr.u16 	%rs347, %rs235, 8;
	cvt.u32.u16	%r564, %rs347;
	mul.wide.u32 	%rd1192, %r564, 8;
	add.s64 	%rd1193, %rd1781, %rd1192;
	ld.shared.u64 	%rd1194, [%rd1193];
	xor.b64  	%rd1195, %rd1191, %rd1194;
	cvt.u32.u16	%r565, %rs238;
	and.b32  	%r566, %r565, 255;
	mul.wide.u32 	%rd1196, %r566, 8;
	add.s64 	%rd1197, %rd1782, %rd1196;
	ld.shared.u64 	%rd1198, [%rd1197];
	xor.b64  	%rd1199, %rd1195, %rd1198;
	shr.u16 	%rs348, %rs241, 8;
	cvt.u32.u16	%r567, %rs348;
	mul.wide.u32 	%rd1200, %r567, 8;
	add.s64 	%rd1201, %rd1785, %rd1200;
	ld.shared.u64 	%rd1202, [%rd1201];
	xor.b64  	%rd1800, %rd1199, %rd1202;
	cvt.u32.u16	%r568, %rs298;
	and.b32  	%r569, %r568, 255;
	mul.wide.u32 	%rd1203, %r569, 8;
	add.s64 	%rd1204, %rd1771, %rd1203;
	shr.u16 	%rs349, %rs245, 8;
	cvt.u32.u16	%r570, %rs349;
	mul.wide.u32 	%rd1205, %r570, 8;
	add.s64 	%rd1206, %rd1772, %rd1205;
	ld.shared.u64 	%rd1207, [%rd1206];
	ld.shared.u64 	%rd1208, [%rd1204];
	xor.b64  	%rd1209, %rd1207, %rd1208;
	cvt.u32.u16	%r571, %rs248;
	and.b32  	%r572, %r571, 255;
	mul.wide.u32 	%rd1210, %r572, 8;
	add.s64 	%rd1211, %rd1773, %rd1210;
	ld.shared.u64 	%rd1212, [%rd1211];
	xor.b64  	%rd1213, %rd1209, %rd1212;
	shr.u16 	%rs350, %rs297, 8;
	cvt.u32.u16	%r573, %rs350;
	mul.wide.u32 	%rd1214, %r573, 8;
	add.s64 	%rd1215, %rd1774, %rd1214;
	ld.shared.u64 	%rd1216, [%rd1215];
	xor.b64  	%rd1217, %rd1213, %rd1216;
	cvt.u32.u16	%r574, %rs326;
	and.b32  	%r575, %r574, 255;
	mul.wide.u32 	%rd1218, %r575, 8;
	add.s64 	%rd1219, %rd1775, %rd1218;
	ld.shared.u64 	%rd1220, [%rd1219];
	xor.b64  	%rd1221, %rd1217, %rd1220;
	shr.u16 	%rs351, %rs255, 8;
	cvt.u32.u16	%r576, %rs351;
	mul.wide.u32 	%rd1222, %r576, 8;
	add.s64 	%rd1223, %rd1781, %rd1222;
	ld.shared.u64 	%rd1224, [%rd1223];
	xor.b64  	%rd1225, %rd1221, %rd1224;
	cvt.u32.u16	%r577, %rs258;
	and.b32  	%r578, %r577, 255;
	mul.wide.u32 	%rd1226, %r578, 8;
	add.s64 	%rd1227, %rd1782, %rd1226;
	ld.shared.u64 	%rd1228, [%rd1227];
	xor.b64  	%rd1229, %rd1225, %rd1228;
	shr.u16 	%rs352, %rs261, 8;
	cvt.u32.u16	%r579, %rs352;
	mul.wide.u32 	%rd1230, %r579, 8;
	add.s64 	%rd1231, %rd1785, %rd1230;
	ld.shared.u64 	%rd1232, [%rd1231];
	xor.b64  	%rd1799, %rd1229, %rd1232;
	add.s64 	%rd1798, %rd1798, 72057594037927936;
	add.s64 	%rd1797, %rd1797, -72057594037927936;
	add.s32 	%r824, %r824, 1;
	setp.ne.s32	%p4, %r824, 0;
	@%p4 bra 	BB1_5;

	xor.b64  	%rd1849, %rd1831, %rd28;
	xor.b64  	%rd1848, %rd1828, %rd29;
	xor.b64  	%rd1847, %rd1825, %rd30;
	xor.b64  	%rd1846, %rd1822, %rd31;
	xor.b64  	%rd1845, %rd1819, %rd32;
	xor.b64  	%rd1844, %rd1816, %rd33;
	xor.b64  	%rd1843, %rd1813, %rd34;
	xor.b64  	%rd1842, %rd1810, %rd35;
	xor.b64  	%rd89, %rd1808, %rd1796;
	xor.b64  	%rd90, %rd1806, %rd37;
	xor.b64  	%rd91, %rd1804, %rd1795;
	xor.b64  	%rd92, %rd1803, %rd1794;
	xor.b64  	%rd93, %rd1802, %rd1793;
	xor.b64  	%rd94, %rd1801, %rd1792;
	xor.b64  	%rd95, %rd1800, %rd1791;
	xor.b64  	%rd1234, %rd1799, %rd1790;
	xor.b64  	%rd96, %rd1234, 562949953421312;
	mov.u32 	%r825, -14;
	mov.u64 	%rd1833, 0;
	mov.u64 	%rd1834, %rd96;
	mov.u64 	%rd1835, %rd95;
	mov.u64 	%rd1836, %rd94;
	mov.u64 	%rd1837, %rd93;
	mov.u64 	%rd1838, %rd92;
	mov.u64 	%rd1839, %rd91;
	mov.u64 	%rd1840, %rd90;
	mov.u64 	%rd1841, %rd89;

BB1_7:
	mov.u64 	%rd105, %rd1841;
	mov.u64 	%rd104, %rd1840;
	mov.u64 	%rd103, %rd1839;
	mov.u64 	%rd102, %rd1838;
	mov.u64 	%rd101, %rd1837;
	mov.u64 	%rd100, %rd1836;
	mov.u64 	%rd99, %rd1835;
	mov.u64 	%rd98, %rd1834;
	mov.u64 	%rd1786, search1$T7_C;
	mov.u64 	%rd1784, search1$T6_C;
	mov.u64 	%rd1783, search1$T5_C;
	mov.u64 	%rd1780, search1$T4_C;
	mov.u64 	%rd1779, search1$T3_C;
	mov.u64 	%rd1778, search1$T2_C;
	mov.u64 	%rd1777, search1$T1_C;
	mov.u64 	%rd1776, search1$T0_C;
	add.s64 	%rd1235, %rd1833, 16;
	xor.b64  	%rd1236, %rd1848, %rd1235;
	mov.b64	{%r581, %r582}, %rd1236;
	add.s64 	%rd1237, %rd1833, 32;
	xor.b64  	%rd1238, %rd1847, %rd1237;
	mov.b64	{%r583, %r584}, %rd1238;
	add.s64 	%rd1239, %rd1833, 48;
	xor.b64  	%rd1240, %rd1846, %rd1239;
	mov.b64	{%r585, %r586}, %rd1240;
	add.s64 	%rd1241, %rd1833, 64;
	xor.b64  	%rd1242, %rd1845, %rd1241;
	mov.b64	{%r587, %r588}, %rd1242;
	add.s64 	%rd1243, %rd1833, 80;
	xor.b64  	%rd1244, %rd1844, %rd1243;
	mov.b64	{%r589, %r590}, %rd1244;
	add.s64 	%rd1245, %rd1833, 96;
	xor.b64  	%rd1246, %rd1843, %rd1245;
	mov.b64	{%r591, %r592}, %rd1246;
	add.s64 	%rd1247, %rd1833, 112;
	xor.b64  	%rd1248, %rd1842, %rd1247;
	mov.b64	{%r593, %r594}, %rd1248;
	add.s64 	%rd1249, %rd1833, 128;
	xor.b64  	%rd1250, %rd105, %rd1249;
	mov.b64	{%r595, %r596}, %rd1250;
	add.s64 	%rd1251, %rd1833, 144;
	xor.b64  	%rd1252, %rd104, %rd1251;
	mov.b64	{%r597, %r598}, %rd1252;
	add.s64 	%rd1253, %rd1833, 160;
	xor.b64  	%rd1254, %rd103, %rd1253;
	mov.b64	{%r599, %r600}, %rd1254;
	add.s64 	%rd1255, %rd1833, 176;
	xor.b64  	%rd1256, %rd102, %rd1255;
	mov.b64	{%r601, %r602}, %rd1256;
	add.s64 	%rd1257, %rd1833, 192;
	xor.b64  	%rd1258, %rd101, %rd1257;
	mov.b64	{%r603, %r604}, %rd1258;
	add.s64 	%rd1259, %rd1833, 208;
	xor.b64  	%rd1260, %rd100, %rd1259;
	mov.b64	{%r605, %r606}, %rd1260;
	add.s64 	%rd1261, %rd1833, 224;
	xor.b64  	%rd1262, %rd99, %rd1261;
	mov.b64	{%r607, %r608}, %rd1262;
	add.s64 	%rd1263, %rd1833, 240;
	xor.b64  	%rd1264, %rd98, %rd1263;
	mov.b64	{%r609, %r610}, %rd1264;
	xor.b64  	%rd1265, %rd1849, %rd1833;
	mov.b64	{%r611, %r612}, %rd1265;
	mov.b32	{%rs353, %rs354}, %r611;
	cvt.u32.u16	%r613, %rs353;
	and.b32  	%r614, %r613, 255;
	mul.wide.u32 	%rd1266, %r614, 8;
	add.s64 	%rd1268, %rd1776, %rd1266;
	mov.b32	{%rs355, %rs356}, %r581;
	shr.u16 	%rs357, %rs355, 8;
	cvt.u32.u16	%r615, %rs357;
	mul.wide.u32 	%rd1269, %r615, 8;
	add.s64 	%rd1271, %rd1777, %rd1269;
	ld.shared.u64 	%rd1272, [%rd1271];
	ld.shared.u64 	%rd1273, [%rd1268];
	xor.b64  	%rd1274, %rd1272, %rd1273;
	mov.b32	{%rs358, %rs359}, %r583;
	cvt.u32.u16	%r616, %rs359;
	and.b32  	%r617, %r616, 255;
	mul.wide.u32 	%rd1275, %r617, 8;
	add.s64 	%rd1277, %rd1778, %rd1275;
	ld.shared.u64 	%rd1278, [%rd1277];
	xor.b64  	%rd1279, %rd1274, %rd1278;
	mov.b32	{%rs360, %rs361}, %r585;
	shr.u16 	%rs362, %rs361, 8;
	cvt.u32.u16	%r618, %rs362;
	mul.wide.u32 	%rd1280, %r618, 8;
	add.s64 	%rd1282, %rd1779, %rd1280;
	ld.shared.u64 	%rd1283, [%rd1282];
	xor.b64  	%rd1284, %rd1279, %rd1283;
	mov.b32	{%rs363, %rs364}, %r588;
	cvt.u32.u16	%r619, %rs363;
	and.b32  	%r620, %r619, 255;
	mul.wide.u32 	%rd1285, %r620, 8;
	add.s64 	%rd1287, %rd1780, %rd1285;
	ld.shared.u64 	%rd1288, [%rd1287];
	xor.b64  	%rd1289, %rd1284, %rd1288;
	mov.b32	{%rs365, %rs366}, %r590;
	shr.u16 	%rs367, %rs365, 8;
	cvt.u32.u16	%r621, %rs367;
	mul.wide.u32 	%rd1290, %r621, 8;
	add.s64 	%rd1292, %rd1783, %rd1290;
	ld.shared.u64 	%rd1293, [%rd1292];
	xor.b64  	%rd1294, %rd1289, %rd1293;
	mov.b32	{%rs368, %rs369}, %r592;
	cvt.u32.u16	%r622, %rs369;
	and.b32  	%r623, %r622, 255;
	mul.wide.u32 	%rd1295, %r623, 8;
	add.s64 	%rd1297, %rd1784, %rd1295;
	ld.shared.u64 	%rd1298, [%rd1297];
	xor.b64  	%rd1299, %rd1294, %rd1298;
	mov.b32	{%rs370, %rs371}, %r602;
	shr.u16 	%rs372, %rs371, 8;
	cvt.u32.u16	%r624, %rs372;
	mul.wide.u32 	%rd1300, %r624, 8;
	add.s64 	%rd1302, %rd1786, %rd1300;
	ld.shared.u64 	%rd1303, [%rd1302];
	xor.b64  	%rd1849, %rd1299, %rd1303;
	cvt.u32.u16	%r625, %rs355;
	and.b32  	%r626, %r625, 255;
	mul.wide.u32 	%rd1304, %r626, 8;
	add.s64 	%rd1305, %rd1776, %rd1304;
	shr.u16 	%rs373, %rs358, 8;
	cvt.u32.u16	%r627, %rs373;
	mul.wide.u32 	%rd1306, %r627, 8;
	add.s64 	%rd1307, %rd1777, %rd1306;
	ld.shared.u64 	%rd1308, [%rd1307];
	ld.shared.u64 	%rd1309, [%rd1305];
	xor.b64  	%rd1310, %rd1308, %rd1309;
	cvt.u32.u16	%r628, %rs361;
	and.b32  	%r629, %r628, 255;
	mul.wide.u32 	%rd1311, %r629, 8;
	add.s64 	%rd1312, %rd1778, %rd1311;
	ld.shared.u64 	%rd1313, [%rd1312];
	xor.b64  	%rd1314, %rd1310, %rd1313;
	mov.b32	{%rs374, %rs375}, %r587;
	shr.u16 	%rs376, %rs375, 8;
	cvt.u32.u16	%r630, %rs376;
	mul.wide.u32 	%rd1315, %r630, 8;
	add.s64 	%rd1316, %rd1779, %rd1315;
	ld.shared.u64 	%rd1317, [%rd1316];
	xor.b64  	%rd1318, %rd1314, %rd1317;
	cvt.u32.u16	%r631, %rs365;
	and.b32  	%r632, %r631, 255;
	mul.wide.u32 	%rd1319, %r632, 8;
	add.s64 	%rd1320, %rd1780, %rd1319;
	ld.shared.u64 	%rd1321, [%rd1320];
	xor.b64  	%rd1322, %rd1318, %rd1321;
	shr.u16 	%rs377, %rs368, 8;
	cvt.u32.u16	%r633, %rs377;
	mul.wide.u32 	%rd1323, %r633, 8;
	add.s64 	%rd1324, %rd1783, %rd1323;
	ld.shared.u64 	%rd1325, [%rd1324];
	xor.b64  	%rd1326, %rd1322, %rd1325;
	mov.b32	{%rs378, %rs379}, %r594;
	cvt.u32.u16	%r634, %rs379;
	and.b32  	%r635, %r634, 255;
	mul.wide.u32 	%rd1327, %r635, 8;
	add.s64 	%rd1328, %rd1784, %rd1327;
	ld.shared.u64 	%rd1329, [%rd1328];
	xor.b64  	%rd1330, %rd1326, %rd1329;
	mov.b32	{%rs380, %rs381}, %r604;
	shr.u16 	%rs382, %rs381, 8;
	cvt.u32.u16	%r636, %rs382;
	mul.wide.u32 	%rd1331, %r636, 8;
	add.s64 	%rd1332, %rd1786, %rd1331;
	ld.shared.u64 	%rd1333, [%rd1332];
	xor.b64  	%rd1848, %rd1330, %rd1333;
	cvt.u32.u16	%r637, %rs358;
	and.b32  	%r638, %r637, 255;
	mul.wide.u32 	%rd1334, %r638, 8;
	add.s64 	%rd1335, %rd1776, %rd1334;
	shr.u16 	%rs383, %rs360, 8;
	cvt.u32.u16	%r639, %rs383;
	mul.wide.u32 	%rd1336, %r639, 8;
	add.s64 	%rd1337, %rd1777, %rd1336;
	ld.shared.u64 	%rd1338, [%rd1337];
	ld.shared.u64 	%rd1339, [%rd1335];
	xor.b64  	%rd1340, %rd1338, %rd1339;
	cvt.u32.u16	%r640, %rs375;
	and.b32  	%r641, %r640, 255;
	mul.wide.u32 	%rd1341, %r641, 8;
	add.s64 	%rd1342, %rd1778, %rd1341;
	ld.shared.u64 	%rd1343, [%rd1342];
	xor.b64  	%rd1344, %rd1340, %rd1343;
	mov.b32	{%rs384, %rs385}, %r589;
	shr.u16 	%rs386, %rs385, 8;
	cvt.u32.u16	%r642, %rs386;
	mul.wide.u32 	%rd1345, %r642, 8;
	add.s64 	%rd1346, %rd1779, %rd1345;
	ld.shared.u64 	%rd1347, [%rd1346];
	xor.b64  	%rd1348, %rd1344, %rd1347;
	cvt.u32.u16	%r643, %rs368;
	and.b32  	%r644, %r643, 255;
	mul.wide.u32 	%rd1349, %r644, 8;
	add.s64 	%rd1350, %rd1780, %rd1349;
	ld.shared.u64 	%rd1351, [%rd1350];
	xor.b64  	%rd1352, %rd1348, %rd1351;
	shr.u16 	%rs387, %rs378, 8;
	cvt.u32.u16	%r645, %rs387;
	mul.wide.u32 	%rd1353, %r645, 8;
	add.s64 	%rd1354, %rd1783, %rd1353;
	ld.shared.u64 	%rd1355, [%rd1354];
	xor.b64  	%rd1356, %rd1352, %rd1355;
	mov.b32	{%rs388, %rs389}, %r596;
	cvt.u32.u16	%r646, %rs389;
	and.b32  	%r647, %r646, 255;
	mul.wide.u32 	%rd1357, %r647, 8;
	add.s64 	%rd1358, %rd1784, %rd1357;
	ld.shared.u64 	%rd1359, [%rd1358];
	xor.b64  	%rd1360, %rd1356, %rd1359;
	mov.b32	{%rs390, %rs391}, %r606;
	shr.u16 	%rs392, %rs391, 8;
	cvt.u32.u16	%r648, %rs392;
	mul.wide.u32 	%rd1361, %r648, 8;
	add.s64 	%rd1362, %rd1786, %rd1361;
	ld.shared.u64 	%rd1363, [%rd1362];
	xor.b64  	%rd1847, %rd1360, %rd1363;
	cvt.u32.u16	%r649, %rs360;
	and.b32  	%r650, %r649, 255;
	mul.wide.u32 	%rd1364, %r650, 8;
	add.s64 	%rd1365, %rd1776, %rd1364;
	shr.u16 	%rs393, %rs374, 8;
	cvt.u32.u16	%r651, %rs393;
	mul.wide.u32 	%rd1366, %r651, 8;
	add.s64 	%rd1367, %rd1777, %rd1366;
	ld.shared.u64 	%rd1368, [%rd1367];
	ld.shared.u64 	%rd1369, [%rd1365];
	xor.b64  	%rd1370, %rd1368, %rd1369;
	cvt.u32.u16	%r652, %rs385;
	and.b32  	%r653, %r652, 255;
	mul.wide.u32 	%rd1371, %r653, 8;
	add.s64 	%rd1372, %rd1778, %rd1371;
	ld.shared.u64 	%rd1373, [%rd1372];
	xor.b64  	%rd1374, %rd1370, %rd1373;
	mov.b32	{%rs394, %rs395}, %r591;
	shr.u16 	%rs396, %rs395, 8;
	cvt.u32.u16	%r654, %rs396;
	mul.wide.u32 	%rd1375, %r654, 8;
	add.s64 	%rd1376, %rd1779, %rd1375;
	ld.shared.u64 	%rd1377, [%rd1376];
	xor.b64  	%rd1378, %rd1374, %rd1377;
	cvt.u32.u16	%r655, %rs378;
	and.b32  	%r656, %r655, 255;
	mul.wide.u32 	%rd1379, %r656, 8;
	add.s64 	%rd1380, %rd1780, %rd1379;
	ld.shared.u64 	%rd1381, [%rd1380];
	xor.b64  	%rd1382, %rd1378, %rd1381;
	shr.u16 	%rs397, %rs388, 8;
	cvt.u32.u16	%r657, %rs397;
	mul.wide.u32 	%rd1383, %r657, 8;
	add.s64 	%rd1384, %rd1783, %rd1383;
	ld.shared.u64 	%rd1385, [%rd1384];
	xor.b64  	%rd1386, %rd1382, %rd1385;
	mov.b32	{%rs398, %rs399}, %r598;
	cvt.u32.u16	%r658, %rs399;
	and.b32  	%r659, %r658, 255;
	mul.wide.u32 	%rd1387, %r659, 8;
	add.s64 	%rd1388, %rd1784, %rd1387;
	ld.shared.u64 	%rd1389, [%rd1388];
	xor.b64  	%rd1390, %rd1386, %rd1389;
	mov.b32	{%rs400, %rs401}, %r608;
	shr.u16 	%rs402, %rs401, 8;
	cvt.u32.u16	%r660, %rs402;
	mul.wide.u32 	%rd1391, %r660, 8;
	add.s64 	%rd1392, %rd1786, %rd1391;
	ld.shared.u64 	%rd1393, [%rd1392];
	xor.b64  	%rd1846, %rd1390, %rd1393;
	cvt.u32.u16	%r661, %rs374;
	and.b32  	%r662, %r661, 255;
	mul.wide.u32 	%rd1394, %r662, 8;
	add.s64 	%rd1395, %rd1776, %rd1394;
	shr.u16 	%rs403, %rs384, 8;
	cvt.u32.u16	%r663, %rs403;
	mul.wide.u32 	%rd1396, %r663, 8;
	add.s64 	%rd1397, %rd1777, %rd1396;
	ld.shared.u64 	%rd1398, [%rd1397];
	ld.shared.u64 	%rd1399, [%rd1395];
	xor.b64  	%rd1400, %rd1398, %rd1399;
	cvt.u32.u16	%r664, %rs395;
	and.b32  	%r665, %r664, 255;
	mul.wide.u32 	%rd1401, %r665, 8;
	add.s64 	%rd1402, %rd1778, %rd1401;
	ld.shared.u64 	%rd1403, [%rd1402];
	xor.b64  	%rd1404, %rd1400, %rd1403;
	mov.b32	{%rs404, %rs405}, %r593;
	shr.u16 	%rs406, %rs405, 8;
	cvt.u32.u16	%r666, %rs406;
	mul.wide.u32 	%rd1405, %r666, 8;
	add.s64 	%rd1406, %rd1779, %rd1405;
	ld.shared.u64 	%rd1407, [%rd1406];
	xor.b64  	%rd1408, %rd1404, %rd1407;
	cvt.u32.u16	%r667, %rs388;
	and.b32  	%r668, %r667, 255;
	mul.wide.u32 	%rd1409, %r668, 8;
	add.s64 	%rd1410, %rd1780, %rd1409;
	ld.shared.u64 	%rd1411, [%rd1410];
	xor.b64  	%rd1412, %rd1408, %rd1411;
	shr.u16 	%rs407, %rs398, 8;
	cvt.u32.u16	%r669, %rs407;
	mul.wide.u32 	%rd1413, %r669, 8;
	add.s64 	%rd1414, %rd1783, %rd1413;
	ld.shared.u64 	%rd1415, [%rd1414];
	xor.b64  	%rd1416, %rd1412, %rd1415;
	mov.b32	{%rs408, %rs409}, %r600;
	cvt.u32.u16	%r670, %rs409;
	and.b32  	%r671, %r670, 255;
	mul.wide.u32 	%rd1417, %r671, 8;
	add.s64 	%rd1418, %rd1784, %rd1417;
	ld.shared.u64 	%rd1419, [%rd1418];
	xor.b64  	%rd1420, %rd1416, %rd1419;
	mov.b32	{%rs410, %rs411}, %r610;
	shr.u16 	%rs412, %rs411, 8;
	cvt.u32.u16	%r672, %rs412;
	mul.wide.u32 	%rd1421, %r672, 8;
	add.s64 	%rd1422, %rd1786, %rd1421;
	ld.shared.u64 	%rd1423, [%rd1422];
	xor.b64  	%rd1845, %rd1420, %rd1423;
	cvt.u32.u16	%r673, %rs384;
	and.b32  	%r674, %r673, 255;
	mul.wide.u32 	%rd1424, %r674, 8;
	add.s64 	%rd1425, %rd1776, %rd1424;
	shr.u16 	%rs413, %rs394, 8;
	cvt.u32.u16	%r675, %rs413;
	mul.wide.u32 	%rd1426, %r675, 8;
	add.s64 	%rd1427, %rd1777, %rd1426;
	ld.shared.u64 	%rd1428, [%rd1427];
	ld.shared.u64 	%rd1429, [%rd1425];
	xor.b64  	%rd1430, %rd1428, %rd1429;
	cvt.u32.u16	%r676, %rs405;
	and.b32  	%r677, %r676, 255;
	mul.wide.u32 	%rd1431, %r677, 8;
	add.s64 	%rd1432, %rd1778, %rd1431;
	ld.shared.u64 	%rd1433, [%rd1432];
	xor.b64  	%rd1434, %rd1430, %rd1433;
	mov.b32	{%rs414, %rs415}, %r595;
	shr.u16 	%rs416, %rs415, 8;
	cvt.u32.u16	%r678, %rs416;
	mul.wide.u32 	%rd1435, %r678, 8;
	add.s64 	%rd1436, %rd1779, %rd1435;
	ld.shared.u64 	%rd1437, [%rd1436];
	xor.b64  	%rd1438, %rd1434, %rd1437;
	cvt.u32.u16	%r679, %rs398;
	and.b32  	%r680, %r679, 255;
	mul.wide.u32 	%rd1439, %r680, 8;
	add.s64 	%rd1440, %rd1780, %rd1439;
	ld.shared.u64 	%rd1441, [%rd1440];
	xor.b64  	%rd1442, %rd1438, %rd1441;
	shr.u16 	%rs417, %rs408, 8;
	cvt.u32.u16	%r681, %rs417;
	mul.wide.u32 	%rd1443, %r681, 8;
	add.s64 	%rd1444, %rd1783, %rd1443;
	ld.shared.u64 	%rd1445, [%rd1444];
	xor.b64  	%rd1446, %rd1442, %rd1445;
	cvt.u32.u16	%r682, %rs371;
	and.b32  	%r683, %r682, 255;
	mul.wide.u32 	%rd1447, %r683, 8;
	add.s64 	%rd1448, %rd1784, %rd1447;
	ld.shared.u64 	%rd1449, [%rd1448];
	xor.b64  	%rd1450, %rd1446, %rd1449;
	mov.b32	{%rs418, %rs419}, %r612;
	shr.u16 	%rs420, %rs419, 8;
	cvt.u32.u16	%r684, %rs420;
	mul.wide.u32 	%rd1451, %r684, 8;
	add.s64 	%rd1452, %rd1786, %rd1451;
	ld.shared.u64 	%rd1453, [%rd1452];
	xor.b64  	%rd1844, %rd1450, %rd1453;
	cvt.u32.u16	%r685, %rs394;
	and.b32  	%r686, %r685, 255;
	mul.wide.u32 	%rd1454, %r686, 8;
	add.s64 	%rd1455, %rd1776, %rd1454;
	shr.u16 	%rs421, %rs404, 8;
	cvt.u32.u16	%r687, %rs421;
	mul.wide.u32 	%rd1456, %r687, 8;
	add.s64 	%rd1457, %rd1777, %rd1456;
	ld.shared.u64 	%rd1458, [%rd1457];
	ld.shared.u64 	%rd1459, [%rd1455];
	xor.b64  	%rd1460, %rd1458, %rd1459;
	cvt.u32.u16	%r688, %rs415;
	and.b32  	%r689, %r688, 255;
	mul.wide.u32 	%rd1461, %r689, 8;
	add.s64 	%rd1462, %rd1778, %rd1461;
	ld.shared.u64 	%rd1463, [%rd1462];
	xor.b64  	%rd1464, %rd1460, %rd1463;
	mov.b32	{%rs422, %rs423}, %r597;
	shr.u16 	%rs424, %rs423, 8;
	cvt.u32.u16	%r690, %rs424;
	mul.wide.u32 	%rd1465, %r690, 8;
	add.s64 	%rd1466, %rd1779, %rd1465;
	ld.shared.u64 	%rd1467, [%rd1466];
	xor.b64  	%rd1468, %rd1464, %rd1467;
	cvt.u32.u16	%r691, %rs408;
	and.b32  	%r692, %r691, 255;
	mul.wide.u32 	%rd1469, %r692, 8;
	add.s64 	%rd1470, %rd1780, %rd1469;
	ld.shared.u64 	%rd1471, [%rd1470];
	xor.b64  	%rd1472, %rd1468, %rd1471;
	shr.u16 	%rs425, %rs370, 8;
	cvt.u32.u16	%r693, %rs425;
	mul.wide.u32 	%rd1473, %r693, 8;
	add.s64 	%rd1474, %rd1783, %rd1473;
	ld.shared.u64 	%rd1475, [%rd1474];
	xor.b64  	%rd1476, %rd1472, %rd1475;
	cvt.u32.u16	%r694, %rs381;
	and.b32  	%r695, %r694, 255;
	mul.wide.u32 	%rd1477, %r695, 8;
	add.s64 	%rd1478, %rd1784, %rd1477;
	ld.shared.u64 	%rd1479, [%rd1478];
	xor.b64  	%rd1480, %rd1476, %rd1479;
	mov.b32	{%rs426, %rs427}, %r582;
	shr.u16 	%rs428, %rs427, 8;
	cvt.u32.u16	%r696, %rs428;
	mul.wide.u32 	%rd1481, %r696, 8;
	add.s64 	%rd1482, %rd1786, %rd1481;
	ld.shared.u64 	%rd1483, [%rd1482];
	xor.b64  	%rd1843, %rd1480, %rd1483;
	cvt.u32.u16	%r697, %rs404;
	and.b32  	%r698, %r697, 255;
	mul.wide.u32 	%rd1484, %r698, 8;
	add.s64 	%rd1485, %rd1776, %rd1484;
	shr.u16 	%rs429, %rs414, 8;
	cvt.u32.u16	%r699, %rs429;
	mul.wide.u32 	%rd1486, %r699, 8;
	add.s64 	%rd1487, %rd1777, %rd1486;
	ld.shared.u64 	%rd1488, [%rd1487];
	ld.shared.u64 	%rd1489, [%rd1485];
	xor.b64  	%rd1490, %rd1488, %rd1489;
	cvt.u32.u16	%r700, %rs423;
	and.b32  	%r701, %r700, 255;
	mul.wide.u32 	%rd1491, %r701, 8;
	add.s64 	%rd1492, %rd1778, %rd1491;
	ld.shared.u64 	%rd1493, [%rd1492];
	xor.b64  	%rd1494, %rd1490, %rd1493;
	mov.b32	{%rs430, %rs431}, %r599;
	shr.u16 	%rs432, %rs431, 8;
	cvt.u32.u16	%r702, %rs432;
	mul.wide.u32 	%rd1495, %r702, 8;
	add.s64 	%rd1496, %rd1779, %rd1495;
	ld.shared.u64 	%rd1497, [%rd1496];
	xor.b64  	%rd1498, %rd1494, %rd1497;
	cvt.u32.u16	%r703, %rs370;
	and.b32  	%r704, %r703, 255;
	mul.wide.u32 	%rd1499, %r704, 8;
	add.s64 	%rd1500, %rd1780, %rd1499;
	ld.shared.u64 	%rd1501, [%rd1500];
	xor.b64  	%rd1502, %rd1498, %rd1501;
	shr.u16 	%rs433, %rs380, 8;
	cvt.u32.u16	%r705, %rs433;
	mul.wide.u32 	%rd1503, %r705, 8;
	add.s64 	%rd1504, %rd1783, %rd1503;
	ld.shared.u64 	%rd1505, [%rd1504];
	xor.b64  	%rd1506, %rd1502, %rd1505;
	cvt.u32.u16	%r706, %rs391;
	and.b32  	%r707, %r706, 255;
	mul.wide.u32 	%rd1507, %r707, 8;
	add.s64 	%rd1508, %rd1784, %rd1507;
	ld.shared.u64 	%rd1509, [%rd1508];
	xor.b64  	%rd1510, %rd1506, %rd1509;
	mov.b32	{%rs434, %rs435}, %r584;
	shr.u16 	%rs436, %rs435, 8;
	cvt.u32.u16	%r708, %rs436;
	mul.wide.u32 	%rd1511, %r708, 8;
	add.s64 	%rd1512, %rd1786, %rd1511;
	ld.shared.u64 	%rd1513, [%rd1512];
	xor.b64  	%rd1842, %rd1510, %rd1513;
	cvt.u32.u16	%r709, %rs414;
	and.b32  	%r710, %r709, 255;
	mul.wide.u32 	%rd1514, %r710, 8;
	add.s64 	%rd1515, %rd1776, %rd1514;
	shr.u16 	%rs437, %rs422, 8;
	cvt.u32.u16	%r711, %rs437;
	mul.wide.u32 	%rd1516, %r711, 8;
	add.s64 	%rd1517, %rd1777, %rd1516;
	ld.shared.u64 	%rd1518, [%rd1517];
	ld.shared.u64 	%rd1519, [%rd1515];
	xor.b64  	%rd1520, %rd1518, %rd1519;
	cvt.u32.u16	%r712, %rs431;
	and.b32  	%r713, %r712, 255;
	mul.wide.u32 	%rd1521, %r713, 8;
	add.s64 	%rd1522, %rd1778, %rd1521;
	ld.shared.u64 	%rd1523, [%rd1522];
	xor.b64  	%rd1524, %rd1520, %rd1523;
	mov.b32	{%rs438, %rs439}, %r601;
	shr.u16 	%rs440, %rs439, 8;
	cvt.u32.u16	%r714, %rs440;
	mul.wide.u32 	%rd1525, %r714, 8;
	add.s64 	%rd1526, %rd1779, %rd1525;
	ld.shared.u64 	%rd1527, [%rd1526];
	xor.b64  	%rd1528, %rd1524, %rd1527;
	cvt.u32.u16	%r715, %rs380;
	and.b32  	%r716, %r715, 255;
	mul.wide.u32 	%rd1529, %r716, 8;
	add.s64 	%rd1530, %rd1780, %rd1529;
	ld.shared.u64 	%rd1531, [%rd1530];
	xor.b64  	%rd1532, %rd1528, %rd1531;
	shr.u16 	%rs441, %rs390, 8;
	cvt.u32.u16	%r717, %rs441;
	mul.wide.u32 	%rd1533, %r717, 8;
	add.s64 	%rd1534, %rd1783, %rd1533;
	ld.shared.u64 	%rd1535, [%rd1534];
	xor.b64  	%rd1536, %rd1532, %rd1535;
	cvt.u32.u16	%r718, %rs401;
	and.b32  	%r719, %r718, 255;
	mul.wide.u32 	%rd1537, %r719, 8;
	add.s64 	%rd1538, %rd1784, %rd1537;
	ld.shared.u64 	%rd1539, [%rd1538];
	xor.b64  	%rd1540, %rd1536, %rd1539;
	mov.b32	{%rs442, %rs443}, %r586;
	shr.u16 	%rs444, %rs443, 8;
	cvt.u32.u16	%r720, %rs444;
	mul.wide.u32 	%rd1541, %r720, 8;
	add.s64 	%rd1542, %rd1786, %rd1541;
	ld.shared.u64 	%rd1543, [%rd1542];
	xor.b64  	%rd122, %rd1540, %rd1543;
	cvt.u32.u16	%r721, %rs422;
	and.b32  	%r722, %r721, 255;
	mul.wide.u32 	%rd1544, %r722, 8;
	add.s64 	%rd1545, %rd1776, %rd1544;
	shr.u16 	%rs445, %rs430, 8;
	cvt.u32.u16	%r723, %rs445;
	mul.wide.u32 	%rd1546, %r723, 8;
	add.s64 	%rd1547, %rd1777, %rd1546;
	ld.shared.u64 	%rd1548, [%rd1547];
	ld.shared.u64 	%rd1549, [%rd1545];
	xor.b64  	%rd1550, %rd1548, %rd1549;
	cvt.u32.u16	%r724, %rs439;
	and.b32  	%r725, %r724, 255;
	mul.wide.u32 	%rd1551, %r725, 8;
	add.s64 	%rd1552, %rd1778, %rd1551;
	ld.shared.u64 	%rd1553, [%rd1552];
	xor.b64  	%rd1554, %rd1550, %rd1553;
	mov.b32	{%rs446, %rs447}, %r603;
	shr.u16 	%rs448, %rs447, 8;
	cvt.u32.u16	%r726, %rs448;
	mul.wide.u32 	%rd1555, %r726, 8;
	add.s64 	%rd1556, %rd1779, %rd1555;
	ld.shared.u64 	%rd1557, [%rd1556];
	xor.b64  	%rd1558, %rd1554, %rd1557;
	cvt.u32.u16	%r727, %rs390;
	and.b32  	%r728, %r727, 255;
	mul.wide.u32 	%rd1559, %r728, 8;
	add.s64 	%rd1560, %rd1780, %rd1559;
	ld.shared.u64 	%rd1561, [%rd1560];
	xor.b64  	%rd1562, %rd1558, %rd1561;
	shr.u16 	%rs449, %rs400, 8;
	cvt.u32.u16	%r729, %rs449;
	mul.wide.u32 	%rd1563, %r729, 8;
	add.s64 	%rd1564, %rd1783, %rd1563;
	ld.shared.u64 	%rd1565, [%rd1564];
	xor.b64  	%rd1566, %rd1562, %rd1565;
	cvt.u32.u16	%r730, %rs411;
	and.b32  	%r731, %r730, 255;
	mul.wide.u32 	%rd1567, %r731, 8;
	add.s64 	%rd1568, %rd1784, %rd1567;
	ld.shared.u64 	%rd1569, [%rd1568];
	xor.b64  	%rd1570, %rd1566, %rd1569;
	shr.u16 	%rs450, %rs364, 8;
	cvt.u32.u16	%r732, %rs450;
	mul.wide.u32 	%rd1571, %r732, 8;
	add.s64 	%rd1572, %rd1786, %rd1571;
	ld.shared.u64 	%rd1573, [%rd1572];
	xor.b64  	%rd123, %rd1570, %rd1573;
	cvt.u32.u16	%r733, %rs430;
	and.b32  	%r734, %r733, 255;
	mul.wide.u32 	%rd1574, %r734, 8;
	add.s64 	%rd1575, %rd1776, %rd1574;
	shr.u16 	%rs451, %rs438, 8;
	cvt.u32.u16	%r735, %rs451;
	mul.wide.u32 	%rd1576, %r735, 8;
	add.s64 	%rd1577, %rd1777, %rd1576;
	ld.shared.u64 	%rd1578, [%rd1577];
	ld.shared.u64 	%rd1579, [%rd1575];
	xor.b64  	%rd1580, %rd1578, %rd1579;
	cvt.u32.u16	%r736, %rs447;
	and.b32  	%r737, %r736, 255;
	mul.wide.u32 	%rd1581, %r737, 8;
	add.s64 	%rd1582, %rd1778, %rd1581;
	ld.shared.u64 	%rd1583, [%rd1582];
	xor.b64  	%rd1584, %rd1580, %rd1583;
	mov.b32	{%rs452, %rs453}, %r605;
	shr.u16 	%rs454, %rs453, 8;
	cvt.u32.u16	%r738, %rs454;
	mul.wide.u32 	%rd1585, %r738, 8;
	add.s64 	%rd1586, %rd1779, %rd1585;
	ld.shared.u64 	%rd1587, [%rd1586];
	xor.b64  	%rd1588, %rd1584, %rd1587;
	cvt.u32.u16	%r739, %rs400;
	and.b32  	%r740, %r739, 255;
	mul.wide.u32 	%rd1589, %r740, 8;
	add.s64 	%rd1590, %rd1780, %rd1589;
	ld.shared.u64 	%rd1591, [%rd1590];
	xor.b64  	%rd1592, %rd1588, %rd1591;
	shr.u16 	%rs455, %rs410, 8;
	cvt.u32.u16	%r741, %rs455;
	mul.wide.u32 	%rd1593, %r741, 8;
	add.s64 	%rd1594, %rd1783, %rd1593;
	ld.shared.u64 	%rd1595, [%rd1594];
	xor.b64  	%rd1596, %rd1592, %rd1595;
	cvt.u32.u16	%r742, %rs419;
	and.b32  	%r743, %r742, 255;
	mul.wide.u32 	%rd1597, %r743, 8;
	add.s64 	%rd1598, %rd1784, %rd1597;
	ld.shared.u64 	%rd1599, [%rd1598];
	xor.b64  	%rd1600, %rd1596, %rd1599;
	shr.u16 	%rs456, %rs366, 8;
	cvt.u32.u16	%r744, %rs456;
	mul.wide.u32 	%rd1601, %r744, 8;
	add.s64 	%rd1602, %rd1786, %rd1601;
	ld.shared.u64 	%rd1603, [%rd1602];
	xor.b64  	%rd124, %rd1600, %rd1603;
	cvt.u32.u16	%r745, %rs438;
	and.b32  	%r746, %r745, 255;
	mul.wide.u32 	%rd1604, %r746, 8;
	add.s64 	%rd1605, %rd1776, %rd1604;
	shr.u16 	%rs457, %rs446, 8;
	cvt.u32.u16	%r747, %rs457;
	mul.wide.u32 	%rd1606, %r747, 8;
	add.s64 	%rd1607, %rd1777, %rd1606;
	ld.shared.u64 	%rd1608, [%rd1607];
	ld.shared.u64 	%rd1609, [%rd1605];
	xor.b64  	%rd1610, %rd1608, %rd1609;
	cvt.u32.u16	%r748, %rs453;
	and.b32  	%r749, %r748, 255;
	mul.wide.u32 	%rd1611, %r749, 8;
	add.s64 	%rd1612, %rd1778, %rd1611;
	ld.shared.u64 	%rd1613, [%rd1612];
	xor.b64  	%rd1614, %rd1610, %rd1613;
	mov.b32	{%rs458, %rs459}, %r607;
	shr.u16 	%rs460, %rs459, 8;
	cvt.u32.u16	%r750, %rs460;
	mul.wide.u32 	%rd1615, %r750, 8;
	add.s64 	%rd1616, %rd1779, %rd1615;
	ld.shared.u64 	%rd1617, [%rd1616];
	xor.b64  	%rd1618, %rd1614, %rd1617;
	cvt.u32.u16	%r751, %rs410;
	and.b32  	%r752, %r751, 255;
	mul.wide.u32 	%rd1619, %r752, 8;
	add.s64 	%rd1620, %rd1780, %rd1619;
	ld.shared.u64 	%rd1621, [%rd1620];
	xor.b64  	%rd1622, %rd1618, %rd1621;
	shr.u16 	%rs461, %rs418, 8;
	cvt.u32.u16	%r753, %rs461;
	mul.wide.u32 	%rd1623, %r753, 8;
	add.s64 	%rd1624, %rd1783, %rd1623;
	ld.shared.u64 	%rd1625, [%rd1624];
	xor.b64  	%rd1626, %rd1622, %rd1625;
	cvt.u32.u16	%r754, %rs427;
	and.b32  	%r755, %r754, 255;
	mul.wide.u32 	%rd1627, %r755, 8;
	add.s64 	%rd1628, %rd1784, %rd1627;
	ld.shared.u64 	%rd1629, [%rd1628];
	xor.b64  	%rd1630, %rd1626, %rd1629;
	shr.u16 	%rs462, %rs369, 8;
	cvt.u32.u16	%r756, %rs462;
	mul.wide.u32 	%rd1631, %r756, 8;
	add.s64 	%rd1632, %rd1786, %rd1631;
	ld.shared.u64 	%rd1633, [%rd1632];
	xor.b64  	%rd125, %rd1630, %rd1633;
	cvt.u32.u16	%r757, %rs446;
	and.b32  	%r758, %r757, 255;
	mul.wide.u32 	%rd1634, %r758, 8;
	add.s64 	%rd1635, %rd1776, %rd1634;
	shr.u16 	%rs463, %rs452, 8;
	cvt.u32.u16	%r759, %rs463;
	mul.wide.u32 	%rd1636, %r759, 8;
	add.s64 	%rd1637, %rd1777, %rd1636;
	ld.shared.u64 	%rd1638, [%rd1637];
	ld.shared.u64 	%rd1639, [%rd1635];
	xor.b64  	%rd1640, %rd1638, %rd1639;
	cvt.u32.u16	%r760, %rs459;
	and.b32  	%r761, %r760, 255;
	mul.wide.u32 	%rd1641, %r761, 8;
	add.s64 	%rd1642, %rd1778, %rd1641;
	ld.shared.u64 	%rd1643, [%rd1642];
	xor.b64  	%rd1644, %rd1640, %rd1643;
	mov.b32	{%rs464, %rs465}, %r609;
	shr.u16 	%rs466, %rs465, 8;
	cvt.u32.u16	%r762, %rs466;
	mul.wide.u32 	%rd1645, %r762, 8;
	add.s64 	%rd1646, %rd1779, %rd1645;
	ld.shared.u64 	%rd1647, [%rd1646];
	xor.b64  	%rd1648, %rd1644, %rd1647;
	cvt.u32.u16	%r763, %rs418;
	and.b32  	%r764, %r763, 255;
	mul.wide.u32 	%rd1649, %r764, 8;
	add.s64 	%rd1650, %rd1780, %rd1649;
	ld.shared.u64 	%rd1651, [%rd1650];
	xor.b64  	%rd1652, %rd1648, %rd1651;
	shr.u16 	%rs467, %rs426, 8;
	cvt.u32.u16	%r765, %rs467;
	mul.wide.u32 	%rd1653, %r765, 8;
	add.s64 	%rd1654, %rd1783, %rd1653;
	ld.shared.u64 	%rd1655, [%rd1654];
	xor.b64  	%rd1656, %rd1652, %rd1655;
	cvt.u32.u16	%r766, %rs435;
	and.b32  	%r767, %r766, 255;
	mul.wide.u32 	%rd1657, %r767, 8;
	add.s64 	%rd1658, %rd1784, %rd1657;
	ld.shared.u64 	%rd1659, [%rd1658];
	xor.b64  	%rd1660, %rd1656, %rd1659;
	shr.u16 	%rs468, %rs379, 8;
	cvt.u32.u16	%r768, %rs468;
	mul.wide.u32 	%rd1661, %r768, 8;
	add.s64 	%rd1662, %rd1786, %rd1661;
	ld.shared.u64 	%rd1663, [%rd1662];
	xor.b64  	%rd126, %rd1660, %rd1663;
	cvt.u32.u16	%r769, %rs452;
	and.b32  	%r770, %r769, 255;
	mul.wide.u32 	%rd1664, %r770, 8;
	add.s64 	%rd1665, %rd1776, %rd1664;
	shr.u16 	%rs469, %rs458, 8;
	cvt.u32.u16	%r771, %rs469;
	mul.wide.u32 	%rd1666, %r771, 8;
	add.s64 	%rd1667, %rd1777, %rd1666;
	ld.shared.u64 	%rd1668, [%rd1667];
	ld.shared.u64 	%rd1669, [%rd1665];
	xor.b64  	%rd1670, %rd1668, %rd1669;
	cvt.u32.u16	%r772, %rs465;
	and.b32  	%r773, %r772, 255;
	mul.wide.u32 	%rd1671, %r773, 8;
	add.s64 	%rd1672, %rd1778, %rd1671;
	ld.shared.u64 	%rd1673, [%rd1672];
	xor.b64  	%rd1674, %rd1670, %rd1673;
	shr.u16 	%rs470, %rs354, 8;
	cvt.u32.u16	%r774, %rs470;
	mul.wide.u32 	%rd1675, %r774, 8;
	add.s64 	%rd1676, %rd1779, %rd1675;
	ld.shared.u64 	%rd1677, [%rd1676];
	xor.b64  	%rd1678, %rd1674, %rd1677;
	cvt.u32.u16	%r775, %rs426;
	and.b32  	%r776, %r775, 255;
	mul.wide.u32 	%rd1679, %r776, 8;
	add.s64 	%rd1680, %rd1780, %rd1679;
	ld.shared.u64 	%rd1681, [%rd1680];
	xor.b64  	%rd1682, %rd1678, %rd1681;
	shr.u16 	%rs471, %rs434, 8;
	cvt.u32.u16	%r777, %rs471;
	mul.wide.u32 	%rd1683, %r777, 8;
	add.s64 	%rd1684, %rd1783, %rd1683;
	ld.shared.u64 	%rd1685, [%rd1684];
	xor.b64  	%rd1686, %rd1682, %rd1685;
	cvt.u32.u16	%r778, %rs443;
	and.b32  	%r779, %r778, 255;
	mul.wide.u32 	%rd1687, %r779, 8;
	add.s64 	%rd1688, %rd1784, %rd1687;
	ld.shared.u64 	%rd1689, [%rd1688];
	xor.b64  	%rd1690, %rd1686, %rd1689;
	shr.u16 	%rs472, %rs389, 8;
	cvt.u32.u16	%r780, %rs472;
	mul.wide.u32 	%rd1691, %r780, 8;
	add.s64 	%rd1692, %rd1786, %rd1691;
	ld.shared.u64 	%rd1693, [%rd1692];
	xor.b64  	%rd127, %rd1690, %rd1693;
	cvt.u32.u16	%r781, %rs458;
	and.b32  	%r782, %r781, 255;
	mul.wide.u32 	%rd1694, %r782, 8;
	add.s64 	%rd1695, %rd1776, %rd1694;
	shr.u16 	%rs473, %rs464, 8;
	cvt.u32.u16	%r783, %rs473;
	mul.wide.u32 	%rd1696, %r783, 8;
	add.s64 	%rd1697, %rd1777, %rd1696;
	ld.shared.u64 	%rd1698, [%rd1697];
	ld.shared.u64 	%rd1699, [%rd1695];
	xor.b64  	%rd1700, %rd1698, %rd1699;
	cvt.u32.u16	%r784, %rs354;
	and.b32  	%r785, %r784, 255;
	mul.wide.u32 	%rd1701, %r785, 8;
	add.s64 	%rd1702, %rd1778, %rd1701;
	ld.shared.u64 	%rd1703, [%rd1702];
	xor.b64  	%rd1704, %rd1700, %rd1703;
	shr.u16 	%rs474, %rs356, 8;
	cvt.u32.u16	%r786, %rs474;
	mul.wide.u32 	%rd1705, %r786, 8;
	add.s64 	%rd1706, %rd1779, %rd1705;
	ld.shared.u64 	%rd1707, [%rd1706];
	xor.b64  	%rd1708, %rd1704, %rd1707;
	cvt.u32.u16	%r787, %rs434;
	and.b32  	%r788, %r787, 255;
	mul.wide.u32 	%rd1709, %r788, 8;
	add.s64 	%rd1710, %rd1780, %rd1709;
	ld.shared.u64 	%rd1711, [%rd1710];
	xor.b64  	%rd1712, %rd1708, %rd1711;
	shr.u16 	%rs475, %rs442, 8;
	cvt.u32.u16	%r789, %rs475;
	mul.wide.u32 	%rd1713, %r789, 8;
	add.s64 	%rd1714, %rd1783, %rd1713;
	ld.shared.u64 	%rd1715, [%rd1714];
	xor.b64  	%rd1716, %rd1712, %rd1715;
	cvt.u32.u16	%r790, %rs364;
	and.b32  	%r791, %r790, 255;
	mul.wide.u32 	%rd1717, %r791, 8;
	add.s64 	%rd1718, %rd1784, %rd1717;
	ld.shared.u64 	%rd1719, [%rd1718];
	xor.b64  	%rd1720, %rd1716, %rd1719;
	shr.u16 	%rs476, %rs399, 8;
	cvt.u32.u16	%r792, %rs476;
	mul.wide.u32 	%rd1721, %r792, 8;
	add.s64 	%rd1722, %rd1786, %rd1721;
	ld.shared.u64 	%rd1723, [%rd1722];
	xor.b64  	%rd128, %rd1720, %rd1723;
	cvt.u32.u16	%r793, %rs464;
	and.b32  	%r794, %r793, 255;
	mul.wide.u32 	%rd1724, %r794, 8;
	add.s64 	%rd1725, %rd1776, %rd1724;
	shr.u16 	%rs477, %rs353, 8;
	cvt.u32.u16	%r795, %rs477;
	mul.wide.u32 	%rd1726, %r795, 8;
	add.s64 	%rd1727, %rd1777, %rd1726;
	ld.shared.u64 	%rd1728, [%rd1727];
	ld.shared.u64 	%rd1729, [%rd1725];
	xor.b64  	%rd1730, %rd1728, %rd1729;
	cvt.u32.u16	%r796, %rs356;
	and.b32  	%r797, %r796, 255;
	mul.wide.u32 	%rd1731, %r797, 8;
	add.s64 	%rd1732, %rd1778, %rd1731;
	ld.shared.u64 	%rd1733, [%rd1732];
	xor.b64  	%rd1734, %rd1730, %rd1733;
	shr.u16 	%rs478, %rs359, 8;
	cvt.u32.u16	%r798, %rs478;
	mul.wide.u32 	%rd1735, %r798, 8;
	add.s64 	%rd1736, %rd1779, %rd1735;
	ld.shared.u64 	%rd1737, [%rd1736];
	xor.b64  	%rd1738, %rd1734, %rd1737;
	cvt.u32.u16	%r799, %rs442;
	and.b32  	%r800, %r799, 255;
	mul.wide.u32 	%rd1739, %r800, 8;
	add.s64 	%rd1740, %rd1780, %rd1739;
	ld.shared.u64 	%rd1741, [%rd1740];
	xor.b64  	%rd1742, %rd1738, %rd1741;
	shr.u16 	%rs479, %rs363, 8;
	cvt.u32.u16	%r801, %rs479;
	mul.wide.u32 	%rd1743, %r801, 8;
	add.s64 	%rd1744, %rd1783, %rd1743;
	ld.shared.u64 	%rd1745, [%rd1744];
	xor.b64  	%rd1746, %rd1742, %rd1745;
	cvt.u32.u16	%r802, %rs366;
	and.b32  	%r803, %r802, 255;
	mul.wide.u32 	%rd1747, %r803, 8;
	add.s64 	%rd1748, %rd1784, %rd1747;
	ld.shared.u64 	%rd1749, [%rd1748];
	xor.b64  	%rd1750, %rd1746, %rd1749;
	shr.u16 	%rs480, %rs409, 8;
	cvt.u32.u16	%r804, %rs480;
	mul.wide.u32 	%rd1751, %r804, 8;
	add.s64 	%rd1752, %rd1786, %rd1751;
	ld.shared.u64 	%rd1753, [%rd1752];
	xor.b64  	%rd129, %rd1750, %rd1753;
	add.s64 	%rd1833, %rd1833, 1;
	add.s32 	%r825, %r825, 1;
	setp.ne.s32	%p5, %r825, 0;
	mov.u64 	%rd1834, %rd129;
	mov.u64 	%rd1835, %rd128;
	mov.u64 	%rd1836, %rd127;
	mov.u64 	%rd1837, %rd126;
	mov.u64 	%rd1838, %rd125;
	mov.u64 	%rd1839, %rd124;
	mov.u64 	%rd1840, %rd123;
	mov.u64 	%rd1841, %rd122;
	@%p5 bra 	BB1_7;

	ld.param.u64 	%rd1788, [search1_param_0];
	add.s64 	%rd1787, %rd1788, %rd184;
	xor.b64  	%rd1754, %rd89, %rd122;
	mov.b64	{%r805, %r806}, %rd1754;
	mov.b32	{%rs481, %rs482}, %r805;
	shr.u16 	%rs483, %rs481, 8;
	shr.u16 	%rs484, %rs482, 8;
	st.global.v4.u8 	[%rd1787+4], {%rs484, %rs482, %rs483, %rs481};
	mov.b32	{%rs485, %rs486}, %r806;
	shr.u16 	%rs487, %rs485, 8;
	shr.u16 	%rs488, %rs486, 8;
	st.global.v4.u8 	[%rd1787], {%rs488, %rs486, %rs487, %rs485};
	xor.b64  	%rd1755, %rd90, %rd123;
	mov.b64	{%r807, %r808}, %rd1755;
	mov.b32	{%rs489, %rs490}, %r807;
	shr.u16 	%rs491, %rs489, 8;
	shr.u16 	%rs492, %rs490, 8;
	st.global.v4.u8 	[%rd1787+12], {%rs492, %rs490, %rs491, %rs489};
	mov.b32	{%rs493, %rs494}, %r808;
	shr.u16 	%rs495, %rs493, 8;
	shr.u16 	%rs496, %rs494, 8;
	st.global.v4.u8 	[%rd1787+8], {%rs496, %rs494, %rs495, %rs493};
	xor.b64  	%rd1756, %rd91, %rd124;
	mov.b64	{%r809, %r810}, %rd1756;
	mov.b32	{%rs497, %rs498}, %r809;
	shr.u16 	%rs499, %rs497, 8;
	shr.u16 	%rs500, %rs498, 8;
	st.global.v4.u8 	[%rd1787+20], {%rs500, %rs498, %rs499, %rs497};
	mov.b32	{%rs501, %rs502}, %r810;
	shr.u16 	%rs503, %rs501, 8;
	shr.u16 	%rs504, %rs502, 8;
	st.global.v4.u8 	[%rd1787+16], {%rs504, %rs502, %rs503, %rs501};
	xor.b64  	%rd1757, %rd92, %rd125;
	mov.b64	{%r811, %r812}, %rd1757;
	mov.b32	{%rs505, %rs506}, %r811;
	shr.u16 	%rs507, %rs505, 8;
	shr.u16 	%rs508, %rs506, 8;
	st.global.v4.u8 	[%rd1787+28], {%rs508, %rs506, %rs507, %rs505};
	mov.b32	{%rs509, %rs510}, %r812;
	shr.u16 	%rs511, %rs509, 8;
	shr.u16 	%rs512, %rs510, 8;
	st.global.v4.u8 	[%rd1787+24], {%rs512, %rs510, %rs511, %rs509};
	xor.b64  	%rd1758, %rd93, %rd126;
	mov.b64	{%r813, %r814}, %rd1758;
	mov.b32	{%rs513, %rs514}, %r813;
	shr.u16 	%rs515, %rs513, 8;
	shr.u16 	%rs516, %rs514, 8;
	st.global.v4.u8 	[%rd1787+36], {%rs516, %rs514, %rs515, %rs513};
	mov.b32	{%rs517, %rs518}, %r814;
	shr.u16 	%rs519, %rs517, 8;
	shr.u16 	%rs520, %rs518, 8;
	st.global.v4.u8 	[%rd1787+32], {%rs520, %rs518, %rs519, %rs517};
	xor.b64  	%rd1759, %rd94, %rd127;
	mov.b64	{%r815, %r816}, %rd1759;
	mov.b32	{%rs521, %rs522}, %r815;
	shr.u16 	%rs523, %rs521, 8;
	shr.u16 	%rs524, %rs522, 8;
	st.global.v4.u8 	[%rd1787+44], {%rs524, %rs522, %rs523, %rs521};
	mov.b32	{%rs525, %rs526}, %r816;
	shr.u16 	%rs527, %rs525, 8;
	shr.u16 	%rs528, %rs526, 8;
	st.global.v4.u8 	[%rd1787+40], {%rs528, %rs526, %rs527, %rs525};
	xor.b64  	%rd1760, %rd95, %rd128;
	mov.b64	{%r817, %r818}, %rd1760;
	mov.b32	{%rs529, %rs530}, %r817;
	shr.u16 	%rs531, %rs529, 8;
	shr.u16 	%rs532, %rs530, 8;
	st.global.v4.u8 	[%rd1787+52], {%rs532, %rs530, %rs531, %rs529};
	mov.b32	{%rs533, %rs534}, %r818;
	shr.u16 	%rs535, %rs533, 8;
	shr.u16 	%rs536, %rs534, 8;
	st.global.v4.u8 	[%rd1787+48], {%rs536, %rs534, %rs535, %rs533};
	xor.b64  	%rd1761, %rd96, %rd129;
	mov.b64	{%r819, %r820}, %rd1761;
	mov.b32	{%rs537, %rs538}, %r819;
	shr.u16 	%rs539, %rs537, 8;
	shr.u16 	%rs540, %rs538, 8;
	st.global.v4.u8 	[%rd1787+60], {%rs540, %rs538, %rs539, %rs537};
	mov.b32	{%rs541, %rs542}, %r820;
	shr.u16 	%rs543, %rs541, 8;
	shr.u16 	%rs544, %rs542, 8;
	st.global.v4.u8 	[%rd1787+56], {%rs544, %rs542, %rs543, %rs541};
	bar.sync 	0;
	ret;
}

	// .globl	search2
.entry search2(
	.param .u64 .ptr .global .align 8 search2_param_0
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<257>;
	.reg .b32 	%r<254>;
	.reg .b64 	%rd<6059>;


	ld.param.u64 	%rd84, [search2_param_0];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r9, %r7, %r8;
	cvt.u64.u32	%rd85, %r9;
	mov.b32	%r10, %envreg0;
	mul.lo.s32 	%r11, %r6, %r10;
	sub.s32 	%r12, %r4, %r11;
	cvt.s64.s32	%rd86, %r12;
	sub.s64 	%rd87, %rd85, %rd86;
	shl.b64 	%rd88, %rd87, 6;
	add.s64 	%rd1, %rd84, %rd88;
	mov.u64 	%rd6043, -353666819078438173;
	mov.u64 	%rd6044, 6246798723146843815;
	mov.u64 	%rd6045, 6266954173329594319;
	mov.u64 	%rd6046, -7367508363104391621;
	mov.u64 	%rd6047, 2611107851932223248;
	mov.u64 	%rd6048, 6550044953807598918;
	mov.u64 	%rd6049, 7587126390670387457;
	mov.u64 	%rd6050, -631637842984300631;
	mov.u64 	%rd6051, -6432700333758312872;
	mov.u64 	%rd6052, -9192642978575439574;
	mov.u64 	%rd6053, 2197879023678266761;
	mov.u64 	%rd6054, 7044672095595410665;
	mov.u64 	%rd6055, 860072134018212490;
	mov.u64 	%rd6056, 4887836584397662819;
	mov.u64 	%rd6057, 1705175677722677615;
	mov.u64 	%rd6058, 5466680332516743764;
	mov.u32 	%r253, 0;

BB2_1:
	setp.eq.s32	%p1, %r253, 0;
	@%p1 bra 	BB2_4;
	bra.uni 	BB2_2;

BB2_4:
	ld.global.v4.u8 	{%rs97, %rs98, %rs99, %rs100}, [%rd1];
	cvt.u32.u16	%r125, %rs100;
	cvt.u32.u16	%r126, %rs99;
	bfi.b32 	%r127, %r126, %r125, 8, 8;
	cvt.u32.u16	%r128, %rs98;
	cvt.u32.u16	%r129, %rs97;
	bfi.b32 	%r130, %r129, %r128, 8, 8;
	bfi.b32 	%r131, %r130, %r127, 16, 16;
	ld.global.v4.u8 	{%rs103, %rs104, %rs105, %rs106}, [%rd1+4];
	cvt.u32.u16	%r132, %rs106;
	cvt.u32.u16	%r133, %rs105;
	bfi.b32 	%r134, %r133, %r132, 8, 8;
	cvt.u32.u16	%r135, %rs104;
	cvt.u32.u16	%r136, %rs103;
	bfi.b32 	%r137, %r136, %r135, 8, 8;
	bfi.b32 	%r138, %r137, %r134, 16, 16;
	mov.b64	%rd97, {%r138, %r131};
	xor.b64  	%rd6057, %rd97, %rd6057;
	ld.global.v4.u8 	{%rs109, %rs110, %rs111, %rs112}, [%rd1+8];
	cvt.u32.u16	%r139, %rs112;
	cvt.u32.u16	%r140, %rs111;
	bfi.b32 	%r141, %r140, %r139, 8, 8;
	cvt.u32.u16	%r142, %rs110;
	cvt.u32.u16	%r143, %rs109;
	bfi.b32 	%r144, %r143, %r142, 8, 8;
	bfi.b32 	%r145, %r144, %r141, 16, 16;
	ld.global.v4.u8 	{%rs115, %rs116, %rs117, %rs118}, [%rd1+12];
	cvt.u32.u16	%r146, %rs118;
	cvt.u32.u16	%r147, %rs117;
	bfi.b32 	%r148, %r147, %r146, 8, 8;
	cvt.u32.u16	%r149, %rs116;
	cvt.u32.u16	%r150, %rs115;
	bfi.b32 	%r151, %r150, %r149, 8, 8;
	bfi.b32 	%r152, %r151, %r148, 16, 16;
	mov.b64	%rd98, {%r152, %r145};
	xor.b64  	%rd6056, %rd98, %rd6056;
	ld.global.v4.u8 	{%rs121, %rs122, %rs123, %rs124}, [%rd1+16];
	cvt.u32.u16	%r153, %rs124;
	cvt.u32.u16	%r154, %rs123;
	bfi.b32 	%r155, %r154, %r153, 8, 8;
	cvt.u32.u16	%r156, %rs122;
	cvt.u32.u16	%r157, %rs121;
	bfi.b32 	%r158, %r157, %r156, 8, 8;
	bfi.b32 	%r159, %r158, %r155, 16, 16;
	ld.global.v4.u8 	{%rs127, %rs128, %rs129, %rs130}, [%rd1+20];
	cvt.u32.u16	%r160, %rs130;
	cvt.u32.u16	%r161, %rs129;
	bfi.b32 	%r162, %r161, %r160, 8, 8;
	cvt.u32.u16	%r163, %rs128;
	cvt.u32.u16	%r164, %rs127;
	bfi.b32 	%r165, %r164, %r163, 8, 8;
	bfi.b32 	%r166, %r165, %r162, 16, 16;
	mov.b64	%rd99, {%r166, %r159};
	xor.b64  	%rd6055, %rd99, %rd6055;
	ld.global.v4.u8 	{%rs133, %rs134, %rs135, %rs136}, [%rd1+24];
	cvt.u32.u16	%r167, %rs136;
	cvt.u32.u16	%r168, %rs135;
	bfi.b32 	%r169, %r168, %r167, 8, 8;
	cvt.u32.u16	%r170, %rs134;
	cvt.u32.u16	%r171, %rs133;
	bfi.b32 	%r172, %r171, %r170, 8, 8;
	bfi.b32 	%r173, %r172, %r169, 16, 16;
	ld.global.v4.u8 	{%rs139, %rs140, %rs141, %rs142}, [%rd1+28];
	cvt.u32.u16	%r174, %rs142;
	cvt.u32.u16	%r175, %rs141;
	bfi.b32 	%r176, %r175, %r174, 8, 8;
	cvt.u32.u16	%r177, %rs140;
	cvt.u32.u16	%r178, %rs139;
	bfi.b32 	%r179, %r178, %r177, 8, 8;
	bfi.b32 	%r180, %r179, %r176, 16, 16;
	mov.b64	%rd100, {%r180, %r173};
	xor.b64  	%rd6054, %rd100, %rd6054;
	ld.global.v4.u8 	{%rs145, %rs146, %rs147, %rs148}, [%rd1+32];
	cvt.u32.u16	%r181, %rs148;
	cvt.u32.u16	%r182, %rs147;
	bfi.b32 	%r183, %r182, %r181, 8, 8;
	cvt.u32.u16	%r184, %rs146;
	cvt.u32.u16	%r185, %rs145;
	bfi.b32 	%r186, %r185, %r184, 8, 8;
	bfi.b32 	%r187, %r186, %r183, 16, 16;
	ld.global.v4.u8 	{%rs151, %rs152, %rs153, %rs154}, [%rd1+36];
	cvt.u32.u16	%r188, %rs154;
	cvt.u32.u16	%r189, %rs153;
	bfi.b32 	%r190, %r189, %r188, 8, 8;
	cvt.u32.u16	%r191, %rs152;
	cvt.u32.u16	%r192, %rs151;
	bfi.b32 	%r193, %r192, %r191, 8, 8;
	bfi.b32 	%r194, %r193, %r190, 16, 16;
	mov.b64	%rd101, {%r194, %r187};
	xor.b64  	%rd6053, %rd101, %rd6053;
	ld.global.v4.u8 	{%rs157, %rs158, %rs159, %rs160}, [%rd1+40];
	cvt.u32.u16	%r195, %rs160;
	cvt.u32.u16	%r196, %rs159;
	bfi.b32 	%r197, %r196, %r195, 8, 8;
	cvt.u32.u16	%r198, %rs158;
	cvt.u32.u16	%r199, %rs157;
	bfi.b32 	%r200, %r199, %r198, 8, 8;
	bfi.b32 	%r201, %r200, %r197, 16, 16;
	ld.global.v4.u8 	{%rs163, %rs164, %rs165, %rs166}, [%rd1+44];
	cvt.u32.u16	%r202, %rs166;
	cvt.u32.u16	%r203, %rs165;
	bfi.b32 	%r204, %r203, %r202, 8, 8;
	cvt.u32.u16	%r205, %rs164;
	cvt.u32.u16	%r206, %rs163;
	bfi.b32 	%r207, %r206, %r205, 8, 8;
	bfi.b32 	%r208, %r207, %r204, 16, 16;
	mov.b64	%rd102, {%r208, %r201};
	xor.b64  	%rd6052, %rd102, %rd6052;
	ld.global.v4.u8 	{%rs169, %rs170, %rs171, %rs172}, [%rd1+48];
	cvt.u32.u16	%r209, %rs172;
	cvt.u32.u16	%r210, %rs171;
	bfi.b32 	%r211, %r210, %r209, 8, 8;
	cvt.u32.u16	%r212, %rs170;
	cvt.u32.u16	%r213, %rs169;
	bfi.b32 	%r214, %r213, %r212, 8, 8;
	bfi.b32 	%r215, %r214, %r211, 16, 16;
	ld.global.v4.u8 	{%rs175, %rs176, %rs177, %rs178}, [%rd1+52];
	cvt.u32.u16	%r216, %rs178;
	cvt.u32.u16	%r217, %rs177;
	bfi.b32 	%r218, %r217, %r216, 8, 8;
	cvt.u32.u16	%r219, %rs176;
	cvt.u32.u16	%r220, %rs175;
	bfi.b32 	%r221, %r220, %r219, 8, 8;
	bfi.b32 	%r222, %r221, %r218, 16, 16;
	mov.b64	%rd103, {%r222, %r215};
	xor.b64  	%rd6051, %rd103, %rd6051;
	ld.global.v4.u8 	{%rs181, %rs182, %rs183, %rs184}, [%rd1+56];
	cvt.u32.u16	%r223, %rs184;
	cvt.u32.u16	%r224, %rs183;
	bfi.b32 	%r225, %r224, %r223, 8, 8;
	cvt.u32.u16	%r226, %rs182;
	cvt.u32.u16	%r227, %rs181;
	bfi.b32 	%r228, %r227, %r226, 8, 8;
	bfi.b32 	%r229, %r228, %r225, 16, 16;
	ld.global.v4.u8 	{%rs187, %rs188, %rs189, %rs190}, [%rd1+60];
	cvt.u32.u16	%r230, %rs190;
	cvt.u32.u16	%r231, %rs189;
	bfi.b32 	%r232, %r231, %r230, 8, 8;
	cvt.u32.u16	%r233, %rs188;
	cvt.u32.u16	%r234, %rs187;
	bfi.b32 	%r235, %r234, %r233, 8, 8;
	bfi.b32 	%r236, %r235, %r232, 16, 16;
	mov.b64	%rd104, {%r236, %r229};
	xor.b64  	%rd6050, %rd104, %rd6050;
	bra.uni 	BB2_5;

BB2_2:
	setp.ne.s32	%p2, %r253, 1;
	@%p2 bra 	BB2_5;

	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd1];
	cvt.u32.u16	%r13, %rs4;
	cvt.u32.u16	%r14, %rs3;
	bfi.b32 	%r15, %r14, %r13, 8, 8;
	cvt.u32.u16	%r16, %rs2;
	cvt.u32.u16	%r17, %rs1;
	bfi.b32 	%r18, %r17, %r16, 8, 8;
	bfi.b32 	%r19, %r18, %r15, 16, 16;
	ld.global.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd1+4];
	cvt.u32.u16	%r20, %rs10;
	cvt.u32.u16	%r21, %rs9;
	bfi.b32 	%r22, %r21, %r20, 8, 8;
	cvt.u32.u16	%r23, %rs8;
	cvt.u32.u16	%r24, %rs7;
	bfi.b32 	%r25, %r24, %r23, 8, 8;
	bfi.b32 	%r26, %r25, %r22, 16, 16;
	mov.b64	%rd89, {%r26, %r19};
	xor.b64  	%rd6049, %rd89, %rd6049;
	ld.global.v4.u8 	{%rs13, %rs14, %rs15, %rs16}, [%rd1+8];
	cvt.u32.u16	%r27, %rs16;
	cvt.u32.u16	%r28, %rs15;
	bfi.b32 	%r29, %r28, %r27, 8, 8;
	cvt.u32.u16	%r30, %rs14;
	cvt.u32.u16	%r31, %rs13;
	bfi.b32 	%r32, %r31, %r30, 8, 8;
	bfi.b32 	%r33, %r32, %r29, 16, 16;
	ld.global.v4.u8 	{%rs19, %rs20, %rs21, %rs22}, [%rd1+12];
	cvt.u32.u16	%r34, %rs22;
	cvt.u32.u16	%r35, %rs21;
	bfi.b32 	%r36, %r35, %r34, 8, 8;
	cvt.u32.u16	%r37, %rs20;
	cvt.u32.u16	%r38, %rs19;
	bfi.b32 	%r39, %r38, %r37, 8, 8;
	bfi.b32 	%r40, %r39, %r36, 16, 16;
	mov.b64	%rd90, {%r40, %r33};
	xor.b64  	%rd6048, %rd90, %rd6048;
	ld.global.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd1+16];
	cvt.u32.u16	%r41, %rs28;
	cvt.u32.u16	%r42, %rs27;
	bfi.b32 	%r43, %r42, %r41, 8, 8;
	cvt.u32.u16	%r44, %rs26;
	cvt.u32.u16	%r45, %rs25;
	bfi.b32 	%r46, %r45, %r44, 8, 8;
	bfi.b32 	%r47, %r46, %r43, 16, 16;
	ld.global.v4.u8 	{%rs31, %rs32, %rs33, %rs34}, [%rd1+20];
	cvt.u32.u16	%r48, %rs34;
	cvt.u32.u16	%r49, %rs33;
	bfi.b32 	%r50, %r49, %r48, 8, 8;
	cvt.u32.u16	%r51, %rs32;
	cvt.u32.u16	%r52, %rs31;
	bfi.b32 	%r53, %r52, %r51, 8, 8;
	bfi.b32 	%r54, %r53, %r50, 16, 16;
	mov.b64	%rd91, {%r54, %r47};
	xor.b64  	%rd6047, %rd91, %rd6047;
	ld.global.v4.u8 	{%rs37, %rs38, %rs39, %rs40}, [%rd1+24];
	cvt.u32.u16	%r55, %rs40;
	cvt.u32.u16	%r56, %rs39;
	bfi.b32 	%r57, %r56, %r55, 8, 8;
	cvt.u32.u16	%r58, %rs38;
	cvt.u32.u16	%r59, %rs37;
	bfi.b32 	%r60, %r59, %r58, 8, 8;
	bfi.b32 	%r61, %r60, %r57, 16, 16;
	ld.global.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd1+28];
	cvt.u32.u16	%r62, %rs46;
	cvt.u32.u16	%r63, %rs45;
	bfi.b32 	%r64, %r63, %r62, 8, 8;
	cvt.u32.u16	%r65, %rs44;
	cvt.u32.u16	%r66, %rs43;
	bfi.b32 	%r67, %r66, %r65, 8, 8;
	bfi.b32 	%r68, %r67, %r64, 16, 16;
	mov.b64	%rd92, {%r68, %r61};
	xor.b64  	%rd6046, %rd92, %rd6046;
	ld.global.v4.u8 	{%rs49, %rs50, %rs51, %rs52}, [%rd1+32];
	cvt.u32.u16	%r69, %rs52;
	cvt.u32.u16	%r70, %rs51;
	bfi.b32 	%r71, %r70, %r69, 8, 8;
	cvt.u32.u16	%r72, %rs50;
	cvt.u32.u16	%r73, %rs49;
	bfi.b32 	%r74, %r73, %r72, 8, 8;
	bfi.b32 	%r75, %r74, %r71, 16, 16;
	ld.global.v4.u8 	{%rs55, %rs56, %rs57, %rs58}, [%rd1+36];
	cvt.u32.u16	%r76, %rs58;
	cvt.u32.u16	%r77, %rs57;
	bfi.b32 	%r78, %r77, %r76, 8, 8;
	cvt.u32.u16	%r79, %rs56;
	cvt.u32.u16	%r80, %rs55;
	bfi.b32 	%r81, %r80, %r79, 8, 8;
	bfi.b32 	%r82, %r81, %r78, 16, 16;
	mov.b64	%rd93, {%r82, %r75};
	xor.b64  	%rd6045, %rd93, %rd6045;
	ld.global.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd1+40];
	cvt.u32.u16	%r83, %rs64;
	cvt.u32.u16	%r84, %rs63;
	bfi.b32 	%r85, %r84, %r83, 8, 8;
	cvt.u32.u16	%r86, %rs62;
	cvt.u32.u16	%r87, %rs61;
	bfi.b32 	%r88, %r87, %r86, 8, 8;
	bfi.b32 	%r89, %r88, %r85, 16, 16;
	ld.global.v4.u8 	{%rs67, %rs68, %rs69, %rs70}, [%rd1+44];
	cvt.u32.u16	%r90, %rs70;
	cvt.u32.u16	%r91, %rs69;
	bfi.b32 	%r92, %r91, %r90, 8, 8;
	cvt.u32.u16	%r93, %rs68;
	cvt.u32.u16	%r94, %rs67;
	bfi.b32 	%r95, %r94, %r93, 8, 8;
	bfi.b32 	%r96, %r95, %r92, 16, 16;
	mov.b64	%rd94, {%r96, %r89};
	xor.b64  	%rd6044, %rd94, %rd6044;
	ld.global.v4.u8 	{%rs73, %rs74, %rs75, %rs76}, [%rd1+48];
	cvt.u32.u16	%r97, %rs76;
	cvt.u32.u16	%r98, %rs75;
	bfi.b32 	%r99, %r98, %r97, 8, 8;
	cvt.u32.u16	%r100, %rs74;
	cvt.u32.u16	%r101, %rs73;
	bfi.b32 	%r102, %r101, %r100, 8, 8;
	bfi.b32 	%r103, %r102, %r99, 16, 16;
	ld.global.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd1+52];
	cvt.u32.u16	%r104, %rs82;
	cvt.u32.u16	%r105, %rs81;
	bfi.b32 	%r106, %r105, %r104, 8, 8;
	cvt.u32.u16	%r107, %rs80;
	cvt.u32.u16	%r108, %rs79;
	bfi.b32 	%r109, %r108, %r107, 8, 8;
	bfi.b32 	%r110, %r109, %r106, 16, 16;
	mov.b64	%rd95, {%r110, %r103};
	xor.b64  	%rd6043, %rd95, %rd6043;
	ld.global.v4.u8 	{%rs85, %rs86, %rs87, %rs88}, [%rd1+56];
	cvt.u32.u16	%r111, %rs88;
	cvt.u32.u16	%r112, %rs87;
	bfi.b32 	%r113, %r112, %r111, 8, 8;
	cvt.u32.u16	%r114, %rs86;
	cvt.u32.u16	%r115, %rs85;
	bfi.b32 	%r116, %r115, %r114, 8, 8;
	bfi.b32 	%r117, %r116, %r113, 16, 16;
	ld.global.v4.u8 	{%rs91, %rs92, %rs93, %rs94}, [%rd1+60];
	cvt.u32.u16	%r118, %rs94;
	cvt.u32.u16	%r119, %rs93;
	bfi.b32 	%r120, %r119, %r118, 8, 8;
	cvt.u32.u16	%r121, %rs92;
	cvt.u32.u16	%r122, %rs91;
	bfi.b32 	%r123, %r122, %r121, 8, 8;
	bfi.b32 	%r124, %r123, %r120, 16, 16;
	mov.b64	%rd96, {%r124, %r117};
	xor.b64  	%rd6058, %rd96, %rd6058;
	xor.b64  	%rd6057, %rd6057, 128;
	xor.b64  	%rd6050, %rd6050, 562949953421312;

BB2_5:
	not.b64 	%rd105, %rd6049;
	and.b64  	%rd106, %rd105, 7491762030385223026;
	xor.b64  	%rd107, %rd6057, %rd106;
	and.b64  	%rd108, %rd107, %rd6053;
	xor.b64  	%rd109, %rd108, 7491762030385223026;
	not.b64 	%rd110, %rd6045;
	and.b64  	%rd111, %rd6049, %rd110;
	xor.b64  	%rd112, %rd107, %rd111;
	not.b64 	%rd113, %rd6053;
	and.b64  	%rd114, %rd6049, %rd113;
	xor.b64  	%rd115, %rd114, %rd110;
	and.b64  	%rd116, %rd112, %rd6049;
	xor.b64  	%rd117, %rd116, %rd6053;
	xor.b64  	%rd118, %rd114, %rd6045;
	and.b64  	%rd119, %rd112, %rd118;
	xor.b64  	%rd120, %rd119, %rd6049;
	or.b64  	%rd121, %rd117, %rd115;
	xor.b64  	%rd122, %rd121, %rd112;
	and.b64  	%rd123, %rd117, %rd120;
	xor.b64  	%rd124, %rd123, %rd115;
	and.b64  	%rd125, %rd122, %rd109;
	xor.b64  	%rd126, %rd125, %rd117;
	xor.b64  	%rd127, %rd120, %rd109;
	not.b64 	%rd128, %rd6048;
	and.b64  	%rd129, %rd128, 6274960924865823867;
	xor.b64  	%rd130, %rd6056, %rd129;
	and.b64  	%rd131, %rd130, %rd6052;
	xor.b64  	%rd132, %rd131, 6274960924865823867;
	not.b64 	%rd133, %rd6044;
	and.b64  	%rd134, %rd6048, %rd133;
	xor.b64  	%rd135, %rd130, %rd134;
	not.b64 	%rd136, %rd6052;
	and.b64  	%rd137, %rd6048, %rd136;
	xor.b64  	%rd138, %rd137, %rd133;
	and.b64  	%rd139, %rd135, %rd6048;
	xor.b64  	%rd140, %rd139, %rd6052;
	xor.b64  	%rd141, %rd137, %rd6044;
	and.b64  	%rd142, %rd135, %rd141;
	xor.b64  	%rd143, %rd142, %rd6048;
	or.b64  	%rd144, %rd140, %rd138;
	xor.b64  	%rd145, %rd144, %rd135;
	and.b64  	%rd146, %rd140, %rd143;
	xor.b64  	%rd147, %rd146, %rd138;
	and.b64  	%rd148, %rd145, %rd132;
	xor.b64  	%rd149, %rd148, %rd140;
	xor.b64  	%rd150, %rd143, %rd132;
	not.b64 	%rd151, %rd6047;
	and.b64  	%rd152, %rd151, -682477529334371455;
	xor.b64  	%rd153, %rd6055, %rd152;
	and.b64  	%rd154, %rd153, %rd6051;
	xor.b64  	%rd155, %rd154, -682477529334371455;
	not.b64 	%rd156, %rd6043;
	and.b64  	%rd157, %rd6047, %rd156;
	xor.b64  	%rd158, %rd153, %rd157;
	not.b64 	%rd159, %rd6051;
	and.b64  	%rd160, %rd6047, %rd159;
	xor.b64  	%rd161, %rd160, %rd156;
	and.b64  	%rd162, %rd158, %rd6047;
	xor.b64  	%rd163, %rd162, %rd6051;
	xor.b64  	%rd164, %rd160, %rd6043;
	and.b64  	%rd165, %rd158, %rd164;
	xor.b64  	%rd166, %rd165, %rd6047;
	or.b64  	%rd167, %rd163, %rd161;
	xor.b64  	%rd168, %rd167, %rd158;
	and.b64  	%rd169, %rd163, %rd166;
	xor.b64  	%rd170, %rd169, %rd161;
	and.b64  	%rd171, %rd168, %rd155;
	xor.b64  	%rd172, %rd171, %rd163;
	not.b64 	%rd173, %rd6046;
	and.b64  	%rd174, %rd173, 4624020081185103694;
	xor.b64  	%rd175, %rd6054, %rd174;
	and.b64  	%rd176, %rd175, %rd6050;
	xor.b64  	%rd177, %rd176, 4624020081185103694;
	not.b64 	%rd178, %rd6058;
	and.b64  	%rd179, %rd6046, %rd178;
	xor.b64  	%rd180, %rd179, %rd175;
	not.b64 	%rd181, %rd6050;
	and.b64  	%rd182, %rd6046, %rd181;
	xor.b64  	%rd183, %rd182, %rd178;
	and.b64  	%rd184, %rd180, %rd6046;
	xor.b64  	%rd185, %rd184, %rd6050;
	xor.b64  	%rd186, %rd6058, %rd182;
	and.b64  	%rd187, %rd180, %rd186;
	xor.b64  	%rd188, %rd187, %rd6046;
	or.b64  	%rd189, %rd185, %rd183;
	xor.b64  	%rd190, %rd189, %rd180;
	and.b64  	%rd191, %rd185, %rd188;
	and.b64  	%rd192, %rd190, %rd177;
	xor.b64  	%rd193, %rd126, %rd168;
	xor.b64  	%rd194, %rd172, %rd127;
	xor.b64  	%rd195, %rd166, %rd155;
	xor.b64  	%rd196, %rd195, %rd122;
	xor.b64  	%rd197, %rd196, %rd124;
	xor.b64  	%rd198, %rd170, %rd122;
	xor.b64  	%rd199, %rd194, %rd122;
	xor.b64  	%rd200, %rd126, %rd197;
	xor.b64  	%rd201, %rd198, %rd127;
	xor.b64  	%rd202, %rd201, %rd193;
	xor.b64  	%rd203, %rd193, %rd124;
	xor.b64  	%rd204, %rd190, %rd149;
	xor.b64  	%rd205, %rd185, %rd150;
	xor.b64  	%rd206, %rd205, %rd192;
	xor.b64  	%rd207, %rd188, %rd177;
	xor.b64  	%rd208, %rd207, %rd145;
	xor.b64  	%rd209, %rd208, %rd147;
	xor.b64  	%rd210, %rd145, %rd183;
	xor.b64  	%rd211, %rd210, %rd191;
	xor.b64  	%rd212, %rd206, %rd145;
	xor.b64  	%rd213, %rd209, %rd149;
	xor.b64  	%rd214, %rd211, %rd150;
	xor.b64  	%rd215, %rd214, %rd204;
	xor.b64  	%rd216, %rd204, %rd147;
	and.b64  	%rd217, %rd193, 6148914691236517205;
	shl.b64 	%rd218, %rd217, 1;
	shr.u64 	%rd219, %rd193, 1;
	and.b64  	%rd220, %rd219, 6148914691236517205;
	or.b64  	%rd221, %rd220, %rd218;
	and.b64  	%rd222, %rd204, 6148914691236517205;
	shl.b64 	%rd223, %rd222, 1;
	shr.u64 	%rd224, %rd204, 1;
	and.b64  	%rd225, %rd224, 6148914691236517205;
	or.b64  	%rd226, %rd225, %rd223;
	and.b64  	%rd227, %rd194, 6148914691236517205;
	shl.b64 	%rd228, %rd227, 1;
	shr.u64 	%rd229, %rd194, 1;
	and.b64  	%rd230, %rd229, 6148914691236517205;
	or.b64  	%rd231, %rd230, %rd228;
	and.b64  	%rd232, %rd206, 6148914691236517205;
	shl.b64 	%rd233, %rd232, 1;
	shr.u64 	%rd234, %rd206, 1;
	and.b64  	%rd235, %rd234, 6148914691236517205;
	or.b64  	%rd236, %rd235, %rd233;
	and.b64  	%rd237, %rd197, 6148914691236517205;
	shl.b64 	%rd238, %rd237, 1;
	shr.u64 	%rd239, %rd197, 1;
	and.b64  	%rd240, %rd239, 6148914691236517205;
	or.b64  	%rd241, %rd240, %rd238;
	and.b64  	%rd242, %rd209, 6148914691236517205;
	shl.b64 	%rd243, %rd242, 1;
	shr.u64 	%rd244, %rd209, 1;
	and.b64  	%rd245, %rd244, 6148914691236517205;
	or.b64  	%rd246, %rd245, %rd243;
	and.b64  	%rd247, %rd198, 6148914691236517205;
	shl.b64 	%rd248, %rd247, 1;
	shr.u64 	%rd249, %rd198, 1;
	and.b64  	%rd250, %rd249, 6148914691236517205;
	or.b64  	%rd251, %rd250, %rd248;
	and.b64  	%rd252, %rd211, 6148914691236517205;
	shl.b64 	%rd253, %rd252, 1;
	shr.u64 	%rd254, %rd211, 1;
	and.b64  	%rd255, %rd254, 6148914691236517205;
	or.b64  	%rd256, %rd255, %rd253;
	not.b64 	%rd257, %rd203;
	not.b64 	%rd258, %rd202;
	and.b64  	%rd259, %rd258, -7135314394413885206;
	xor.b64  	%rd260, %rd199, %rd259;
	and.b64  	%rd261, %rd260, %rd200;
	xor.b64  	%rd262, %rd261, -7135314394413885206;
	and.b64  	%rd263, %rd202, %rd257;
	xor.b64  	%rd264, %rd260, %rd263;
	not.b64 	%rd265, %rd200;
	and.b64  	%rd266, %rd202, %rd265;
	xor.b64  	%rd267, %rd266, %rd257;
	and.b64  	%rd268, %rd264, %rd202;
	xor.b64  	%rd269, %rd268, %rd200;
	xor.b64  	%rd270, %rd266, %rd203;
	and.b64  	%rd271, %rd264, %rd270;
	xor.b64  	%rd272, %rd271, %rd202;
	or.b64  	%rd273, %rd269, %rd267;
	xor.b64  	%rd274, %rd273, %rd264;
	and.b64  	%rd275, %rd269, %rd272;
	xor.b64  	%rd276, %rd275, %rd267;
	and.b64  	%rd277, %rd274, %rd262;
	xor.b64  	%rd278, %rd277, %rd269;
	xor.b64  	%rd279, %rd272, %rd262;
	not.b64 	%rd280, %rd216;
	not.b64 	%rd281, %rd215;
	and.b64  	%rd282, %rd281, -7306612766694783741;
	xor.b64  	%rd283, %rd212, %rd282;
	and.b64  	%rd284, %rd283, %rd213;
	xor.b64  	%rd285, %rd284, -7306612766694783741;
	and.b64  	%rd286, %rd215, %rd280;
	xor.b64  	%rd287, %rd283, %rd286;
	not.b64 	%rd288, %rd213;
	and.b64  	%rd289, %rd215, %rd288;
	xor.b64  	%rd290, %rd289, %rd280;
	and.b64  	%rd291, %rd287, %rd215;
	xor.b64  	%rd292, %rd291, %rd213;
	xor.b64  	%rd293, %rd289, %rd216;
	and.b64  	%rd294, %rd287, %rd293;
	xor.b64  	%rd295, %rd294, %rd215;
	or.b64  	%rd296, %rd292, %rd290;
	xor.b64  	%rd297, %rd296, %rd287;
	and.b64  	%rd298, %rd292, %rd295;
	xor.b64  	%rd299, %rd298, %rd290;
	and.b64  	%rd300, %rd297, %rd285;
	xor.b64  	%rd301, %rd300, %rd292;
	xor.b64  	%rd302, %rd295, %rd285;
	not.b64 	%rd303, %rd251;
	not.b64 	%rd304, %rd241;
	and.b64  	%rd305, %rd304, -8479227022322302362;
	xor.b64  	%rd306, %rd221, %rd305;
	and.b64  	%rd307, %rd306, %rd231;
	xor.b64  	%rd308, %rd307, -8479227022322302362;
	and.b64  	%rd309, %rd241, %rd303;
	xor.b64  	%rd310, %rd306, %rd309;
	not.b64 	%rd311, %rd231;
	and.b64  	%rd312, %rd241, %rd311;
	xor.b64  	%rd313, %rd312, %rd303;
	and.b64  	%rd314, %rd310, %rd241;
	xor.b64  	%rd315, %rd314, %rd231;
	xor.b64  	%rd316, %rd312, %rd251;
	and.b64  	%rd317, %rd310, %rd316;
	xor.b64  	%rd318, %rd317, %rd241;
	or.b64  	%rd319, %rd315, %rd313;
	xor.b64  	%rd320, %rd319, %rd310;
	and.b64  	%rd321, %rd315, %rd318;
	xor.b64  	%rd322, %rd321, %rd313;
	and.b64  	%rd323, %rd320, %rd308;
	not.b64 	%rd324, %rd256;
	not.b64 	%rd325, %rd246;
	and.b64  	%rd326, %rd325, 3576662431685170869;
	xor.b64  	%rd327, %rd326, %rd226;
	and.b64  	%rd328, %rd327, %rd236;
	xor.b64  	%rd329, %rd328, 3576662431685170869;
	and.b64  	%rd330, %rd246, %rd324;
	xor.b64  	%rd331, %rd327, %rd330;
	not.b64 	%rd332, %rd236;
	and.b64  	%rd333, %rd246, %rd332;
	xor.b64  	%rd334, %rd333, %rd324;
	and.b64  	%rd335, %rd331, %rd246;
	xor.b64  	%rd336, %rd335, %rd236;
	xor.b64  	%rd337, %rd333, %rd256;
	and.b64  	%rd338, %rd331, %rd337;
	xor.b64  	%rd339, %rd338, %rd246;
	or.b64  	%rd340, %rd336, %rd334;
	xor.b64  	%rd341, %rd340, %rd331;
	and.b64  	%rd342, %rd336, %rd339;
	and.b64  	%rd343, %rd341, %rd329;
	xor.b64  	%rd344, %rd278, %rd320;
	xor.b64  	%rd345, %rd279, %rd315;
	xor.b64  	%rd346, %rd345, %rd323;
	xor.b64  	%rd347, %rd318, %rd308;
	xor.b64  	%rd348, %rd347, %rd274;
	xor.b64  	%rd349, %rd348, %rd276;
	xor.b64  	%rd350, %rd322, %rd274;
	xor.b64  	%rd351, %rd346, %rd274;
	xor.b64  	%rd352, %rd278, %rd349;
	xor.b64  	%rd353, %rd350, %rd279;
	xor.b64  	%rd354, %rd353, %rd344;
	xor.b64  	%rd355, %rd344, %rd276;
	xor.b64  	%rd356, %rd341, %rd301;
	xor.b64  	%rd357, %rd336, %rd302;
	xor.b64  	%rd358, %rd357, %rd343;
	xor.b64  	%rd359, %rd339, %rd329;
	xor.b64  	%rd360, %rd359, %rd297;
	xor.b64  	%rd361, %rd360, %rd299;
	xor.b64  	%rd362, %rd297, %rd334;
	xor.b64  	%rd363, %rd362, %rd342;
	xor.b64  	%rd364, %rd358, %rd297;
	xor.b64  	%rd365, %rd361, %rd301;
	xor.b64  	%rd366, %rd363, %rd302;
	xor.b64  	%rd367, %rd366, %rd356;
	xor.b64  	%rd368, %rd356, %rd299;
	and.b64  	%rd369, %rd344, 3689348814741910323;
	shl.b64 	%rd370, %rd369, 2;
	shr.u64 	%rd371, %rd344, 2;
	and.b64  	%rd372, %rd371, 3689348814741910323;
	or.b64  	%rd373, %rd372, %rd370;
	and.b64  	%rd374, %rd356, 3689348814741910323;
	shl.b64 	%rd375, %rd374, 2;
	shr.u64 	%rd376, %rd356, 2;
	and.b64  	%rd377, %rd376, 3689348814741910323;
	or.b64  	%rd378, %rd377, %rd375;
	and.b64  	%rd379, %rd346, 3689348814741910323;
	shl.b64 	%rd380, %rd379, 2;
	shr.u64 	%rd381, %rd346, 2;
	and.b64  	%rd382, %rd381, 3689348814741910323;
	or.b64  	%rd383, %rd382, %rd380;
	and.b64  	%rd384, %rd358, 3689348814741910323;
	shl.b64 	%rd385, %rd384, 2;
	shr.u64 	%rd386, %rd358, 2;
	and.b64  	%rd387, %rd386, 3689348814741910323;
	or.b64  	%rd388, %rd387, %rd385;
	and.b64  	%rd389, %rd349, 3689348814741910323;
	shl.b64 	%rd390, %rd389, 2;
	shr.u64 	%rd391, %rd349, 2;
	and.b64  	%rd392, %rd391, 3689348814741910323;
	or.b64  	%rd393, %rd392, %rd390;
	and.b64  	%rd394, %rd361, 3689348814741910323;
	shl.b64 	%rd395, %rd394, 2;
	shr.u64 	%rd396, %rd361, 2;
	and.b64  	%rd397, %rd396, 3689348814741910323;
	or.b64  	%rd398, %rd397, %rd395;
	and.b64  	%rd399, %rd350, 3689348814741910323;
	shl.b64 	%rd400, %rd399, 2;
	shr.u64 	%rd401, %rd350, 2;
	and.b64  	%rd402, %rd401, 3689348814741910323;
	or.b64  	%rd403, %rd402, %rd400;
	and.b64  	%rd404, %rd363, 3689348814741910323;
	shl.b64 	%rd405, %rd404, 2;
	shr.u64 	%rd406, %rd363, 2;
	and.b64  	%rd407, %rd406, 3689348814741910323;
	or.b64  	%rd408, %rd407, %rd405;
	not.b64 	%rd409, %rd355;
	not.b64 	%rd410, %rd354;
	and.b64  	%rd411, %rd410, -2662162178964282621;
	xor.b64  	%rd412, %rd351, %rd411;
	and.b64  	%rd413, %rd412, %rd352;
	xor.b64  	%rd414, %rd413, -2662162178964282621;
	and.b64  	%rd415, %rd354, %rd409;
	xor.b64  	%rd416, %rd412, %rd415;
	not.b64 	%rd417, %rd352;
	and.b64  	%rd418, %rd354, %rd417;
	xor.b64  	%rd419, %rd418, %rd409;
	and.b64  	%rd420, %rd416, %rd354;
	xor.b64  	%rd421, %rd420, %rd352;
	xor.b64  	%rd422, %rd418, %rd355;
	and.b64  	%rd423, %rd416, %rd422;
	xor.b64  	%rd424, %rd423, %rd354;
	or.b64  	%rd425, %rd421, %rd419;
	xor.b64  	%rd426, %rd425, %rd416;
	and.b64  	%rd427, %rd421, %rd424;
	xor.b64  	%rd428, %rd427, %rd419;
	and.b64  	%rd429, %rd426, %rd414;
	xor.b64  	%rd430, %rd429, %rd421;
	xor.b64  	%rd431, %rd424, %rd414;
	not.b64 	%rd432, %rd368;
	not.b64 	%rd433, %rd367;
	and.b64  	%rd434, %rd433, 1172274588767371072;
	xor.b64  	%rd435, %rd364, %rd434;
	and.b64  	%rd436, %rd435, %rd365;
	xor.b64  	%rd437, %rd436, 1172274588767371072;
	and.b64  	%rd438, %rd367, %rd432;
	xor.b64  	%rd439, %rd435, %rd438;
	not.b64 	%rd440, %rd365;
	and.b64  	%rd441, %rd367, %rd440;
	xor.b64  	%rd442, %rd441, %rd432;
	and.b64  	%rd443, %rd439, %rd367;
	xor.b64  	%rd444, %rd443, %rd365;
	xor.b64  	%rd445, %rd441, %rd368;
	and.b64  	%rd446, %rd439, %rd445;
	xor.b64  	%rd447, %rd446, %rd367;
	or.b64  	%rd448, %rd444, %rd442;
	xor.b64  	%rd449, %rd448, %rd439;
	and.b64  	%rd450, %rd444, %rd447;
	xor.b64  	%rd451, %rd450, %rd442;
	and.b64  	%rd452, %rd449, %rd437;
	xor.b64  	%rd453, %rd452, %rd444;
	xor.b64  	%rd454, %rd447, %rd437;
	not.b64 	%rd455, %rd403;
	not.b64 	%rd456, %rd393;
	and.b64  	%rd457, %rd456, 2131784290551792924;
	xor.b64  	%rd458, %rd373, %rd457;
	and.b64  	%rd459, %rd458, %rd383;
	xor.b64  	%rd460, %rd459, 2131784290551792924;
	and.b64  	%rd461, %rd393, %rd455;
	xor.b64  	%rd462, %rd458, %rd461;
	not.b64 	%rd463, %rd383;
	and.b64  	%rd464, %rd393, %rd463;
	xor.b64  	%rd465, %rd464, %rd455;
	and.b64  	%rd466, %rd462, %rd393;
	xor.b64  	%rd467, %rd466, %rd383;
	xor.b64  	%rd468, %rd464, %rd403;
	and.b64  	%rd469, %rd462, %rd468;
	xor.b64  	%rd470, %rd469, %rd393;
	or.b64  	%rd471, %rd467, %rd465;
	xor.b64  	%rd472, %rd471, %rd462;
	and.b64  	%rd473, %rd467, %rd470;
	xor.b64  	%rd474, %rd473, %rd465;
	and.b64  	%rd475, %rd472, %rd460;
	not.b64 	%rd476, %rd408;
	not.b64 	%rd477, %rd398;
	and.b64  	%rd478, %rd477, -2536116621308906641;
	xor.b64  	%rd479, %rd478, %rd378;
	and.b64  	%rd480, %rd479, %rd388;
	xor.b64  	%rd481, %rd480, -2536116621308906641;
	and.b64  	%rd482, %rd398, %rd476;
	xor.b64  	%rd483, %rd479, %rd482;
	not.b64 	%rd484, %rd388;
	and.b64  	%rd485, %rd398, %rd484;
	xor.b64  	%rd486, %rd485, %rd476;
	and.b64  	%rd487, %rd483, %rd398;
	xor.b64  	%rd488, %rd487, %rd388;
	xor.b64  	%rd489, %rd485, %rd408;
	and.b64  	%rd490, %rd483, %rd489;
	xor.b64  	%rd491, %rd490, %rd398;
	or.b64  	%rd492, %rd488, %rd486;
	xor.b64  	%rd493, %rd492, %rd483;
	and.b64  	%rd494, %rd488, %rd491;
	and.b64  	%rd495, %rd493, %rd481;
	xor.b64  	%rd496, %rd430, %rd472;
	xor.b64  	%rd497, %rd431, %rd467;
	xor.b64  	%rd498, %rd497, %rd475;
	xor.b64  	%rd499, %rd470, %rd460;
	xor.b64  	%rd500, %rd499, %rd426;
	xor.b64  	%rd501, %rd500, %rd428;
	xor.b64  	%rd502, %rd474, %rd426;
	xor.b64  	%rd503, %rd498, %rd426;
	xor.b64  	%rd504, %rd430, %rd501;
	xor.b64  	%rd505, %rd502, %rd431;
	xor.b64  	%rd506, %rd505, %rd496;
	xor.b64  	%rd507, %rd496, %rd428;
	xor.b64  	%rd508, %rd493, %rd453;
	xor.b64  	%rd509, %rd488, %rd454;
	xor.b64  	%rd510, %rd509, %rd495;
	xor.b64  	%rd511, %rd491, %rd481;
	xor.b64  	%rd512, %rd511, %rd449;
	xor.b64  	%rd513, %rd512, %rd451;
	xor.b64  	%rd514, %rd449, %rd486;
	xor.b64  	%rd515, %rd514, %rd494;
	xor.b64  	%rd516, %rd510, %rd449;
	xor.b64  	%rd517, %rd513, %rd453;
	xor.b64  	%rd518, %rd515, %rd454;
	xor.b64  	%rd519, %rd518, %rd508;
	xor.b64  	%rd520, %rd508, %rd451;
	and.b64  	%rd521, %rd496, 1085102592571150095;
	shl.b64 	%rd522, %rd521, 4;
	shr.u64 	%rd523, %rd496, 4;
	and.b64  	%rd524, %rd523, 1085102592571150095;
	or.b64  	%rd525, %rd524, %rd522;
	and.b64  	%rd526, %rd508, 1085102592571150095;
	shl.b64 	%rd527, %rd526, 4;
	shr.u64 	%rd528, %rd508, 4;
	and.b64  	%rd529, %rd528, 1085102592571150095;
	or.b64  	%rd530, %rd529, %rd527;
	and.b64  	%rd531, %rd498, 1085102592571150095;
	shl.b64 	%rd532, %rd531, 4;
	shr.u64 	%rd533, %rd498, 4;
	and.b64  	%rd534, %rd533, 1085102592571150095;
	or.b64  	%rd535, %rd534, %rd532;
	and.b64  	%rd536, %rd510, 1085102592571150095;
	shl.b64 	%rd537, %rd536, 4;
	shr.u64 	%rd538, %rd510, 4;
	and.b64  	%rd539, %rd538, 1085102592571150095;
	or.b64  	%rd540, %rd539, %rd537;
	and.b64  	%rd541, %rd501, 1085102592571150095;
	shl.b64 	%rd542, %rd541, 4;
	shr.u64 	%rd543, %rd501, 4;
	and.b64  	%rd544, %rd543, 1085102592571150095;
	or.b64  	%rd545, %rd544, %rd542;
	and.b64  	%rd546, %rd513, 1085102592571150095;
	shl.b64 	%rd547, %rd546, 4;
	shr.u64 	%rd548, %rd513, 4;
	and.b64  	%rd549, %rd548, 1085102592571150095;
	or.b64  	%rd550, %rd549, %rd547;
	and.b64  	%rd551, %rd502, 1085102592571150095;
	shl.b64 	%rd552, %rd551, 4;
	shr.u64 	%rd553, %rd502, 4;
	and.b64  	%rd554, %rd553, 1085102592571150095;
	or.b64  	%rd555, %rd554, %rd552;
	and.b64  	%rd556, %rd515, 1085102592571150095;
	shl.b64 	%rd557, %rd556, 4;
	shr.u64 	%rd558, %rd515, 4;
	and.b64  	%rd559, %rd558, 1085102592571150095;
	or.b64  	%rd560, %rd559, %rd557;
	not.b64 	%rd561, %rd507;
	not.b64 	%rd562, %rd506;
	and.b64  	%rd563, %rd562, 4714071452734962192;
	xor.b64  	%rd564, %rd503, %rd563;
	and.b64  	%rd565, %rd564, %rd504;
	xor.b64  	%rd566, %rd565, 4714071452734962192;
	and.b64  	%rd567, %rd506, %rd561;
	xor.b64  	%rd568, %rd564, %rd567;
	not.b64 	%rd569, %rd504;
	and.b64  	%rd570, %rd506, %rd569;
	xor.b64  	%rd571, %rd570, %rd561;
	and.b64  	%rd572, %rd568, %rd506;
	xor.b64  	%rd573, %rd572, %rd504;
	xor.b64  	%rd574, %rd570, %rd507;
	and.b64  	%rd575, %rd568, %rd574;
	xor.b64  	%rd576, %rd575, %rd506;
	or.b64  	%rd577, %rd573, %rd571;
	xor.b64  	%rd578, %rd577, %rd568;
	and.b64  	%rd579, %rd573, %rd576;
	xor.b64  	%rd580, %rd579, %rd571;
	and.b64  	%rd581, %rd578, %rd566;
	xor.b64  	%rd582, %rd581, %rd573;
	xor.b64  	%rd583, %rd576, %rd566;
	not.b64 	%rd584, %rd520;
	not.b64 	%rd585, %rd519;
	and.b64  	%rd586, %rd585, -3447580319838537508;
	xor.b64  	%rd587, %rd516, %rd586;
	and.b64  	%rd588, %rd587, %rd517;
	xor.b64  	%rd589, %rd588, -3447580319838537508;
	and.b64  	%rd590, %rd519, %rd584;
	xor.b64  	%rd591, %rd587, %rd590;
	not.b64 	%rd592, %rd517;
	and.b64  	%rd593, %rd519, %rd592;
	xor.b64  	%rd594, %rd593, %rd584;
	and.b64  	%rd595, %rd591, %rd519;
	xor.b64  	%rd596, %rd595, %rd517;
	xor.b64  	%rd597, %rd593, %rd520;
	and.b64  	%rd598, %rd591, %rd597;
	xor.b64  	%rd599, %rd598, %rd519;
	or.b64  	%rd600, %rd596, %rd594;
	xor.b64  	%rd601, %rd600, %rd591;
	and.b64  	%rd602, %rd596, %rd599;
	xor.b64  	%rd603, %rd602, %rd594;
	and.b64  	%rd604, %rd601, %rd589;
	xor.b64  	%rd605, %rd604, %rd596;
	xor.b64  	%rd606, %rd599, %rd589;
	not.b64 	%rd607, %rd555;
	not.b64 	%rd608, %rd545;
	and.b64  	%rd609, %rd608, 5798571674404203530;
	xor.b64  	%rd610, %rd525, %rd609;
	and.b64  	%rd611, %rd610, %rd535;
	xor.b64  	%rd612, %rd611, 5798571674404203530;
	and.b64  	%rd613, %rd545, %rd607;
	xor.b64  	%rd614, %rd610, %rd613;
	not.b64 	%rd615, %rd535;
	and.b64  	%rd616, %rd545, %rd615;
	xor.b64  	%rd617, %rd616, %rd607;
	and.b64  	%rd618, %rd614, %rd545;
	xor.b64  	%rd619, %rd618, %rd535;
	xor.b64  	%rd620, %rd616, %rd555;
	and.b64  	%rd621, %rd614, %rd620;
	xor.b64  	%rd622, %rd621, %rd545;
	or.b64  	%rd623, %rd619, %rd617;
	xor.b64  	%rd624, %rd623, %rd614;
	and.b64  	%rd625, %rd619, %rd622;
	xor.b64  	%rd626, %rd625, %rd617;
	and.b64  	%rd627, %rd624, %rd612;
	not.b64 	%rd628, %rd560;
	not.b64 	%rd629, %rd550;
	and.b64  	%rd630, %rd629, -3201777577375098305;
	xor.b64  	%rd631, %rd630, %rd530;
	and.b64  	%rd632, %rd631, %rd540;
	xor.b64  	%rd633, %rd632, -3201777577375098305;
	and.b64  	%rd634, %rd550, %rd628;
	xor.b64  	%rd635, %rd631, %rd634;
	not.b64 	%rd636, %rd540;
	and.b64  	%rd637, %rd550, %rd636;
	xor.b64  	%rd638, %rd637, %rd628;
	and.b64  	%rd639, %rd635, %rd550;
	xor.b64  	%rd640, %rd639, %rd540;
	xor.b64  	%rd641, %rd637, %rd560;
	and.b64  	%rd642, %rd635, %rd641;
	xor.b64  	%rd643, %rd642, %rd550;
	or.b64  	%rd644, %rd640, %rd638;
	xor.b64  	%rd645, %rd644, %rd635;
	and.b64  	%rd646, %rd640, %rd643;
	and.b64  	%rd647, %rd645, %rd633;
	xor.b64  	%rd648, %rd582, %rd624;
	xor.b64  	%rd649, %rd583, %rd619;
	xor.b64  	%rd650, %rd649, %rd627;
	xor.b64  	%rd651, %rd622, %rd612;
	xor.b64  	%rd652, %rd651, %rd578;
	xor.b64  	%rd653, %rd652, %rd580;
	xor.b64  	%rd654, %rd626, %rd578;
	xor.b64  	%rd655, %rd650, %rd578;
	xor.b64  	%rd656, %rd582, %rd653;
	xor.b64  	%rd657, %rd654, %rd583;
	xor.b64  	%rd658, %rd657, %rd648;
	xor.b64  	%rd659, %rd648, %rd580;
	xor.b64  	%rd660, %rd645, %rd605;
	xor.b64  	%rd661, %rd640, %rd606;
	xor.b64  	%rd662, %rd661, %rd647;
	xor.b64  	%rd663, %rd643, %rd633;
	xor.b64  	%rd664, %rd663, %rd601;
	xor.b64  	%rd665, %rd664, %rd603;
	xor.b64  	%rd666, %rd601, %rd638;
	xor.b64  	%rd667, %rd666, %rd646;
	xor.b64  	%rd668, %rd662, %rd601;
	xor.b64  	%rd669, %rd665, %rd605;
	xor.b64  	%rd670, %rd667, %rd606;
	xor.b64  	%rd671, %rd670, %rd660;
	xor.b64  	%rd672, %rd660, %rd603;
	and.b64  	%rd673, %rd648, 71777214294589695;
	shl.b64 	%rd674, %rd673, 8;
	shr.u64 	%rd675, %rd648, 8;
	and.b64  	%rd676, %rd675, 71777214294589695;
	or.b64  	%rd677, %rd676, %rd674;
	and.b64  	%rd678, %rd660, 71777214294589695;
	shl.b64 	%rd679, %rd678, 8;
	shr.u64 	%rd680, %rd660, 8;
	and.b64  	%rd681, %rd680, 71777214294589695;
	or.b64  	%rd682, %rd681, %rd679;
	and.b64  	%rd683, %rd650, 71777214294589695;
	shl.b64 	%rd684, %rd683, 8;
	shr.u64 	%rd685, %rd650, 8;
	and.b64  	%rd686, %rd685, 71777214294589695;
	or.b64  	%rd687, %rd686, %rd684;
	and.b64  	%rd688, %rd662, 71777214294589695;
	shl.b64 	%rd689, %rd688, 8;
	shr.u64 	%rd690, %rd662, 8;
	and.b64  	%rd691, %rd690, 71777214294589695;
	or.b64  	%rd692, %rd691, %rd689;
	and.b64  	%rd693, %rd653, 71777214294589695;
	shl.b64 	%rd694, %rd693, 8;
	shr.u64 	%rd695, %rd653, 8;
	and.b64  	%rd696, %rd695, 71777214294589695;
	or.b64  	%rd697, %rd696, %rd694;
	and.b64  	%rd698, %rd665, 71777214294589695;
	shl.b64 	%rd699, %rd698, 8;
	shr.u64 	%rd700, %rd665, 8;
	and.b64  	%rd701, %rd700, 71777214294589695;
	or.b64  	%rd702, %rd701, %rd699;
	and.b64  	%rd703, %rd654, 71777214294589695;
	shl.b64 	%rd704, %rd703, 8;
	shr.u64 	%rd705, %rd654, 8;
	and.b64  	%rd706, %rd705, 71777214294589695;
	or.b64  	%rd707, %rd706, %rd704;
	and.b64  	%rd708, %rd667, 71777214294589695;
	shl.b64 	%rd709, %rd708, 8;
	shr.u64 	%rd710, %rd667, 8;
	and.b64  	%rd711, %rd710, 71777214294589695;
	or.b64  	%rd712, %rd711, %rd709;
	not.b64 	%rd713, %rd659;
	not.b64 	%rd714, %rd658;
	and.b64  	%rd715, %rd714, -8034759328024351422;
	xor.b64  	%rd716, %rd655, %rd715;
	and.b64  	%rd717, %rd716, %rd656;
	xor.b64  	%rd718, %rd717, -8034759328024351422;
	and.b64  	%rd719, %rd658, %rd713;
	xor.b64  	%rd720, %rd716, %rd719;
	not.b64 	%rd721, %rd656;
	and.b64  	%rd722, %rd658, %rd721;
	xor.b64  	%rd723, %rd722, %rd713;
	and.b64  	%rd724, %rd720, %rd658;
	xor.b64  	%rd725, %rd724, %rd656;
	xor.b64  	%rd726, %rd722, %rd659;
	and.b64  	%rd727, %rd720, %rd726;
	xor.b64  	%rd728, %rd727, %rd658;
	or.b64  	%rd729, %rd725, %rd723;
	xor.b64  	%rd730, %rd729, %rd720;
	and.b64  	%rd731, %rd725, %rd728;
	xor.b64  	%rd732, %rd731, %rd723;
	and.b64  	%rd733, %rd730, %rd718;
	xor.b64  	%rd734, %rd733, %rd725;
	xor.b64  	%rd735, %rd728, %rd718;
	not.b64 	%rd736, %rd672;
	not.b64 	%rd737, %rd671;
	and.b64  	%rd738, %rd737, -3560165244487638307;
	xor.b64  	%rd739, %rd668, %rd738;
	and.b64  	%rd740, %rd739, %rd669;
	xor.b64  	%rd741, %rd740, -3560165244487638307;
	and.b64  	%rd742, %rd671, %rd736;
	xor.b64  	%rd743, %rd739, %rd742;
	not.b64 	%rd744, %rd669;
	and.b64  	%rd745, %rd671, %rd744;
	xor.b64  	%rd746, %rd745, %rd736;
	and.b64  	%rd747, %rd743, %rd671;
	xor.b64  	%rd748, %rd747, %rd669;
	xor.b64  	%rd749, %rd745, %rd672;
	and.b64  	%rd750, %rd743, %rd749;
	xor.b64  	%rd751, %rd750, %rd671;
	or.b64  	%rd752, %rd748, %rd746;
	xor.b64  	%rd753, %rd752, %rd743;
	and.b64  	%rd754, %rd748, %rd751;
	xor.b64  	%rd755, %rd754, %rd746;
	and.b64  	%rd756, %rd753, %rd741;
	xor.b64  	%rd757, %rd756, %rd748;
	xor.b64  	%rd758, %rd751, %rd741;
	not.b64 	%rd759, %rd707;
	not.b64 	%rd760, %rd697;
	and.b64  	%rd761, %rd760, -6033649466875618280;
	xor.b64  	%rd762, %rd677, %rd761;
	and.b64  	%rd763, %rd762, %rd687;
	xor.b64  	%rd764, %rd763, -6033649466875618280;
	and.b64  	%rd765, %rd697, %rd759;
	xor.b64  	%rd766, %rd762, %rd765;
	not.b64 	%rd767, %rd687;
	and.b64  	%rd768, %rd697, %rd767;
	xor.b64  	%rd769, %rd768, %rd759;
	and.b64  	%rd770, %rd766, %rd697;
	xor.b64  	%rd771, %rd770, %rd687;
	xor.b64  	%rd772, %rd768, %rd707;
	and.b64  	%rd773, %rd766, %rd772;
	xor.b64  	%rd774, %rd773, %rd697;
	or.b64  	%rd775, %rd771, %rd769;
	xor.b64  	%rd776, %rd775, %rd766;
	and.b64  	%rd777, %rd771, %rd774;
	xor.b64  	%rd778, %rd777, %rd769;
	and.b64  	%rd779, %rd776, %rd764;
	not.b64 	%rd780, %rd712;
	not.b64 	%rd781, %rd702;
	and.b64  	%rd782, %rd781, 2593165617559625681;
	xor.b64  	%rd783, %rd782, %rd682;
	and.b64  	%rd784, %rd783, %rd692;
	xor.b64  	%rd785, %rd784, 2593165617559625681;
	and.b64  	%rd786, %rd702, %rd780;
	xor.b64  	%rd787, %rd783, %rd786;
	not.b64 	%rd788, %rd692;
	and.b64  	%rd789, %rd702, %rd788;
	xor.b64  	%rd790, %rd789, %rd780;
	and.b64  	%rd791, %rd787, %rd702;
	xor.b64  	%rd792, %rd791, %rd692;
	xor.b64  	%rd793, %rd789, %rd712;
	and.b64  	%rd794, %rd787, %rd793;
	xor.b64  	%rd795, %rd794, %rd702;
	or.b64  	%rd796, %rd792, %rd790;
	xor.b64  	%rd797, %rd796, %rd787;
	and.b64  	%rd798, %rd792, %rd795;
	and.b64  	%rd799, %rd797, %rd785;
	xor.b64  	%rd800, %rd734, %rd776;
	xor.b64  	%rd801, %rd735, %rd771;
	xor.b64  	%rd802, %rd801, %rd779;
	xor.b64  	%rd803, %rd774, %rd764;
	xor.b64  	%rd804, %rd803, %rd730;
	xor.b64  	%rd805, %rd804, %rd732;
	xor.b64  	%rd806, %rd778, %rd730;
	xor.b64  	%rd807, %rd802, %rd730;
	xor.b64  	%rd808, %rd734, %rd805;
	xor.b64  	%rd809, %rd806, %rd735;
	xor.b64  	%rd810, %rd809, %rd800;
	xor.b64  	%rd811, %rd800, %rd732;
	xor.b64  	%rd812, %rd797, %rd757;
	xor.b64  	%rd813, %rd792, %rd758;
	xor.b64  	%rd814, %rd813, %rd799;
	xor.b64  	%rd815, %rd795, %rd785;
	xor.b64  	%rd816, %rd815, %rd753;
	xor.b64  	%rd817, %rd816, %rd755;
	xor.b64  	%rd818, %rd753, %rd790;
	xor.b64  	%rd819, %rd818, %rd798;
	xor.b64  	%rd820, %rd814, %rd753;
	xor.b64  	%rd821, %rd817, %rd757;
	xor.b64  	%rd822, %rd819, %rd758;
	xor.b64  	%rd823, %rd822, %rd812;
	xor.b64  	%rd824, %rd812, %rd755;
	and.b64  	%rd825, %rd800, 281470681808895;
	shl.b64 	%rd826, %rd825, 16;
	shr.u64 	%rd827, %rd800, 16;
	and.b64  	%rd828, %rd827, 281470681808895;
	or.b64  	%rd829, %rd828, %rd826;
	and.b64  	%rd830, %rd812, 281470681808895;
	shl.b64 	%rd831, %rd830, 16;
	shr.u64 	%rd832, %rd812, 16;
	and.b64  	%rd833, %rd832, 281470681808895;
	or.b64  	%rd834, %rd833, %rd831;
	and.b64  	%rd835, %rd802, 281470681808895;
	shl.b64 	%rd836, %rd835, 16;
	shr.u64 	%rd837, %rd802, 16;
	and.b64  	%rd838, %rd837, 281470681808895;
	or.b64  	%rd839, %rd838, %rd836;
	and.b64  	%rd840, %rd814, 281470681808895;
	shl.b64 	%rd841, %rd840, 16;
	shr.u64 	%rd842, %rd814, 16;
	and.b64  	%rd843, %rd842, 281470681808895;
	or.b64  	%rd844, %rd843, %rd841;
	and.b64  	%rd845, %rd805, 281470681808895;
	shl.b64 	%rd846, %rd845, 16;
	shr.u64 	%rd847, %rd805, 16;
	and.b64  	%rd848, %rd847, 281470681808895;
	or.b64  	%rd849, %rd848, %rd846;
	and.b64  	%rd850, %rd817, 281470681808895;
	shl.b64 	%rd851, %rd850, 16;
	shr.u64 	%rd852, %rd817, 16;
	and.b64  	%rd853, %rd852, 281470681808895;
	or.b64  	%rd854, %rd853, %rd851;
	and.b64  	%rd855, %rd806, 281470681808895;
	shl.b64 	%rd856, %rd855, 16;
	shr.u64 	%rd857, %rd806, 16;
	and.b64  	%rd858, %rd857, 281470681808895;
	or.b64  	%rd859, %rd858, %rd856;
	and.b64  	%rd860, %rd819, 281470681808895;
	shl.b64 	%rd861, %rd860, 16;
	shr.u64 	%rd862, %rd819, 16;
	and.b64  	%rd863, %rd862, 281470681808895;
	or.b64  	%rd864, %rd863, %rd861;
	not.b64 	%rd865, %rd811;
	not.b64 	%rd866, %rd810;
	and.b64  	%rd867, %rd866, 1925535809967779479;
	xor.b64  	%rd868, %rd807, %rd867;
	and.b64  	%rd869, %rd868, %rd808;
	xor.b64  	%rd870, %rd869, 1925535809967779479;
	and.b64  	%rd871, %rd810, %rd865;
	xor.b64  	%rd872, %rd868, %rd871;
	not.b64 	%rd873, %rd808;
	and.b64  	%rd874, %rd810, %rd873;
	xor.b64  	%rd875, %rd874, %rd865;
	and.b64  	%rd876, %rd872, %rd810;
	xor.b64  	%rd877, %rd876, %rd808;
	xor.b64  	%rd878, %rd874, %rd811;
	and.b64  	%rd879, %rd872, %rd878;
	xor.b64  	%rd880, %rd879, %rd810;
	or.b64  	%rd881, %rd877, %rd875;
	xor.b64  	%rd882, %rd881, %rd872;
	and.b64  	%rd883, %rd877, %rd880;
	xor.b64  	%rd884, %rd883, %rd875;
	and.b64  	%rd885, %rd882, %rd870;
	xor.b64  	%rd886, %rd885, %rd877;
	xor.b64  	%rd887, %rd880, %rd870;
	not.b64 	%rd888, %rd824;
	not.b64 	%rd889, %rd823;
	and.b64  	%rd890, %rd889, -6274521139401915103;
	xor.b64  	%rd891, %rd820, %rd890;
	and.b64  	%rd892, %rd891, %rd821;
	xor.b64  	%rd893, %rd892, -6274521139401915103;
	and.b64  	%rd894, %rd823, %rd888;
	xor.b64  	%rd895, %rd891, %rd894;
	not.b64 	%rd896, %rd821;
	and.b64  	%rd897, %rd823, %rd896;
	xor.b64  	%rd898, %rd897, %rd888;
	and.b64  	%rd899, %rd895, %rd823;
	xor.b64  	%rd900, %rd899, %rd821;
	xor.b64  	%rd901, %rd897, %rd824;
	and.b64  	%rd902, %rd895, %rd901;
	xor.b64  	%rd903, %rd902, %rd823;
	or.b64  	%rd904, %rd900, %rd898;
	xor.b64  	%rd905, %rd904, %rd895;
	and.b64  	%rd906, %rd900, %rd903;
	xor.b64  	%rd907, %rd906, %rd898;
	and.b64  	%rd908, %rd905, %rd893;
	xor.b64  	%rd909, %rd908, %rd900;
	xor.b64  	%rd910, %rd903, %rd893;
	not.b64 	%rd911, %rd859;
	not.b64 	%rd912, %rd849;
	and.b64  	%rd913, %rd912, -404885958265933330;
	xor.b64  	%rd914, %rd829, %rd913;
	and.b64  	%rd915, %rd914, %rd839;
	xor.b64  	%rd916, %rd915, -404885958265933330;
	and.b64  	%rd917, %rd849, %rd911;
	xor.b64  	%rd918, %rd914, %rd917;
	not.b64 	%rd919, %rd839;
	and.b64  	%rd920, %rd849, %rd919;
	xor.b64  	%rd921, %rd920, %rd911;
	and.b64  	%rd922, %rd918, %rd849;
	xor.b64  	%rd923, %rd922, %rd839;
	xor.b64  	%rd924, %rd920, %rd859;
	and.b64  	%rd925, %rd918, %rd924;
	xor.b64  	%rd926, %rd925, %rd849;
	or.b64  	%rd927, %rd923, %rd921;
	xor.b64  	%rd928, %rd927, %rd918;
	and.b64  	%rd929, %rd923, %rd926;
	xor.b64  	%rd930, %rd929, %rd921;
	and.b64  	%rd931, %rd928, %rd916;
	not.b64 	%rd932, %rd864;
	not.b64 	%rd933, %rd854;
	and.b64  	%rd934, %rd933, -7529592427312081155;
	xor.b64  	%rd935, %rd934, %rd834;
	and.b64  	%rd936, %rd935, %rd844;
	xor.b64  	%rd937, %rd936, -7529592427312081155;
	and.b64  	%rd938, %rd854, %rd932;
	xor.b64  	%rd939, %rd935, %rd938;
	not.b64 	%rd940, %rd844;
	and.b64  	%rd941, %rd854, %rd940;
	xor.b64  	%rd942, %rd941, %rd932;
	and.b64  	%rd943, %rd939, %rd854;
	xor.b64  	%rd944, %rd943, %rd844;
	xor.b64  	%rd945, %rd941, %rd864;
	and.b64  	%rd946, %rd939, %rd945;
	xor.b64  	%rd947, %rd946, %rd854;
	or.b64  	%rd948, %rd944, %rd942;
	xor.b64  	%rd949, %rd948, %rd939;
	and.b64  	%rd950, %rd944, %rd947;
	and.b64  	%rd951, %rd949, %rd937;
	xor.b64  	%rd952, %rd886, %rd928;
	xor.b64  	%rd953, %rd887, %rd923;
	xor.b64  	%rd954, %rd953, %rd931;
	xor.b64  	%rd955, %rd926, %rd916;
	xor.b64  	%rd956, %rd955, %rd882;
	xor.b64  	%rd957, %rd956, %rd884;
	xor.b64  	%rd958, %rd930, %rd882;
	xor.b64  	%rd959, %rd954, %rd882;
	xor.b64  	%rd960, %rd886, %rd957;
	xor.b64  	%rd961, %rd958, %rd887;
	xor.b64  	%rd962, %rd961, %rd952;
	xor.b64  	%rd963, %rd952, %rd884;
	xor.b64  	%rd964, %rd949, %rd909;
	xor.b64  	%rd965, %rd944, %rd910;
	xor.b64  	%rd966, %rd965, %rd951;
	xor.b64  	%rd967, %rd947, %rd937;
	xor.b64  	%rd968, %rd967, %rd905;
	xor.b64  	%rd969, %rd968, %rd907;
	xor.b64  	%rd970, %rd905, %rd942;
	xor.b64  	%rd971, %rd970, %rd950;
	xor.b64  	%rd972, %rd966, %rd905;
	xor.b64  	%rd973, %rd969, %rd909;
	xor.b64  	%rd974, %rd971, %rd910;
	xor.b64  	%rd975, %rd974, %rd964;
	xor.b64  	%rd976, %rd964, %rd907;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd952, 32;
	shr.b64 	%rhs, %rd952, 32;
	add.u64 	%rd977, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd964, 32;
	shr.b64 	%rhs, %rd964, 32;
	add.u64 	%rd978, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd954, 32;
	shr.b64 	%rhs, %rd954, 32;
	add.u64 	%rd979, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd966, 32;
	shr.b64 	%rhs, %rd966, 32;
	add.u64 	%rd980, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd957, 32;
	shr.b64 	%rhs, %rd957, 32;
	add.u64 	%rd981, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd969, 32;
	shr.b64 	%rhs, %rd969, 32;
	add.u64 	%rd982, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd958, 32;
	shr.b64 	%rhs, %rd958, 32;
	add.u64 	%rd983, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd971, 32;
	shr.b64 	%rhs, %rd971, 32;
	add.u64 	%rd984, %lhs, %rhs;
	}
	not.b64 	%rd985, %rd963;
	not.b64 	%rd986, %rd962;
	and.b64  	%rd987, %rd986, 3400221958728945226;
	xor.b64  	%rd988, %rd959, %rd987;
	and.b64  	%rd989, %rd988, %rd960;
	xor.b64  	%rd990, %rd989, 3400221958728945226;
	and.b64  	%rd991, %rd962, %rd985;
	xor.b64  	%rd992, %rd988, %rd991;
	not.b64 	%rd993, %rd960;
	and.b64  	%rd994, %rd962, %rd993;
	xor.b64  	%rd995, %rd994, %rd985;
	and.b64  	%rd996, %rd992, %rd962;
	xor.b64  	%rd997, %rd996, %rd960;
	xor.b64  	%rd998, %rd994, %rd963;
	and.b64  	%rd999, %rd992, %rd998;
	xor.b64  	%rd1000, %rd999, %rd962;
	or.b64  	%rd1001, %rd997, %rd995;
	xor.b64  	%rd1002, %rd1001, %rd992;
	and.b64  	%rd1003, %rd997, %rd1000;
	xor.b64  	%rd1004, %rd1003, %rd995;
	and.b64  	%rd1005, %rd1002, %rd990;
	xor.b64  	%rd1006, %rd1005, %rd997;
	xor.b64  	%rd1007, %rd1000, %rd990;
	not.b64 	%rd1008, %rd976;
	not.b64 	%rd1009, %rd975;
	and.b64  	%rd1010, %rd1009, -7680150313377110230;
	xor.b64  	%rd1011, %rd972, %rd1010;
	and.b64  	%rd1012, %rd1011, %rd973;
	xor.b64  	%rd1013, %rd1012, -7680150313377110230;
	and.b64  	%rd1014, %rd975, %rd1008;
	xor.b64  	%rd1015, %rd1011, %rd1014;
	not.b64 	%rd1016, %rd973;
	and.b64  	%rd1017, %rd975, %rd1016;
	xor.b64  	%rd1018, %rd1017, %rd1008;
	and.b64  	%rd1019, %rd1015, %rd975;
	xor.b64  	%rd1020, %rd1019, %rd973;
	xor.b64  	%rd1021, %rd1017, %rd976;
	and.b64  	%rd1022, %rd1015, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd975;
	or.b64  	%rd1024, %rd1020, %rd1018;
	xor.b64  	%rd1025, %rd1024, %rd1015;
	and.b64  	%rd1026, %rd1020, %rd1023;
	xor.b64  	%rd1027, %rd1026, %rd1018;
	and.b64  	%rd1028, %rd1025, %rd1013;
	xor.b64  	%rd1029, %rd1028, %rd1020;
	xor.b64  	%rd1030, %rd1023, %rd1013;
	not.b64 	%rd1031, %rd983;
	not.b64 	%rd1032, %rd981;
	and.b64  	%rd1033, %rd1032, 7811978406114098826;
	xor.b64  	%rd1034, %rd977, %rd1033;
	and.b64  	%rd1035, %rd1034, %rd979;
	xor.b64  	%rd1036, %rd1035, 7811978406114098826;
	and.b64  	%rd1037, %rd981, %rd1031;
	xor.b64  	%rd1038, %rd1034, %rd1037;
	not.b64 	%rd1039, %rd979;
	and.b64  	%rd1040, %rd981, %rd1039;
	xor.b64  	%rd1041, %rd1040, %rd1031;
	and.b64  	%rd1042, %rd1038, %rd981;
	xor.b64  	%rd1043, %rd1042, %rd979;
	xor.b64  	%rd1044, %rd1040, %rd983;
	and.b64  	%rd1045, %rd1038, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd981;
	or.b64  	%rd1047, %rd1043, %rd1041;
	xor.b64  	%rd1048, %rd1047, %rd1038;
	and.b64  	%rd1049, %rd1043, %rd1046;
	xor.b64  	%rd1050, %rd1049, %rd1041;
	and.b64  	%rd1051, %rd1048, %rd1036;
	not.b64 	%rd1052, %rd984;
	not.b64 	%rd1053, %rd982;
	and.b64  	%rd1054, %rd1053, 1459869693013837706;
	xor.b64  	%rd1055, %rd1054, %rd978;
	and.b64  	%rd1056, %rd1055, %rd980;
	xor.b64  	%rd1057, %rd1056, 1459869693013837706;
	and.b64  	%rd1058, %rd982, %rd1052;
	xor.b64  	%rd1059, %rd1055, %rd1058;
	not.b64 	%rd1060, %rd980;
	and.b64  	%rd1061, %rd982, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1052;
	and.b64  	%rd1063, %rd1059, %rd982;
	xor.b64  	%rd1064, %rd1063, %rd980;
	xor.b64  	%rd1065, %rd1061, %rd984;
	and.b64  	%rd1066, %rd1059, %rd1065;
	xor.b64  	%rd1067, %rd1066, %rd982;
	or.b64  	%rd1068, %rd1064, %rd1062;
	xor.b64  	%rd1069, %rd1068, %rd1059;
	and.b64  	%rd1070, %rd1064, %rd1067;
	xor.b64  	%rd1071, %rd1070, %rd1062;
	and.b64  	%rd1072, %rd1069, %rd1057;
	xor.b64  	%rd1073, %rd1006, %rd1048;
	xor.b64  	%rd1074, %rd1007, %rd1043;
	xor.b64  	%rd1075, %rd1074, %rd1051;
	xor.b64  	%rd1076, %rd1046, %rd1036;
	xor.b64  	%rd1077, %rd1076, %rd1002;
	xor.b64  	%rd1078, %rd1077, %rd1004;
	xor.b64  	%rd1079, %rd1050, %rd1002;
	xor.b64  	%rd1080, %rd1075, %rd1002;
	xor.b64  	%rd1081, %rd1006, %rd1078;
	xor.b64  	%rd1082, %rd1079, %rd1007;
	xor.b64  	%rd1083, %rd1082, %rd1073;
	xor.b64  	%rd1084, %rd1073, %rd1004;
	xor.b64  	%rd1085, %rd1029, %rd1069;
	xor.b64  	%rd1086, %rd1030, %rd1064;
	xor.b64  	%rd1087, %rd1086, %rd1072;
	xor.b64  	%rd1088, %rd1067, %rd1057;
	xor.b64  	%rd1089, %rd1088, %rd1025;
	xor.b64  	%rd1090, %rd1089, %rd1027;
	xor.b64  	%rd1091, %rd1071, %rd1025;
	xor.b64  	%rd1092, %rd1087, %rd1025;
	xor.b64  	%rd1093, %rd1029, %rd1090;
	xor.b64  	%rd1094, %rd1091, %rd1030;
	xor.b64  	%rd1095, %rd1094, %rd1085;
	xor.b64  	%rd1096, %rd1085, %rd1027;
	not.b64 	%rd1097, %rd1084;
	not.b64 	%rd1098, %rd1083;
	and.b64  	%rd1099, %rd1098, -4296777377501547323;
	xor.b64  	%rd1100, %rd1080, %rd1099;
	and.b64  	%rd1101, %rd1100, %rd1081;
	xor.b64  	%rd1102, %rd1101, -4296777377501547323;
	and.b64  	%rd1103, %rd1083, %rd1097;
	xor.b64  	%rd1104, %rd1100, %rd1103;
	not.b64 	%rd1105, %rd1081;
	and.b64  	%rd1106, %rd1083, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1097;
	and.b64  	%rd1108, %rd1104, %rd1083;
	xor.b64  	%rd1109, %rd1108, %rd1081;
	xor.b64  	%rd1110, %rd1106, %rd1084;
	and.b64  	%rd1111, %rd1104, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1083;
	or.b64  	%rd1113, %rd1109, %rd1107;
	xor.b64  	%rd1114, %rd1113, %rd1104;
	and.b64  	%rd1115, %rd1109, %rd1112;
	xor.b64  	%rd1116, %rd1115, %rd1107;
	and.b64  	%rd1117, %rd1114, %rd1102;
	xor.b64  	%rd1118, %rd1117, %rd1109;
	xor.b64  	%rd1119, %rd1112, %rd1102;
	not.b64 	%rd1120, %rd1096;
	not.b64 	%rd1121, %rd1095;
	and.b64  	%rd1122, %rd1121, -9170716907522800523;
	xor.b64  	%rd1123, %rd1092, %rd1122;
	and.b64  	%rd1124, %rd1123, %rd1093;
	xor.b64  	%rd1125, %rd1124, -9170716907522800523;
	and.b64  	%rd1126, %rd1095, %rd1120;
	xor.b64  	%rd1127, %rd1123, %rd1126;
	not.b64 	%rd1128, %rd1093;
	and.b64  	%rd1129, %rd1095, %rd1128;
	xor.b64  	%rd1130, %rd1129, %rd1120;
	and.b64  	%rd1131, %rd1127, %rd1095;
	xor.b64  	%rd1132, %rd1131, %rd1093;
	xor.b64  	%rd1133, %rd1129, %rd1096;
	and.b64  	%rd1134, %rd1127, %rd1133;
	xor.b64  	%rd1135, %rd1134, %rd1095;
	or.b64  	%rd1136, %rd1132, %rd1130;
	xor.b64  	%rd1137, %rd1136, %rd1127;
	and.b64  	%rd1138, %rd1132, %rd1135;
	xor.b64  	%rd1139, %rd1138, %rd1130;
	and.b64  	%rd1140, %rd1137, %rd1125;
	xor.b64  	%rd1141, %rd1140, %rd1132;
	xor.b64  	%rd1142, %rd1135, %rd1125;
	not.b64 	%rd1143, %rd1091;
	not.b64 	%rd1144, %rd1090;
	and.b64  	%rd1145, %rd1144, -4861384358693052846;
	xor.b64  	%rd1146, %rd1085, %rd1145;
	and.b64  	%rd1147, %rd1146, %rd1087;
	xor.b64  	%rd1148, %rd1147, -4861384358693052846;
	and.b64  	%rd1149, %rd1090, %rd1143;
	xor.b64  	%rd1150, %rd1146, %rd1149;
	not.b64 	%rd1151, %rd1087;
	and.b64  	%rd1152, %rd1090, %rd1151;
	xor.b64  	%rd1153, %rd1152, %rd1143;
	and.b64  	%rd1154, %rd1150, %rd1090;
	xor.b64  	%rd1155, %rd1154, %rd1087;
	xor.b64  	%rd1156, %rd1152, %rd1091;
	and.b64  	%rd1157, %rd1150, %rd1156;
	xor.b64  	%rd1158, %rd1157, %rd1090;
	or.b64  	%rd1159, %rd1155, %rd1153;
	xor.b64  	%rd1160, %rd1159, %rd1150;
	and.b64  	%rd1161, %rd1155, %rd1158;
	xor.b64  	%rd1162, %rd1161, %rd1153;
	and.b64  	%rd1163, %rd1160, %rd1148;
	xor.b64  	%rd1164, %rd1163, %rd1155;
	not.b64 	%rd1165, %rd1079;
	not.b64 	%rd1166, %rd1078;
	and.b64  	%rd1167, %rd1166, -818627534982694782;
	xor.b64  	%rd1168, %rd1073, %rd1167;
	and.b64  	%rd1169, %rd1168, %rd1075;
	xor.b64  	%rd1170, %rd1169, -818627534982694782;
	and.b64  	%rd1171, %rd1078, %rd1165;
	xor.b64  	%rd1172, %rd1168, %rd1171;
	not.b64 	%rd1173, %rd1075;
	and.b64  	%rd1174, %rd1078, %rd1173;
	xor.b64  	%rd1175, %rd1174, %rd1165;
	and.b64  	%rd1176, %rd1172, %rd1078;
	xor.b64  	%rd1177, %rd1176, %rd1075;
	xor.b64  	%rd1178, %rd1174, %rd1079;
	and.b64  	%rd1179, %rd1172, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1078;
	or.b64  	%rd1181, %rd1177, %rd1175;
	xor.b64  	%rd1182, %rd1181, %rd1172;
	and.b64  	%rd1183, %rd1177, %rd1180;
	xor.b64  	%rd1184, %rd1183, %rd1175;
	and.b64  	%rd1185, %rd1182, %rd1170;
	xor.b64  	%rd1186, %rd1118, %rd1160;
	xor.b64  	%rd1187, %rd1164, %rd1119;
	xor.b64  	%rd1188, %rd1158, %rd1148;
	xor.b64  	%rd1189, %rd1188, %rd1114;
	xor.b64  	%rd1190, %rd1189, %rd1116;
	xor.b64  	%rd1191, %rd1162, %rd1114;
	xor.b64  	%rd1192, %rd1114, %rd1187;
	xor.b64  	%rd1193, %rd1118, %rd1190;
	xor.b64  	%rd1194, %rd1191, %rd1119;
	xor.b64  	%rd1195, %rd1194, %rd1186;
	xor.b64  	%rd1196, %rd1186, %rd1116;
	xor.b64  	%rd1197, %rd1141, %rd1182;
	xor.b64  	%rd1198, %rd1142, %rd1177;
	xor.b64  	%rd1199, %rd1198, %rd1185;
	xor.b64  	%rd1200, %rd1180, %rd1170;
	xor.b64  	%rd1201, %rd1200, %rd1137;
	xor.b64  	%rd1202, %rd1201, %rd1139;
	xor.b64  	%rd1203, %rd1184, %rd1137;
	xor.b64  	%rd1204, %rd1199, %rd1137;
	xor.b64  	%rd1205, %rd1141, %rd1202;
	xor.b64  	%rd1206, %rd1203, %rd1142;
	xor.b64  	%rd1207, %rd1206, %rd1197;
	xor.b64  	%rd1208, %rd1197, %rd1139;
	and.b64  	%rd1209, %rd1186, 6148914691236517205;
	shl.b64 	%rd1210, %rd1209, 1;
	shr.u64 	%rd1211, %rd1186, 1;
	and.b64  	%rd1212, %rd1211, 6148914691236517205;
	or.b64  	%rd1213, %rd1212, %rd1210;
	and.b64  	%rd1214, %rd1197, 6148914691236517205;
	shl.b64 	%rd1215, %rd1214, 1;
	shr.u64 	%rd1216, %rd1197, 1;
	and.b64  	%rd1217, %rd1216, 6148914691236517205;
	or.b64  	%rd1218, %rd1217, %rd1215;
	and.b64  	%rd1219, %rd1187, 6148914691236517205;
	shl.b64 	%rd1220, %rd1219, 1;
	shr.u64 	%rd1221, %rd1187, 1;
	and.b64  	%rd1222, %rd1221, 6148914691236517205;
	or.b64  	%rd1223, %rd1222, %rd1220;
	and.b64  	%rd1224, %rd1199, 6148914691236517205;
	shl.b64 	%rd1225, %rd1224, 1;
	shr.u64 	%rd1226, %rd1199, 1;
	and.b64  	%rd1227, %rd1226, 6148914691236517205;
	or.b64  	%rd1228, %rd1227, %rd1225;
	and.b64  	%rd1229, %rd1190, 6148914691236517205;
	shl.b64 	%rd1230, %rd1229, 1;
	shr.u64 	%rd1231, %rd1190, 1;
	and.b64  	%rd1232, %rd1231, 6148914691236517205;
	or.b64  	%rd1233, %rd1232, %rd1230;
	and.b64  	%rd1234, %rd1202, 6148914691236517205;
	shl.b64 	%rd1235, %rd1234, 1;
	shr.u64 	%rd1236, %rd1202, 1;
	and.b64  	%rd1237, %rd1236, 6148914691236517205;
	or.b64  	%rd1238, %rd1237, %rd1235;
	and.b64  	%rd1239, %rd1191, 6148914691236517205;
	shl.b64 	%rd1240, %rd1239, 1;
	shr.u64 	%rd1241, %rd1191, 1;
	and.b64  	%rd1242, %rd1241, 6148914691236517205;
	or.b64  	%rd1243, %rd1242, %rd1240;
	and.b64  	%rd1244, %rd1203, 6148914691236517205;
	shl.b64 	%rd1245, %rd1244, 1;
	shr.u64 	%rd1246, %rd1203, 1;
	and.b64  	%rd1247, %rd1246, 6148914691236517205;
	or.b64  	%rd1248, %rd1247, %rd1245;
	not.b64 	%rd1249, %rd1196;
	not.b64 	%rd1250, %rd1195;
	and.b64  	%rd1251, %rd1250, 1541255444600714382;
	xor.b64  	%rd1252, %rd1192, %rd1251;
	and.b64  	%rd1253, %rd1252, %rd1193;
	xor.b64  	%rd1254, %rd1253, 1541255444600714382;
	and.b64  	%rd1255, %rd1195, %rd1249;
	xor.b64  	%rd1256, %rd1252, %rd1255;
	not.b64 	%rd1257, %rd1193;
	and.b64  	%rd1258, %rd1195, %rd1257;
	xor.b64  	%rd1259, %rd1258, %rd1249;
	and.b64  	%rd1260, %rd1256, %rd1195;
	xor.b64  	%rd1261, %rd1260, %rd1193;
	xor.b64  	%rd1262, %rd1258, %rd1196;
	and.b64  	%rd1263, %rd1256, %rd1262;
	xor.b64  	%rd1264, %rd1263, %rd1195;
	or.b64  	%rd1265, %rd1261, %rd1259;
	xor.b64  	%rd1266, %rd1265, %rd1256;
	and.b64  	%rd1267, %rd1261, %rd1264;
	xor.b64  	%rd1268, %rd1267, %rd1259;
	and.b64  	%rd1269, %rd1266, %rd1254;
	xor.b64  	%rd1270, %rd1269, %rd1261;
	xor.b64  	%rd1271, %rd1264, %rd1254;
	not.b64 	%rd1272, %rd1208;
	not.b64 	%rd1273, %rd1207;
	and.b64  	%rd1274, %rd1273, -8504564295246913622;
	xor.b64  	%rd1275, %rd1204, %rd1274;
	and.b64  	%rd1276, %rd1275, %rd1205;
	xor.b64  	%rd1277, %rd1276, -8504564295246913622;
	and.b64  	%rd1278, %rd1207, %rd1272;
	xor.b64  	%rd1279, %rd1275, %rd1278;
	not.b64 	%rd1280, %rd1205;
	and.b64  	%rd1281, %rd1207, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1272;
	and.b64  	%rd1283, %rd1279, %rd1207;
	xor.b64  	%rd1284, %rd1283, %rd1205;
	xor.b64  	%rd1285, %rd1281, %rd1208;
	and.b64  	%rd1286, %rd1279, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1207;
	or.b64  	%rd1288, %rd1284, %rd1282;
	xor.b64  	%rd1289, %rd1288, %rd1279;
	and.b64  	%rd1290, %rd1284, %rd1287;
	xor.b64  	%rd1291, %rd1290, %rd1282;
	and.b64  	%rd1292, %rd1289, %rd1277;
	xor.b64  	%rd1293, %rd1292, %rd1284;
	xor.b64  	%rd1294, %rd1287, %rd1277;
	not.b64 	%rd1295, %rd1243;
	not.b64 	%rd1296, %rd1233;
	and.b64  	%rd1297, %rd1296, -153022898155687498;
	xor.b64  	%rd1298, %rd1213, %rd1297;
	and.b64  	%rd1299, %rd1298, %rd1223;
	xor.b64  	%rd1300, %rd1299, -153022898155687498;
	and.b64  	%rd1301, %rd1233, %rd1295;
	xor.b64  	%rd1302, %rd1298, %rd1301;
	not.b64 	%rd1303, %rd1223;
	and.b64  	%rd1304, %rd1233, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1295;
	and.b64  	%rd1306, %rd1302, %rd1233;
	xor.b64  	%rd1307, %rd1306, %rd1223;
	xor.b64  	%rd1308, %rd1304, %rd1243;
	and.b64  	%rd1309, %rd1302, %rd1308;
	xor.b64  	%rd1310, %rd1309, %rd1233;
	or.b64  	%rd1311, %rd1307, %rd1305;
	xor.b64  	%rd1312, %rd1311, %rd1302;
	and.b64  	%rd1313, %rd1307, %rd1310;
	xor.b64  	%rd1314, %rd1313, %rd1305;
	and.b64  	%rd1315, %rd1312, %rd1300;
	not.b64 	%rd1316, %rd1248;
	not.b64 	%rd1317, %rd1238;
	and.b64  	%rd1318, %rd1317, 3903567572085885494;
	xor.b64  	%rd1319, %rd1218, %rd1318;
	and.b64  	%rd1320, %rd1319, %rd1228;
	xor.b64  	%rd1321, %rd1320, 3903567572085885494;
	and.b64  	%rd1322, %rd1238, %rd1316;
	xor.b64  	%rd1323, %rd1319, %rd1322;
	not.b64 	%rd1324, %rd1228;
	and.b64  	%rd1325, %rd1238, %rd1324;
	xor.b64  	%rd1326, %rd1325, %rd1316;
	and.b64  	%rd1327, %rd1323, %rd1238;
	xor.b64  	%rd1328, %rd1327, %rd1228;
	xor.b64  	%rd1329, %rd1325, %rd1248;
	and.b64  	%rd1330, %rd1323, %rd1329;
	xor.b64  	%rd1331, %rd1330, %rd1238;
	or.b64  	%rd1332, %rd1328, %rd1326;
	xor.b64  	%rd1333, %rd1332, %rd1323;
	and.b64  	%rd1334, %rd1328, %rd1331;
	xor.b64  	%rd1335, %rd1334, %rd1326;
	and.b64  	%rd1336, %rd1333, %rd1321;
	xor.b64  	%rd1337, %rd1270, %rd1312;
	xor.b64  	%rd1338, %rd1271, %rd1307;
	xor.b64  	%rd1339, %rd1338, %rd1315;
	xor.b64  	%rd1340, %rd1310, %rd1300;
	xor.b64  	%rd1341, %rd1340, %rd1266;
	xor.b64  	%rd1342, %rd1341, %rd1268;
	xor.b64  	%rd1343, %rd1314, %rd1266;
	xor.b64  	%rd1344, %rd1339, %rd1266;
	xor.b64  	%rd1345, %rd1270, %rd1342;
	xor.b64  	%rd1346, %rd1343, %rd1271;
	xor.b64  	%rd1347, %rd1346, %rd1337;
	xor.b64  	%rd1348, %rd1337, %rd1268;
	xor.b64  	%rd1349, %rd1293, %rd1333;
	xor.b64  	%rd1350, %rd1294, %rd1328;
	xor.b64  	%rd1351, %rd1350, %rd1336;
	xor.b64  	%rd1352, %rd1331, %rd1321;
	xor.b64  	%rd1353, %rd1352, %rd1289;
	xor.b64  	%rd1354, %rd1353, %rd1291;
	xor.b64  	%rd1355, %rd1335, %rd1289;
	xor.b64  	%rd1356, %rd1351, %rd1289;
	xor.b64  	%rd1357, %rd1293, %rd1354;
	xor.b64  	%rd1358, %rd1355, %rd1294;
	xor.b64  	%rd1359, %rd1358, %rd1349;
	xor.b64  	%rd1360, %rd1349, %rd1291;
	and.b64  	%rd1361, %rd1337, 3689348814741910323;
	shl.b64 	%rd1362, %rd1361, 2;
	shr.u64 	%rd1363, %rd1337, 2;
	and.b64  	%rd1364, %rd1363, 3689348814741910323;
	or.b64  	%rd1365, %rd1364, %rd1362;
	and.b64  	%rd1366, %rd1349, 3689348814741910323;
	shl.b64 	%rd1367, %rd1366, 2;
	shr.u64 	%rd1368, %rd1349, 2;
	and.b64  	%rd1369, %rd1368, 3689348814741910323;
	or.b64  	%rd1370, %rd1369, %rd1367;
	and.b64  	%rd1371, %rd1339, 3689348814741910323;
	shl.b64 	%rd1372, %rd1371, 2;
	shr.u64 	%rd1373, %rd1339, 2;
	and.b64  	%rd1374, %rd1373, 3689348814741910323;
	or.b64  	%rd1375, %rd1374, %rd1372;
	and.b64  	%rd1376, %rd1351, 3689348814741910323;
	shl.b64 	%rd1377, %rd1376, 2;
	shr.u64 	%rd1378, %rd1351, 2;
	and.b64  	%rd1379, %rd1378, 3689348814741910323;
	or.b64  	%rd1380, %rd1379, %rd1377;
	and.b64  	%rd1381, %rd1342, 3689348814741910323;
	shl.b64 	%rd1382, %rd1381, 2;
	shr.u64 	%rd1383, %rd1342, 2;
	and.b64  	%rd1384, %rd1383, 3689348814741910323;
	or.b64  	%rd1385, %rd1384, %rd1382;
	and.b64  	%rd1386, %rd1354, 3689348814741910323;
	shl.b64 	%rd1387, %rd1386, 2;
	shr.u64 	%rd1388, %rd1354, 2;
	and.b64  	%rd1389, %rd1388, 3689348814741910323;
	or.b64  	%rd1390, %rd1389, %rd1387;
	and.b64  	%rd1391, %rd1343, 3689348814741910323;
	shl.b64 	%rd1392, %rd1391, 2;
	shr.u64 	%rd1393, %rd1343, 2;
	and.b64  	%rd1394, %rd1393, 3689348814741910323;
	or.b64  	%rd1395, %rd1394, %rd1392;
	and.b64  	%rd1396, %rd1355, 3689348814741910323;
	shl.b64 	%rd1397, %rd1396, 2;
	shr.u64 	%rd1398, %rd1355, 2;
	and.b64  	%rd1399, %rd1398, 3689348814741910323;
	or.b64  	%rd1400, %rd1399, %rd1397;
	not.b64 	%rd1401, %rd1348;
	not.b64 	%rd1402, %rd1347;
	and.b64  	%rd1403, %rd1402, 4438577044862085582;
	xor.b64  	%rd1404, %rd1344, %rd1403;
	and.b64  	%rd1405, %rd1404, %rd1345;
	xor.b64  	%rd1406, %rd1405, 4438577044862085582;
	and.b64  	%rd1407, %rd1347, %rd1401;
	xor.b64  	%rd1408, %rd1404, %rd1407;
	not.b64 	%rd1409, %rd1345;
	and.b64  	%rd1410, %rd1347, %rd1409;
	xor.b64  	%rd1411, %rd1410, %rd1401;
	and.b64  	%rd1412, %rd1408, %rd1347;
	xor.b64  	%rd1413, %rd1412, %rd1345;
	xor.b64  	%rd1414, %rd1410, %rd1348;
	and.b64  	%rd1415, %rd1408, %rd1414;
	xor.b64  	%rd1416, %rd1415, %rd1347;
	or.b64  	%rd1417, %rd1413, %rd1411;
	xor.b64  	%rd1418, %rd1417, %rd1408;
	and.b64  	%rd1419, %rd1413, %rd1416;
	xor.b64  	%rd1420, %rd1419, %rd1411;
	and.b64  	%rd1421, %rd1418, %rd1406;
	xor.b64  	%rd1422, %rd1421, %rd1413;
	xor.b64  	%rd1423, %rd1416, %rd1406;
	not.b64 	%rd1424, %rd1360;
	not.b64 	%rd1425, %rd1359;
	and.b64  	%rd1426, %rd1425, -6391845425447880109;
	xor.b64  	%rd1427, %rd1356, %rd1426;
	and.b64  	%rd1428, %rd1427, %rd1357;
	xor.b64  	%rd1429, %rd1428, -6391845425447880109;
	and.b64  	%rd1430, %rd1359, %rd1424;
	xor.b64  	%rd1431, %rd1427, %rd1430;
	not.b64 	%rd1432, %rd1357;
	and.b64  	%rd1433, %rd1359, %rd1432;
	xor.b64  	%rd1434, %rd1433, %rd1424;
	and.b64  	%rd1435, %rd1431, %rd1359;
	xor.b64  	%rd1436, %rd1435, %rd1357;
	xor.b64  	%rd1437, %rd1433, %rd1360;
	and.b64  	%rd1438, %rd1431, %rd1437;
	xor.b64  	%rd1439, %rd1438, %rd1359;
	or.b64  	%rd1440, %rd1436, %rd1434;
	xor.b64  	%rd1441, %rd1440, %rd1431;
	and.b64  	%rd1442, %rd1436, %rd1439;
	xor.b64  	%rd1443, %rd1442, %rd1434;
	and.b64  	%rd1444, %rd1441, %rd1429;
	xor.b64  	%rd1445, %rd1444, %rd1436;
	xor.b64  	%rd1446, %rd1439, %rd1429;
	not.b64 	%rd1447, %rd1395;
	not.b64 	%rd1448, %rd1385;
	and.b64  	%rd1449, %rd1448, -8754629960487930416;
	xor.b64  	%rd1450, %rd1365, %rd1449;
	and.b64  	%rd1451, %rd1450, %rd1375;
	xor.b64  	%rd1452, %rd1451, -8754629960487930416;
	and.b64  	%rd1453, %rd1385, %rd1447;
	xor.b64  	%rd1454, %rd1450, %rd1453;
	not.b64 	%rd1455, %rd1375;
	and.b64  	%rd1456, %rd1385, %rd1455;
	xor.b64  	%rd1457, %rd1456, %rd1447;
	and.b64  	%rd1458, %rd1454, %rd1385;
	xor.b64  	%rd1459, %rd1458, %rd1375;
	xor.b64  	%rd1460, %rd1456, %rd1395;
	and.b64  	%rd1461, %rd1454, %rd1460;
	xor.b64  	%rd1462, %rd1461, %rd1385;
	or.b64  	%rd1463, %rd1459, %rd1457;
	xor.b64  	%rd1464, %rd1463, %rd1454;
	and.b64  	%rd1465, %rd1459, %rd1462;
	xor.b64  	%rd1466, %rd1465, %rd1457;
	and.b64  	%rd1467, %rd1464, %rd1452;
	not.b64 	%rd1468, %rd1400;
	not.b64 	%rd1469, %rd1390;
	and.b64  	%rd1470, %rd1469, -6964015625468535538;
	xor.b64  	%rd1471, %rd1370, %rd1470;
	and.b64  	%rd1472, %rd1471, %rd1380;
	xor.b64  	%rd1473, %rd1472, -6964015625468535538;
	and.b64  	%rd1474, %rd1390, %rd1468;
	xor.b64  	%rd1475, %rd1471, %rd1474;
	not.b64 	%rd1476, %rd1380;
	and.b64  	%rd1477, %rd1390, %rd1476;
	xor.b64  	%rd1478, %rd1477, %rd1468;
	and.b64  	%rd1479, %rd1475, %rd1390;
	xor.b64  	%rd1480, %rd1479, %rd1380;
	xor.b64  	%rd1481, %rd1477, %rd1400;
	and.b64  	%rd1482, %rd1475, %rd1481;
	xor.b64  	%rd1483, %rd1482, %rd1390;
	or.b64  	%rd1484, %rd1480, %rd1478;
	xor.b64  	%rd1485, %rd1484, %rd1475;
	and.b64  	%rd1486, %rd1480, %rd1483;
	xor.b64  	%rd1487, %rd1486, %rd1478;
	and.b64  	%rd1488, %rd1485, %rd1473;
	xor.b64  	%rd1489, %rd1422, %rd1464;
	xor.b64  	%rd1490, %rd1423, %rd1459;
	xor.b64  	%rd1491, %rd1490, %rd1467;
	xor.b64  	%rd1492, %rd1462, %rd1452;
	xor.b64  	%rd1493, %rd1492, %rd1418;
	xor.b64  	%rd1494, %rd1493, %rd1420;
	xor.b64  	%rd1495, %rd1466, %rd1418;
	xor.b64  	%rd1496, %rd1491, %rd1418;
	xor.b64  	%rd1497, %rd1422, %rd1494;
	xor.b64  	%rd1498, %rd1495, %rd1423;
	xor.b64  	%rd1499, %rd1498, %rd1489;
	xor.b64  	%rd1500, %rd1489, %rd1420;
	xor.b64  	%rd1501, %rd1445, %rd1485;
	xor.b64  	%rd1502, %rd1446, %rd1480;
	xor.b64  	%rd1503, %rd1502, %rd1488;
	xor.b64  	%rd1504, %rd1483, %rd1473;
	xor.b64  	%rd1505, %rd1504, %rd1441;
	xor.b64  	%rd1506, %rd1505, %rd1443;
	xor.b64  	%rd1507, %rd1487, %rd1441;
	xor.b64  	%rd1508, %rd1503, %rd1441;
	xor.b64  	%rd1509, %rd1445, %rd1506;
	xor.b64  	%rd1510, %rd1507, %rd1446;
	xor.b64  	%rd1511, %rd1510, %rd1501;
	xor.b64  	%rd1512, %rd1501, %rd1443;
	and.b64  	%rd1513, %rd1489, 1085102592571150095;
	shl.b64 	%rd1514, %rd1513, 4;
	shr.u64 	%rd1515, %rd1489, 4;
	and.b64  	%rd1516, %rd1515, 1085102592571150095;
	or.b64  	%rd1517, %rd1516, %rd1514;
	and.b64  	%rd1518, %rd1501, 1085102592571150095;
	shl.b64 	%rd1519, %rd1518, 4;
	shr.u64 	%rd1520, %rd1501, 4;
	and.b64  	%rd1521, %rd1520, 1085102592571150095;
	or.b64  	%rd1522, %rd1521, %rd1519;
	and.b64  	%rd1523, %rd1491, 1085102592571150095;
	shl.b64 	%rd1524, %rd1523, 4;
	shr.u64 	%rd1525, %rd1491, 4;
	and.b64  	%rd1526, %rd1525, 1085102592571150095;
	or.b64  	%rd1527, %rd1526, %rd1524;
	and.b64  	%rd1528, %rd1503, 1085102592571150095;
	shl.b64 	%rd1529, %rd1528, 4;
	shr.u64 	%rd1530, %rd1503, 4;
	and.b64  	%rd1531, %rd1530, 1085102592571150095;
	or.b64  	%rd1532, %rd1531, %rd1529;
	and.b64  	%rd1533, %rd1494, 1085102592571150095;
	shl.b64 	%rd1534, %rd1533, 4;
	shr.u64 	%rd1535, %rd1494, 4;
	and.b64  	%rd1536, %rd1535, 1085102592571150095;
	or.b64  	%rd1537, %rd1536, %rd1534;
	and.b64  	%rd1538, %rd1506, 1085102592571150095;
	shl.b64 	%rd1539, %rd1538, 4;
	shr.u64 	%rd1540, %rd1506, 4;
	and.b64  	%rd1541, %rd1540, 1085102592571150095;
	or.b64  	%rd1542, %rd1541, %rd1539;
	and.b64  	%rd1543, %rd1495, 1085102592571150095;
	shl.b64 	%rd1544, %rd1543, 4;
	shr.u64 	%rd1545, %rd1495, 4;
	and.b64  	%rd1546, %rd1545, 1085102592571150095;
	or.b64  	%rd1547, %rd1546, %rd1544;
	and.b64  	%rd1548, %rd1507, 1085102592571150095;
	shl.b64 	%rd1549, %rd1548, 4;
	shr.u64 	%rd1550, %rd1507, 4;
	and.b64  	%rd1551, %rd1550, 1085102592571150095;
	or.b64  	%rd1552, %rd1551, %rd1549;
	not.b64 	%rd1553, %rd1500;
	not.b64 	%rd1554, %rd1499;
	and.b64  	%rd1555, %rd1554, 7665747714273314215;
	xor.b64  	%rd1556, %rd1496, %rd1555;
	and.b64  	%rd1557, %rd1556, %rd1497;
	xor.b64  	%rd1558, %rd1557, 7665747714273314215;
	and.b64  	%rd1559, %rd1499, %rd1553;
	xor.b64  	%rd1560, %rd1556, %rd1559;
	not.b64 	%rd1561, %rd1497;
	and.b64  	%rd1562, %rd1499, %rd1561;
	xor.b64  	%rd1563, %rd1562, %rd1553;
	and.b64  	%rd1564, %rd1560, %rd1499;
	xor.b64  	%rd1565, %rd1564, %rd1497;
	xor.b64  	%rd1566, %rd1562, %rd1500;
	and.b64  	%rd1567, %rd1560, %rd1566;
	xor.b64  	%rd1568, %rd1567, %rd1499;
	or.b64  	%rd1569, %rd1565, %rd1563;
	xor.b64  	%rd1570, %rd1569, %rd1560;
	and.b64  	%rd1571, %rd1565, %rd1568;
	xor.b64  	%rd1572, %rd1571, %rd1563;
	and.b64  	%rd1573, %rd1570, %rd1558;
	xor.b64  	%rd1574, %rd1573, %rd1565;
	xor.b64  	%rd1575, %rd1568, %rd1558;
	not.b64 	%rd1576, %rd1512;
	not.b64 	%rd1577, %rd1511;
	and.b64  	%rd1578, %rd1577, 2816923977231371147;
	xor.b64  	%rd1579, %rd1508, %rd1578;
	and.b64  	%rd1580, %rd1579, %rd1509;
	xor.b64  	%rd1581, %rd1580, 2816923977231371147;
	and.b64  	%rd1582, %rd1511, %rd1576;
	xor.b64  	%rd1583, %rd1579, %rd1582;
	not.b64 	%rd1584, %rd1509;
	and.b64  	%rd1585, %rd1511, %rd1584;
	xor.b64  	%rd1586, %rd1585, %rd1576;
	and.b64  	%rd1587, %rd1583, %rd1511;
	xor.b64  	%rd1588, %rd1587, %rd1509;
	xor.b64  	%rd1589, %rd1585, %rd1512;
	and.b64  	%rd1590, %rd1583, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1511;
	or.b64  	%rd1592, %rd1588, %rd1586;
	xor.b64  	%rd1593, %rd1592, %rd1583;
	and.b64  	%rd1594, %rd1588, %rd1591;
	xor.b64  	%rd1595, %rd1594, %rd1586;
	and.b64  	%rd1596, %rd1593, %rd1581;
	xor.b64  	%rd1597, %rd1596, %rd1588;
	xor.b64  	%rd1598, %rd1591, %rd1581;
	not.b64 	%rd1599, %rd1547;
	not.b64 	%rd1600, %rd1537;
	and.b64  	%rd1601, %rd1600, 4544273612546733127;
	xor.b64  	%rd1602, %rd1517, %rd1601;
	and.b64  	%rd1603, %rd1602, %rd1527;
	xor.b64  	%rd1604, %rd1603, 4544273612546733127;
	and.b64  	%rd1605, %rd1537, %rd1599;
	xor.b64  	%rd1606, %rd1602, %rd1605;
	not.b64 	%rd1607, %rd1527;
	and.b64  	%rd1608, %rd1537, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1599;
	and.b64  	%rd1610, %rd1606, %rd1537;
	xor.b64  	%rd1611, %rd1610, %rd1527;
	xor.b64  	%rd1612, %rd1608, %rd1547;
	and.b64  	%rd1613, %rd1606, %rd1612;
	xor.b64  	%rd1614, %rd1613, %rd1537;
	or.b64  	%rd1615, %rd1611, %rd1609;
	xor.b64  	%rd1616, %rd1615, %rd1606;
	and.b64  	%rd1617, %rd1611, %rd1614;
	xor.b64  	%rd1618, %rd1617, %rd1609;
	and.b64  	%rd1619, %rd1616, %rd1604;
	not.b64 	%rd1620, %rd1552;
	not.b64 	%rd1621, %rd1542;
	and.b64  	%rd1622, %rd1621, 8883489655727497440;
	xor.b64  	%rd1623, %rd1522, %rd1622;
	and.b64  	%rd1624, %rd1623, %rd1532;
	xor.b64  	%rd1625, %rd1624, 8883489655727497440;
	and.b64  	%rd1626, %rd1542, %rd1620;
	xor.b64  	%rd1627, %rd1623, %rd1626;
	not.b64 	%rd1628, %rd1532;
	and.b64  	%rd1629, %rd1542, %rd1628;
	xor.b64  	%rd1630, %rd1629, %rd1620;
	and.b64  	%rd1631, %rd1627, %rd1542;
	xor.b64  	%rd1632, %rd1631, %rd1532;
	xor.b64  	%rd1633, %rd1629, %rd1552;
	and.b64  	%rd1634, %rd1627, %rd1633;
	xor.b64  	%rd1635, %rd1634, %rd1542;
	or.b64  	%rd1636, %rd1632, %rd1630;
	xor.b64  	%rd1637, %rd1636, %rd1627;
	and.b64  	%rd1638, %rd1632, %rd1635;
	xor.b64  	%rd1639, %rd1638, %rd1630;
	and.b64  	%rd1640, %rd1637, %rd1625;
	xor.b64  	%rd1641, %rd1574, %rd1616;
	xor.b64  	%rd1642, %rd1575, %rd1611;
	xor.b64  	%rd1643, %rd1642, %rd1619;
	xor.b64  	%rd1644, %rd1614, %rd1604;
	xor.b64  	%rd1645, %rd1644, %rd1570;
	xor.b64  	%rd1646, %rd1645, %rd1572;
	xor.b64  	%rd1647, %rd1618, %rd1570;
	xor.b64  	%rd1648, %rd1643, %rd1570;
	xor.b64  	%rd1649, %rd1574, %rd1646;
	xor.b64  	%rd1650, %rd1647, %rd1575;
	xor.b64  	%rd1651, %rd1650, %rd1641;
	xor.b64  	%rd1652, %rd1641, %rd1572;
	xor.b64  	%rd1653, %rd1597, %rd1637;
	xor.b64  	%rd1654, %rd1598, %rd1632;
	xor.b64  	%rd1655, %rd1654, %rd1640;
	xor.b64  	%rd1656, %rd1635, %rd1625;
	xor.b64  	%rd1657, %rd1656, %rd1593;
	xor.b64  	%rd1658, %rd1657, %rd1595;
	xor.b64  	%rd1659, %rd1639, %rd1593;
	xor.b64  	%rd1660, %rd1655, %rd1593;
	xor.b64  	%rd1661, %rd1597, %rd1658;
	xor.b64  	%rd1662, %rd1659, %rd1598;
	xor.b64  	%rd1663, %rd1662, %rd1653;
	xor.b64  	%rd1664, %rd1653, %rd1595;
	and.b64  	%rd1665, %rd1641, 71777214294589695;
	shl.b64 	%rd1666, %rd1665, 8;
	shr.u64 	%rd1667, %rd1641, 8;
	and.b64  	%rd1668, %rd1667, 71777214294589695;
	or.b64  	%rd1669, %rd1668, %rd1666;
	and.b64  	%rd1670, %rd1653, 71777214294589695;
	shl.b64 	%rd1671, %rd1670, 8;
	shr.u64 	%rd1672, %rd1653, 8;
	and.b64  	%rd1673, %rd1672, 71777214294589695;
	or.b64  	%rd1674, %rd1673, %rd1671;
	and.b64  	%rd1675, %rd1643, 71777214294589695;
	shl.b64 	%rd1676, %rd1675, 8;
	shr.u64 	%rd1677, %rd1643, 8;
	and.b64  	%rd1678, %rd1677, 71777214294589695;
	or.b64  	%rd1679, %rd1678, %rd1676;
	and.b64  	%rd1680, %rd1655, 71777214294589695;
	shl.b64 	%rd1681, %rd1680, 8;
	shr.u64 	%rd1682, %rd1655, 8;
	and.b64  	%rd1683, %rd1682, 71777214294589695;
	or.b64  	%rd1684, %rd1683, %rd1681;
	and.b64  	%rd1685, %rd1646, 71777214294589695;
	shl.b64 	%rd1686, %rd1685, 8;
	shr.u64 	%rd1687, %rd1646, 8;
	and.b64  	%rd1688, %rd1687, 71777214294589695;
	or.b64  	%rd1689, %rd1688, %rd1686;
	and.b64  	%rd1690, %rd1658, 71777214294589695;
	shl.b64 	%rd1691, %rd1690, 8;
	shr.u64 	%rd1692, %rd1658, 8;
	and.b64  	%rd1693, %rd1692, 71777214294589695;
	or.b64  	%rd1694, %rd1693, %rd1691;
	and.b64  	%rd1695, %rd1647, 71777214294589695;
	shl.b64 	%rd1696, %rd1695, 8;
	shr.u64 	%rd1697, %rd1647, 8;
	and.b64  	%rd1698, %rd1697, 71777214294589695;
	or.b64  	%rd1699, %rd1698, %rd1696;
	and.b64  	%rd1700, %rd1659, 71777214294589695;
	shl.b64 	%rd1701, %rd1700, 8;
	shr.u64 	%rd1702, %rd1659, 8;
	and.b64  	%rd1703, %rd1702, 71777214294589695;
	or.b64  	%rd1704, %rd1703, %rd1701;
	not.b64 	%rd1705, %rd1652;
	not.b64 	%rd1706, %rd1651;
	and.b64  	%rd1707, %rd1706, -4565251122766654195;
	xor.b64  	%rd1708, %rd1648, %rd1707;
	and.b64  	%rd1709, %rd1708, %rd1649;
	xor.b64  	%rd1710, %rd1709, -4565251122766654195;
	and.b64  	%rd1711, %rd1651, %rd1705;
	xor.b64  	%rd1712, %rd1708, %rd1711;
	not.b64 	%rd1713, %rd1649;
	and.b64  	%rd1714, %rd1651, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1705;
	and.b64  	%rd1716, %rd1712, %rd1651;
	xor.b64  	%rd1717, %rd1716, %rd1649;
	xor.b64  	%rd1718, %rd1714, %rd1652;
	and.b64  	%rd1719, %rd1712, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1651;
	or.b64  	%rd1721, %rd1717, %rd1715;
	xor.b64  	%rd1722, %rd1721, %rd1712;
	and.b64  	%rd1723, %rd1717, %rd1720;
	xor.b64  	%rd1724, %rd1723, %rd1715;
	and.b64  	%rd1725, %rd1722, %rd1710;
	xor.b64  	%rd1726, %rd1725, %rd1717;
	xor.b64  	%rd1727, %rd1720, %rd1710;
	not.b64 	%rd1728, %rd1664;
	not.b64 	%rd1729, %rd1663;
	and.b64  	%rd1730, %rd1729, -6993651964455689327;
	xor.b64  	%rd1731, %rd1660, %rd1730;
	and.b64  	%rd1732, %rd1731, %rd1661;
	xor.b64  	%rd1733, %rd1732, -6993651964455689327;
	and.b64  	%rd1734, %rd1663, %rd1728;
	xor.b64  	%rd1735, %rd1731, %rd1734;
	not.b64 	%rd1736, %rd1661;
	and.b64  	%rd1737, %rd1663, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1728;
	and.b64  	%rd1739, %rd1735, %rd1663;
	xor.b64  	%rd1740, %rd1739, %rd1661;
	xor.b64  	%rd1741, %rd1737, %rd1664;
	and.b64  	%rd1742, %rd1735, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1663;
	or.b64  	%rd1744, %rd1740, %rd1738;
	xor.b64  	%rd1745, %rd1744, %rd1735;
	and.b64  	%rd1746, %rd1740, %rd1743;
	xor.b64  	%rd1747, %rd1746, %rd1738;
	and.b64  	%rd1748, %rd1745, %rd1733;
	xor.b64  	%rd1749, %rd1748, %rd1740;
	xor.b64  	%rd1750, %rd1743, %rd1733;
	not.b64 	%rd1751, %rd1699;
	not.b64 	%rd1752, %rd1689;
	and.b64  	%rd1753, %rd1752, -3130740267067214202;
	xor.b64  	%rd1754, %rd1669, %rd1753;
	and.b64  	%rd1755, %rd1754, %rd1679;
	xor.b64  	%rd1756, %rd1755, -3130740267067214202;
	and.b64  	%rd1757, %rd1689, %rd1751;
	xor.b64  	%rd1758, %rd1754, %rd1757;
	not.b64 	%rd1759, %rd1679;
	and.b64  	%rd1760, %rd1689, %rd1759;
	xor.b64  	%rd1761, %rd1760, %rd1751;
	and.b64  	%rd1762, %rd1758, %rd1689;
	xor.b64  	%rd1763, %rd1762, %rd1679;
	xor.b64  	%rd1764, %rd1760, %rd1699;
	and.b64  	%rd1765, %rd1758, %rd1764;
	xor.b64  	%rd1766, %rd1765, %rd1689;
	or.b64  	%rd1767, %rd1763, %rd1761;
	xor.b64  	%rd1768, %rd1767, %rd1758;
	and.b64  	%rd1769, %rd1763, %rd1766;
	xor.b64  	%rd1770, %rd1769, %rd1761;
	and.b64  	%rd1771, %rd1768, %rd1756;
	not.b64 	%rd1772, %rd1704;
	not.b64 	%rd1773, %rd1694;
	and.b64  	%rd1774, %rd1773, 7111436644554284670;
	xor.b64  	%rd1775, %rd1674, %rd1774;
	and.b64  	%rd1776, %rd1775, %rd1684;
	xor.b64  	%rd1777, %rd1776, 7111436644554284670;
	and.b64  	%rd1778, %rd1694, %rd1772;
	xor.b64  	%rd1779, %rd1775, %rd1778;
	not.b64 	%rd1780, %rd1684;
	and.b64  	%rd1781, %rd1694, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1772;
	and.b64  	%rd1783, %rd1779, %rd1694;
	xor.b64  	%rd1784, %rd1783, %rd1684;
	xor.b64  	%rd1785, %rd1781, %rd1704;
	and.b64  	%rd1786, %rd1779, %rd1785;
	xor.b64  	%rd1787, %rd1786, %rd1694;
	or.b64  	%rd1788, %rd1784, %rd1782;
	xor.b64  	%rd1789, %rd1788, %rd1779;
	and.b64  	%rd1790, %rd1784, %rd1787;
	xor.b64  	%rd1791, %rd1790, %rd1782;
	and.b64  	%rd1792, %rd1789, %rd1777;
	xor.b64  	%rd1793, %rd1726, %rd1768;
	xor.b64  	%rd1794, %rd1727, %rd1763;
	xor.b64  	%rd1795, %rd1794, %rd1771;
	xor.b64  	%rd1796, %rd1766, %rd1756;
	xor.b64  	%rd1797, %rd1796, %rd1722;
	xor.b64  	%rd1798, %rd1797, %rd1724;
	xor.b64  	%rd1799, %rd1770, %rd1722;
	xor.b64  	%rd1800, %rd1795, %rd1722;
	xor.b64  	%rd1801, %rd1726, %rd1798;
	xor.b64  	%rd1802, %rd1799, %rd1727;
	xor.b64  	%rd1803, %rd1802, %rd1793;
	xor.b64  	%rd1804, %rd1793, %rd1724;
	xor.b64  	%rd1805, %rd1749, %rd1789;
	xor.b64  	%rd1806, %rd1750, %rd1784;
	xor.b64  	%rd1807, %rd1806, %rd1792;
	xor.b64  	%rd1808, %rd1787, %rd1777;
	xor.b64  	%rd1809, %rd1808, %rd1745;
	xor.b64  	%rd1810, %rd1809, %rd1747;
	xor.b64  	%rd1811, %rd1791, %rd1745;
	xor.b64  	%rd1812, %rd1807, %rd1745;
	xor.b64  	%rd1813, %rd1749, %rd1810;
	xor.b64  	%rd1814, %rd1811, %rd1750;
	xor.b64  	%rd1815, %rd1814, %rd1805;
	xor.b64  	%rd1816, %rd1805, %rd1747;
	and.b64  	%rd1817, %rd1793, 281470681808895;
	shl.b64 	%rd1818, %rd1817, 16;
	shr.u64 	%rd1819, %rd1793, 16;
	and.b64  	%rd1820, %rd1819, 281470681808895;
	or.b64  	%rd1821, %rd1820, %rd1818;
	and.b64  	%rd1822, %rd1805, 281470681808895;
	shl.b64 	%rd1823, %rd1822, 16;
	shr.u64 	%rd1824, %rd1805, 16;
	and.b64  	%rd1825, %rd1824, 281470681808895;
	or.b64  	%rd1826, %rd1825, %rd1823;
	and.b64  	%rd1827, %rd1795, 281470681808895;
	shl.b64 	%rd1828, %rd1827, 16;
	shr.u64 	%rd1829, %rd1795, 16;
	and.b64  	%rd1830, %rd1829, 281470681808895;
	or.b64  	%rd1831, %rd1830, %rd1828;
	and.b64  	%rd1832, %rd1807, 281470681808895;
	shl.b64 	%rd1833, %rd1832, 16;
	shr.u64 	%rd1834, %rd1807, 16;
	and.b64  	%rd1835, %rd1834, 281470681808895;
	or.b64  	%rd1836, %rd1835, %rd1833;
	and.b64  	%rd1837, %rd1798, 281470681808895;
	shl.b64 	%rd1838, %rd1837, 16;
	shr.u64 	%rd1839, %rd1798, 16;
	and.b64  	%rd1840, %rd1839, 281470681808895;
	or.b64  	%rd1841, %rd1840, %rd1838;
	and.b64  	%rd1842, %rd1810, 281470681808895;
	shl.b64 	%rd1843, %rd1842, 16;
	shr.u64 	%rd1844, %rd1810, 16;
	and.b64  	%rd1845, %rd1844, 281470681808895;
	or.b64  	%rd1846, %rd1845, %rd1843;
	and.b64  	%rd1847, %rd1799, 281470681808895;
	shl.b64 	%rd1848, %rd1847, 16;
	shr.u64 	%rd1849, %rd1799, 16;
	and.b64  	%rd1850, %rd1849, 281470681808895;
	or.b64  	%rd1851, %rd1850, %rd1848;
	and.b64  	%rd1852, %rd1811, 281470681808895;
	shl.b64 	%rd1853, %rd1852, 16;
	shr.u64 	%rd1854, %rd1811, 16;
	and.b64  	%rd1855, %rd1854, 281470681808895;
	or.b64  	%rd1856, %rd1855, %rd1853;
	not.b64 	%rd1857, %rd1804;
	not.b64 	%rd1858, %rd1803;
	and.b64  	%rd1859, %rd1858, 8800126309698084860;
	xor.b64  	%rd1860, %rd1800, %rd1859;
	and.b64  	%rd1861, %rd1860, %rd1801;
	xor.b64  	%rd1862, %rd1861, 8800126309698084860;
	and.b64  	%rd1863, %rd1803, %rd1857;
	xor.b64  	%rd1864, %rd1860, %rd1863;
	not.b64 	%rd1865, %rd1801;
	and.b64  	%rd1866, %rd1803, %rd1865;
	xor.b64  	%rd1867, %rd1866, %rd1857;
	and.b64  	%rd1868, %rd1864, %rd1803;
	xor.b64  	%rd1869, %rd1868, %rd1801;
	xor.b64  	%rd1870, %rd1866, %rd1804;
	and.b64  	%rd1871, %rd1864, %rd1870;
	xor.b64  	%rd1872, %rd1871, %rd1803;
	or.b64  	%rd1873, %rd1869, %rd1867;
	xor.b64  	%rd1874, %rd1873, %rd1864;
	and.b64  	%rd1875, %rd1869, %rd1872;
	xor.b64  	%rd1876, %rd1875, %rd1867;
	and.b64  	%rd1877, %rd1874, %rd1862;
	xor.b64  	%rd1878, %rd1877, %rd1869;
	xor.b64  	%rd1879, %rd1872, %rd1862;
	not.b64 	%rd1880, %rd1816;
	not.b64 	%rd1881, %rd1815;
	and.b64  	%rd1882, %rd1881, -8878296024782019357;
	xor.b64  	%rd1883, %rd1812, %rd1882;
	and.b64  	%rd1884, %rd1883, %rd1813;
	xor.b64  	%rd1885, %rd1884, -8878296024782019357;
	and.b64  	%rd1886, %rd1815, %rd1880;
	xor.b64  	%rd1887, %rd1883, %rd1886;
	not.b64 	%rd1888, %rd1813;
	and.b64  	%rd1889, %rd1815, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1880;
	and.b64  	%rd1891, %rd1887, %rd1815;
	xor.b64  	%rd1892, %rd1891, %rd1813;
	xor.b64  	%rd1893, %rd1889, %rd1816;
	and.b64  	%rd1894, %rd1887, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1815;
	or.b64  	%rd1896, %rd1892, %rd1890;
	xor.b64  	%rd1897, %rd1896, %rd1887;
	and.b64  	%rd1898, %rd1892, %rd1895;
	xor.b64  	%rd1899, %rd1898, %rd1890;
	and.b64  	%rd1900, %rd1897, %rd1885;
	xor.b64  	%rd1901, %rd1900, %rd1892;
	xor.b64  	%rd1902, %rd1895, %rd1885;
	not.b64 	%rd1903, %rd1851;
	not.b64 	%rd1904, %rd1841;
	and.b64  	%rd1905, %rd1904, -2840088433650247857;
	xor.b64  	%rd1906, %rd1821, %rd1905;
	and.b64  	%rd1907, %rd1906, %rd1831;
	xor.b64  	%rd1908, %rd1907, -2840088433650247857;
	and.b64  	%rd1909, %rd1841, %rd1903;
	xor.b64  	%rd1910, %rd1906, %rd1909;
	not.b64 	%rd1911, %rd1831;
	and.b64  	%rd1912, %rd1841, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1903;
	and.b64  	%rd1914, %rd1910, %rd1841;
	xor.b64  	%rd1915, %rd1914, %rd1831;
	xor.b64  	%rd1916, %rd1912, %rd1851;
	and.b64  	%rd1917, %rd1910, %rd1916;
	xor.b64  	%rd1918, %rd1917, %rd1841;
	or.b64  	%rd1919, %rd1915, %rd1913;
	xor.b64  	%rd1920, %rd1919, %rd1910;
	and.b64  	%rd1921, %rd1915, %rd1918;
	xor.b64  	%rd1922, %rd1921, %rd1913;
	and.b64  	%rd1923, %rd1920, %rd1908;
	not.b64 	%rd1924, %rd1856;
	not.b64 	%rd1925, %rd1846;
	and.b64  	%rd1926, %rd1925, -6533382599728026027;
	xor.b64  	%rd1927, %rd1826, %rd1926;
	and.b64  	%rd1928, %rd1927, %rd1836;
	xor.b64  	%rd1929, %rd1928, -6533382599728026027;
	and.b64  	%rd1930, %rd1846, %rd1924;
	xor.b64  	%rd1931, %rd1927, %rd1930;
	not.b64 	%rd1932, %rd1836;
	and.b64  	%rd1933, %rd1846, %rd1932;
	xor.b64  	%rd1934, %rd1933, %rd1924;
	and.b64  	%rd1935, %rd1931, %rd1846;
	xor.b64  	%rd1936, %rd1935, %rd1836;
	xor.b64  	%rd1937, %rd1933, %rd1856;
	and.b64  	%rd1938, %rd1931, %rd1937;
	xor.b64  	%rd1939, %rd1938, %rd1846;
	or.b64  	%rd1940, %rd1936, %rd1934;
	xor.b64  	%rd1941, %rd1940, %rd1931;
	and.b64  	%rd1942, %rd1936, %rd1939;
	xor.b64  	%rd1943, %rd1942, %rd1934;
	and.b64  	%rd1944, %rd1941, %rd1929;
	xor.b64  	%rd1945, %rd1878, %rd1920;
	xor.b64  	%rd1946, %rd1879, %rd1915;
	xor.b64  	%rd1947, %rd1946, %rd1923;
	xor.b64  	%rd1948, %rd1918, %rd1908;
	xor.b64  	%rd1949, %rd1948, %rd1874;
	xor.b64  	%rd1950, %rd1949, %rd1876;
	xor.b64  	%rd1951, %rd1922, %rd1874;
	xor.b64  	%rd1952, %rd1947, %rd1874;
	xor.b64  	%rd1953, %rd1878, %rd1950;
	xor.b64  	%rd1954, %rd1951, %rd1879;
	xor.b64  	%rd1955, %rd1954, %rd1945;
	xor.b64  	%rd1956, %rd1945, %rd1876;
	xor.b64  	%rd1957, %rd1901, %rd1941;
	xor.b64  	%rd1958, %rd1902, %rd1936;
	xor.b64  	%rd1959, %rd1958, %rd1944;
	xor.b64  	%rd1960, %rd1939, %rd1929;
	xor.b64  	%rd1961, %rd1960, %rd1897;
	xor.b64  	%rd1962, %rd1961, %rd1899;
	xor.b64  	%rd1963, %rd1943, %rd1897;
	xor.b64  	%rd1964, %rd1959, %rd1897;
	xor.b64  	%rd1965, %rd1901, %rd1962;
	xor.b64  	%rd1966, %rd1963, %rd1902;
	xor.b64  	%rd1967, %rd1966, %rd1957;
	xor.b64  	%rd1968, %rd1957, %rd1899;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1945, 32;
	shr.b64 	%rhs, %rd1945, 32;
	add.u64 	%rd1969, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1957, 32;
	shr.b64 	%rhs, %rd1957, 32;
	add.u64 	%rd1970, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1947, 32;
	shr.b64 	%rhs, %rd1947, 32;
	add.u64 	%rd1971, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1959, 32;
	shr.b64 	%rhs, %rd1959, 32;
	add.u64 	%rd1972, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1950, 32;
	shr.b64 	%rhs, %rd1950, 32;
	add.u64 	%rd1973, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1962, 32;
	shr.b64 	%rhs, %rd1962, 32;
	add.u64 	%rd1974, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1951, 32;
	shr.b64 	%rhs, %rd1951, 32;
	add.u64 	%rd1975, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd1963, 32;
	shr.b64 	%rhs, %rd1963, 32;
	add.u64 	%rd1976, %lhs, %rhs;
	}
	not.b64 	%rd1977, %rd1956;
	not.b64 	%rd1978, %rd1955;
	and.b64  	%rd1979, %rd1978, 2913546097336180571;
	xor.b64  	%rd1980, %rd1952, %rd1979;
	and.b64  	%rd1981, %rd1980, %rd1953;
	xor.b64  	%rd1982, %rd1981, 2913546097336180571;
	and.b64  	%rd1983, %rd1955, %rd1977;
	xor.b64  	%rd1984, %rd1980, %rd1983;
	not.b64 	%rd1985, %rd1953;
	and.b64  	%rd1986, %rd1955, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd1977;
	and.b64  	%rd1988, %rd1984, %rd1955;
	xor.b64  	%rd1989, %rd1988, %rd1953;
	xor.b64  	%rd1990, %rd1986, %rd1956;
	and.b64  	%rd1991, %rd1984, %rd1990;
	xor.b64  	%rd1992, %rd1991, %rd1955;
	or.b64  	%rd1993, %rd1989, %rd1987;
	xor.b64  	%rd1994, %rd1993, %rd1984;
	and.b64  	%rd1995, %rd1989, %rd1992;
	xor.b64  	%rd1996, %rd1995, %rd1987;
	and.b64  	%rd1997, %rd1994, %rd1982;
	xor.b64  	%rd1998, %rd1997, %rd1989;
	xor.b64  	%rd1999, %rd1992, %rd1982;
	not.b64 	%rd2000, %rd1968;
	not.b64 	%rd2001, %rd1967;
	and.b64  	%rd2002, %rd2001, -5565141751879961224;
	xor.b64  	%rd2003, %rd1964, %rd2002;
	and.b64  	%rd2004, %rd2003, %rd1965;
	xor.b64  	%rd2005, %rd2004, -5565141751879961224;
	and.b64  	%rd2006, %rd1967, %rd2000;
	xor.b64  	%rd2007, %rd2003, %rd2006;
	not.b64 	%rd2008, %rd1965;
	and.b64  	%rd2009, %rd1967, %rd2008;
	xor.b64  	%rd2010, %rd2009, %rd2000;
	and.b64  	%rd2011, %rd2007, %rd1967;
	xor.b64  	%rd2012, %rd2011, %rd1965;
	xor.b64  	%rd2013, %rd2009, %rd1968;
	and.b64  	%rd2014, %rd2007, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1967;
	or.b64  	%rd2016, %rd2012, %rd2010;
	xor.b64  	%rd2017, %rd2016, %rd2007;
	and.b64  	%rd2018, %rd2012, %rd2015;
	xor.b64  	%rd2019, %rd2018, %rd2010;
	and.b64  	%rd2020, %rd2017, %rd2005;
	xor.b64  	%rd2021, %rd2020, %rd2012;
	xor.b64  	%rd2022, %rd2015, %rd2005;
	not.b64 	%rd2023, %rd1975;
	not.b64 	%rd2024, %rd1973;
	and.b64  	%rd2025, %rd2024, 3374121836399593733;
	xor.b64  	%rd2026, %rd1969, %rd2025;
	and.b64  	%rd2027, %rd2026, %rd1971;
	xor.b64  	%rd2028, %rd2027, 3374121836399593733;
	and.b64  	%rd2029, %rd1973, %rd2023;
	xor.b64  	%rd2030, %rd2026, %rd2029;
	not.b64 	%rd2031, %rd1971;
	and.b64  	%rd2032, %rd1973, %rd2031;
	xor.b64  	%rd2033, %rd2032, %rd2023;
	and.b64  	%rd2034, %rd2030, %rd1973;
	xor.b64  	%rd2035, %rd2034, %rd1971;
	xor.b64  	%rd2036, %rd2032, %rd1975;
	and.b64  	%rd2037, %rd2030, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1973;
	or.b64  	%rd2039, %rd2035, %rd2033;
	xor.b64  	%rd2040, %rd2039, %rd2030;
	and.b64  	%rd2041, %rd2035, %rd2038;
	xor.b64  	%rd2042, %rd2041, %rd2033;
	and.b64  	%rd2043, %rd2040, %rd2028;
	not.b64 	%rd2044, %rd1976;
	not.b64 	%rd2045, %rd1974;
	and.b64  	%rd2046, %rd2045, 9176410707767557700;
	xor.b64  	%rd2047, %rd1970, %rd2046;
	and.b64  	%rd2048, %rd2047, %rd1972;
	xor.b64  	%rd2049, %rd2048, 9176410707767557700;
	and.b64  	%rd2050, %rd1974, %rd2044;
	xor.b64  	%rd2051, %rd2047, %rd2050;
	not.b64 	%rd2052, %rd1972;
	and.b64  	%rd2053, %rd1974, %rd2052;
	xor.b64  	%rd2054, %rd2053, %rd2044;
	and.b64  	%rd2055, %rd2051, %rd1974;
	xor.b64  	%rd2056, %rd2055, %rd1972;
	xor.b64  	%rd2057, %rd2053, %rd1976;
	and.b64  	%rd2058, %rd2051, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd1974;
	or.b64  	%rd2060, %rd2056, %rd2054;
	xor.b64  	%rd2061, %rd2060, %rd2051;
	and.b64  	%rd2062, %rd2056, %rd2059;
	xor.b64  	%rd2063, %rd2062, %rd2054;
	and.b64  	%rd2064, %rd2061, %rd2049;
	xor.b64  	%rd2065, %rd1998, %rd2040;
	xor.b64  	%rd2066, %rd1999, %rd2035;
	xor.b64  	%rd2067, %rd2066, %rd2043;
	xor.b64  	%rd2068, %rd2038, %rd2028;
	xor.b64  	%rd2069, %rd2068, %rd1994;
	xor.b64  	%rd2070, %rd2069, %rd1996;
	xor.b64  	%rd2071, %rd2042, %rd1994;
	xor.b64  	%rd2072, %rd2067, %rd1994;
	xor.b64  	%rd2073, %rd1998, %rd2070;
	xor.b64  	%rd2074, %rd2071, %rd1999;
	xor.b64  	%rd2075, %rd2074, %rd2065;
	xor.b64  	%rd2076, %rd2065, %rd1996;
	xor.b64  	%rd2077, %rd2021, %rd2061;
	xor.b64  	%rd2078, %rd2022, %rd2056;
	xor.b64  	%rd2079, %rd2078, %rd2064;
	xor.b64  	%rd2080, %rd2059, %rd2049;
	xor.b64  	%rd2081, %rd2080, %rd2017;
	xor.b64  	%rd2082, %rd2081, %rd2019;
	xor.b64  	%rd2083, %rd2063, %rd2017;
	xor.b64  	%rd2084, %rd2079, %rd2017;
	xor.b64  	%rd2085, %rd2021, %rd2082;
	xor.b64  	%rd2086, %rd2083, %rd2022;
	xor.b64  	%rd2087, %rd2086, %rd2077;
	xor.b64  	%rd2088, %rd2077, %rd2019;
	not.b64 	%rd2089, %rd2076;
	not.b64 	%rd2090, %rd2075;
	and.b64  	%rd2091, %rd2090, 5346094584812887920;
	xor.b64  	%rd2092, %rd2072, %rd2091;
	and.b64  	%rd2093, %rd2092, %rd2073;
	xor.b64  	%rd2094, %rd2093, 5346094584812887920;
	and.b64  	%rd2095, %rd2075, %rd2089;
	xor.b64  	%rd2096, %rd2092, %rd2095;
	not.b64 	%rd2097, %rd2073;
	and.b64  	%rd2098, %rd2075, %rd2097;
	xor.b64  	%rd2099, %rd2098, %rd2089;
	and.b64  	%rd2100, %rd2096, %rd2075;
	xor.b64  	%rd2101, %rd2100, %rd2073;
	xor.b64  	%rd2102, %rd2098, %rd2076;
	and.b64  	%rd2103, %rd2096, %rd2102;
	xor.b64  	%rd2104, %rd2103, %rd2075;
	or.b64  	%rd2105, %rd2101, %rd2099;
	xor.b64  	%rd2106, %rd2105, %rd2096;
	and.b64  	%rd2107, %rd2101, %rd2104;
	xor.b64  	%rd2108, %rd2107, %rd2099;
	and.b64  	%rd2109, %rd2106, %rd2094;
	xor.b64  	%rd2110, %rd2109, %rd2101;
	xor.b64  	%rd2111, %rd2104, %rd2094;
	not.b64 	%rd2112, %rd2088;
	not.b64 	%rd2113, %rd2087;
	and.b64  	%rd2114, %rd2113, 7342228716609111646;
	xor.b64  	%rd2115, %rd2084, %rd2114;
	and.b64  	%rd2116, %rd2115, %rd2085;
	xor.b64  	%rd2117, %rd2116, 7342228716609111646;
	and.b64  	%rd2118, %rd2087, %rd2112;
	xor.b64  	%rd2119, %rd2115, %rd2118;
	not.b64 	%rd2120, %rd2085;
	and.b64  	%rd2121, %rd2087, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2112;
	and.b64  	%rd2123, %rd2119, %rd2087;
	xor.b64  	%rd2124, %rd2123, %rd2085;
	xor.b64  	%rd2125, %rd2121, %rd2088;
	and.b64  	%rd2126, %rd2119, %rd2125;
	xor.b64  	%rd2127, %rd2126, %rd2087;
	or.b64  	%rd2128, %rd2124, %rd2122;
	xor.b64  	%rd2129, %rd2128, %rd2119;
	and.b64  	%rd2130, %rd2124, %rd2127;
	xor.b64  	%rd2131, %rd2130, %rd2122;
	and.b64  	%rd2132, %rd2129, %rd2117;
	xor.b64  	%rd2133, %rd2132, %rd2124;
	xor.b64  	%rd2134, %rd2127, %rd2117;
	not.b64 	%rd2135, %rd2083;
	not.b64 	%rd2136, %rd2082;
	and.b64  	%rd2137, %rd2136, -1792228894075053113;
	xor.b64  	%rd2138, %rd2077, %rd2137;
	and.b64  	%rd2139, %rd2138, %rd2079;
	xor.b64  	%rd2140, %rd2139, -1792228894075053113;
	and.b64  	%rd2141, %rd2082, %rd2135;
	xor.b64  	%rd2142, %rd2138, %rd2141;
	not.b64 	%rd2143, %rd2079;
	and.b64  	%rd2144, %rd2082, %rd2143;
	xor.b64  	%rd2145, %rd2144, %rd2135;
	and.b64  	%rd2146, %rd2142, %rd2082;
	xor.b64  	%rd2147, %rd2146, %rd2079;
	xor.b64  	%rd2148, %rd2144, %rd2083;
	and.b64  	%rd2149, %rd2142, %rd2148;
	xor.b64  	%rd2150, %rd2149, %rd2082;
	or.b64  	%rd2151, %rd2147, %rd2145;
	xor.b64  	%rd2152, %rd2151, %rd2142;
	and.b64  	%rd2153, %rd2147, %rd2150;
	xor.b64  	%rd2154, %rd2153, %rd2145;
	and.b64  	%rd2155, %rd2152, %rd2140;
	xor.b64  	%rd2156, %rd2155, %rd2147;
	not.b64 	%rd2157, %rd2071;
	not.b64 	%rd2158, %rd2070;
	and.b64  	%rd2159, %rd2158, -8464563723933843852;
	xor.b64  	%rd2160, %rd2065, %rd2159;
	and.b64  	%rd2161, %rd2160, %rd2067;
	xor.b64  	%rd2162, %rd2161, -8464563723933843852;
	and.b64  	%rd2163, %rd2070, %rd2157;
	xor.b64  	%rd2164, %rd2160, %rd2163;
	not.b64 	%rd2165, %rd2067;
	and.b64  	%rd2166, %rd2070, %rd2165;
	xor.b64  	%rd2167, %rd2166, %rd2157;
	and.b64  	%rd2168, %rd2164, %rd2070;
	xor.b64  	%rd2169, %rd2168, %rd2067;
	xor.b64  	%rd2170, %rd2166, %rd2071;
	and.b64  	%rd2171, %rd2164, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd2070;
	or.b64  	%rd2173, %rd2169, %rd2167;
	xor.b64  	%rd2174, %rd2173, %rd2164;
	and.b64  	%rd2175, %rd2169, %rd2172;
	xor.b64  	%rd2176, %rd2175, %rd2167;
	and.b64  	%rd2177, %rd2174, %rd2162;
	xor.b64  	%rd2178, %rd2110, %rd2152;
	xor.b64  	%rd2179, %rd2156, %rd2111;
	xor.b64  	%rd2180, %rd2150, %rd2140;
	xor.b64  	%rd2181, %rd2180, %rd2106;
	xor.b64  	%rd2182, %rd2181, %rd2108;
	xor.b64  	%rd2183, %rd2154, %rd2106;
	xor.b64  	%rd2184, %rd2106, %rd2179;
	xor.b64  	%rd2185, %rd2110, %rd2182;
	xor.b64  	%rd2186, %rd2183, %rd2111;
	xor.b64  	%rd2187, %rd2186, %rd2178;
	xor.b64  	%rd2188, %rd2178, %rd2108;
	xor.b64  	%rd2189, %rd2133, %rd2174;
	xor.b64  	%rd2190, %rd2134, %rd2169;
	xor.b64  	%rd2191, %rd2190, %rd2177;
	xor.b64  	%rd2192, %rd2172, %rd2162;
	xor.b64  	%rd2193, %rd2192, %rd2129;
	xor.b64  	%rd2194, %rd2193, %rd2131;
	xor.b64  	%rd2195, %rd2176, %rd2129;
	xor.b64  	%rd2196, %rd2191, %rd2129;
	xor.b64  	%rd2197, %rd2133, %rd2194;
	xor.b64  	%rd2198, %rd2195, %rd2134;
	xor.b64  	%rd2199, %rd2198, %rd2189;
	xor.b64  	%rd2200, %rd2189, %rd2131;
	and.b64  	%rd2201, %rd2178, 6148914691236517205;
	shl.b64 	%rd2202, %rd2201, 1;
	shr.u64 	%rd2203, %rd2178, 1;
	and.b64  	%rd2204, %rd2203, 6148914691236517205;
	or.b64  	%rd2205, %rd2204, %rd2202;
	and.b64  	%rd2206, %rd2189, 6148914691236517205;
	shl.b64 	%rd2207, %rd2206, 1;
	shr.u64 	%rd2208, %rd2189, 1;
	and.b64  	%rd2209, %rd2208, 6148914691236517205;
	or.b64  	%rd2210, %rd2209, %rd2207;
	and.b64  	%rd2211, %rd2179, 6148914691236517205;
	shl.b64 	%rd2212, %rd2211, 1;
	shr.u64 	%rd2213, %rd2179, 1;
	and.b64  	%rd2214, %rd2213, 6148914691236517205;
	or.b64  	%rd2215, %rd2214, %rd2212;
	and.b64  	%rd2216, %rd2191, 6148914691236517205;
	shl.b64 	%rd2217, %rd2216, 1;
	shr.u64 	%rd2218, %rd2191, 1;
	and.b64  	%rd2219, %rd2218, 6148914691236517205;
	or.b64  	%rd2220, %rd2219, %rd2217;
	and.b64  	%rd2221, %rd2182, 6148914691236517205;
	shl.b64 	%rd2222, %rd2221, 1;
	shr.u64 	%rd2223, %rd2182, 1;
	and.b64  	%rd2224, %rd2223, 6148914691236517205;
	or.b64  	%rd2225, %rd2224, %rd2222;
	and.b64  	%rd2226, %rd2194, 6148914691236517205;
	shl.b64 	%rd2227, %rd2226, 1;
	shr.u64 	%rd2228, %rd2194, 1;
	and.b64  	%rd2229, %rd2228, 6148914691236517205;
	or.b64  	%rd2230, %rd2229, %rd2227;
	and.b64  	%rd2231, %rd2183, 6148914691236517205;
	shl.b64 	%rd2232, %rd2231, 1;
	shr.u64 	%rd2233, %rd2183, 1;
	and.b64  	%rd2234, %rd2233, 6148914691236517205;
	or.b64  	%rd2235, %rd2234, %rd2232;
	and.b64  	%rd2236, %rd2195, 6148914691236517205;
	shl.b64 	%rd2237, %rd2236, 1;
	shr.u64 	%rd2238, %rd2195, 1;
	and.b64  	%rd2239, %rd2238, 6148914691236517205;
	or.b64  	%rd2240, %rd2239, %rd2237;
	not.b64 	%rd2241, %rd2188;
	not.b64 	%rd2242, %rd2187;
	and.b64  	%rd2243, %rd2242, -967017647790610051;
	xor.b64  	%rd2244, %rd2184, %rd2243;
	and.b64  	%rd2245, %rd2244, %rd2185;
	xor.b64  	%rd2246, %rd2245, -967017647790610051;
	and.b64  	%rd2247, %rd2187, %rd2241;
	xor.b64  	%rd2248, %rd2244, %rd2247;
	not.b64 	%rd2249, %rd2185;
	and.b64  	%rd2250, %rd2187, %rd2249;
	xor.b64  	%rd2251, %rd2250, %rd2241;
	and.b64  	%rd2252, %rd2248, %rd2187;
	xor.b64  	%rd2253, %rd2252, %rd2185;
	xor.b64  	%rd2254, %rd2250, %rd2188;
	and.b64  	%rd2255, %rd2248, %rd2254;
	xor.b64  	%rd2256, %rd2255, %rd2187;
	or.b64  	%rd2257, %rd2253, %rd2251;
	xor.b64  	%rd2258, %rd2257, %rd2248;
	and.b64  	%rd2259, %rd2253, %rd2256;
	xor.b64  	%rd2260, %rd2259, %rd2251;
	and.b64  	%rd2261, %rd2258, %rd2246;
	xor.b64  	%rd2262, %rd2261, %rd2253;
	xor.b64  	%rd2263, %rd2256, %rd2246;
	not.b64 	%rd2264, %rd2200;
	not.b64 	%rd2265, %rd2199;
	and.b64  	%rd2266, %rd2265, -4478494912006140963;
	xor.b64  	%rd2267, %rd2196, %rd2266;
	and.b64  	%rd2268, %rd2267, %rd2197;
	xor.b64  	%rd2269, %rd2268, -4478494912006140963;
	and.b64  	%rd2270, %rd2199, %rd2264;
	xor.b64  	%rd2271, %rd2267, %rd2270;
	not.b64 	%rd2272, %rd2197;
	and.b64  	%rd2273, %rd2199, %rd2272;
	xor.b64  	%rd2274, %rd2273, %rd2264;
	and.b64  	%rd2275, %rd2271, %rd2199;
	xor.b64  	%rd2276, %rd2275, %rd2197;
	xor.b64  	%rd2277, %rd2273, %rd2200;
	and.b64  	%rd2278, %rd2271, %rd2277;
	xor.b64  	%rd2279, %rd2278, %rd2199;
	or.b64  	%rd2280, %rd2276, %rd2274;
	xor.b64  	%rd2281, %rd2280, %rd2271;
	and.b64  	%rd2282, %rd2276, %rd2279;
	xor.b64  	%rd2283, %rd2282, %rd2274;
	and.b64  	%rd2284, %rd2281, %rd2269;
	xor.b64  	%rd2285, %rd2284, %rd2276;
	xor.b64  	%rd2286, %rd2279, %rd2269;
	not.b64 	%rd2287, %rd2235;
	not.b64 	%rd2288, %rd2225;
	and.b64  	%rd2289, %rd2288, -2298000897228137699;
	xor.b64  	%rd2290, %rd2205, %rd2289;
	and.b64  	%rd2291, %rd2290, %rd2215;
	xor.b64  	%rd2292, %rd2291, -2298000897228137699;
	and.b64  	%rd2293, %rd2225, %rd2287;
	xor.b64  	%rd2294, %rd2290, %rd2293;
	not.b64 	%rd2295, %rd2215;
	and.b64  	%rd2296, %rd2225, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2287;
	and.b64  	%rd2298, %rd2294, %rd2225;
	xor.b64  	%rd2299, %rd2298, %rd2215;
	xor.b64  	%rd2300, %rd2296, %rd2235;
	and.b64  	%rd2301, %rd2294, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2225;
	or.b64  	%rd2303, %rd2299, %rd2297;
	xor.b64  	%rd2304, %rd2303, %rd2294;
	and.b64  	%rd2305, %rd2299, %rd2302;
	xor.b64  	%rd2306, %rd2305, %rd2297;
	and.b64  	%rd2307, %rd2304, %rd2292;
	not.b64 	%rd2308, %rd2240;
	not.b64 	%rd2309, %rd2230;
	and.b64  	%rd2310, %rd2309, -4646979300966718246;
	xor.b64  	%rd2311, %rd2210, %rd2310;
	and.b64  	%rd2312, %rd2311, %rd2220;
	xor.b64  	%rd2313, %rd2312, -4646979300966718246;
	and.b64  	%rd2314, %rd2230, %rd2308;
	xor.b64  	%rd2315, %rd2311, %rd2314;
	not.b64 	%rd2316, %rd2220;
	and.b64  	%rd2317, %rd2230, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2308;
	and.b64  	%rd2319, %rd2315, %rd2230;
	xor.b64  	%rd2320, %rd2319, %rd2220;
	xor.b64  	%rd2321, %rd2317, %rd2240;
	and.b64  	%rd2322, %rd2315, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2230;
	or.b64  	%rd2324, %rd2320, %rd2318;
	xor.b64  	%rd2325, %rd2324, %rd2315;
	and.b64  	%rd2326, %rd2320, %rd2323;
	xor.b64  	%rd2327, %rd2326, %rd2318;
	and.b64  	%rd2328, %rd2325, %rd2313;
	xor.b64  	%rd2329, %rd2262, %rd2304;
	xor.b64  	%rd2330, %rd2263, %rd2299;
	xor.b64  	%rd2331, %rd2330, %rd2307;
	xor.b64  	%rd2332, %rd2302, %rd2292;
	xor.b64  	%rd2333, %rd2332, %rd2258;
	xor.b64  	%rd2334, %rd2333, %rd2260;
	xor.b64  	%rd2335, %rd2306, %rd2258;
	xor.b64  	%rd2336, %rd2331, %rd2258;
	xor.b64  	%rd2337, %rd2262, %rd2334;
	xor.b64  	%rd2338, %rd2335, %rd2263;
	xor.b64  	%rd2339, %rd2338, %rd2329;
	xor.b64  	%rd2340, %rd2329, %rd2260;
	xor.b64  	%rd2341, %rd2285, %rd2325;
	xor.b64  	%rd2342, %rd2286, %rd2320;
	xor.b64  	%rd2343, %rd2342, %rd2328;
	xor.b64  	%rd2344, %rd2323, %rd2313;
	xor.b64  	%rd2345, %rd2344, %rd2281;
	xor.b64  	%rd2346, %rd2345, %rd2283;
	xor.b64  	%rd2347, %rd2327, %rd2281;
	xor.b64  	%rd2348, %rd2343, %rd2281;
	xor.b64  	%rd2349, %rd2285, %rd2346;
	xor.b64  	%rd2350, %rd2347, %rd2286;
	xor.b64  	%rd2351, %rd2350, %rd2341;
	xor.b64  	%rd2352, %rd2341, %rd2283;
	and.b64  	%rd2353, %rd2329, 3689348814741910323;
	shl.b64 	%rd2354, %rd2353, 2;
	shr.u64 	%rd2355, %rd2329, 2;
	and.b64  	%rd2356, %rd2355, 3689348814741910323;
	or.b64  	%rd2357, %rd2356, %rd2354;
	and.b64  	%rd2358, %rd2341, 3689348814741910323;
	shl.b64 	%rd2359, %rd2358, 2;
	shr.u64 	%rd2360, %rd2341, 2;
	and.b64  	%rd2361, %rd2360, 3689348814741910323;
	or.b64  	%rd2362, %rd2361, %rd2359;
	and.b64  	%rd2363, %rd2331, 3689348814741910323;
	shl.b64 	%rd2364, %rd2363, 2;
	shr.u64 	%rd2365, %rd2331, 2;
	and.b64  	%rd2366, %rd2365, 3689348814741910323;
	or.b64  	%rd2367, %rd2366, %rd2364;
	and.b64  	%rd2368, %rd2343, 3689348814741910323;
	shl.b64 	%rd2369, %rd2368, 2;
	shr.u64 	%rd2370, %rd2343, 2;
	and.b64  	%rd2371, %rd2370, 3689348814741910323;
	or.b64  	%rd2372, %rd2371, %rd2369;
	and.b64  	%rd2373, %rd2334, 3689348814741910323;
	shl.b64 	%rd2374, %rd2373, 2;
	shr.u64 	%rd2375, %rd2334, 2;
	and.b64  	%rd2376, %rd2375, 3689348814741910323;
	or.b64  	%rd2377, %rd2376, %rd2374;
	and.b64  	%rd2378, %rd2346, 3689348814741910323;
	shl.b64 	%rd2379, %rd2378, 2;
	shr.u64 	%rd2380, %rd2346, 2;
	and.b64  	%rd2381, %rd2380, 3689348814741910323;
	or.b64  	%rd2382, %rd2381, %rd2379;
	and.b64  	%rd2383, %rd2335, 3689348814741910323;
	shl.b64 	%rd2384, %rd2383, 2;
	shr.u64 	%rd2385, %rd2335, 2;
	and.b64  	%rd2386, %rd2385, 3689348814741910323;
	or.b64  	%rd2387, %rd2386, %rd2384;
	and.b64  	%rd2388, %rd2347, 3689348814741910323;
	shl.b64 	%rd2389, %rd2388, 2;
	shr.u64 	%rd2390, %rd2347, 2;
	and.b64  	%rd2391, %rd2390, 3689348814741910323;
	or.b64  	%rd2392, %rd2391, %rd2389;
	not.b64 	%rd2393, %rd2340;
	not.b64 	%rd2394, %rd2339;
	and.b64  	%rd2395, %rd2394, -18171954255435868;
	xor.b64  	%rd2396, %rd2336, %rd2395;
	and.b64  	%rd2397, %rd2396, %rd2337;
	xor.b64  	%rd2398, %rd2397, -18171954255435868;
	and.b64  	%rd2399, %rd2339, %rd2393;
	xor.b64  	%rd2400, %rd2396, %rd2399;
	not.b64 	%rd2401, %rd2337;
	and.b64  	%rd2402, %rd2339, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2393;
	and.b64  	%rd2404, %rd2400, %rd2339;
	xor.b64  	%rd2405, %rd2404, %rd2337;
	xor.b64  	%rd2406, %rd2402, %rd2340;
	and.b64  	%rd2407, %rd2400, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2339;
	or.b64  	%rd2409, %rd2405, %rd2403;
	xor.b64  	%rd2410, %rd2409, %rd2400;
	and.b64  	%rd2411, %rd2405, %rd2408;
	xor.b64  	%rd2412, %rd2411, %rd2403;
	and.b64  	%rd2413, %rd2410, %rd2398;
	xor.b64  	%rd2414, %rd2413, %rd2405;
	xor.b64  	%rd2415, %rd2408, %rd2398;
	not.b64 	%rd2416, %rd2352;
	not.b64 	%rd2417, %rd2351;
	and.b64  	%rd2418, %rd2417, 5241337698807198221;
	xor.b64  	%rd2419, %rd2348, %rd2418;
	and.b64  	%rd2420, %rd2419, %rd2349;
	xor.b64  	%rd2421, %rd2420, 5241337698807198221;
	and.b64  	%rd2422, %rd2351, %rd2416;
	xor.b64  	%rd2423, %rd2419, %rd2422;
	not.b64 	%rd2424, %rd2349;
	and.b64  	%rd2425, %rd2351, %rd2424;
	xor.b64  	%rd2426, %rd2425, %rd2416;
	and.b64  	%rd2427, %rd2423, %rd2351;
	xor.b64  	%rd2428, %rd2427, %rd2349;
	xor.b64  	%rd2429, %rd2425, %rd2352;
	and.b64  	%rd2430, %rd2423, %rd2429;
	xor.b64  	%rd2431, %rd2430, %rd2351;
	or.b64  	%rd2432, %rd2428, %rd2426;
	xor.b64  	%rd2433, %rd2432, %rd2423;
	and.b64  	%rd2434, %rd2428, %rd2431;
	xor.b64  	%rd2435, %rd2434, %rd2426;
	and.b64  	%rd2436, %rd2433, %rd2421;
	xor.b64  	%rd2437, %rd2436, %rd2428;
	xor.b64  	%rd2438, %rd2431, %rd2421;
	not.b64 	%rd2439, %rd2387;
	not.b64 	%rd2440, %rd2377;
	and.b64  	%rd2441, %rd2440, 4166880046259940923;
	xor.b64  	%rd2442, %rd2357, %rd2441;
	and.b64  	%rd2443, %rd2442, %rd2367;
	xor.b64  	%rd2444, %rd2443, 4166880046259940923;
	and.b64  	%rd2445, %rd2377, %rd2439;
	xor.b64  	%rd2446, %rd2442, %rd2445;
	not.b64 	%rd2447, %rd2367;
	and.b64  	%rd2448, %rd2377, %rd2447;
	xor.b64  	%rd2449, %rd2448, %rd2439;
	and.b64  	%rd2450, %rd2446, %rd2377;
	xor.b64  	%rd2451, %rd2450, %rd2367;
	xor.b64  	%rd2452, %rd2448, %rd2387;
	and.b64  	%rd2453, %rd2446, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2377;
	or.b64  	%rd2455, %rd2451, %rd2449;
	xor.b64  	%rd2456, %rd2455, %rd2446;
	and.b64  	%rd2457, %rd2451, %rd2454;
	xor.b64  	%rd2458, %rd2457, %rd2449;
	and.b64  	%rd2459, %rd2456, %rd2444;
	not.b64 	%rd2460, %rd2392;
	not.b64 	%rd2461, %rd2382;
	and.b64  	%rd2462, %rd2461, -6878357960578064571;
	xor.b64  	%rd2463, %rd2362, %rd2462;
	and.b64  	%rd2464, %rd2463, %rd2372;
	xor.b64  	%rd2465, %rd2464, -6878357960578064571;
	and.b64  	%rd2466, %rd2382, %rd2460;
	xor.b64  	%rd2467, %rd2463, %rd2466;
	not.b64 	%rd2468, %rd2372;
	and.b64  	%rd2469, %rd2382, %rd2468;
	xor.b64  	%rd2470, %rd2469, %rd2460;
	and.b64  	%rd2471, %rd2467, %rd2382;
	xor.b64  	%rd2472, %rd2471, %rd2372;
	xor.b64  	%rd2473, %rd2469, %rd2392;
	and.b64  	%rd2474, %rd2467, %rd2473;
	xor.b64  	%rd2475, %rd2474, %rd2382;
	or.b64  	%rd2476, %rd2472, %rd2470;
	xor.b64  	%rd2477, %rd2476, %rd2467;
	and.b64  	%rd2478, %rd2472, %rd2475;
	xor.b64  	%rd2479, %rd2478, %rd2470;
	and.b64  	%rd2480, %rd2477, %rd2465;
	xor.b64  	%rd2481, %rd2414, %rd2456;
	xor.b64  	%rd2482, %rd2415, %rd2451;
	xor.b64  	%rd2483, %rd2482, %rd2459;
	xor.b64  	%rd2484, %rd2454, %rd2444;
	xor.b64  	%rd2485, %rd2484, %rd2410;
	xor.b64  	%rd2486, %rd2485, %rd2412;
	xor.b64  	%rd2487, %rd2458, %rd2410;
	xor.b64  	%rd2488, %rd2483, %rd2410;
	xor.b64  	%rd2489, %rd2414, %rd2486;
	xor.b64  	%rd2490, %rd2487, %rd2415;
	xor.b64  	%rd2491, %rd2490, %rd2481;
	xor.b64  	%rd2492, %rd2481, %rd2412;
	xor.b64  	%rd2493, %rd2437, %rd2477;
	xor.b64  	%rd2494, %rd2438, %rd2472;
	xor.b64  	%rd2495, %rd2494, %rd2480;
	xor.b64  	%rd2496, %rd2475, %rd2465;
	xor.b64  	%rd2497, %rd2496, %rd2433;
	xor.b64  	%rd2498, %rd2497, %rd2435;
	xor.b64  	%rd2499, %rd2479, %rd2433;
	xor.b64  	%rd2500, %rd2495, %rd2433;
	xor.b64  	%rd2501, %rd2437, %rd2498;
	xor.b64  	%rd2502, %rd2499, %rd2438;
	xor.b64  	%rd2503, %rd2502, %rd2493;
	xor.b64  	%rd2504, %rd2493, %rd2435;
	and.b64  	%rd2505, %rd2481, 1085102592571150095;
	shl.b64 	%rd2506, %rd2505, 4;
	shr.u64 	%rd2507, %rd2481, 4;
	and.b64  	%rd2508, %rd2507, 1085102592571150095;
	or.b64  	%rd2509, %rd2508, %rd2506;
	and.b64  	%rd2510, %rd2493, 1085102592571150095;
	shl.b64 	%rd2511, %rd2510, 4;
	shr.u64 	%rd2512, %rd2493, 4;
	and.b64  	%rd2513, %rd2512, 1085102592571150095;
	or.b64  	%rd2514, %rd2513, %rd2511;
	and.b64  	%rd2515, %rd2483, 1085102592571150095;
	shl.b64 	%rd2516, %rd2515, 4;
	shr.u64 	%rd2517, %rd2483, 4;
	and.b64  	%rd2518, %rd2517, 1085102592571150095;
	or.b64  	%rd2519, %rd2518, %rd2516;
	and.b64  	%rd2520, %rd2495, 1085102592571150095;
	shl.b64 	%rd2521, %rd2520, 4;
	shr.u64 	%rd2522, %rd2495, 4;
	and.b64  	%rd2523, %rd2522, 1085102592571150095;
	or.b64  	%rd2524, %rd2523, %rd2521;
	and.b64  	%rd2525, %rd2486, 1085102592571150095;
	shl.b64 	%rd2526, %rd2525, 4;
	shr.u64 	%rd2527, %rd2486, 4;
	and.b64  	%rd2528, %rd2527, 1085102592571150095;
	or.b64  	%rd2529, %rd2528, %rd2526;
	and.b64  	%rd2530, %rd2498, 1085102592571150095;
	shl.b64 	%rd2531, %rd2530, 4;
	shr.u64 	%rd2532, %rd2498, 4;
	and.b64  	%rd2533, %rd2532, 1085102592571150095;
	or.b64  	%rd2534, %rd2533, %rd2531;
	and.b64  	%rd2535, %rd2487, 1085102592571150095;
	shl.b64 	%rd2536, %rd2535, 4;
	shr.u64 	%rd2537, %rd2487, 4;
	and.b64  	%rd2538, %rd2537, 1085102592571150095;
	or.b64  	%rd2539, %rd2538, %rd2536;
	and.b64  	%rd2540, %rd2499, 1085102592571150095;
	shl.b64 	%rd2541, %rd2540, 4;
	shr.u64 	%rd2542, %rd2499, 4;
	and.b64  	%rd2543, %rd2542, 1085102592571150095;
	or.b64  	%rd2544, %rd2543, %rd2541;
	not.b64 	%rd2545, %rd2492;
	not.b64 	%rd2546, %rd2491;
	and.b64  	%rd2547, %rd2546, 1083589565484485093;
	xor.b64  	%rd2548, %rd2488, %rd2547;
	and.b64  	%rd2549, %rd2548, %rd2489;
	xor.b64  	%rd2550, %rd2549, 1083589565484485093;
	and.b64  	%rd2551, %rd2491, %rd2545;
	xor.b64  	%rd2552, %rd2548, %rd2551;
	not.b64 	%rd2553, %rd2489;
	and.b64  	%rd2554, %rd2491, %rd2553;
	xor.b64  	%rd2555, %rd2554, %rd2545;
	and.b64  	%rd2556, %rd2552, %rd2491;
	xor.b64  	%rd2557, %rd2556, %rd2489;
	xor.b64  	%rd2558, %rd2554, %rd2492;
	and.b64  	%rd2559, %rd2552, %rd2558;
	xor.b64  	%rd2560, %rd2559, %rd2491;
	or.b64  	%rd2561, %rd2557, %rd2555;
	xor.b64  	%rd2562, %rd2561, %rd2552;
	and.b64  	%rd2563, %rd2557, %rd2560;
	xor.b64  	%rd2564, %rd2563, %rd2555;
	and.b64  	%rd2565, %rd2562, %rd2550;
	xor.b64  	%rd2566, %rd2565, %rd2557;
	xor.b64  	%rd2567, %rd2560, %rd2550;
	not.b64 	%rd2568, %rd2504;
	not.b64 	%rd2569, %rd2503;
	and.b64  	%rd2570, %rd2569, 3814988972807188628;
	xor.b64  	%rd2571, %rd2500, %rd2570;
	and.b64  	%rd2572, %rd2571, %rd2501;
	xor.b64  	%rd2573, %rd2572, 3814988972807188628;
	and.b64  	%rd2574, %rd2503, %rd2568;
	xor.b64  	%rd2575, %rd2571, %rd2574;
	not.b64 	%rd2576, %rd2501;
	and.b64  	%rd2577, %rd2503, %rd2576;
	xor.b64  	%rd2578, %rd2577, %rd2568;
	and.b64  	%rd2579, %rd2575, %rd2503;
	xor.b64  	%rd2580, %rd2579, %rd2501;
	xor.b64  	%rd2581, %rd2577, %rd2504;
	and.b64  	%rd2582, %rd2575, %rd2581;
	xor.b64  	%rd2583, %rd2582, %rd2503;
	or.b64  	%rd2584, %rd2580, %rd2578;
	xor.b64  	%rd2585, %rd2584, %rd2575;
	and.b64  	%rd2586, %rd2580, %rd2583;
	xor.b64  	%rd2587, %rd2586, %rd2578;
	and.b64  	%rd2588, %rd2585, %rd2573;
	xor.b64  	%rd2589, %rd2588, %rd2580;
	xor.b64  	%rd2590, %rd2583, %rd2573;
	not.b64 	%rd2591, %rd2539;
	not.b64 	%rd2592, %rd2529;
	and.b64  	%rd2593, %rd2592, -7643377250800799326;
	xor.b64  	%rd2594, %rd2509, %rd2593;
	and.b64  	%rd2595, %rd2594, %rd2519;
	xor.b64  	%rd2596, %rd2595, -7643377250800799326;
	and.b64  	%rd2597, %rd2529, %rd2591;
	xor.b64  	%rd2598, %rd2594, %rd2597;
	not.b64 	%rd2599, %rd2519;
	and.b64  	%rd2600, %rd2529, %rd2599;
	xor.b64  	%rd2601, %rd2600, %rd2591;
	and.b64  	%rd2602, %rd2598, %rd2529;
	xor.b64  	%rd2603, %rd2602, %rd2519;
	xor.b64  	%rd2604, %rd2600, %rd2539;
	and.b64  	%rd2605, %rd2598, %rd2604;
	xor.b64  	%rd2606, %rd2605, %rd2529;
	or.b64  	%rd2607, %rd2603, %rd2601;
	xor.b64  	%rd2608, %rd2607, %rd2598;
	and.b64  	%rd2609, %rd2603, %rd2606;
	xor.b64  	%rd2610, %rd2609, %rd2601;
	and.b64  	%rd2611, %rd2608, %rd2596;
	not.b64 	%rd2612, %rd2544;
	not.b64 	%rd2613, %rd2534;
	and.b64  	%rd2614, %rd2613, 5375098172530899945;
	xor.b64  	%rd2615, %rd2514, %rd2614;
	and.b64  	%rd2616, %rd2615, %rd2524;
	xor.b64  	%rd2617, %rd2616, 5375098172530899945;
	and.b64  	%rd2618, %rd2534, %rd2612;
	xor.b64  	%rd2619, %rd2615, %rd2618;
	not.b64 	%rd2620, %rd2524;
	and.b64  	%rd2621, %rd2534, %rd2620;
	xor.b64  	%rd2622, %rd2621, %rd2612;
	and.b64  	%rd2623, %rd2619, %rd2534;
	xor.b64  	%rd2624, %rd2623, %rd2524;
	xor.b64  	%rd2625, %rd2621, %rd2544;
	and.b64  	%rd2626, %rd2619, %rd2625;
	xor.b64  	%rd2627, %rd2626, %rd2534;
	or.b64  	%rd2628, %rd2624, %rd2622;
	xor.b64  	%rd2629, %rd2628, %rd2619;
	and.b64  	%rd2630, %rd2624, %rd2627;
	xor.b64  	%rd2631, %rd2630, %rd2622;
	and.b64  	%rd2632, %rd2629, %rd2617;
	xor.b64  	%rd2633, %rd2566, %rd2608;
	xor.b64  	%rd2634, %rd2567, %rd2603;
	xor.b64  	%rd2635, %rd2634, %rd2611;
	xor.b64  	%rd2636, %rd2606, %rd2596;
	xor.b64  	%rd2637, %rd2636, %rd2562;
	xor.b64  	%rd2638, %rd2637, %rd2564;
	xor.b64  	%rd2639, %rd2610, %rd2562;
	xor.b64  	%rd2640, %rd2635, %rd2562;
	xor.b64  	%rd2641, %rd2566, %rd2638;
	xor.b64  	%rd2642, %rd2639, %rd2567;
	xor.b64  	%rd2643, %rd2642, %rd2633;
	xor.b64  	%rd2644, %rd2633, %rd2564;
	xor.b64  	%rd2645, %rd2589, %rd2629;
	xor.b64  	%rd2646, %rd2590, %rd2624;
	xor.b64  	%rd2647, %rd2646, %rd2632;
	xor.b64  	%rd2648, %rd2627, %rd2617;
	xor.b64  	%rd2649, %rd2648, %rd2585;
	xor.b64  	%rd2650, %rd2649, %rd2587;
	xor.b64  	%rd2651, %rd2631, %rd2585;
	xor.b64  	%rd2652, %rd2647, %rd2585;
	xor.b64  	%rd2653, %rd2589, %rd2650;
	xor.b64  	%rd2654, %rd2651, %rd2590;
	xor.b64  	%rd2655, %rd2654, %rd2645;
	xor.b64  	%rd2656, %rd2645, %rd2587;
	and.b64  	%rd2657, %rd2633, 71777214294589695;
	shl.b64 	%rd2658, %rd2657, 8;
	shr.u64 	%rd2659, %rd2633, 8;
	and.b64  	%rd2660, %rd2659, 71777214294589695;
	or.b64  	%rd2661, %rd2660, %rd2658;
	and.b64  	%rd2662, %rd2645, 71777214294589695;
	shl.b64 	%rd2663, %rd2662, 8;
	shr.u64 	%rd2664, %rd2645, 8;
	and.b64  	%rd2665, %rd2664, 71777214294589695;
	or.b64  	%rd2666, %rd2665, %rd2663;
	and.b64  	%rd2667, %rd2635, 71777214294589695;
	shl.b64 	%rd2668, %rd2667, 8;
	shr.u64 	%rd2669, %rd2635, 8;
	and.b64  	%rd2670, %rd2669, 71777214294589695;
	or.b64  	%rd2671, %rd2670, %rd2668;
	and.b64  	%rd2672, %rd2647, 71777214294589695;
	shl.b64 	%rd2673, %rd2672, 8;
	shr.u64 	%rd2674, %rd2647, 8;
	and.b64  	%rd2675, %rd2674, 71777214294589695;
	or.b64  	%rd2676, %rd2675, %rd2673;
	and.b64  	%rd2677, %rd2638, 71777214294589695;
	shl.b64 	%rd2678, %rd2677, 8;
	shr.u64 	%rd2679, %rd2638, 8;
	and.b64  	%rd2680, %rd2679, 71777214294589695;
	or.b64  	%rd2681, %rd2680, %rd2678;
	and.b64  	%rd2682, %rd2650, 71777214294589695;
	shl.b64 	%rd2683, %rd2682, 8;
	shr.u64 	%rd2684, %rd2650, 8;
	and.b64  	%rd2685, %rd2684, 71777214294589695;
	or.b64  	%rd2686, %rd2685, %rd2683;
	and.b64  	%rd2687, %rd2639, 71777214294589695;
	shl.b64 	%rd2688, %rd2687, 8;
	shr.u64 	%rd2689, %rd2639, 8;
	and.b64  	%rd2690, %rd2689, 71777214294589695;
	or.b64  	%rd2691, %rd2690, %rd2688;
	and.b64  	%rd2692, %rd2651, 71777214294589695;
	shl.b64 	%rd2693, %rd2692, 8;
	shr.u64 	%rd2694, %rd2651, 8;
	and.b64  	%rd2695, %rd2694, 71777214294589695;
	or.b64  	%rd2696, %rd2695, %rd2693;
	not.b64 	%rd2697, %rd2644;
	not.b64 	%rd2698, %rd2643;
	and.b64  	%rd2699, %rd2698, 1582571755180736648;
	xor.b64  	%rd2700, %rd2640, %rd2699;
	and.b64  	%rd2701, %rd2700, %rd2641;
	xor.b64  	%rd2702, %rd2701, 1582571755180736648;
	and.b64  	%rd2703, %rd2643, %rd2697;
	xor.b64  	%rd2704, %rd2700, %rd2703;
	not.b64 	%rd2705, %rd2641;
	and.b64  	%rd2706, %rd2643, %rd2705;
	xor.b64  	%rd2707, %rd2706, %rd2697;
	and.b64  	%rd2708, %rd2704, %rd2643;
	xor.b64  	%rd2709, %rd2708, %rd2641;
	xor.b64  	%rd2710, %rd2706, %rd2644;
	and.b64  	%rd2711, %rd2704, %rd2710;
	xor.b64  	%rd2712, %rd2711, %rd2643;
	or.b64  	%rd2713, %rd2709, %rd2707;
	xor.b64  	%rd2714, %rd2713, %rd2704;
	and.b64  	%rd2715, %rd2709, %rd2712;
	xor.b64  	%rd2716, %rd2715, %rd2707;
	and.b64  	%rd2717, %rd2714, %rd2702;
	xor.b64  	%rd2718, %rd2717, %rd2709;
	xor.b64  	%rd2719, %rd2712, %rd2702;
	not.b64 	%rd2720, %rd2656;
	not.b64 	%rd2721, %rd2655;
	and.b64  	%rd2722, %rd2721, -22708732076703417;
	xor.b64  	%rd2723, %rd2652, %rd2722;
	and.b64  	%rd2724, %rd2723, %rd2653;
	xor.b64  	%rd2725, %rd2724, -22708732076703417;
	and.b64  	%rd2726, %rd2655, %rd2720;
	xor.b64  	%rd2727, %rd2723, %rd2726;
	not.b64 	%rd2728, %rd2653;
	and.b64  	%rd2729, %rd2655, %rd2728;
	xor.b64  	%rd2730, %rd2729, %rd2720;
	and.b64  	%rd2731, %rd2727, %rd2655;
	xor.b64  	%rd2732, %rd2731, %rd2653;
	xor.b64  	%rd2733, %rd2729, %rd2656;
	and.b64  	%rd2734, %rd2727, %rd2733;
	xor.b64  	%rd2735, %rd2734, %rd2655;
	or.b64  	%rd2736, %rd2732, %rd2730;
	xor.b64  	%rd2737, %rd2736, %rd2727;
	and.b64  	%rd2738, %rd2732, %rd2735;
	xor.b64  	%rd2739, %rd2738, %rd2730;
	and.b64  	%rd2740, %rd2737, %rd2725;
	xor.b64  	%rd2741, %rd2740, %rd2732;
	xor.b64  	%rd2742, %rd2735, %rd2725;
	not.b64 	%rd2743, %rd2691;
	not.b64 	%rd2744, %rd2681;
	and.b64  	%rd2745, %rd2744, 3514508529036344190;
	xor.b64  	%rd2746, %rd2661, %rd2745;
	and.b64  	%rd2747, %rd2746, %rd2671;
	xor.b64  	%rd2748, %rd2747, 3514508529036344190;
	and.b64  	%rd2749, %rd2681, %rd2743;
	xor.b64  	%rd2750, %rd2746, %rd2749;
	not.b64 	%rd2751, %rd2671;
	and.b64  	%rd2752, %rd2681, %rd2751;
	xor.b64  	%rd2753, %rd2752, %rd2743;
	and.b64  	%rd2754, %rd2750, %rd2681;
	xor.b64  	%rd2755, %rd2754, %rd2671;
	xor.b64  	%rd2756, %rd2752, %rd2691;
	and.b64  	%rd2757, %rd2750, %rd2756;
	xor.b64  	%rd2758, %rd2757, %rd2681;
	or.b64  	%rd2759, %rd2755, %rd2753;
	xor.b64  	%rd2760, %rd2759, %rd2750;
	and.b64  	%rd2761, %rd2755, %rd2758;
	xor.b64  	%rd2762, %rd2761, %rd2753;
	and.b64  	%rd2763, %rd2760, %rd2748;
	not.b64 	%rd2764, %rd2696;
	not.b64 	%rd2765, %rd2686;
	and.b64  	%rd2766, %rd2765, -1833969122477182906;
	xor.b64  	%rd2767, %rd2666, %rd2766;
	and.b64  	%rd2768, %rd2767, %rd2676;
	xor.b64  	%rd2769, %rd2768, -1833969122477182906;
	and.b64  	%rd2770, %rd2686, %rd2764;
	xor.b64  	%rd2771, %rd2767, %rd2770;
	not.b64 	%rd2772, %rd2676;
	and.b64  	%rd2773, %rd2686, %rd2772;
	xor.b64  	%rd2774, %rd2773, %rd2764;
	and.b64  	%rd2775, %rd2771, %rd2686;
	xor.b64  	%rd2776, %rd2775, %rd2676;
	xor.b64  	%rd2777, %rd2773, %rd2696;
	and.b64  	%rd2778, %rd2771, %rd2777;
	xor.b64  	%rd2779, %rd2778, %rd2686;
	or.b64  	%rd2780, %rd2776, %rd2774;
	xor.b64  	%rd2781, %rd2780, %rd2771;
	and.b64  	%rd2782, %rd2776, %rd2779;
	xor.b64  	%rd2783, %rd2782, %rd2774;
	and.b64  	%rd2784, %rd2781, %rd2769;
	xor.b64  	%rd2785, %rd2718, %rd2760;
	xor.b64  	%rd2786, %rd2719, %rd2755;
	xor.b64  	%rd2787, %rd2786, %rd2763;
	xor.b64  	%rd2788, %rd2758, %rd2748;
	xor.b64  	%rd2789, %rd2788, %rd2714;
	xor.b64  	%rd2790, %rd2789, %rd2716;
	xor.b64  	%rd2791, %rd2762, %rd2714;
	xor.b64  	%rd2792, %rd2787, %rd2714;
	xor.b64  	%rd2793, %rd2718, %rd2790;
	xor.b64  	%rd2794, %rd2791, %rd2719;
	xor.b64  	%rd2795, %rd2794, %rd2785;
	xor.b64  	%rd2796, %rd2785, %rd2716;
	xor.b64  	%rd2797, %rd2741, %rd2781;
	xor.b64  	%rd2798, %rd2742, %rd2776;
	xor.b64  	%rd2799, %rd2798, %rd2784;
	xor.b64  	%rd2800, %rd2779, %rd2769;
	xor.b64  	%rd2801, %rd2800, %rd2737;
	xor.b64  	%rd2802, %rd2801, %rd2739;
	xor.b64  	%rd2803, %rd2783, %rd2737;
	xor.b64  	%rd2804, %rd2799, %rd2737;
	xor.b64  	%rd2805, %rd2741, %rd2802;
	xor.b64  	%rd2806, %rd2803, %rd2742;
	xor.b64  	%rd2807, %rd2806, %rd2797;
	xor.b64  	%rd2808, %rd2797, %rd2739;
	and.b64  	%rd2809, %rd2785, 281470681808895;
	shl.b64 	%rd2810, %rd2809, 16;
	shr.u64 	%rd2811, %rd2785, 16;
	and.b64  	%rd2812, %rd2811, 281470681808895;
	or.b64  	%rd2813, %rd2812, %rd2810;
	and.b64  	%rd2814, %rd2797, 281470681808895;
	shl.b64 	%rd2815, %rd2814, 16;
	shr.u64 	%rd2816, %rd2797, 16;
	and.b64  	%rd2817, %rd2816, 281470681808895;
	or.b64  	%rd2818, %rd2817, %rd2815;
	and.b64  	%rd2819, %rd2787, 281470681808895;
	shl.b64 	%rd2820, %rd2819, 16;
	shr.u64 	%rd2821, %rd2787, 16;
	and.b64  	%rd2822, %rd2821, 281470681808895;
	or.b64  	%rd2823, %rd2822, %rd2820;
	and.b64  	%rd2824, %rd2799, 281470681808895;
	shl.b64 	%rd2825, %rd2824, 16;
	shr.u64 	%rd2826, %rd2799, 16;
	and.b64  	%rd2827, %rd2826, 281470681808895;
	or.b64  	%rd2828, %rd2827, %rd2825;
	and.b64  	%rd2829, %rd2790, 281470681808895;
	shl.b64 	%rd2830, %rd2829, 16;
	shr.u64 	%rd2831, %rd2790, 16;
	and.b64  	%rd2832, %rd2831, 281470681808895;
	or.b64  	%rd2833, %rd2832, %rd2830;
	and.b64  	%rd2834, %rd2802, 281470681808895;
	shl.b64 	%rd2835, %rd2834, 16;
	shr.u64 	%rd2836, %rd2802, 16;
	and.b64  	%rd2837, %rd2836, 281470681808895;
	or.b64  	%rd2838, %rd2837, %rd2835;
	and.b64  	%rd2839, %rd2791, 281470681808895;
	shl.b64 	%rd2840, %rd2839, 16;
	shr.u64 	%rd2841, %rd2791, 16;
	and.b64  	%rd2842, %rd2841, 281470681808895;
	or.b64  	%rd2843, %rd2842, %rd2840;
	and.b64  	%rd2844, %rd2803, 281470681808895;
	shl.b64 	%rd2845, %rd2844, 16;
	shr.u64 	%rd2846, %rd2803, 16;
	and.b64  	%rd2847, %rd2846, 281470681808895;
	or.b64  	%rd2848, %rd2847, %rd2845;
	not.b64 	%rd2849, %rd2796;
	not.b64 	%rd2850, %rd2795;
	and.b64  	%rd2851, %rd2850, 56945619916608932;
	xor.b64  	%rd2852, %rd2792, %rd2851;
	and.b64  	%rd2853, %rd2852, %rd2793;
	xor.b64  	%rd2854, %rd2853, 56945619916608932;
	and.b64  	%rd2855, %rd2795, %rd2849;
	xor.b64  	%rd2856, %rd2852, %rd2855;
	not.b64 	%rd2857, %rd2793;
	and.b64  	%rd2858, %rd2795, %rd2857;
	xor.b64  	%rd2859, %rd2858, %rd2849;
	and.b64  	%rd2860, %rd2856, %rd2795;
	xor.b64  	%rd2861, %rd2860, %rd2793;
	xor.b64  	%rd2862, %rd2858, %rd2796;
	and.b64  	%rd2863, %rd2856, %rd2862;
	xor.b64  	%rd2864, %rd2863, %rd2795;
	or.b64  	%rd2865, %rd2861, %rd2859;
	xor.b64  	%rd2866, %rd2865, %rd2856;
	and.b64  	%rd2867, %rd2861, %rd2864;
	xor.b64  	%rd2868, %rd2867, %rd2859;
	and.b64  	%rd2869, %rd2866, %rd2854;
	xor.b64  	%rd2870, %rd2869, %rd2861;
	xor.b64  	%rd2871, %rd2864, %rd2854;
	not.b64 	%rd2872, %rd2808;
	not.b64 	%rd2873, %rd2807;
	and.b64  	%rd2874, %rd2873, -5901898281687671334;
	xor.b64  	%rd2875, %rd2804, %rd2874;
	and.b64  	%rd2876, %rd2875, %rd2805;
	xor.b64  	%rd2877, %rd2876, -5901898281687671334;
	and.b64  	%rd2878, %rd2807, %rd2872;
	xor.b64  	%rd2879, %rd2875, %rd2878;
	not.b64 	%rd2880, %rd2805;
	and.b64  	%rd2881, %rd2807, %rd2880;
	xor.b64  	%rd2882, %rd2881, %rd2872;
	and.b64  	%rd2883, %rd2879, %rd2807;
	xor.b64  	%rd2884, %rd2883, %rd2805;
	xor.b64  	%rd2885, %rd2881, %rd2808;
	and.b64  	%rd2886, %rd2879, %rd2885;
	xor.b64  	%rd2887, %rd2886, %rd2807;
	or.b64  	%rd2888, %rd2884, %rd2882;
	xor.b64  	%rd2889, %rd2888, %rd2879;
	and.b64  	%rd2890, %rd2884, %rd2887;
	xor.b64  	%rd2891, %rd2890, %rd2882;
	and.b64  	%rd2892, %rd2889, %rd2877;
	xor.b64  	%rd2893, %rd2892, %rd2884;
	xor.b64  	%rd2894, %rd2887, %rd2877;
	not.b64 	%rd2895, %rd2843;
	not.b64 	%rd2896, %rd2833;
	and.b64  	%rd2897, %rd2896, -5921841876523133069;
	xor.b64  	%rd2898, %rd2813, %rd2897;
	and.b64  	%rd2899, %rd2898, %rd2823;
	xor.b64  	%rd2900, %rd2899, -5921841876523133069;
	and.b64  	%rd2901, %rd2833, %rd2895;
	xor.b64  	%rd2902, %rd2898, %rd2901;
	not.b64 	%rd2903, %rd2823;
	and.b64  	%rd2904, %rd2833, %rd2903;
	xor.b64  	%rd2905, %rd2904, %rd2895;
	and.b64  	%rd2906, %rd2902, %rd2833;
	xor.b64  	%rd2907, %rd2906, %rd2823;
	xor.b64  	%rd2908, %rd2904, %rd2843;
	and.b64  	%rd2909, %rd2902, %rd2908;
	xor.b64  	%rd2910, %rd2909, %rd2833;
	or.b64  	%rd2911, %rd2907, %rd2905;
	xor.b64  	%rd2912, %rd2911, %rd2902;
	and.b64  	%rd2913, %rd2907, %rd2910;
	xor.b64  	%rd2914, %rd2913, %rd2905;
	and.b64  	%rd2915, %rd2912, %rd2900;
	not.b64 	%rd2916, %rd2848;
	not.b64 	%rd2917, %rd2838;
	and.b64  	%rd2918, %rd2917, 7432448002772346600;
	xor.b64  	%rd2919, %rd2818, %rd2918;
	and.b64  	%rd2920, %rd2919, %rd2828;
	xor.b64  	%rd2921, %rd2920, 7432448002772346600;
	and.b64  	%rd2922, %rd2838, %rd2916;
	xor.b64  	%rd2923, %rd2919, %rd2922;
	not.b64 	%rd2924, %rd2828;
	and.b64  	%rd2925, %rd2838, %rd2924;
	xor.b64  	%rd2926, %rd2925, %rd2916;
	and.b64  	%rd2927, %rd2923, %rd2838;
	xor.b64  	%rd2928, %rd2927, %rd2828;
	xor.b64  	%rd2929, %rd2925, %rd2848;
	and.b64  	%rd2930, %rd2923, %rd2929;
	xor.b64  	%rd2931, %rd2930, %rd2838;
	or.b64  	%rd2932, %rd2928, %rd2926;
	xor.b64  	%rd2933, %rd2932, %rd2923;
	and.b64  	%rd2934, %rd2928, %rd2931;
	xor.b64  	%rd2935, %rd2934, %rd2926;
	and.b64  	%rd2936, %rd2933, %rd2921;
	xor.b64  	%rd2937, %rd2870, %rd2912;
	xor.b64  	%rd2938, %rd2871, %rd2907;
	xor.b64  	%rd2939, %rd2938, %rd2915;
	xor.b64  	%rd2940, %rd2910, %rd2900;
	xor.b64  	%rd2941, %rd2940, %rd2866;
	xor.b64  	%rd2942, %rd2941, %rd2868;
	xor.b64  	%rd2943, %rd2914, %rd2866;
	xor.b64  	%rd2944, %rd2939, %rd2866;
	xor.b64  	%rd2945, %rd2870, %rd2942;
	xor.b64  	%rd2946, %rd2943, %rd2871;
	xor.b64  	%rd2947, %rd2946, %rd2937;
	xor.b64  	%rd2948, %rd2937, %rd2868;
	xor.b64  	%rd2949, %rd2893, %rd2933;
	xor.b64  	%rd2950, %rd2894, %rd2928;
	xor.b64  	%rd2951, %rd2950, %rd2936;
	xor.b64  	%rd2952, %rd2931, %rd2921;
	xor.b64  	%rd2953, %rd2952, %rd2889;
	xor.b64  	%rd2954, %rd2953, %rd2891;
	xor.b64  	%rd2955, %rd2935, %rd2889;
	xor.b64  	%rd2956, %rd2951, %rd2889;
	xor.b64  	%rd2957, %rd2893, %rd2954;
	xor.b64  	%rd2958, %rd2955, %rd2894;
	xor.b64  	%rd2959, %rd2958, %rd2949;
	xor.b64  	%rd2960, %rd2949, %rd2891;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2937, 32;
	shr.b64 	%rhs, %rd2937, 32;
	add.u64 	%rd2961, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2949, 32;
	shr.b64 	%rhs, %rd2949, 32;
	add.u64 	%rd2962, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2939, 32;
	shr.b64 	%rhs, %rd2939, 32;
	add.u64 	%rd2963, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2951, 32;
	shr.b64 	%rhs, %rd2951, 32;
	add.u64 	%rd2964, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2942, 32;
	shr.b64 	%rhs, %rd2942, 32;
	add.u64 	%rd2965, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2954, 32;
	shr.b64 	%rhs, %rd2954, 32;
	add.u64 	%rd2966, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2943, 32;
	shr.b64 	%rhs, %rd2943, 32;
	add.u64 	%rd2967, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd2955, 32;
	shr.b64 	%rhs, %rd2955, 32;
	add.u64 	%rd2968, %lhs, %rhs;
	}
	not.b64 	%rd2969, %rd2948;
	not.b64 	%rd2970, %rd2947;
	and.b64  	%rd2971, %rd2970, 1648615207704779427;
	xor.b64  	%rd2972, %rd2944, %rd2971;
	and.b64  	%rd2973, %rd2972, %rd2945;
	xor.b64  	%rd2974, %rd2973, 1648615207704779427;
	and.b64  	%rd2975, %rd2947, %rd2969;
	xor.b64  	%rd2976, %rd2972, %rd2975;
	not.b64 	%rd2977, %rd2945;
	and.b64  	%rd2978, %rd2947, %rd2977;
	xor.b64  	%rd2979, %rd2978, %rd2969;
	and.b64  	%rd2980, %rd2976, %rd2947;
	xor.b64  	%rd2981, %rd2980, %rd2945;
	xor.b64  	%rd2982, %rd2978, %rd2948;
	and.b64  	%rd2983, %rd2976, %rd2982;
	xor.b64  	%rd2984, %rd2983, %rd2947;
	or.b64  	%rd2985, %rd2981, %rd2979;
	xor.b64  	%rd2986, %rd2985, %rd2976;
	and.b64  	%rd2987, %rd2981, %rd2984;
	xor.b64  	%rd2988, %rd2987, %rd2979;
	and.b64  	%rd2989, %rd2986, %rd2974;
	xor.b64  	%rd2990, %rd2989, %rd2981;
	xor.b64  	%rd2991, %rd2984, %rd2974;
	not.b64 	%rd2992, %rd2960;
	not.b64 	%rd2993, %rd2959;
	and.b64  	%rd2994, %rd2993, -7306645529809196749;
	xor.b64  	%rd2995, %rd2956, %rd2994;
	and.b64  	%rd2996, %rd2995, %rd2957;
	xor.b64  	%rd2997, %rd2996, -7306645529809196749;
	and.b64  	%rd2998, %rd2959, %rd2992;
	xor.b64  	%rd2999, %rd2995, %rd2998;
	not.b64 	%rd3000, %rd2957;
	and.b64  	%rd3001, %rd2959, %rd3000;
	xor.b64  	%rd3002, %rd3001, %rd2992;
	and.b64  	%rd3003, %rd2999, %rd2959;
	xor.b64  	%rd3004, %rd3003, %rd2957;
	xor.b64  	%rd3005, %rd3001, %rd2960;
	and.b64  	%rd3006, %rd2999, %rd3005;
	xor.b64  	%rd3007, %rd3006, %rd2959;
	or.b64  	%rd3008, %rd3004, %rd3002;
	xor.b64  	%rd3009, %rd3008, %rd2999;
	and.b64  	%rd3010, %rd3004, %rd3007;
	xor.b64  	%rd3011, %rd3010, %rd3002;
	and.b64  	%rd3012, %rd3009, %rd2997;
	xor.b64  	%rd3013, %rd3012, %rd3004;
	xor.b64  	%rd3014, %rd3007, %rd2997;
	not.b64 	%rd3015, %rd2967;
	not.b64 	%rd3016, %rd2965;
	and.b64  	%rd3017, %rd3016, 8900361643153842207;
	xor.b64  	%rd3018, %rd2961, %rd3017;
	and.b64  	%rd3019, %rd3018, %rd2963;
	xor.b64  	%rd3020, %rd3019, 8900361643153842207;
	and.b64  	%rd3021, %rd2965, %rd3015;
	xor.b64  	%rd3022, %rd3018, %rd3021;
	not.b64 	%rd3023, %rd2963;
	and.b64  	%rd3024, %rd2965, %rd3023;
	xor.b64  	%rd3025, %rd3024, %rd3015;
	and.b64  	%rd3026, %rd3022, %rd2965;
	xor.b64  	%rd3027, %rd3026, %rd2963;
	xor.b64  	%rd3028, %rd3024, %rd2967;
	and.b64  	%rd3029, %rd3022, %rd3028;
	xor.b64  	%rd3030, %rd3029, %rd2965;
	or.b64  	%rd3031, %rd3027, %rd3025;
	xor.b64  	%rd3032, %rd3031, %rd3022;
	and.b64  	%rd3033, %rd3027, %rd3030;
	xor.b64  	%rd3034, %rd3033, %rd3025;
	and.b64  	%rd3035, %rd3032, %rd3020;
	not.b64 	%rd3036, %rd2968;
	not.b64 	%rd3037, %rd2966;
	and.b64  	%rd3038, %rd3037, 1767048916079791825;
	xor.b64  	%rd3039, %rd2962, %rd3038;
	and.b64  	%rd3040, %rd3039, %rd2964;
	xor.b64  	%rd3041, %rd3040, 1767048916079791825;
	and.b64  	%rd3042, %rd2966, %rd3036;
	xor.b64  	%rd3043, %rd3039, %rd3042;
	not.b64 	%rd3044, %rd2964;
	and.b64  	%rd3045, %rd2966, %rd3044;
	xor.b64  	%rd3046, %rd3045, %rd3036;
	and.b64  	%rd3047, %rd3043, %rd2966;
	xor.b64  	%rd3048, %rd3047, %rd2964;
	xor.b64  	%rd3049, %rd3045, %rd2968;
	and.b64  	%rd3050, %rd3043, %rd3049;
	xor.b64  	%rd3051, %rd3050, %rd2966;
	or.b64  	%rd3052, %rd3048, %rd3046;
	xor.b64  	%rd3053, %rd3052, %rd3043;
	and.b64  	%rd3054, %rd3048, %rd3051;
	xor.b64  	%rd3055, %rd3054, %rd3046;
	and.b64  	%rd3056, %rd3053, %rd3041;
	xor.b64  	%rd3057, %rd2990, %rd3032;
	xor.b64  	%rd3058, %rd2991, %rd3027;
	xor.b64  	%rd3059, %rd3058, %rd3035;
	xor.b64  	%rd3060, %rd3030, %rd3020;
	xor.b64  	%rd3061, %rd3060, %rd2986;
	xor.b64  	%rd3062, %rd3061, %rd2988;
	xor.b64  	%rd3063, %rd3034, %rd2986;
	xor.b64  	%rd3064, %rd3059, %rd2986;
	xor.b64  	%rd3065, %rd2990, %rd3062;
	xor.b64  	%rd3066, %rd3063, %rd2991;
	xor.b64  	%rd3067, %rd3066, %rd3057;
	xor.b64  	%rd3068, %rd3057, %rd2988;
	xor.b64  	%rd3069, %rd3013, %rd3053;
	xor.b64  	%rd3070, %rd3014, %rd3048;
	xor.b64  	%rd3071, %rd3070, %rd3056;
	xor.b64  	%rd3072, %rd3051, %rd3041;
	xor.b64  	%rd3073, %rd3072, %rd3009;
	xor.b64  	%rd3074, %rd3073, %rd3011;
	xor.b64  	%rd3075, %rd3055, %rd3009;
	xor.b64  	%rd3076, %rd3071, %rd3009;
	xor.b64  	%rd3077, %rd3013, %rd3074;
	xor.b64  	%rd3078, %rd3075, %rd3014;
	xor.b64  	%rd3079, %rd3078, %rd3069;
	xor.b64  	%rd3080, %rd3069, %rd3011;
	not.b64 	%rd3081, %rd3068;
	not.b64 	%rd3082, %rd3067;
	and.b64  	%rd3083, %rd3082, -3235311256921745102;
	xor.b64  	%rd3084, %rd3064, %rd3083;
	and.b64  	%rd3085, %rd3084, %rd3065;
	xor.b64  	%rd3086, %rd3085, -3235311256921745102;
	and.b64  	%rd3087, %rd3067, %rd3081;
	xor.b64  	%rd3088, %rd3084, %rd3087;
	not.b64 	%rd3089, %rd3065;
	and.b64  	%rd3090, %rd3067, %rd3089;
	xor.b64  	%rd3091, %rd3090, %rd3081;
	and.b64  	%rd3092, %rd3088, %rd3067;
	xor.b64  	%rd3093, %rd3092, %rd3065;
	xor.b64  	%rd3094, %rd3090, %rd3068;
	and.b64  	%rd3095, %rd3088, %rd3094;
	xor.b64  	%rd3096, %rd3095, %rd3067;
	or.b64  	%rd3097, %rd3093, %rd3091;
	xor.b64  	%rd3098, %rd3097, %rd3088;
	and.b64  	%rd3099, %rd3093, %rd3096;
	xor.b64  	%rd3100, %rd3099, %rd3091;
	and.b64  	%rd3101, %rd3098, %rd3086;
	xor.b64  	%rd3102, %rd3101, %rd3093;
	xor.b64  	%rd3103, %rd3096, %rd3086;
	not.b64 	%rd3104, %rd3080;
	not.b64 	%rd3105, %rd3079;
	and.b64  	%rd3106, %rd3105, 5094879231248996944;
	xor.b64  	%rd3107, %rd3076, %rd3106;
	and.b64  	%rd3108, %rd3107, %rd3077;
	xor.b64  	%rd3109, %rd3108, 5094879231248996944;
	and.b64  	%rd3110, %rd3079, %rd3104;
	xor.b64  	%rd3111, %rd3107, %rd3110;
	not.b64 	%rd3112, %rd3077;
	and.b64  	%rd3113, %rd3079, %rd3112;
	xor.b64  	%rd3114, %rd3113, %rd3104;
	and.b64  	%rd3115, %rd3111, %rd3079;
	xor.b64  	%rd3116, %rd3115, %rd3077;
	xor.b64  	%rd3117, %rd3113, %rd3080;
	and.b64  	%rd3118, %rd3111, %rd3117;
	xor.b64  	%rd3119, %rd3118, %rd3079;
	or.b64  	%rd3120, %rd3116, %rd3114;
	xor.b64  	%rd3121, %rd3120, %rd3111;
	and.b64  	%rd3122, %rd3116, %rd3119;
	xor.b64  	%rd3123, %rd3122, %rd3114;
	and.b64  	%rd3124, %rd3121, %rd3109;
	xor.b64  	%rd3125, %rd3124, %rd3116;
	xor.b64  	%rd3126, %rd3119, %rd3109;
	not.b64 	%rd3127, %rd3075;
	not.b64 	%rd3128, %rd3074;
	and.b64  	%rd3129, %rd3128, -5013908381113303649;
	xor.b64  	%rd3130, %rd3069, %rd3129;
	and.b64  	%rd3131, %rd3130, %rd3071;
	xor.b64  	%rd3132, %rd3131, -5013908381113303649;
	and.b64  	%rd3133, %rd3074, %rd3127;
	xor.b64  	%rd3134, %rd3130, %rd3133;
	not.b64 	%rd3135, %rd3071;
	and.b64  	%rd3136, %rd3074, %rd3135;
	xor.b64  	%rd3137, %rd3136, %rd3127;
	and.b64  	%rd3138, %rd3134, %rd3074;
	xor.b64  	%rd3139, %rd3138, %rd3071;
	xor.b64  	%rd3140, %rd3136, %rd3075;
	and.b64  	%rd3141, %rd3134, %rd3140;
	xor.b64  	%rd3142, %rd3141, %rd3074;
	or.b64  	%rd3143, %rd3139, %rd3137;
	xor.b64  	%rd3144, %rd3143, %rd3134;
	and.b64  	%rd3145, %rd3139, %rd3142;
	xor.b64  	%rd3146, %rd3145, %rd3137;
	and.b64  	%rd3147, %rd3144, %rd3132;
	xor.b64  	%rd3148, %rd3147, %rd3139;
	not.b64 	%rd3149, %rd3063;
	not.b64 	%rd3150, %rd3062;
	and.b64  	%rd3151, %rd3150, 9146342501351279350;
	xor.b64  	%rd3152, %rd3057, %rd3151;
	and.b64  	%rd3153, %rd3152, %rd3059;
	xor.b64  	%rd3154, %rd3153, 9146342501351279350;
	and.b64  	%rd3155, %rd3062, %rd3149;
	xor.b64  	%rd3156, %rd3152, %rd3155;
	not.b64 	%rd3157, %rd3059;
	and.b64  	%rd3158, %rd3062, %rd3157;
	xor.b64  	%rd3159, %rd3158, %rd3149;
	and.b64  	%rd3160, %rd3156, %rd3062;
	xor.b64  	%rd3161, %rd3160, %rd3059;
	xor.b64  	%rd3162, %rd3158, %rd3063;
	and.b64  	%rd3163, %rd3156, %rd3162;
	xor.b64  	%rd3164, %rd3163, %rd3062;
	or.b64  	%rd3165, %rd3161, %rd3159;
	xor.b64  	%rd3166, %rd3165, %rd3156;
	and.b64  	%rd3167, %rd3161, %rd3164;
	xor.b64  	%rd3168, %rd3167, %rd3159;
	and.b64  	%rd3169, %rd3166, %rd3154;
	xor.b64  	%rd3170, %rd3102, %rd3144;
	xor.b64  	%rd3171, %rd3148, %rd3103;
	xor.b64  	%rd3172, %rd3142, %rd3132;
	xor.b64  	%rd3173, %rd3172, %rd3098;
	xor.b64  	%rd3174, %rd3173, %rd3100;
	xor.b64  	%rd3175, %rd3146, %rd3098;
	xor.b64  	%rd3176, %rd3098, %rd3171;
	xor.b64  	%rd3177, %rd3102, %rd3174;
	xor.b64  	%rd3178, %rd3175, %rd3103;
	xor.b64  	%rd3179, %rd3178, %rd3170;
	xor.b64  	%rd3180, %rd3170, %rd3100;
	xor.b64  	%rd3181, %rd3125, %rd3166;
	xor.b64  	%rd3182, %rd3126, %rd3161;
	xor.b64  	%rd3183, %rd3182, %rd3169;
	xor.b64  	%rd3184, %rd3164, %rd3154;
	xor.b64  	%rd3185, %rd3184, %rd3121;
	xor.b64  	%rd3186, %rd3185, %rd3123;
	xor.b64  	%rd3187, %rd3168, %rd3121;
	xor.b64  	%rd3188, %rd3183, %rd3121;
	xor.b64  	%rd3189, %rd3125, %rd3186;
	xor.b64  	%rd3190, %rd3187, %rd3126;
	xor.b64  	%rd3191, %rd3190, %rd3181;
	xor.b64  	%rd3192, %rd3181, %rd3123;
	and.b64  	%rd3193, %rd3170, 6148914691236517205;
	shl.b64 	%rd3194, %rd3193, 1;
	shr.u64 	%rd3195, %rd3170, 1;
	and.b64  	%rd3196, %rd3195, 6148914691236517205;
	or.b64  	%rd3197, %rd3196, %rd3194;
	and.b64  	%rd3198, %rd3181, 6148914691236517205;
	shl.b64 	%rd3199, %rd3198, 1;
	shr.u64 	%rd3200, %rd3181, 1;
	and.b64  	%rd3201, %rd3200, 6148914691236517205;
	or.b64  	%rd3202, %rd3201, %rd3199;
	and.b64  	%rd3203, %rd3171, 6148914691236517205;
	shl.b64 	%rd3204, %rd3203, 1;
	shr.u64 	%rd3205, %rd3171, 1;
	and.b64  	%rd3206, %rd3205, 6148914691236517205;
	or.b64  	%rd3207, %rd3206, %rd3204;
	and.b64  	%rd3208, %rd3183, 6148914691236517205;
	shl.b64 	%rd3209, %rd3208, 1;
	shr.u64 	%rd3210, %rd3183, 1;
	and.b64  	%rd3211, %rd3210, 6148914691236517205;
	or.b64  	%rd3212, %rd3211, %rd3209;
	and.b64  	%rd3213, %rd3174, 6148914691236517205;
	shl.b64 	%rd3214, %rd3213, 1;
	shr.u64 	%rd3215, %rd3174, 1;
	and.b64  	%rd3216, %rd3215, 6148914691236517205;
	or.b64  	%rd3217, %rd3216, %rd3214;
	and.b64  	%rd3218, %rd3186, 6148914691236517205;
	shl.b64 	%rd3219, %rd3218, 1;
	shr.u64 	%rd3220, %rd3186, 1;
	and.b64  	%rd3221, %rd3220, 6148914691236517205;
	or.b64  	%rd3222, %rd3221, %rd3219;
	and.b64  	%rd3223, %rd3175, 6148914691236517205;
	shl.b64 	%rd3224, %rd3223, 1;
	shr.u64 	%rd3225, %rd3175, 1;
	and.b64  	%rd3226, %rd3225, 6148914691236517205;
	or.b64  	%rd3227, %rd3226, %rd3224;
	and.b64  	%rd3228, %rd3187, 6148914691236517205;
	shl.b64 	%rd3229, %rd3228, 1;
	shr.u64 	%rd3230, %rd3187, 1;
	and.b64  	%rd3231, %rd3230, 6148914691236517205;
	or.b64  	%rd3232, %rd3231, %rd3229;
	not.b64 	%rd3233, %rd3180;
	not.b64 	%rd3234, %rd3179;
	and.b64  	%rd3235, %rd3234, 8368014292879520031;
	xor.b64  	%rd3236, %rd3176, %rd3235;
	and.b64  	%rd3237, %rd3236, %rd3177;
	xor.b64  	%rd3238, %rd3237, 8368014292879520031;
	and.b64  	%rd3239, %rd3179, %rd3233;
	xor.b64  	%rd3240, %rd3236, %rd3239;
	not.b64 	%rd3241, %rd3177;
	and.b64  	%rd3242, %rd3179, %rd3241;
	xor.b64  	%rd3243, %rd3242, %rd3233;
	and.b64  	%rd3244, %rd3240, %rd3179;
	xor.b64  	%rd3245, %rd3244, %rd3177;
	xor.b64  	%rd3246, %rd3242, %rd3180;
	and.b64  	%rd3247, %rd3240, %rd3246;
	xor.b64  	%rd3248, %rd3247, %rd3179;
	or.b64  	%rd3249, %rd3245, %rd3243;
	xor.b64  	%rd3250, %rd3249, %rd3240;
	and.b64  	%rd3251, %rd3245, %rd3248;
	xor.b64  	%rd3252, %rd3251, %rd3243;
	and.b64  	%rd3253, %rd3250, %rd3238;
	xor.b64  	%rd3254, %rd3253, %rd3245;
	xor.b64  	%rd3255, %rd3248, %rd3238;
	not.b64 	%rd3256, %rd3192;
	not.b64 	%rd3257, %rd3191;
	and.b64  	%rd3258, %rd3257, -1274177591632740887;
	xor.b64  	%rd3259, %rd3188, %rd3258;
	and.b64  	%rd3260, %rd3259, %rd3189;
	xor.b64  	%rd3261, %rd3260, -1274177591632740887;
	and.b64  	%rd3262, %rd3191, %rd3256;
	xor.b64  	%rd3263, %rd3259, %rd3262;
	not.b64 	%rd3264, %rd3189;
	and.b64  	%rd3265, %rd3191, %rd3264;
	xor.b64  	%rd3266, %rd3265, %rd3256;
	and.b64  	%rd3267, %rd3263, %rd3191;
	xor.b64  	%rd3268, %rd3267, %rd3189;
	xor.b64  	%rd3269, %rd3265, %rd3192;
	and.b64  	%rd3270, %rd3263, %rd3269;
	xor.b64  	%rd3271, %rd3270, %rd3191;
	or.b64  	%rd3272, %rd3268, %rd3266;
	xor.b64  	%rd3273, %rd3272, %rd3263;
	and.b64  	%rd3274, %rd3268, %rd3271;
	xor.b64  	%rd3275, %rd3274, %rd3266;
	and.b64  	%rd3276, %rd3273, %rd3261;
	xor.b64  	%rd3277, %rd3276, %rd3268;
	xor.b64  	%rd3278, %rd3271, %rd3261;
	not.b64 	%rd3279, %rd3227;
	not.b64 	%rd3280, %rd3217;
	and.b64  	%rd3281, %rd3280, 8562275781524084509;
	xor.b64  	%rd3282, %rd3197, %rd3281;
	and.b64  	%rd3283, %rd3282, %rd3207;
	xor.b64  	%rd3284, %rd3283, 8562275781524084509;
	and.b64  	%rd3285, %rd3217, %rd3279;
	xor.b64  	%rd3286, %rd3282, %rd3285;
	not.b64 	%rd3287, %rd3207;
	and.b64  	%rd3288, %rd3217, %rd3287;
	xor.b64  	%rd3289, %rd3288, %rd3279;
	and.b64  	%rd3290, %rd3286, %rd3217;
	xor.b64  	%rd3291, %rd3290, %rd3207;
	xor.b64  	%rd3292, %rd3288, %rd3227;
	and.b64  	%rd3293, %rd3286, %rd3292;
	xor.b64  	%rd3294, %rd3293, %rd3217;
	or.b64  	%rd3295, %rd3291, %rd3289;
	xor.b64  	%rd3296, %rd3295, %rd3286;
	and.b64  	%rd3297, %rd3291, %rd3294;
	xor.b64  	%rd3298, %rd3297, %rd3289;
	and.b64  	%rd3299, %rd3296, %rd3284;
	not.b64 	%rd3300, %rd3232;
	not.b64 	%rd3301, %rd3222;
	and.b64  	%rd3302, %rd3301, 103720934736807482;
	xor.b64  	%rd3303, %rd3202, %rd3302;
	and.b64  	%rd3304, %rd3303, %rd3212;
	xor.b64  	%rd3305, %rd3304, 103720934736807482;
	and.b64  	%rd3306, %rd3222, %rd3300;
	xor.b64  	%rd3307, %rd3303, %rd3306;
	not.b64 	%rd3308, %rd3212;
	and.b64  	%rd3309, %rd3222, %rd3308;
	xor.b64  	%rd3310, %rd3309, %rd3300;
	and.b64  	%rd3311, %rd3307, %rd3222;
	xor.b64  	%rd3312, %rd3311, %rd3212;
	xor.b64  	%rd3313, %rd3309, %rd3232;
	and.b64  	%rd3314, %rd3307, %rd3313;
	xor.b64  	%rd3315, %rd3314, %rd3222;
	or.b64  	%rd3316, %rd3312, %rd3310;
	xor.b64  	%rd3317, %rd3316, %rd3307;
	and.b64  	%rd3318, %rd3312, %rd3315;
	xor.b64  	%rd3319, %rd3318, %rd3310;
	and.b64  	%rd3320, %rd3317, %rd3305;
	xor.b64  	%rd3321, %rd3254, %rd3296;
	xor.b64  	%rd3322, %rd3255, %rd3291;
	xor.b64  	%rd3323, %rd3322, %rd3299;
	xor.b64  	%rd3324, %rd3294, %rd3284;
	xor.b64  	%rd3325, %rd3324, %rd3250;
	xor.b64  	%rd3326, %rd3325, %rd3252;
	xor.b64  	%rd3327, %rd3298, %rd3250;
	xor.b64  	%rd3328, %rd3323, %rd3250;
	xor.b64  	%rd3329, %rd3254, %rd3326;
	xor.b64  	%rd3330, %rd3327, %rd3255;
	xor.b64  	%rd3331, %rd3330, %rd3321;
	xor.b64  	%rd3332, %rd3321, %rd3252;
	xor.b64  	%rd3333, %rd3277, %rd3317;
	xor.b64  	%rd3334, %rd3278, %rd3312;
	xor.b64  	%rd3335, %rd3334, %rd3320;
	xor.b64  	%rd3336, %rd3315, %rd3305;
	xor.b64  	%rd3337, %rd3336, %rd3273;
	xor.b64  	%rd3338, %rd3337, %rd3275;
	xor.b64  	%rd3339, %rd3319, %rd3273;
	xor.b64  	%rd3340, %rd3335, %rd3273;
	xor.b64  	%rd3341, %rd3277, %rd3338;
	xor.b64  	%rd3342, %rd3339, %rd3278;
	xor.b64  	%rd3343, %rd3342, %rd3333;
	xor.b64  	%rd3344, %rd3333, %rd3275;
	and.b64  	%rd3345, %rd3321, 3689348814741910323;
	shl.b64 	%rd3346, %rd3345, 2;
	shr.u64 	%rd3347, %rd3321, 2;
	and.b64  	%rd3348, %rd3347, 3689348814741910323;
	or.b64  	%rd3349, %rd3348, %rd3346;
	and.b64  	%rd3350, %rd3333, 3689348814741910323;
	shl.b64 	%rd3351, %rd3350, 2;
	shr.u64 	%rd3352, %rd3333, 2;
	and.b64  	%rd3353, %rd3352, 3689348814741910323;
	or.b64  	%rd3354, %rd3353, %rd3351;
	and.b64  	%rd3355, %rd3323, 3689348814741910323;
	shl.b64 	%rd3356, %rd3355, 2;
	shr.u64 	%rd3357, %rd3323, 2;
	and.b64  	%rd3358, %rd3357, 3689348814741910323;
	or.b64  	%rd3359, %rd3358, %rd3356;
	and.b64  	%rd3360, %rd3335, 3689348814741910323;
	shl.b64 	%rd3361, %rd3360, 2;
	shr.u64 	%rd3362, %rd3335, 2;
	and.b64  	%rd3363, %rd3362, 3689348814741910323;
	or.b64  	%rd3364, %rd3363, %rd3361;
	and.b64  	%rd3365, %rd3326, 3689348814741910323;
	shl.b64 	%rd3366, %rd3365, 2;
	shr.u64 	%rd3367, %rd3326, 2;
	and.b64  	%rd3368, %rd3367, 3689348814741910323;
	or.b64  	%rd3369, %rd3368, %rd3366;
	and.b64  	%rd3370, %rd3338, 3689348814741910323;
	shl.b64 	%rd3371, %rd3370, 2;
	shr.u64 	%rd3372, %rd3338, 2;
	and.b64  	%rd3373, %rd3372, 3689348814741910323;
	or.b64  	%rd3374, %rd3373, %rd3371;
	and.b64  	%rd3375, %rd3327, 3689348814741910323;
	shl.b64 	%rd3376, %rd3375, 2;
	shr.u64 	%rd3377, %rd3327, 2;
	and.b64  	%rd3378, %rd3377, 3689348814741910323;
	or.b64  	%rd3379, %rd3378, %rd3376;
	and.b64  	%rd3380, %rd3339, 3689348814741910323;
	shl.b64 	%rd3381, %rd3380, 2;
	shr.u64 	%rd3382, %rd3339, 2;
	and.b64  	%rd3383, %rd3382, 3689348814741910323;
	or.b64  	%rd3384, %rd3383, %rd3381;
	not.b64 	%rd3385, %rd3332;
	not.b64 	%rd3386, %rd3331;
	and.b64  	%rd3387, %rd3386, 4816780777163404791;
	xor.b64  	%rd3388, %rd3328, %rd3387;
	and.b64  	%rd3389, %rd3388, %rd3329;
	xor.b64  	%rd3390, %rd3389, 4816780777163404791;
	and.b64  	%rd3391, %rd3331, %rd3385;
	xor.b64  	%rd3392, %rd3388, %rd3391;
	not.b64 	%rd3393, %rd3329;
	and.b64  	%rd3394, %rd3331, %rd3393;
	xor.b64  	%rd3395, %rd3394, %rd3385;
	and.b64  	%rd3396, %rd3392, %rd3331;
	xor.b64  	%rd3397, %rd3396, %rd3329;
	xor.b64  	%rd3398, %rd3394, %rd3332;
	and.b64  	%rd3399, %rd3392, %rd3398;
	xor.b64  	%rd3400, %rd3399, %rd3331;
	or.b64  	%rd3401, %rd3397, %rd3395;
	xor.b64  	%rd3402, %rd3401, %rd3392;
	and.b64  	%rd3403, %rd3397, %rd3400;
	xor.b64  	%rd3404, %rd3403, %rd3395;
	and.b64  	%rd3405, %rd3402, %rd3390;
	xor.b64  	%rd3406, %rd3405, %rd3397;
	xor.b64  	%rd3407, %rd3400, %rd3390;
	not.b64 	%rd3408, %rd3344;
	not.b64 	%rd3409, %rd3343;
	and.b64  	%rd3410, %rd3409, 8748079128091880824;
	xor.b64  	%rd3411, %rd3340, %rd3410;
	and.b64  	%rd3412, %rd3411, %rd3341;
	xor.b64  	%rd3413, %rd3412, 8748079128091880824;
	and.b64  	%rd3414, %rd3343, %rd3408;
	xor.b64  	%rd3415, %rd3411, %rd3414;
	not.b64 	%rd3416, %rd3341;
	and.b64  	%rd3417, %rd3343, %rd3416;
	xor.b64  	%rd3418, %rd3417, %rd3408;
	and.b64  	%rd3419, %rd3415, %rd3343;
	xor.b64  	%rd3420, %rd3419, %rd3341;
	xor.b64  	%rd3421, %rd3417, %rd3344;
	and.b64  	%rd3422, %rd3415, %rd3421;
	xor.b64  	%rd3423, %rd3422, %rd3343;
	or.b64  	%rd3424, %rd3420, %rd3418;
	xor.b64  	%rd3425, %rd3424, %rd3415;
	and.b64  	%rd3426, %rd3420, %rd3423;
	xor.b64  	%rd3427, %rd3426, %rd3418;
	and.b64  	%rd3428, %rd3425, %rd3413;
	xor.b64  	%rd3429, %rd3428, %rd3420;
	xor.b64  	%rd3430, %rd3423, %rd3413;
	not.b64 	%rd3431, %rd3379;
	not.b64 	%rd3432, %rd3369;
	and.b64  	%rd3433, %rd3432, -6279360478382423231;
	xor.b64  	%rd3434, %rd3349, %rd3433;
	and.b64  	%rd3435, %rd3434, %rd3359;
	xor.b64  	%rd3436, %rd3435, -6279360478382423231;
	and.b64  	%rd3437, %rd3369, %rd3431;
	xor.b64  	%rd3438, %rd3434, %rd3437;
	not.b64 	%rd3439, %rd3359;
	and.b64  	%rd3440, %rd3369, %rd3439;
	xor.b64  	%rd3441, %rd3440, %rd3431;
	and.b64  	%rd3442, %rd3438, %rd3369;
	xor.b64  	%rd3443, %rd3442, %rd3359;
	xor.b64  	%rd3444, %rd3440, %rd3379;
	and.b64  	%rd3445, %rd3438, %rd3444;
	xor.b64  	%rd3446, %rd3445, %rd3369;
	or.b64  	%rd3447, %rd3443, %rd3441;
	xor.b64  	%rd3448, %rd3447, %rd3438;
	and.b64  	%rd3449, %rd3443, %rd3446;
	xor.b64  	%rd3450, %rd3449, %rd3441;
	and.b64  	%rd3451, %rd3448, %rd3436;
	not.b64 	%rd3452, %rd3384;
	not.b64 	%rd3453, %rd3374;
	and.b64  	%rd3454, %rd3453, -8994670103698357254;
	xor.b64  	%rd3455, %rd3354, %rd3454;
	and.b64  	%rd3456, %rd3455, %rd3364;
	xor.b64  	%rd3457, %rd3456, -8994670103698357254;
	and.b64  	%rd3458, %rd3374, %rd3452;
	xor.b64  	%rd3459, %rd3455, %rd3458;
	not.b64 	%rd3460, %rd3364;
	and.b64  	%rd3461, %rd3374, %rd3460;
	xor.b64  	%rd3462, %rd3461, %rd3452;
	and.b64  	%rd3463, %rd3459, %rd3374;
	xor.b64  	%rd3464, %rd3463, %rd3364;
	xor.b64  	%rd3465, %rd3461, %rd3384;
	and.b64  	%rd3466, %rd3459, %rd3465;
	xor.b64  	%rd3467, %rd3466, %rd3374;
	or.b64  	%rd3468, %rd3464, %rd3462;
	xor.b64  	%rd3469, %rd3468, %rd3459;
	and.b64  	%rd3470, %rd3464, %rd3467;
	xor.b64  	%rd3471, %rd3470, %rd3462;
	and.b64  	%rd3472, %rd3469, %rd3457;
	xor.b64  	%rd3473, %rd3406, %rd3448;
	xor.b64  	%rd3474, %rd3407, %rd3443;
	xor.b64  	%rd3475, %rd3474, %rd3451;
	xor.b64  	%rd3476, %rd3446, %rd3436;
	xor.b64  	%rd3477, %rd3476, %rd3402;
	xor.b64  	%rd3478, %rd3477, %rd3404;
	xor.b64  	%rd3479, %rd3450, %rd3402;
	xor.b64  	%rd3480, %rd3475, %rd3402;
	xor.b64  	%rd3481, %rd3406, %rd3478;
	xor.b64  	%rd3482, %rd3479, %rd3407;
	xor.b64  	%rd3483, %rd3482, %rd3473;
	xor.b64  	%rd3484, %rd3473, %rd3404;
	xor.b64  	%rd3485, %rd3429, %rd3469;
	xor.b64  	%rd3486, %rd3430, %rd3464;
	xor.b64  	%rd3487, %rd3486, %rd3472;
	xor.b64  	%rd3488, %rd3467, %rd3457;
	xor.b64  	%rd3489, %rd3488, %rd3425;
	xor.b64  	%rd3490, %rd3489, %rd3427;
	xor.b64  	%rd3491, %rd3471, %rd3425;
	xor.b64  	%rd3492, %rd3487, %rd3425;
	xor.b64  	%rd3493, %rd3429, %rd3490;
	xor.b64  	%rd3494, %rd3491, %rd3430;
	xor.b64  	%rd3495, %rd3494, %rd3485;
	xor.b64  	%rd3496, %rd3485, %rd3427;
	and.b64  	%rd3497, %rd3473, 1085102592571150095;
	shl.b64 	%rd3498, %rd3497, 4;
	shr.u64 	%rd3499, %rd3473, 4;
	and.b64  	%rd3500, %rd3499, 1085102592571150095;
	or.b64  	%rd3501, %rd3500, %rd3498;
	and.b64  	%rd3502, %rd3485, 1085102592571150095;
	shl.b64 	%rd3503, %rd3502, 4;
	shr.u64 	%rd3504, %rd3485, 4;
	and.b64  	%rd3505, %rd3504, 1085102592571150095;
	or.b64  	%rd3506, %rd3505, %rd3503;
	and.b64  	%rd3507, %rd3475, 1085102592571150095;
	shl.b64 	%rd3508, %rd3507, 4;
	shr.u64 	%rd3509, %rd3475, 4;
	and.b64  	%rd3510, %rd3509, 1085102592571150095;
	or.b64  	%rd3511, %rd3510, %rd3508;
	and.b64  	%rd3512, %rd3487, 1085102592571150095;
	shl.b64 	%rd3513, %rd3512, 4;
	shr.u64 	%rd3514, %rd3487, 4;
	and.b64  	%rd3515, %rd3514, 1085102592571150095;
	or.b64  	%rd3516, %rd3515, %rd3513;
	and.b64  	%rd3517, %rd3478, 1085102592571150095;
	shl.b64 	%rd3518, %rd3517, 4;
	shr.u64 	%rd3519, %rd3478, 4;
	and.b64  	%rd3520, %rd3519, 1085102592571150095;
	or.b64  	%rd3521, %rd3520, %rd3518;
	and.b64  	%rd3522, %rd3490, 1085102592571150095;
	shl.b64 	%rd3523, %rd3522, 4;
	shr.u64 	%rd3524, %rd3490, 4;
	and.b64  	%rd3525, %rd3524, 1085102592571150095;
	or.b64  	%rd3526, %rd3525, %rd3523;
	and.b64  	%rd3527, %rd3479, 1085102592571150095;
	shl.b64 	%rd3528, %rd3527, 4;
	shr.u64 	%rd3529, %rd3479, 4;
	and.b64  	%rd3530, %rd3529, 1085102592571150095;
	or.b64  	%rd3531, %rd3530, %rd3528;
	and.b64  	%rd3532, %rd3491, 1085102592571150095;
	shl.b64 	%rd3533, %rd3532, 4;
	shr.u64 	%rd3534, %rd3491, 4;
	and.b64  	%rd3535, %rd3534, 1085102592571150095;
	or.b64  	%rd3536, %rd3535, %rd3533;
	not.b64 	%rd3537, %rd3484;
	not.b64 	%rd3538, %rd3483;
	and.b64  	%rd3539, %rd3538, -916720997410062169;
	xor.b64  	%rd3540, %rd3480, %rd3539;
	and.b64  	%rd3541, %rd3540, %rd3481;
	xor.b64  	%rd3542, %rd3541, -916720997410062169;
	and.b64  	%rd3543, %rd3483, %rd3537;
	xor.b64  	%rd3544, %rd3540, %rd3543;
	not.b64 	%rd3545, %rd3481;
	and.b64  	%rd3546, %rd3483, %rd3545;
	xor.b64  	%rd3547, %rd3546, %rd3537;
	and.b64  	%rd3548, %rd3544, %rd3483;
	xor.b64  	%rd3549, %rd3548, %rd3481;
	xor.b64  	%rd3550, %rd3546, %rd3484;
	and.b64  	%rd3551, %rd3544, %rd3550;
	xor.b64  	%rd3552, %rd3551, %rd3483;
	or.b64  	%rd3553, %rd3549, %rd3547;
	xor.b64  	%rd3554, %rd3553, %rd3544;
	and.b64  	%rd3555, %rd3549, %rd3552;
	xor.b64  	%rd3556, %rd3555, %rd3547;
	and.b64  	%rd3557, %rd3554, %rd3542;
	xor.b64  	%rd3558, %rd3557, %rd3549;
	xor.b64  	%rd3559, %rd3552, %rd3542;
	not.b64 	%rd3560, %rd3496;
	not.b64 	%rd3561, %rd3495;
	and.b64  	%rd3562, %rd3561, -7316610279726366631;
	xor.b64  	%rd3563, %rd3492, %rd3562;
	and.b64  	%rd3564, %rd3563, %rd3493;
	xor.b64  	%rd3565, %rd3564, -7316610279726366631;
	and.b64  	%rd3566, %rd3495, %rd3560;
	xor.b64  	%rd3567, %rd3563, %rd3566;
	not.b64 	%rd3568, %rd3493;
	and.b64  	%rd3569, %rd3495, %rd3568;
	xor.b64  	%rd3570, %rd3569, %rd3560;
	and.b64  	%rd3571, %rd3567, %rd3495;
	xor.b64  	%rd3572, %rd3571, %rd3493;
	xor.b64  	%rd3573, %rd3569, %rd3496;
	and.b64  	%rd3574, %rd3567, %rd3573;
	xor.b64  	%rd3575, %rd3574, %rd3495;
	or.b64  	%rd3576, %rd3572, %rd3570;
	xor.b64  	%rd3577, %rd3576, %rd3567;
	and.b64  	%rd3578, %rd3572, %rd3575;
	xor.b64  	%rd3579, %rd3578, %rd3570;
	and.b64  	%rd3580, %rd3577, %rd3565;
	xor.b64  	%rd3581, %rd3580, %rd3572;
	xor.b64  	%rd3582, %rd3575, %rd3565;
	not.b64 	%rd3583, %rd3531;
	not.b64 	%rd3584, %rd3521;
	and.b64  	%rd3585, %rd3584, -193899071309725977;
	xor.b64  	%rd3586, %rd3501, %rd3585;
	and.b64  	%rd3587, %rd3586, %rd3511;
	xor.b64  	%rd3588, %rd3587, -193899071309725977;
	and.b64  	%rd3589, %rd3521, %rd3583;
	xor.b64  	%rd3590, %rd3586, %rd3589;
	not.b64 	%rd3591, %rd3511;
	and.b64  	%rd3592, %rd3521, %rd3591;
	xor.b64  	%rd3593, %rd3592, %rd3583;
	and.b64  	%rd3594, %rd3590, %rd3521;
	xor.b64  	%rd3595, %rd3594, %rd3511;
	xor.b64  	%rd3596, %rd3592, %rd3531;
	and.b64  	%rd3597, %rd3590, %rd3596;
	xor.b64  	%rd3598, %rd3597, %rd3521;
	or.b64  	%rd3599, %rd3595, %rd3593;
	xor.b64  	%rd3600, %rd3599, %rd3590;
	and.b64  	%rd3601, %rd3595, %rd3598;
	xor.b64  	%rd3602, %rd3601, %rd3593;
	and.b64  	%rd3603, %rd3600, %rd3588;
	not.b64 	%rd3604, %rd3536;
	not.b64 	%rd3605, %rd3526;
	and.b64  	%rd3606, %rd3605, -1199831222347498056;
	xor.b64  	%rd3607, %rd3506, %rd3606;
	and.b64  	%rd3608, %rd3607, %rd3516;
	xor.b64  	%rd3609, %rd3608, -1199831222347498056;
	and.b64  	%rd3610, %rd3526, %rd3604;
	xor.b64  	%rd3611, %rd3607, %rd3610;
	not.b64 	%rd3612, %rd3516;
	and.b64  	%rd3613, %rd3526, %rd3612;
	xor.b64  	%rd3614, %rd3613, %rd3604;
	and.b64  	%rd3615, %rd3611, %rd3526;
	xor.b64  	%rd3616, %rd3615, %rd3516;
	xor.b64  	%rd3617, %rd3613, %rd3536;
	and.b64  	%rd3618, %rd3611, %rd3617;
	xor.b64  	%rd3619, %rd3618, %rd3526;
	or.b64  	%rd3620, %rd3616, %rd3614;
	xor.b64  	%rd3621, %rd3620, %rd3611;
	and.b64  	%rd3622, %rd3616, %rd3619;
	xor.b64  	%rd3623, %rd3622, %rd3614;
	and.b64  	%rd3624, %rd3621, %rd3609;
	xor.b64  	%rd3625, %rd3558, %rd3600;
	xor.b64  	%rd3626, %rd3559, %rd3595;
	xor.b64  	%rd3627, %rd3626, %rd3603;
	xor.b64  	%rd3628, %rd3598, %rd3588;
	xor.b64  	%rd3629, %rd3628, %rd3554;
	xor.b64  	%rd3630, %rd3629, %rd3556;
	xor.b64  	%rd3631, %rd3602, %rd3554;
	xor.b64  	%rd3632, %rd3627, %rd3554;
	xor.b64  	%rd3633, %rd3558, %rd3630;
	xor.b64  	%rd3634, %rd3631, %rd3559;
	xor.b64  	%rd3635, %rd3634, %rd3625;
	xor.b64  	%rd3636, %rd3625, %rd3556;
	xor.b64  	%rd3637, %rd3581, %rd3621;
	xor.b64  	%rd3638, %rd3582, %rd3616;
	xor.b64  	%rd3639, %rd3638, %rd3624;
	xor.b64  	%rd3640, %rd3619, %rd3609;
	xor.b64  	%rd3641, %rd3640, %rd3577;
	xor.b64  	%rd3642, %rd3641, %rd3579;
	xor.b64  	%rd3643, %rd3623, %rd3577;
	xor.b64  	%rd3644, %rd3639, %rd3577;
	xor.b64  	%rd3645, %rd3581, %rd3642;
	xor.b64  	%rd3646, %rd3643, %rd3582;
	xor.b64  	%rd3647, %rd3646, %rd3637;
	xor.b64  	%rd3648, %rd3637, %rd3579;
	and.b64  	%rd3649, %rd3625, 71777214294589695;
	shl.b64 	%rd3650, %rd3649, 8;
	shr.u64 	%rd3651, %rd3625, 8;
	and.b64  	%rd3652, %rd3651, 71777214294589695;
	or.b64  	%rd3653, %rd3652, %rd3650;
	and.b64  	%rd3654, %rd3637, 71777214294589695;
	shl.b64 	%rd3655, %rd3654, 8;
	shr.u64 	%rd3656, %rd3637, 8;
	and.b64  	%rd3657, %rd3656, 71777214294589695;
	or.b64  	%rd3658, %rd3657, %rd3655;
	and.b64  	%rd3659, %rd3627, 71777214294589695;
	shl.b64 	%rd3660, %rd3659, 8;
	shr.u64 	%rd3661, %rd3627, 8;
	and.b64  	%rd3662, %rd3661, 71777214294589695;
	or.b64  	%rd3663, %rd3662, %rd3660;
	and.b64  	%rd3664, %rd3639, 71777214294589695;
	shl.b64 	%rd3665, %rd3664, 8;
	shr.u64 	%rd3666, %rd3639, 8;
	and.b64  	%rd3667, %rd3666, 71777214294589695;
	or.b64  	%rd3668, %rd3667, %rd3665;
	and.b64  	%rd3669, %rd3630, 71777214294589695;
	shl.b64 	%rd3670, %rd3669, 8;
	shr.u64 	%rd3671, %rd3630, 8;
	and.b64  	%rd3672, %rd3671, 71777214294589695;
	or.b64  	%rd3673, %rd3672, %rd3670;
	and.b64  	%rd3674, %rd3642, 71777214294589695;
	shl.b64 	%rd3675, %rd3674, 8;
	shr.u64 	%rd3676, %rd3642, 8;
	and.b64  	%rd3677, %rd3676, 71777214294589695;
	or.b64  	%rd3678, %rd3677, %rd3675;
	and.b64  	%rd3679, %rd3631, 71777214294589695;
	shl.b64 	%rd3680, %rd3679, 8;
	shr.u64 	%rd3681, %rd3631, 8;
	and.b64  	%rd3682, %rd3681, 71777214294589695;
	or.b64  	%rd3683, %rd3682, %rd3680;
	and.b64  	%rd3684, %rd3643, 71777214294589695;
	shl.b64 	%rd3685, %rd3684, 8;
	shr.u64 	%rd3686, %rd3643, 8;
	and.b64  	%rd3687, %rd3686, 71777214294589695;
	or.b64  	%rd3688, %rd3687, %rd3685;
	not.b64 	%rd3689, %rd3636;
	not.b64 	%rd3690, %rd3635;
	and.b64  	%rd3691, %rd3690, -2671961503656273011;
	xor.b64  	%rd3692, %rd3632, %rd3691;
	and.b64  	%rd3693, %rd3692, %rd3633;
	xor.b64  	%rd3694, %rd3693, -2671961503656273011;
	and.b64  	%rd3695, %rd3635, %rd3689;
	xor.b64  	%rd3696, %rd3692, %rd3695;
	not.b64 	%rd3697, %rd3633;
	and.b64  	%rd3698, %rd3635, %rd3697;
	xor.b64  	%rd3699, %rd3698, %rd3689;
	and.b64  	%rd3700, %rd3696, %rd3635;
	xor.b64  	%rd3701, %rd3700, %rd3633;
	xor.b64  	%rd3702, %rd3698, %rd3636;
	and.b64  	%rd3703, %rd3696, %rd3702;
	xor.b64  	%rd3704, %rd3703, %rd3635;
	or.b64  	%rd3705, %rd3701, %rd3699;
	xor.b64  	%rd3706, %rd3705, %rd3696;
	and.b64  	%rd3707, %rd3701, %rd3704;
	xor.b64  	%rd3708, %rd3707, %rd3699;
	and.b64  	%rd3709, %rd3706, %rd3694;
	xor.b64  	%rd3710, %rd3709, %rd3701;
	xor.b64  	%rd3711, %rd3704, %rd3694;
	not.b64 	%rd3712, %rd3648;
	not.b64 	%rd3713, %rd3647;
	and.b64  	%rd3714, %rd3713, 968541549125673563;
	xor.b64  	%rd3715, %rd3644, %rd3714;
	and.b64  	%rd3716, %rd3715, %rd3645;
	xor.b64  	%rd3717, %rd3716, 968541549125673563;
	and.b64  	%rd3718, %rd3647, %rd3712;
	xor.b64  	%rd3719, %rd3715, %rd3718;
	not.b64 	%rd3720, %rd3645;
	and.b64  	%rd3721, %rd3647, %rd3720;
	xor.b64  	%rd3722, %rd3721, %rd3712;
	and.b64  	%rd3723, %rd3719, %rd3647;
	xor.b64  	%rd3724, %rd3723, %rd3645;
	xor.b64  	%rd3725, %rd3721, %rd3648;
	and.b64  	%rd3726, %rd3719, %rd3725;
	xor.b64  	%rd3727, %rd3726, %rd3647;
	or.b64  	%rd3728, %rd3724, %rd3722;
	xor.b64  	%rd3729, %rd3728, %rd3719;
	and.b64  	%rd3730, %rd3724, %rd3727;
	xor.b64  	%rd3731, %rd3730, %rd3722;
	and.b64  	%rd3732, %rd3729, %rd3717;
	xor.b64  	%rd3733, %rd3732, %rd3724;
	xor.b64  	%rd3734, %rd3727, %rd3717;
	not.b64 	%rd3735, %rd3683;
	not.b64 	%rd3736, %rd3673;
	and.b64  	%rd3737, %rd3736, -8911060729056052355;
	xor.b64  	%rd3738, %rd3653, %rd3737;
	and.b64  	%rd3739, %rd3738, %rd3663;
	xor.b64  	%rd3740, %rd3739, -8911060729056052355;
	and.b64  	%rd3741, %rd3673, %rd3735;
	xor.b64  	%rd3742, %rd3738, %rd3741;
	not.b64 	%rd3743, %rd3663;
	and.b64  	%rd3744, %rd3673, %rd3743;
	xor.b64  	%rd3745, %rd3744, %rd3735;
	and.b64  	%rd3746, %rd3742, %rd3673;
	xor.b64  	%rd3747, %rd3746, %rd3663;
	xor.b64  	%rd3748, %rd3744, %rd3683;
	and.b64  	%rd3749, %rd3742, %rd3748;
	xor.b64  	%rd3750, %rd3749, %rd3673;
	or.b64  	%rd3751, %rd3747, %rd3745;
	xor.b64  	%rd3752, %rd3751, %rd3742;
	and.b64  	%rd3753, %rd3747, %rd3750;
	xor.b64  	%rd3754, %rd3753, %rd3745;
	and.b64  	%rd3755, %rd3752, %rd3740;
	not.b64 	%rd3756, %rd3688;
	not.b64 	%rd3757, %rd3678;
	and.b64  	%rd3758, %rd3757, 7318060106701710837;
	xor.b64  	%rd3759, %rd3658, %rd3758;
	and.b64  	%rd3760, %rd3759, %rd3668;
	xor.b64  	%rd3761, %rd3760, 7318060106701710837;
	and.b64  	%rd3762, %rd3678, %rd3756;
	xor.b64  	%rd3763, %rd3759, %rd3762;
	not.b64 	%rd3764, %rd3668;
	and.b64  	%rd3765, %rd3678, %rd3764;
	xor.b64  	%rd3766, %rd3765, %rd3756;
	and.b64  	%rd3767, %rd3763, %rd3678;
	xor.b64  	%rd3768, %rd3767, %rd3668;
	xor.b64  	%rd3769, %rd3765, %rd3688;
	and.b64  	%rd3770, %rd3763, %rd3769;
	xor.b64  	%rd3771, %rd3770, %rd3678;
	or.b64  	%rd3772, %rd3768, %rd3766;
	xor.b64  	%rd3773, %rd3772, %rd3763;
	and.b64  	%rd3774, %rd3768, %rd3771;
	xor.b64  	%rd3775, %rd3774, %rd3766;
	and.b64  	%rd3776, %rd3773, %rd3761;
	xor.b64  	%rd3777, %rd3710, %rd3752;
	xor.b64  	%rd3778, %rd3711, %rd3747;
	xor.b64  	%rd3779, %rd3778, %rd3755;
	xor.b64  	%rd3780, %rd3750, %rd3740;
	xor.b64  	%rd3781, %rd3780, %rd3706;
	xor.b64  	%rd3782, %rd3781, %rd3708;
	xor.b64  	%rd3783, %rd3754, %rd3706;
	xor.b64  	%rd3784, %rd3779, %rd3706;
	xor.b64  	%rd3785, %rd3710, %rd3782;
	xor.b64  	%rd3786, %rd3783, %rd3711;
	xor.b64  	%rd3787, %rd3786, %rd3777;
	xor.b64  	%rd3788, %rd3777, %rd3708;
	xor.b64  	%rd3789, %rd3733, %rd3773;
	xor.b64  	%rd3790, %rd3734, %rd3768;
	xor.b64  	%rd3791, %rd3790, %rd3776;
	xor.b64  	%rd3792, %rd3771, %rd3761;
	xor.b64  	%rd3793, %rd3792, %rd3729;
	xor.b64  	%rd3794, %rd3793, %rd3731;
	xor.b64  	%rd3795, %rd3775, %rd3729;
	xor.b64  	%rd3796, %rd3791, %rd3729;
	xor.b64  	%rd3797, %rd3733, %rd3794;
	xor.b64  	%rd3798, %rd3795, %rd3734;
	xor.b64  	%rd3799, %rd3798, %rd3789;
	xor.b64  	%rd3800, %rd3789, %rd3731;
	and.b64  	%rd3801, %rd3777, 281470681808895;
	shl.b64 	%rd3802, %rd3801, 16;
	shr.u64 	%rd3803, %rd3777, 16;
	and.b64  	%rd3804, %rd3803, 281470681808895;
	or.b64  	%rd3805, %rd3804, %rd3802;
	and.b64  	%rd3806, %rd3789, 281470681808895;
	shl.b64 	%rd3807, %rd3806, 16;
	shr.u64 	%rd3808, %rd3789, 16;
	and.b64  	%rd3809, %rd3808, 281470681808895;
	or.b64  	%rd3810, %rd3809, %rd3807;
	and.b64  	%rd3811, %rd3779, 281470681808895;
	shl.b64 	%rd3812, %rd3811, 16;
	shr.u64 	%rd3813, %rd3779, 16;
	and.b64  	%rd3814, %rd3813, 281470681808895;
	or.b64  	%rd3815, %rd3814, %rd3812;
	and.b64  	%rd3816, %rd3791, 281470681808895;
	shl.b64 	%rd3817, %rd3816, 16;
	shr.u64 	%rd3818, %rd3791, 16;
	and.b64  	%rd3819, %rd3818, 281470681808895;
	or.b64  	%rd3820, %rd3819, %rd3817;
	and.b64  	%rd3821, %rd3782, 281470681808895;
	shl.b64 	%rd3822, %rd3821, 16;
	shr.u64 	%rd3823, %rd3782, 16;
	and.b64  	%rd3824, %rd3823, 281470681808895;
	or.b64  	%rd3825, %rd3824, %rd3822;
	and.b64  	%rd3826, %rd3794, 281470681808895;
	shl.b64 	%rd3827, %rd3826, 16;
	shr.u64 	%rd3828, %rd3794, 16;
	and.b64  	%rd3829, %rd3828, 281470681808895;
	or.b64  	%rd3830, %rd3829, %rd3827;
	and.b64  	%rd3831, %rd3783, 281470681808895;
	shl.b64 	%rd3832, %rd3831, 16;
	shr.u64 	%rd3833, %rd3783, 16;
	and.b64  	%rd3834, %rd3833, 281470681808895;
	or.b64  	%rd3835, %rd3834, %rd3832;
	and.b64  	%rd3836, %rd3795, 281470681808895;
	shl.b64 	%rd3837, %rd3836, 16;
	shr.u64 	%rd3838, %rd3795, 16;
	and.b64  	%rd3839, %rd3838, 281470681808895;
	or.b64  	%rd3840, %rd3839, %rd3837;
	not.b64 	%rd3841, %rd3788;
	not.b64 	%rd3842, %rd3787;
	and.b64  	%rd3843, %rd3842, 5997405156992530592;
	xor.b64  	%rd3844, %rd3784, %rd3843;
	and.b64  	%rd3845, %rd3844, %rd3785;
	xor.b64  	%rd3846, %rd3845, 5997405156992530592;
	and.b64  	%rd3847, %rd3787, %rd3841;
	xor.b64  	%rd3848, %rd3844, %rd3847;
	not.b64 	%rd3849, %rd3785;
	and.b64  	%rd3850, %rd3787, %rd3849;
	xor.b64  	%rd3851, %rd3850, %rd3841;
	and.b64  	%rd3852, %rd3848, %rd3787;
	xor.b64  	%rd3853, %rd3852, %rd3785;
	xor.b64  	%rd3854, %rd3850, %rd3788;
	and.b64  	%rd3855, %rd3848, %rd3854;
	xor.b64  	%rd3856, %rd3855, %rd3787;
	or.b64  	%rd3857, %rd3853, %rd3851;
	xor.b64  	%rd3858, %rd3857, %rd3848;
	and.b64  	%rd3859, %rd3853, %rd3856;
	xor.b64  	%rd3860, %rd3859, %rd3851;
	and.b64  	%rd3861, %rd3858, %rd3846;
	xor.b64  	%rd3862, %rd3861, %rd3853;
	xor.b64  	%rd3863, %rd3856, %rd3846;
	not.b64 	%rd3864, %rd3800;
	not.b64 	%rd3865, %rd3799;
	and.b64  	%rd3866, %rd3865, 6551680232800626700;
	xor.b64  	%rd3867, %rd3796, %rd3866;
	and.b64  	%rd3868, %rd3867, %rd3797;
	xor.b64  	%rd3869, %rd3868, 6551680232800626700;
	and.b64  	%rd3870, %rd3799, %rd3864;
	xor.b64  	%rd3871, %rd3867, %rd3870;
	not.b64 	%rd3872, %rd3797;
	and.b64  	%rd3873, %rd3799, %rd3872;
	xor.b64  	%rd3874, %rd3873, %rd3864;
	and.b64  	%rd3875, %rd3871, %rd3799;
	xor.b64  	%rd3876, %rd3875, %rd3797;
	xor.b64  	%rd3877, %rd3873, %rd3800;
	and.b64  	%rd3878, %rd3871, %rd3877;
	xor.b64  	%rd3879, %rd3878, %rd3799;
	or.b64  	%rd3880, %rd3876, %rd3874;
	xor.b64  	%rd3881, %rd3880, %rd3871;
	and.b64  	%rd3882, %rd3876, %rd3879;
	xor.b64  	%rd3883, %rd3882, %rd3874;
	and.b64  	%rd3884, %rd3881, %rd3869;
	xor.b64  	%rd3885, %rd3884, %rd3876;
	xor.b64  	%rd3886, %rd3879, %rd3869;
	not.b64 	%rd3887, %rd3835;
	not.b64 	%rd3888, %rd3825;
	and.b64  	%rd3889, %rd3888, 5731085984352987281;
	xor.b64  	%rd3890, %rd3805, %rd3889;
	and.b64  	%rd3891, %rd3890, %rd3815;
	xor.b64  	%rd3892, %rd3891, 5731085984352987281;
	and.b64  	%rd3893, %rd3825, %rd3887;
	xor.b64  	%rd3894, %rd3890, %rd3893;
	not.b64 	%rd3895, %rd3815;
	and.b64  	%rd3896, %rd3825, %rd3895;
	xor.b64  	%rd3897, %rd3896, %rd3887;
	and.b64  	%rd3898, %rd3894, %rd3825;
	xor.b64  	%rd3899, %rd3898, %rd3815;
	xor.b64  	%rd3900, %rd3896, %rd3835;
	and.b64  	%rd3901, %rd3894, %rd3900;
	xor.b64  	%rd3902, %rd3901, %rd3825;
	or.b64  	%rd3903, %rd3899, %rd3897;
	xor.b64  	%rd3904, %rd3903, %rd3894;
	and.b64  	%rd3905, %rd3899, %rd3902;
	xor.b64  	%rd3906, %rd3905, %rd3897;
	and.b64  	%rd3907, %rd3904, %rd3892;
	not.b64 	%rd3908, %rd3840;
	not.b64 	%rd3909, %rd3830;
	and.b64  	%rd3910, %rd3909, 5529500018250920027;
	xor.b64  	%rd3911, %rd3810, %rd3910;
	and.b64  	%rd3912, %rd3911, %rd3820;
	xor.b64  	%rd3913, %rd3912, 5529500018250920027;
	and.b64  	%rd3914, %rd3830, %rd3908;
	xor.b64  	%rd3915, %rd3911, %rd3914;
	not.b64 	%rd3916, %rd3820;
	and.b64  	%rd3917, %rd3830, %rd3916;
	xor.b64  	%rd3918, %rd3917, %rd3908;
	and.b64  	%rd3919, %rd3915, %rd3830;
	xor.b64  	%rd3920, %rd3919, %rd3820;
	xor.b64  	%rd3921, %rd3917, %rd3840;
	and.b64  	%rd3922, %rd3915, %rd3921;
	xor.b64  	%rd3923, %rd3922, %rd3830;
	or.b64  	%rd3924, %rd3920, %rd3918;
	xor.b64  	%rd3925, %rd3924, %rd3915;
	and.b64  	%rd3926, %rd3920, %rd3923;
	xor.b64  	%rd3927, %rd3926, %rd3918;
	and.b64  	%rd3928, %rd3925, %rd3913;
	xor.b64  	%rd3929, %rd3862, %rd3904;
	xor.b64  	%rd3930, %rd3863, %rd3899;
	xor.b64  	%rd3931, %rd3930, %rd3907;
	xor.b64  	%rd3932, %rd3902, %rd3892;
	xor.b64  	%rd3933, %rd3932, %rd3858;
	xor.b64  	%rd3934, %rd3933, %rd3860;
	xor.b64  	%rd3935, %rd3906, %rd3858;
	xor.b64  	%rd3936, %rd3931, %rd3858;
	xor.b64  	%rd3937, %rd3862, %rd3934;
	xor.b64  	%rd3938, %rd3935, %rd3863;
	xor.b64  	%rd3939, %rd3938, %rd3929;
	xor.b64  	%rd3940, %rd3929, %rd3860;
	xor.b64  	%rd3941, %rd3885, %rd3925;
	xor.b64  	%rd3942, %rd3886, %rd3920;
	xor.b64  	%rd3943, %rd3942, %rd3928;
	xor.b64  	%rd3944, %rd3923, %rd3913;
	xor.b64  	%rd3945, %rd3944, %rd3881;
	xor.b64  	%rd3946, %rd3945, %rd3883;
	xor.b64  	%rd3947, %rd3927, %rd3881;
	xor.b64  	%rd3948, %rd3943, %rd3881;
	xor.b64  	%rd3949, %rd3885, %rd3946;
	xor.b64  	%rd3950, %rd3947, %rd3886;
	xor.b64  	%rd3951, %rd3950, %rd3941;
	xor.b64  	%rd3952, %rd3941, %rd3883;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3929, 32;
	shr.b64 	%rhs, %rd3929, 32;
	add.u64 	%rd3953, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3941, 32;
	shr.b64 	%rhs, %rd3941, 32;
	add.u64 	%rd3954, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3931, 32;
	shr.b64 	%rhs, %rd3931, 32;
	add.u64 	%rd3955, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3943, 32;
	shr.b64 	%rhs, %rd3943, 32;
	add.u64 	%rd3956, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3934, 32;
	shr.b64 	%rhs, %rd3934, 32;
	add.u64 	%rd3957, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3946, 32;
	shr.b64 	%rhs, %rd3946, 32;
	add.u64 	%rd3958, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3935, 32;
	shr.b64 	%rhs, %rd3935, 32;
	add.u64 	%rd3959, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd3947, 32;
	shr.b64 	%rhs, %rd3947, 32;
	add.u64 	%rd3960, %lhs, %rhs;
	}
	not.b64 	%rd3961, %rd3940;
	not.b64 	%rd3962, %rd3939;
	and.b64  	%rd3963, %rd3962, 8904891843535944675;
	xor.b64  	%rd3964, %rd3936, %rd3963;
	and.b64  	%rd3965, %rd3964, %rd3937;
	xor.b64  	%rd3966, %rd3965, 8904891843535944675;
	and.b64  	%rd3967, %rd3939, %rd3961;
	xor.b64  	%rd3968, %rd3964, %rd3967;
	not.b64 	%rd3969, %rd3937;
	and.b64  	%rd3970, %rd3939, %rd3969;
	xor.b64  	%rd3971, %rd3970, %rd3961;
	and.b64  	%rd3972, %rd3968, %rd3939;
	xor.b64  	%rd3973, %rd3972, %rd3937;
	xor.b64  	%rd3974, %rd3970, %rd3940;
	and.b64  	%rd3975, %rd3968, %rd3974;
	xor.b64  	%rd3976, %rd3975, %rd3939;
	or.b64  	%rd3977, %rd3973, %rd3971;
	xor.b64  	%rd3978, %rd3977, %rd3968;
	and.b64  	%rd3979, %rd3973, %rd3976;
	xor.b64  	%rd3980, %rd3979, %rd3971;
	and.b64  	%rd3981, %rd3978, %rd3966;
	xor.b64  	%rd3982, %rd3981, %rd3973;
	xor.b64  	%rd3983, %rd3976, %rd3966;
	not.b64 	%rd3984, %rd3952;
	not.b64 	%rd3985, %rd3951;
	and.b64  	%rd3986, %rd3985, 6709355685852011125;
	xor.b64  	%rd3987, %rd3948, %rd3986;
	and.b64  	%rd3988, %rd3987, %rd3949;
	xor.b64  	%rd3989, %rd3988, 6709355685852011125;
	and.b64  	%rd3990, %rd3951, %rd3984;
	xor.b64  	%rd3991, %rd3987, %rd3990;
	not.b64 	%rd3992, %rd3949;
	and.b64  	%rd3993, %rd3951, %rd3992;
	xor.b64  	%rd3994, %rd3993, %rd3984;
	and.b64  	%rd3995, %rd3991, %rd3951;
	xor.b64  	%rd3996, %rd3995, %rd3949;
	xor.b64  	%rd3997, %rd3993, %rd3952;
	and.b64  	%rd3998, %rd3991, %rd3997;
	xor.b64  	%rd3999, %rd3998, %rd3951;
	or.b64  	%rd4000, %rd3996, %rd3994;
	xor.b64  	%rd4001, %rd4000, %rd3991;
	and.b64  	%rd4002, %rd3996, %rd3999;
	xor.b64  	%rd4003, %rd4002, %rd3994;
	and.b64  	%rd4004, %rd4001, %rd3989;
	xor.b64  	%rd4005, %rd4004, %rd3996;
	xor.b64  	%rd4006, %rd3999, %rd3989;
	not.b64 	%rd4007, %rd3959;
	not.b64 	%rd4008, %rd3957;
	and.b64  	%rd4009, %rd4008, 7904719891145207396;
	xor.b64  	%rd4010, %rd3953, %rd4009;
	and.b64  	%rd4011, %rd4010, %rd3955;
	xor.b64  	%rd4012, %rd4011, 7904719891145207396;
	and.b64  	%rd4013, %rd3957, %rd4007;
	xor.b64  	%rd4014, %rd4010, %rd4013;
	not.b64 	%rd4015, %rd3955;
	and.b64  	%rd4016, %rd3957, %rd4015;
	xor.b64  	%rd4017, %rd4016, %rd4007;
	and.b64  	%rd4018, %rd4014, %rd3957;
	xor.b64  	%rd4019, %rd4018, %rd3955;
	xor.b64  	%rd4020, %rd4016, %rd3959;
	and.b64  	%rd4021, %rd4014, %rd4020;
	xor.b64  	%rd4022, %rd4021, %rd3957;
	or.b64  	%rd4023, %rd4019, %rd4017;
	xor.b64  	%rd4024, %rd4023, %rd4014;
	and.b64  	%rd4025, %rd4019, %rd4022;
	xor.b64  	%rd4026, %rd4025, %rd4017;
	and.b64  	%rd4027, %rd4024, %rd4012;
	not.b64 	%rd4028, %rd3960;
	not.b64 	%rd4029, %rd3958;
	and.b64  	%rd4030, %rd4029, 8204195918277588076;
	xor.b64  	%rd4031, %rd3954, %rd4030;
	and.b64  	%rd4032, %rd4031, %rd3956;
	xor.b64  	%rd4033, %rd4032, 8204195918277588076;
	and.b64  	%rd4034, %rd3958, %rd4028;
	xor.b64  	%rd4035, %rd4031, %rd4034;
	not.b64 	%rd4036, %rd3956;
	and.b64  	%rd4037, %rd3958, %rd4036;
	xor.b64  	%rd4038, %rd4037, %rd4028;
	and.b64  	%rd4039, %rd4035, %rd3958;
	xor.b64  	%rd4040, %rd4039, %rd3956;
	xor.b64  	%rd4041, %rd4037, %rd3960;
	and.b64  	%rd4042, %rd4035, %rd4041;
	xor.b64  	%rd4043, %rd4042, %rd3958;
	or.b64  	%rd4044, %rd4040, %rd4038;
	xor.b64  	%rd4045, %rd4044, %rd4035;
	and.b64  	%rd4046, %rd4040, %rd4043;
	xor.b64  	%rd4047, %rd4046, %rd4038;
	and.b64  	%rd4048, %rd4045, %rd4033;
	xor.b64  	%rd4049, %rd3982, %rd4024;
	xor.b64  	%rd4050, %rd3983, %rd4019;
	xor.b64  	%rd4051, %rd4050, %rd4027;
	xor.b64  	%rd4052, %rd4022, %rd4012;
	xor.b64  	%rd4053, %rd4052, %rd3978;
	xor.b64  	%rd4054, %rd4053, %rd3980;
	xor.b64  	%rd4055, %rd4026, %rd3978;
	xor.b64  	%rd4056, %rd4051, %rd3978;
	xor.b64  	%rd4057, %rd3982, %rd4054;
	xor.b64  	%rd4058, %rd4055, %rd3983;
	xor.b64  	%rd4059, %rd4058, %rd4049;
	xor.b64  	%rd4060, %rd4049, %rd3980;
	xor.b64  	%rd4061, %rd4005, %rd4045;
	xor.b64  	%rd4062, %rd4006, %rd4040;
	xor.b64  	%rd4063, %rd4062, %rd4048;
	xor.b64  	%rd4064, %rd4043, %rd4033;
	xor.b64  	%rd4065, %rd4064, %rd4001;
	xor.b64  	%rd4066, %rd4065, %rd4003;
	xor.b64  	%rd4067, %rd4047, %rd4001;
	xor.b64  	%rd4068, %rd4063, %rd4001;
	xor.b64  	%rd4069, %rd4005, %rd4066;
	xor.b64  	%rd4070, %rd4067, %rd4006;
	xor.b64  	%rd4071, %rd4070, %rd4061;
	xor.b64  	%rd4072, %rd4061, %rd4003;
	not.b64 	%rd4073, %rd4060;
	not.b64 	%rd4074, %rd4059;
	and.b64  	%rd4075, %rd4074, 3049373526640452088;
	xor.b64  	%rd4076, %rd4056, %rd4075;
	and.b64  	%rd4077, %rd4076, %rd4057;
	xor.b64  	%rd4078, %rd4077, 3049373526640452088;
	and.b64  	%rd4079, %rd4059, %rd4073;
	xor.b64  	%rd4080, %rd4076, %rd4079;
	not.b64 	%rd4081, %rd4057;
	and.b64  	%rd4082, %rd4059, %rd4081;
	xor.b64  	%rd4083, %rd4082, %rd4073;
	and.b64  	%rd4084, %rd4080, %rd4059;
	xor.b64  	%rd4085, %rd4084, %rd4057;
	xor.b64  	%rd4086, %rd4082, %rd4060;
	and.b64  	%rd4087, %rd4080, %rd4086;
	xor.b64  	%rd4088, %rd4087, %rd4059;
	or.b64  	%rd4089, %rd4085, %rd4083;
	xor.b64  	%rd4090, %rd4089, %rd4080;
	and.b64  	%rd4091, %rd4085, %rd4088;
	xor.b64  	%rd4092, %rd4091, %rd4083;
	and.b64  	%rd4093, %rd4090, %rd4078;
	xor.b64  	%rd4094, %rd4093, %rd4085;
	xor.b64  	%rd4095, %rd4088, %rd4078;
	not.b64 	%rd4096, %rd4072;
	not.b64 	%rd4097, %rd4071;
	and.b64  	%rd4098, %rd4097, -255054428692489245;
	xor.b64  	%rd4099, %rd4068, %rd4098;
	and.b64  	%rd4100, %rd4099, %rd4069;
	xor.b64  	%rd4101, %rd4100, -255054428692489245;
	and.b64  	%rd4102, %rd4071, %rd4096;
	xor.b64  	%rd4103, %rd4099, %rd4102;
	not.b64 	%rd4104, %rd4069;
	and.b64  	%rd4105, %rd4071, %rd4104;
	xor.b64  	%rd4106, %rd4105, %rd4096;
	and.b64  	%rd4107, %rd4103, %rd4071;
	xor.b64  	%rd4108, %rd4107, %rd4069;
	xor.b64  	%rd4109, %rd4105, %rd4072;
	and.b64  	%rd4110, %rd4103, %rd4109;
	xor.b64  	%rd4111, %rd4110, %rd4071;
	or.b64  	%rd4112, %rd4108, %rd4106;
	xor.b64  	%rd4113, %rd4112, %rd4103;
	and.b64  	%rd4114, %rd4108, %rd4111;
	xor.b64  	%rd4115, %rd4114, %rd4106;
	and.b64  	%rd4116, %rd4113, %rd4101;
	xor.b64  	%rd4117, %rd4116, %rd4108;
	xor.b64  	%rd4118, %rd4111, %rd4101;
	not.b64 	%rd4119, %rd4067;
	not.b64 	%rd4120, %rd4066;
	and.b64  	%rd4121, %rd4120, -6755454124818650084;
	xor.b64  	%rd4122, %rd4061, %rd4121;
	and.b64  	%rd4123, %rd4122, %rd4063;
	xor.b64  	%rd4124, %rd4123, -6755454124818650084;
	and.b64  	%rd4125, %rd4066, %rd4119;
	xor.b64  	%rd4126, %rd4122, %rd4125;
	not.b64 	%rd4127, %rd4063;
	and.b64  	%rd4128, %rd4066, %rd4127;
	xor.b64  	%rd4129, %rd4128, %rd4119;
	and.b64  	%rd4130, %rd4126, %rd4066;
	xor.b64  	%rd4131, %rd4130, %rd4063;
	xor.b64  	%rd4132, %rd4128, %rd4067;
	and.b64  	%rd4133, %rd4126, %rd4132;
	xor.b64  	%rd4134, %rd4133, %rd4066;
	or.b64  	%rd4135, %rd4131, %rd4129;
	xor.b64  	%rd4136, %rd4135, %rd4126;
	and.b64  	%rd4137, %rd4131, %rd4134;
	xor.b64  	%rd4138, %rd4137, %rd4129;
	and.b64  	%rd4139, %rd4136, %rd4124;
	xor.b64  	%rd4140, %rd4139, %rd4131;
	not.b64 	%rd4141, %rd4055;
	not.b64 	%rd4142, %rd4054;
	and.b64  	%rd4143, %rd4142, -5745493603286664345;
	xor.b64  	%rd4144, %rd4049, %rd4143;
	and.b64  	%rd4145, %rd4144, %rd4051;
	xor.b64  	%rd4146, %rd4145, -5745493603286664345;
	and.b64  	%rd4147, %rd4054, %rd4141;
	xor.b64  	%rd4148, %rd4144, %rd4147;
	not.b64 	%rd4149, %rd4051;
	and.b64  	%rd4150, %rd4054, %rd4149;
	xor.b64  	%rd4151, %rd4150, %rd4141;
	and.b64  	%rd4152, %rd4148, %rd4054;
	xor.b64  	%rd4153, %rd4152, %rd4051;
	xor.b64  	%rd4154, %rd4150, %rd4055;
	and.b64  	%rd4155, %rd4148, %rd4154;
	xor.b64  	%rd4156, %rd4155, %rd4054;
	or.b64  	%rd4157, %rd4153, %rd4151;
	xor.b64  	%rd4158, %rd4157, %rd4148;
	and.b64  	%rd4159, %rd4153, %rd4156;
	xor.b64  	%rd4160, %rd4159, %rd4151;
	and.b64  	%rd4161, %rd4158, %rd4146;
	xor.b64  	%rd4162, %rd4094, %rd4136;
	xor.b64  	%rd4163, %rd4140, %rd4095;
	xor.b64  	%rd4164, %rd4134, %rd4124;
	xor.b64  	%rd4165, %rd4164, %rd4090;
	xor.b64  	%rd4166, %rd4165, %rd4092;
	xor.b64  	%rd4167, %rd4138, %rd4090;
	xor.b64  	%rd4168, %rd4090, %rd4163;
	xor.b64  	%rd4169, %rd4094, %rd4166;
	xor.b64  	%rd4170, %rd4167, %rd4095;
	xor.b64  	%rd4171, %rd4170, %rd4162;
	xor.b64  	%rd4172, %rd4162, %rd4092;
	xor.b64  	%rd4173, %rd4117, %rd4158;
	xor.b64  	%rd4174, %rd4118, %rd4153;
	xor.b64  	%rd4175, %rd4174, %rd4161;
	xor.b64  	%rd4176, %rd4156, %rd4146;
	xor.b64  	%rd4177, %rd4176, %rd4113;
	xor.b64  	%rd4178, %rd4177, %rd4115;
	xor.b64  	%rd4179, %rd4160, %rd4113;
	xor.b64  	%rd4180, %rd4175, %rd4113;
	xor.b64  	%rd4181, %rd4117, %rd4178;
	xor.b64  	%rd4182, %rd4179, %rd4118;
	xor.b64  	%rd4183, %rd4182, %rd4173;
	xor.b64  	%rd4184, %rd4173, %rd4115;
	and.b64  	%rd4185, %rd4162, 6148914691236517205;
	shl.b64 	%rd4186, %rd4185, 1;
	shr.u64 	%rd4187, %rd4162, 1;
	and.b64  	%rd4188, %rd4187, 6148914691236517205;
	or.b64  	%rd4189, %rd4188, %rd4186;
	and.b64  	%rd4190, %rd4173, 6148914691236517205;
	shl.b64 	%rd4191, %rd4190, 1;
	shr.u64 	%rd4192, %rd4173, 1;
	and.b64  	%rd4193, %rd4192, 6148914691236517205;
	or.b64  	%rd4194, %rd4193, %rd4191;
	and.b64  	%rd4195, %rd4163, 6148914691236517205;
	shl.b64 	%rd4196, %rd4195, 1;
	shr.u64 	%rd4197, %rd4163, 1;
	and.b64  	%rd4198, %rd4197, 6148914691236517205;
	or.b64  	%rd4199, %rd4198, %rd4196;
	and.b64  	%rd4200, %rd4175, 6148914691236517205;
	shl.b64 	%rd4201, %rd4200, 1;
	shr.u64 	%rd4202, %rd4175, 1;
	and.b64  	%rd4203, %rd4202, 6148914691236517205;
	or.b64  	%rd4204, %rd4203, %rd4201;
	and.b64  	%rd4205, %rd4166, 6148914691236517205;
	shl.b64 	%rd4206, %rd4205, 1;
	shr.u64 	%rd4207, %rd4166, 1;
	and.b64  	%rd4208, %rd4207, 6148914691236517205;
	or.b64  	%rd4209, %rd4208, %rd4206;
	and.b64  	%rd4210, %rd4178, 6148914691236517205;
	shl.b64 	%rd4211, %rd4210, 1;
	shr.u64 	%rd4212, %rd4178, 1;
	and.b64  	%rd4213, %rd4212, 6148914691236517205;
	or.b64  	%rd4214, %rd4213, %rd4211;
	and.b64  	%rd4215, %rd4167, 6148914691236517205;
	shl.b64 	%rd4216, %rd4215, 1;
	shr.u64 	%rd4217, %rd4167, 1;
	and.b64  	%rd4218, %rd4217, 6148914691236517205;
	or.b64  	%rd4219, %rd4218, %rd4216;
	and.b64  	%rd4220, %rd4179, 6148914691236517205;
	shl.b64 	%rd4221, %rd4220, 1;
	shr.u64 	%rd4222, %rd4179, 1;
	and.b64  	%rd4223, %rd4222, 6148914691236517205;
	or.b64  	%rd4224, %rd4223, %rd4221;
	not.b64 	%rd4225, %rd4172;
	not.b64 	%rd4226, %rd4171;
	and.b64  	%rd4227, %rd4226, 8476101641175239219;
	xor.b64  	%rd4228, %rd4168, %rd4227;
	and.b64  	%rd4229, %rd4228, %rd4169;
	xor.b64  	%rd4230, %rd4229, 8476101641175239219;
	and.b64  	%rd4231, %rd4171, %rd4225;
	xor.b64  	%rd4232, %rd4228, %rd4231;
	not.b64 	%rd4233, %rd4169;
	and.b64  	%rd4234, %rd4171, %rd4233;
	xor.b64  	%rd4235, %rd4234, %rd4225;
	and.b64  	%rd4236, %rd4232, %rd4171;
	xor.b64  	%rd4237, %rd4236, %rd4169;
	xor.b64  	%rd4238, %rd4234, %rd4172;
	and.b64  	%rd4239, %rd4232, %rd4238;
	xor.b64  	%rd4240, %rd4239, %rd4171;
	or.b64  	%rd4241, %rd4237, %rd4235;
	xor.b64  	%rd4242, %rd4241, %rd4232;
	and.b64  	%rd4243, %rd4237, %rd4240;
	xor.b64  	%rd4244, %rd4243, %rd4235;
	and.b64  	%rd4245, %rd4242, %rd4230;
	xor.b64  	%rd4246, %rd4245, %rd4237;
	xor.b64  	%rd4247, %rd4240, %rd4230;
	not.b64 	%rd4248, %rd4184;
	not.b64 	%rd4249, %rd4183;
	and.b64  	%rd4250, %rd4249, 6652686038199776383;
	xor.b64  	%rd4251, %rd4180, %rd4250;
	and.b64  	%rd4252, %rd4251, %rd4181;
	xor.b64  	%rd4253, %rd4252, 6652686038199776383;
	and.b64  	%rd4254, %rd4183, %rd4248;
	xor.b64  	%rd4255, %rd4251, %rd4254;
	not.b64 	%rd4256, %rd4181;
	and.b64  	%rd4257, %rd4183, %rd4256;
	xor.b64  	%rd4258, %rd4257, %rd4248;
	and.b64  	%rd4259, %rd4255, %rd4183;
	xor.b64  	%rd4260, %rd4259, %rd4181;
	xor.b64  	%rd4261, %rd4257, %rd4184;
	and.b64  	%rd4262, %rd4255, %rd4261;
	xor.b64  	%rd4263, %rd4262, %rd4183;
	or.b64  	%rd4264, %rd4260, %rd4258;
	xor.b64  	%rd4265, %rd4264, %rd4255;
	and.b64  	%rd4266, %rd4260, %rd4263;
	xor.b64  	%rd4267, %rd4266, %rd4258;
	and.b64  	%rd4268, %rd4265, %rd4253;
	xor.b64  	%rd4269, %rd4268, %rd4260;
	xor.b64  	%rd4270, %rd4263, %rd4253;
	not.b64 	%rd4271, %rd4219;
	not.b64 	%rd4272, %rd4209;
	and.b64  	%rd4273, %rd4272, 2183534498662333330;
	xor.b64  	%rd4274, %rd4189, %rd4273;
	and.b64  	%rd4275, %rd4274, %rd4199;
	xor.b64  	%rd4276, %rd4275, 2183534498662333330;
	and.b64  	%rd4277, %rd4209, %rd4271;
	xor.b64  	%rd4278, %rd4274, %rd4277;
	not.b64 	%rd4279, %rd4199;
	and.b64  	%rd4280, %rd4209, %rd4279;
	xor.b64  	%rd4281, %rd4280, %rd4271;
	and.b64  	%rd4282, %rd4278, %rd4209;
	xor.b64  	%rd4283, %rd4282, %rd4199;
	xor.b64  	%rd4284, %rd4280, %rd4219;
	and.b64  	%rd4285, %rd4278, %rd4284;
	xor.b64  	%rd4286, %rd4285, %rd4209;
	or.b64  	%rd4287, %rd4283, %rd4281;
	xor.b64  	%rd4288, %rd4287, %rd4278;
	and.b64  	%rd4289, %rd4283, %rd4286;
	xor.b64  	%rd4290, %rd4289, %rd4281;
	and.b64  	%rd4291, %rd4288, %rd4276;
	not.b64 	%rd4292, %rd4224;
	not.b64 	%rd4293, %rd4214;
	and.b64  	%rd4294, %rd4293, 4589149014380082297;
	xor.b64  	%rd4295, %rd4194, %rd4294;
	and.b64  	%rd4296, %rd4295, %rd4204;
	xor.b64  	%rd4297, %rd4296, 4589149014380082297;
	and.b64  	%rd4298, %rd4214, %rd4292;
	xor.b64  	%rd4299, %rd4295, %rd4298;
	not.b64 	%rd4300, %rd4204;
	and.b64  	%rd4301, %rd4214, %rd4300;
	xor.b64  	%rd4302, %rd4301, %rd4292;
	and.b64  	%rd4303, %rd4299, %rd4214;
	xor.b64  	%rd4304, %rd4303, %rd4204;
	xor.b64  	%rd4305, %rd4301, %rd4224;
	and.b64  	%rd4306, %rd4299, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4214;
	or.b64  	%rd4308, %rd4304, %rd4302;
	xor.b64  	%rd4309, %rd4308, %rd4299;
	and.b64  	%rd4310, %rd4304, %rd4307;
	xor.b64  	%rd4311, %rd4310, %rd4302;
	and.b64  	%rd4312, %rd4309, %rd4297;
	xor.b64  	%rd4313, %rd4246, %rd4288;
	xor.b64  	%rd4314, %rd4247, %rd4283;
	xor.b64  	%rd4315, %rd4314, %rd4291;
	xor.b64  	%rd4316, %rd4286, %rd4276;
	xor.b64  	%rd4317, %rd4316, %rd4242;
	xor.b64  	%rd4318, %rd4317, %rd4244;
	xor.b64  	%rd4319, %rd4290, %rd4242;
	xor.b64  	%rd4320, %rd4315, %rd4242;
	xor.b64  	%rd4321, %rd4246, %rd4318;
	xor.b64  	%rd4322, %rd4319, %rd4247;
	xor.b64  	%rd4323, %rd4322, %rd4313;
	xor.b64  	%rd4324, %rd4313, %rd4244;
	xor.b64  	%rd4325, %rd4269, %rd4309;
	xor.b64  	%rd4326, %rd4270, %rd4304;
	xor.b64  	%rd4327, %rd4326, %rd4312;
	xor.b64  	%rd4328, %rd4307, %rd4297;
	xor.b64  	%rd4329, %rd4328, %rd4265;
	xor.b64  	%rd4330, %rd4329, %rd4267;
	xor.b64  	%rd4331, %rd4311, %rd4265;
	xor.b64  	%rd4332, %rd4327, %rd4265;
	xor.b64  	%rd4333, %rd4269, %rd4330;
	xor.b64  	%rd4334, %rd4331, %rd4270;
	xor.b64  	%rd4335, %rd4334, %rd4325;
	xor.b64  	%rd4336, %rd4325, %rd4267;
	and.b64  	%rd4337, %rd4313, 3689348814741910323;
	shl.b64 	%rd4338, %rd4337, 2;
	shr.u64 	%rd4339, %rd4313, 2;
	and.b64  	%rd4340, %rd4339, 3689348814741910323;
	or.b64  	%rd4341, %rd4340, %rd4338;
	and.b64  	%rd4342, %rd4325, 3689348814741910323;
	shl.b64 	%rd4343, %rd4342, 2;
	shr.u64 	%rd4344, %rd4325, 2;
	and.b64  	%rd4345, %rd4344, 3689348814741910323;
	or.b64  	%rd4346, %rd4345, %rd4343;
	and.b64  	%rd4347, %rd4315, 3689348814741910323;
	shl.b64 	%rd4348, %rd4347, 2;
	shr.u64 	%rd4349, %rd4315, 2;
	and.b64  	%rd4350, %rd4349, 3689348814741910323;
	or.b64  	%rd4351, %rd4350, %rd4348;
	and.b64  	%rd4352, %rd4327, 3689348814741910323;
	shl.b64 	%rd4353, %rd4352, 2;
	shr.u64 	%rd4354, %rd4327, 2;
	and.b64  	%rd4355, %rd4354, 3689348814741910323;
	or.b64  	%rd4356, %rd4355, %rd4353;
	and.b64  	%rd4357, %rd4318, 3689348814741910323;
	shl.b64 	%rd4358, %rd4357, 2;
	shr.u64 	%rd4359, %rd4318, 2;
	and.b64  	%rd4360, %rd4359, 3689348814741910323;
	or.b64  	%rd4361, %rd4360, %rd4358;
	and.b64  	%rd4362, %rd4330, 3689348814741910323;
	shl.b64 	%rd4363, %rd4362, 2;
	shr.u64 	%rd4364, %rd4330, 2;
	and.b64  	%rd4365, %rd4364, 3689348814741910323;
	or.b64  	%rd4366, %rd4365, %rd4363;
	and.b64  	%rd4367, %rd4319, 3689348814741910323;
	shl.b64 	%rd4368, %rd4367, 2;
	shr.u64 	%rd4369, %rd4319, 2;
	and.b64  	%rd4370, %rd4369, 3689348814741910323;
	or.b64  	%rd4371, %rd4370, %rd4368;
	and.b64  	%rd4372, %rd4331, 3689348814741910323;
	shl.b64 	%rd4373, %rd4372, 2;
	shr.u64 	%rd4374, %rd4331, 2;
	and.b64  	%rd4375, %rd4374, 3689348814741910323;
	or.b64  	%rd4376, %rd4375, %rd4373;
	not.b64 	%rd4377, %rd4324;
	not.b64 	%rd4378, %rd4323;
	and.b64  	%rd4379, %rd4378, 2393974084428146922;
	xor.b64  	%rd4380, %rd4320, %rd4379;
	and.b64  	%rd4381, %rd4380, %rd4321;
	xor.b64  	%rd4382, %rd4381, 2393974084428146922;
	and.b64  	%rd4383, %rd4323, %rd4377;
	xor.b64  	%rd4384, %rd4380, %rd4383;
	not.b64 	%rd4385, %rd4321;
	and.b64  	%rd4386, %rd4323, %rd4385;
	xor.b64  	%rd4387, %rd4386, %rd4377;
	and.b64  	%rd4388, %rd4384, %rd4323;
	xor.b64  	%rd4389, %rd4388, %rd4321;
	xor.b64  	%rd4390, %rd4386, %rd4324;
	and.b64  	%rd4391, %rd4384, %rd4390;
	xor.b64  	%rd4392, %rd4391, %rd4323;
	or.b64  	%rd4393, %rd4389, %rd4387;
	xor.b64  	%rd4394, %rd4393, %rd4384;
	and.b64  	%rd4395, %rd4389, %rd4392;
	xor.b64  	%rd4396, %rd4395, %rd4387;
	and.b64  	%rd4397, %rd4394, %rd4382;
	xor.b64  	%rd4398, %rd4397, %rd4389;
	xor.b64  	%rd4399, %rd4392, %rd4382;
	not.b64 	%rd4400, %rd4336;
	not.b64 	%rd4401, %rd4335;
	and.b64  	%rd4402, %rd4401, 5847681450647680092;
	xor.b64  	%rd4403, %rd4332, %rd4402;
	and.b64  	%rd4404, %rd4403, %rd4333;
	xor.b64  	%rd4405, %rd4404, 5847681450647680092;
	and.b64  	%rd4406, %rd4335, %rd4400;
	xor.b64  	%rd4407, %rd4403, %rd4406;
	not.b64 	%rd4408, %rd4333;
	and.b64  	%rd4409, %rd4335, %rd4408;
	xor.b64  	%rd4410, %rd4409, %rd4400;
	and.b64  	%rd4411, %rd4407, %rd4335;
	xor.b64  	%rd4412, %rd4411, %rd4333;
	xor.b64  	%rd4413, %rd4409, %rd4336;
	and.b64  	%rd4414, %rd4407, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4335;
	or.b64  	%rd4416, %rd4412, %rd4410;
	xor.b64  	%rd4417, %rd4416, %rd4407;
	and.b64  	%rd4418, %rd4412, %rd4415;
	xor.b64  	%rd4419, %rd4418, %rd4410;
	and.b64  	%rd4420, %rd4417, %rd4405;
	xor.b64  	%rd4421, %rd4420, %rd4412;
	xor.b64  	%rd4422, %rd4415, %rd4405;
	not.b64 	%rd4423, %rd4371;
	not.b64 	%rd4424, %rd4361;
	and.b64  	%rd4425, %rd4424, -3297705051301829850;
	xor.b64  	%rd4426, %rd4341, %rd4425;
	and.b64  	%rd4427, %rd4426, %rd4351;
	xor.b64  	%rd4428, %rd4427, -3297705051301829850;
	and.b64  	%rd4429, %rd4361, %rd4423;
	xor.b64  	%rd4430, %rd4426, %rd4429;
	not.b64 	%rd4431, %rd4351;
	and.b64  	%rd4432, %rd4361, %rd4431;
	xor.b64  	%rd4433, %rd4432, %rd4423;
	and.b64  	%rd4434, %rd4430, %rd4361;
	xor.b64  	%rd4435, %rd4434, %rd4351;
	xor.b64  	%rd4436, %rd4432, %rd4371;
	and.b64  	%rd4437, %rd4430, %rd4436;
	xor.b64  	%rd4438, %rd4437, %rd4361;
	or.b64  	%rd4439, %rd4435, %rd4433;
	xor.b64  	%rd4440, %rd4439, %rd4430;
	and.b64  	%rd4441, %rd4435, %rd4438;
	xor.b64  	%rd4442, %rd4441, %rd4433;
	and.b64  	%rd4443, %rd4440, %rd4428;
	not.b64 	%rd4444, %rd4376;
	not.b64 	%rd4445, %rd4366;
	and.b64  	%rd4446, %rd4445, -5920643146783939772;
	xor.b64  	%rd4447, %rd4346, %rd4446;
	and.b64  	%rd4448, %rd4447, %rd4356;
	xor.b64  	%rd4449, %rd4448, -5920643146783939772;
	and.b64  	%rd4450, %rd4366, %rd4444;
	xor.b64  	%rd4451, %rd4447, %rd4450;
	not.b64 	%rd4452, %rd4356;
	and.b64  	%rd4453, %rd4366, %rd4452;
	xor.b64  	%rd4454, %rd4453, %rd4444;
	and.b64  	%rd4455, %rd4451, %rd4366;
	xor.b64  	%rd4456, %rd4455, %rd4356;
	xor.b64  	%rd4457, %rd4453, %rd4376;
	and.b64  	%rd4458, %rd4451, %rd4457;
	xor.b64  	%rd4459, %rd4458, %rd4366;
	or.b64  	%rd4460, %rd4456, %rd4454;
	xor.b64  	%rd4461, %rd4460, %rd4451;
	and.b64  	%rd4462, %rd4456, %rd4459;
	xor.b64  	%rd4463, %rd4462, %rd4454;
	and.b64  	%rd4464, %rd4461, %rd4449;
	xor.b64  	%rd4465, %rd4398, %rd4440;
	xor.b64  	%rd4466, %rd4399, %rd4435;
	xor.b64  	%rd4467, %rd4466, %rd4443;
	xor.b64  	%rd4468, %rd4438, %rd4428;
	xor.b64  	%rd4469, %rd4468, %rd4394;
	xor.b64  	%rd4470, %rd4469, %rd4396;
	xor.b64  	%rd4471, %rd4442, %rd4394;
	xor.b64  	%rd4472, %rd4467, %rd4394;
	xor.b64  	%rd4473, %rd4398, %rd4470;
	xor.b64  	%rd4474, %rd4471, %rd4399;
	xor.b64  	%rd4475, %rd4474, %rd4465;
	xor.b64  	%rd4476, %rd4465, %rd4396;
	xor.b64  	%rd4477, %rd4421, %rd4461;
	xor.b64  	%rd4478, %rd4422, %rd4456;
	xor.b64  	%rd4479, %rd4478, %rd4464;
	xor.b64  	%rd4480, %rd4459, %rd4449;
	xor.b64  	%rd4481, %rd4480, %rd4417;
	xor.b64  	%rd4482, %rd4481, %rd4419;
	xor.b64  	%rd4483, %rd4463, %rd4417;
	xor.b64  	%rd4484, %rd4479, %rd4417;
	xor.b64  	%rd4485, %rd4421, %rd4482;
	xor.b64  	%rd4486, %rd4483, %rd4422;
	xor.b64  	%rd4487, %rd4486, %rd4477;
	xor.b64  	%rd4488, %rd4477, %rd4419;
	and.b64  	%rd4489, %rd4465, 1085102592571150095;
	shl.b64 	%rd4490, %rd4489, 4;
	shr.u64 	%rd4491, %rd4465, 4;
	and.b64  	%rd4492, %rd4491, 1085102592571150095;
	or.b64  	%rd4493, %rd4492, %rd4490;
	and.b64  	%rd4494, %rd4477, 1085102592571150095;
	shl.b64 	%rd4495, %rd4494, 4;
	shr.u64 	%rd4496, %rd4477, 4;
	and.b64  	%rd4497, %rd4496, 1085102592571150095;
	or.b64  	%rd4498, %rd4497, %rd4495;
	and.b64  	%rd4499, %rd4467, 1085102592571150095;
	shl.b64 	%rd4500, %rd4499, 4;
	shr.u64 	%rd4501, %rd4467, 4;
	and.b64  	%rd4502, %rd4501, 1085102592571150095;
	or.b64  	%rd4503, %rd4502, %rd4500;
	and.b64  	%rd4504, %rd4479, 1085102592571150095;
	shl.b64 	%rd4505, %rd4504, 4;
	shr.u64 	%rd4506, %rd4479, 4;
	and.b64  	%rd4507, %rd4506, 1085102592571150095;
	or.b64  	%rd4508, %rd4507, %rd4505;
	and.b64  	%rd4509, %rd4470, 1085102592571150095;
	shl.b64 	%rd4510, %rd4509, 4;
	shr.u64 	%rd4511, %rd4470, 4;
	and.b64  	%rd4512, %rd4511, 1085102592571150095;
	or.b64  	%rd4513, %rd4512, %rd4510;
	and.b64  	%rd4514, %rd4482, 1085102592571150095;
	shl.b64 	%rd4515, %rd4514, 4;
	shr.u64 	%rd4516, %rd4482, 4;
	and.b64  	%rd4517, %rd4516, 1085102592571150095;
	or.b64  	%rd4518, %rd4517, %rd4515;
	and.b64  	%rd4519, %rd4471, 1085102592571150095;
	shl.b64 	%rd4520, %rd4519, 4;
	shr.u64 	%rd4521, %rd4471, 4;
	and.b64  	%rd4522, %rd4521, 1085102592571150095;
	or.b64  	%rd4523, %rd4522, %rd4520;
	and.b64  	%rd4524, %rd4483, 1085102592571150095;
	shl.b64 	%rd4525, %rd4524, 4;
	shr.u64 	%rd4526, %rd4483, 4;
	and.b64  	%rd4527, %rd4526, 1085102592571150095;
	or.b64  	%rd4528, %rd4527, %rd4525;
	not.b64 	%rd4529, %rd4476;
	not.b64 	%rd4530, %rd4475;
	and.b64  	%rd4531, %rd4530, 633304058844552629;
	xor.b64  	%rd4532, %rd4472, %rd4531;
	and.b64  	%rd4533, %rd4532, %rd4473;
	xor.b64  	%rd4534, %rd4533, 633304058844552629;
	and.b64  	%rd4535, %rd4475, %rd4529;
	xor.b64  	%rd4536, %rd4532, %rd4535;
	not.b64 	%rd4537, %rd4473;
	and.b64  	%rd4538, %rd4475, %rd4537;
	xor.b64  	%rd4539, %rd4538, %rd4529;
	and.b64  	%rd4540, %rd4536, %rd4475;
	xor.b64  	%rd4541, %rd4540, %rd4473;
	xor.b64  	%rd4542, %rd4538, %rd4476;
	and.b64  	%rd4543, %rd4536, %rd4542;
	xor.b64  	%rd4544, %rd4543, %rd4475;
	or.b64  	%rd4545, %rd4541, %rd4539;
	xor.b64  	%rd4546, %rd4545, %rd4536;
	and.b64  	%rd4547, %rd4541, %rd4544;
	xor.b64  	%rd4548, %rd4547, %rd4539;
	and.b64  	%rd4549, %rd4546, %rd4534;
	xor.b64  	%rd4550, %rd4549, %rd4541;
	xor.b64  	%rd4551, %rd4544, %rd4534;
	not.b64 	%rd4552, %rd4488;
	not.b64 	%rd4553, %rd4487;
	and.b64  	%rd4554, %rd4553, 6213959858933029251;
	xor.b64  	%rd4555, %rd4484, %rd4554;
	and.b64  	%rd4556, %rd4555, %rd4485;
	xor.b64  	%rd4557, %rd4556, 6213959858933029251;
	and.b64  	%rd4558, %rd4487, %rd4552;
	xor.b64  	%rd4559, %rd4555, %rd4558;
	not.b64 	%rd4560, %rd4485;
	and.b64  	%rd4561, %rd4487, %rd4560;
	xor.b64  	%rd4562, %rd4561, %rd4552;
	and.b64  	%rd4563, %rd4559, %rd4487;
	xor.b64  	%rd4564, %rd4563, %rd4485;
	xor.b64  	%rd4565, %rd4561, %rd4488;
	and.b64  	%rd4566, %rd4559, %rd4565;
	xor.b64  	%rd4567, %rd4566, %rd4487;
	or.b64  	%rd4568, %rd4564, %rd4562;
	xor.b64  	%rd4569, %rd4568, %rd4559;
	and.b64  	%rd4570, %rd4564, %rd4567;
	xor.b64  	%rd4571, %rd4570, %rd4562;
	and.b64  	%rd4572, %rd4569, %rd4557;
	xor.b64  	%rd4573, %rd4572, %rd4564;
	xor.b64  	%rd4574, %rd4567, %rd4557;
	not.b64 	%rd4575, %rd4523;
	not.b64 	%rd4576, %rd4513;
	and.b64  	%rd4577, %rd4576, 5575604165578389580;
	xor.b64  	%rd4578, %rd4493, %rd4577;
	and.b64  	%rd4579, %rd4578, %rd4503;
	xor.b64  	%rd4580, %rd4579, 5575604165578389580;
	and.b64  	%rd4581, %rd4513, %rd4575;
	xor.b64  	%rd4582, %rd4578, %rd4581;
	not.b64 	%rd4583, %rd4503;
	and.b64  	%rd4584, %rd4513, %rd4583;
	xor.b64  	%rd4585, %rd4584, %rd4575;
	and.b64  	%rd4586, %rd4582, %rd4513;
	xor.b64  	%rd4587, %rd4586, %rd4503;
	xor.b64  	%rd4588, %rd4584, %rd4523;
	and.b64  	%rd4589, %rd4582, %rd4588;
	xor.b64  	%rd4590, %rd4589, %rd4513;
	or.b64  	%rd4591, %rd4587, %rd4585;
	xor.b64  	%rd4592, %rd4591, %rd4582;
	and.b64  	%rd4593, %rd4587, %rd4590;
	xor.b64  	%rd4594, %rd4593, %rd4585;
	and.b64  	%rd4595, %rd4592, %rd4580;
	not.b64 	%rd4596, %rd4528;
	not.b64 	%rd4597, %rd4518;
	and.b64  	%rd4598, %rd4597, -664441435948391866;
	xor.b64  	%rd4599, %rd4498, %rd4598;
	and.b64  	%rd4600, %rd4599, %rd4508;
	xor.b64  	%rd4601, %rd4600, -664441435948391866;
	and.b64  	%rd4602, %rd4518, %rd4596;
	xor.b64  	%rd4603, %rd4599, %rd4602;
	not.b64 	%rd4604, %rd4508;
	and.b64  	%rd4605, %rd4518, %rd4604;
	xor.b64  	%rd4606, %rd4605, %rd4596;
	and.b64  	%rd4607, %rd4603, %rd4518;
	xor.b64  	%rd4608, %rd4607, %rd4508;
	xor.b64  	%rd4609, %rd4605, %rd4528;
	and.b64  	%rd4610, %rd4603, %rd4609;
	xor.b64  	%rd4611, %rd4610, %rd4518;
	or.b64  	%rd4612, %rd4608, %rd4606;
	xor.b64  	%rd4613, %rd4612, %rd4603;
	and.b64  	%rd4614, %rd4608, %rd4611;
	xor.b64  	%rd4615, %rd4614, %rd4606;
	and.b64  	%rd4616, %rd4613, %rd4601;
	xor.b64  	%rd4617, %rd4550, %rd4592;
	xor.b64  	%rd4618, %rd4551, %rd4587;
	xor.b64  	%rd4619, %rd4618, %rd4595;
	xor.b64  	%rd4620, %rd4590, %rd4580;
	xor.b64  	%rd4621, %rd4620, %rd4546;
	xor.b64  	%rd4622, %rd4621, %rd4548;
	xor.b64  	%rd4623, %rd4594, %rd4546;
	xor.b64  	%rd4624, %rd4619, %rd4546;
	xor.b64  	%rd4625, %rd4550, %rd4622;
	xor.b64  	%rd4626, %rd4623, %rd4551;
	xor.b64  	%rd4627, %rd4626, %rd4617;
	xor.b64  	%rd4628, %rd4617, %rd4548;
	xor.b64  	%rd4629, %rd4573, %rd4613;
	xor.b64  	%rd4630, %rd4574, %rd4608;
	xor.b64  	%rd4631, %rd4630, %rd4616;
	xor.b64  	%rd4632, %rd4611, %rd4601;
	xor.b64  	%rd4633, %rd4632, %rd4569;
	xor.b64  	%rd4634, %rd4633, %rd4571;
	xor.b64  	%rd4635, %rd4615, %rd4569;
	xor.b64  	%rd4636, %rd4631, %rd4569;
	xor.b64  	%rd4637, %rd4573, %rd4634;
	xor.b64  	%rd4638, %rd4635, %rd4574;
	xor.b64  	%rd4639, %rd4638, %rd4629;
	xor.b64  	%rd4640, %rd4629, %rd4571;
	and.b64  	%rd4641, %rd4617, 71777214294589695;
	shl.b64 	%rd4642, %rd4641, 8;
	shr.u64 	%rd4643, %rd4617, 8;
	and.b64  	%rd4644, %rd4643, 71777214294589695;
	or.b64  	%rd4645, %rd4644, %rd4642;
	and.b64  	%rd4646, %rd4629, 71777214294589695;
	shl.b64 	%rd4647, %rd4646, 8;
	shr.u64 	%rd4648, %rd4629, 8;
	and.b64  	%rd4649, %rd4648, 71777214294589695;
	or.b64  	%rd4650, %rd4649, %rd4647;
	and.b64  	%rd4651, %rd4619, 71777214294589695;
	shl.b64 	%rd4652, %rd4651, 8;
	shr.u64 	%rd4653, %rd4619, 8;
	and.b64  	%rd4654, %rd4653, 71777214294589695;
	or.b64  	%rd4655, %rd4654, %rd4652;
	and.b64  	%rd4656, %rd4631, 71777214294589695;
	shl.b64 	%rd4657, %rd4656, 8;
	shr.u64 	%rd4658, %rd4631, 8;
	and.b64  	%rd4659, %rd4658, 71777214294589695;
	or.b64  	%rd4660, %rd4659, %rd4657;
	and.b64  	%rd4661, %rd4622, 71777214294589695;
	shl.b64 	%rd4662, %rd4661, 8;
	shr.u64 	%rd4663, %rd4622, 8;
	and.b64  	%rd4664, %rd4663, 71777214294589695;
	or.b64  	%rd4665, %rd4664, %rd4662;
	and.b64  	%rd4666, %rd4634, 71777214294589695;
	shl.b64 	%rd4667, %rd4666, 8;
	shr.u64 	%rd4668, %rd4634, 8;
	and.b64  	%rd4669, %rd4668, 71777214294589695;
	or.b64  	%rd4670, %rd4669, %rd4667;
	and.b64  	%rd4671, %rd4623, 71777214294589695;
	shl.b64 	%rd4672, %rd4671, 8;
	shr.u64 	%rd4673, %rd4623, 8;
	and.b64  	%rd4674, %rd4673, 71777214294589695;
	or.b64  	%rd4675, %rd4674, %rd4672;
	and.b64  	%rd4676, %rd4635, 71777214294589695;
	shl.b64 	%rd4677, %rd4676, 8;
	shr.u64 	%rd4678, %rd4635, 8;
	and.b64  	%rd4679, %rd4678, 71777214294589695;
	or.b64  	%rd4680, %rd4679, %rd4677;
	not.b64 	%rd4681, %rd4628;
	not.b64 	%rd4682, %rd4627;
	and.b64  	%rd4683, %rd4682, 6806835358218819631;
	xor.b64  	%rd4684, %rd4624, %rd4683;
	and.b64  	%rd4685, %rd4684, %rd4625;
	xor.b64  	%rd4686, %rd4685, 6806835358218819631;
	and.b64  	%rd4687, %rd4627, %rd4681;
	xor.b64  	%rd4688, %rd4684, %rd4687;
	not.b64 	%rd4689, %rd4625;
	and.b64  	%rd4690, %rd4627, %rd4689;
	xor.b64  	%rd4691, %rd4690, %rd4681;
	and.b64  	%rd4692, %rd4688, %rd4627;
	xor.b64  	%rd4693, %rd4692, %rd4625;
	xor.b64  	%rd4694, %rd4690, %rd4628;
	and.b64  	%rd4695, %rd4688, %rd4694;
	xor.b64  	%rd4696, %rd4695, %rd4627;
	or.b64  	%rd4697, %rd4693, %rd4691;
	xor.b64  	%rd4698, %rd4697, %rd4688;
	and.b64  	%rd4699, %rd4693, %rd4696;
	xor.b64  	%rd4700, %rd4699, %rd4691;
	and.b64  	%rd4701, %rd4698, %rd4686;
	xor.b64  	%rd4702, %rd4701, %rd4693;
	xor.b64  	%rd4703, %rd4696, %rd4686;
	not.b64 	%rd4704, %rd4640;
	not.b64 	%rd4705, %rd4639;
	and.b64  	%rd4706, %rd4705, 3091374727787632171;
	xor.b64  	%rd4707, %rd4636, %rd4706;
	and.b64  	%rd4708, %rd4707, %rd4637;
	xor.b64  	%rd4709, %rd4708, 3091374727787632171;
	and.b64  	%rd4710, %rd4639, %rd4704;
	xor.b64  	%rd4711, %rd4707, %rd4710;
	not.b64 	%rd4712, %rd4637;
	and.b64  	%rd4713, %rd4639, %rd4712;
	xor.b64  	%rd4714, %rd4713, %rd4704;
	and.b64  	%rd4715, %rd4711, %rd4639;
	xor.b64  	%rd4716, %rd4715, %rd4637;
	xor.b64  	%rd4717, %rd4713, %rd4640;
	and.b64  	%rd4718, %rd4711, %rd4717;
	xor.b64  	%rd4719, %rd4718, %rd4639;
	or.b64  	%rd4720, %rd4716, %rd4714;
	xor.b64  	%rd4721, %rd4720, %rd4711;
	and.b64  	%rd4722, %rd4716, %rd4719;
	xor.b64  	%rd4723, %rd4722, %rd4714;
	and.b64  	%rd4724, %rd4721, %rd4709;
	xor.b64  	%rd4725, %rd4724, %rd4716;
	xor.b64  	%rd4726, %rd4719, %rd4709;
	not.b64 	%rd4727, %rd4675;
	not.b64 	%rd4728, %rd4665;
	and.b64  	%rd4729, %rd4728, 3950995798803018758;
	xor.b64  	%rd4730, %rd4645, %rd4729;
	and.b64  	%rd4731, %rd4730, %rd4655;
	xor.b64  	%rd4732, %rd4731, 3950995798803018758;
	and.b64  	%rd4733, %rd4665, %rd4727;
	xor.b64  	%rd4734, %rd4730, %rd4733;
	not.b64 	%rd4735, %rd4655;
	and.b64  	%rd4736, %rd4665, %rd4735;
	xor.b64  	%rd4737, %rd4736, %rd4727;
	and.b64  	%rd4738, %rd4734, %rd4665;
	xor.b64  	%rd4739, %rd4738, %rd4655;
	xor.b64  	%rd4740, %rd4736, %rd4675;
	and.b64  	%rd4741, %rd4734, %rd4740;
	xor.b64  	%rd4742, %rd4741, %rd4665;
	or.b64  	%rd4743, %rd4739, %rd4737;
	xor.b64  	%rd4744, %rd4743, %rd4734;
	and.b64  	%rd4745, %rd4739, %rd4742;
	xor.b64  	%rd4746, %rd4745, %rd4737;
	and.b64  	%rd4747, %rd4744, %rd4732;
	not.b64 	%rd4748, %rd4680;
	not.b64 	%rd4749, %rd4670;
	and.b64  	%rd4750, %rd4749, 7143254075080109684;
	xor.b64  	%rd4751, %rd4650, %rd4750;
	and.b64  	%rd4752, %rd4751, %rd4660;
	xor.b64  	%rd4753, %rd4752, 7143254075080109684;
	and.b64  	%rd4754, %rd4670, %rd4748;
	xor.b64  	%rd4755, %rd4751, %rd4754;
	not.b64 	%rd4756, %rd4660;
	and.b64  	%rd4757, %rd4670, %rd4756;
	xor.b64  	%rd4758, %rd4757, %rd4748;
	and.b64  	%rd4759, %rd4755, %rd4670;
	xor.b64  	%rd4760, %rd4759, %rd4660;
	xor.b64  	%rd4761, %rd4757, %rd4680;
	and.b64  	%rd4762, %rd4755, %rd4761;
	xor.b64  	%rd4763, %rd4762, %rd4670;
	or.b64  	%rd4764, %rd4760, %rd4758;
	xor.b64  	%rd4765, %rd4764, %rd4755;
	and.b64  	%rd4766, %rd4760, %rd4763;
	xor.b64  	%rd4767, %rd4766, %rd4758;
	and.b64  	%rd4768, %rd4765, %rd4753;
	xor.b64  	%rd4769, %rd4702, %rd4744;
	xor.b64  	%rd4770, %rd4703, %rd4739;
	xor.b64  	%rd4771, %rd4770, %rd4747;
	xor.b64  	%rd4772, %rd4742, %rd4732;
	xor.b64  	%rd4773, %rd4772, %rd4698;
	xor.b64  	%rd4774, %rd4773, %rd4700;
	xor.b64  	%rd4775, %rd4746, %rd4698;
	xor.b64  	%rd4776, %rd4771, %rd4698;
	xor.b64  	%rd4777, %rd4702, %rd4774;
	xor.b64  	%rd4778, %rd4775, %rd4703;
	xor.b64  	%rd4779, %rd4778, %rd4769;
	xor.b64  	%rd4780, %rd4769, %rd4700;
	xor.b64  	%rd4781, %rd4725, %rd4765;
	xor.b64  	%rd4782, %rd4726, %rd4760;
	xor.b64  	%rd4783, %rd4782, %rd4768;
	xor.b64  	%rd4784, %rd4763, %rd4753;
	xor.b64  	%rd4785, %rd4784, %rd4721;
	xor.b64  	%rd4786, %rd4785, %rd4723;
	xor.b64  	%rd4787, %rd4767, %rd4721;
	xor.b64  	%rd4788, %rd4783, %rd4721;
	xor.b64  	%rd4789, %rd4725, %rd4786;
	xor.b64  	%rd4790, %rd4787, %rd4726;
	xor.b64  	%rd4791, %rd4790, %rd4781;
	xor.b64  	%rd4792, %rd4781, %rd4723;
	and.b64  	%rd4793, %rd4769, 281470681808895;
	shl.b64 	%rd4794, %rd4793, 16;
	shr.u64 	%rd4795, %rd4769, 16;
	and.b64  	%rd4796, %rd4795, 281470681808895;
	or.b64  	%rd4797, %rd4796, %rd4794;
	and.b64  	%rd4798, %rd4781, 281470681808895;
	shl.b64 	%rd4799, %rd4798, 16;
	shr.u64 	%rd4800, %rd4781, 16;
	and.b64  	%rd4801, %rd4800, 281470681808895;
	or.b64  	%rd4802, %rd4801, %rd4799;
	and.b64  	%rd4803, %rd4771, 281470681808895;
	shl.b64 	%rd4804, %rd4803, 16;
	shr.u64 	%rd4805, %rd4771, 16;
	and.b64  	%rd4806, %rd4805, 281470681808895;
	or.b64  	%rd4807, %rd4806, %rd4804;
	and.b64  	%rd4808, %rd4783, 281470681808895;
	shl.b64 	%rd4809, %rd4808, 16;
	shr.u64 	%rd4810, %rd4783, 16;
	and.b64  	%rd4811, %rd4810, 281470681808895;
	or.b64  	%rd4812, %rd4811, %rd4809;
	and.b64  	%rd4813, %rd4774, 281470681808895;
	shl.b64 	%rd4814, %rd4813, 16;
	shr.u64 	%rd4815, %rd4774, 16;
	and.b64  	%rd4816, %rd4815, 281470681808895;
	or.b64  	%rd4817, %rd4816, %rd4814;
	and.b64  	%rd4818, %rd4786, 281470681808895;
	shl.b64 	%rd4819, %rd4818, 16;
	shr.u64 	%rd4820, %rd4786, 16;
	and.b64  	%rd4821, %rd4820, 281470681808895;
	or.b64  	%rd4822, %rd4821, %rd4819;
	and.b64  	%rd4823, %rd4775, 281470681808895;
	shl.b64 	%rd4824, %rd4823, 16;
	shr.u64 	%rd4825, %rd4775, 16;
	and.b64  	%rd4826, %rd4825, 281470681808895;
	or.b64  	%rd4827, %rd4826, %rd4824;
	and.b64  	%rd4828, %rd4787, 281470681808895;
	shl.b64 	%rd4829, %rd4828, 16;
	shr.u64 	%rd4830, %rd4787, 16;
	and.b64  	%rd4831, %rd4830, 281470681808895;
	or.b64  	%rd4832, %rd4831, %rd4829;
	not.b64 	%rd4833, %rd4780;
	not.b64 	%rd4834, %rd4779;
	and.b64  	%rd4835, %rd4834, 7622716151961666045;
	xor.b64  	%rd4836, %rd4776, %rd4835;
	and.b64  	%rd4837, %rd4836, %rd4777;
	xor.b64  	%rd4838, %rd4837, 7622716151961666045;
	and.b64  	%rd4839, %rd4779, %rd4833;
	xor.b64  	%rd4840, %rd4836, %rd4839;
	not.b64 	%rd4841, %rd4777;
	and.b64  	%rd4842, %rd4779, %rd4841;
	xor.b64  	%rd4843, %rd4842, %rd4833;
	and.b64  	%rd4844, %rd4840, %rd4779;
	xor.b64  	%rd4845, %rd4844, %rd4777;
	xor.b64  	%rd4846, %rd4842, %rd4780;
	and.b64  	%rd4847, %rd4840, %rd4846;
	xor.b64  	%rd4848, %rd4847, %rd4779;
	or.b64  	%rd4849, %rd4845, %rd4843;
	xor.b64  	%rd4850, %rd4849, %rd4840;
	and.b64  	%rd4851, %rd4845, %rd4848;
	xor.b64  	%rd4852, %rd4851, %rd4843;
	and.b64  	%rd4853, %rd4850, %rd4838;
	xor.b64  	%rd4854, %rd4853, %rd4845;
	xor.b64  	%rd4855, %rd4848, %rd4838;
	not.b64 	%rd4856, %rd4792;
	not.b64 	%rd4857, %rd4791;
	and.b64  	%rd4858, %rd4857, 2763055157479112103;
	xor.b64  	%rd4859, %rd4788, %rd4858;
	and.b64  	%rd4860, %rd4859, %rd4789;
	xor.b64  	%rd4861, %rd4860, 2763055157479112103;
	and.b64  	%rd4862, %rd4791, %rd4856;
	xor.b64  	%rd4863, %rd4859, %rd4862;
	not.b64 	%rd4864, %rd4789;
	and.b64  	%rd4865, %rd4791, %rd4864;
	xor.b64  	%rd4866, %rd4865, %rd4856;
	and.b64  	%rd4867, %rd4863, %rd4791;
	xor.b64  	%rd4868, %rd4867, %rd4789;
	xor.b64  	%rd4869, %rd4865, %rd4792;
	and.b64  	%rd4870, %rd4863, %rd4869;
	xor.b64  	%rd4871, %rd4870, %rd4791;
	or.b64  	%rd4872, %rd4868, %rd4866;
	xor.b64  	%rd4873, %rd4872, %rd4863;
	and.b64  	%rd4874, %rd4868, %rd4871;
	xor.b64  	%rd4875, %rd4874, %rd4866;
	and.b64  	%rd4876, %rd4873, %rd4861;
	xor.b64  	%rd4877, %rd4876, %rd4868;
	xor.b64  	%rd4878, %rd4871, %rd4861;
	not.b64 	%rd4879, %rd4827;
	not.b64 	%rd4880, %rd4817;
	and.b64  	%rd4881, %rd4880, 1655882129756963198;
	xor.b64  	%rd4882, %rd4797, %rd4881;
	and.b64  	%rd4883, %rd4882, %rd4807;
	xor.b64  	%rd4884, %rd4883, 1655882129756963198;
	and.b64  	%rd4885, %rd4817, %rd4879;
	xor.b64  	%rd4886, %rd4882, %rd4885;
	not.b64 	%rd4887, %rd4807;
	and.b64  	%rd4888, %rd4817, %rd4887;
	xor.b64  	%rd4889, %rd4888, %rd4879;
	and.b64  	%rd4890, %rd4886, %rd4817;
	xor.b64  	%rd4891, %rd4890, %rd4807;
	xor.b64  	%rd4892, %rd4888, %rd4827;
	and.b64  	%rd4893, %rd4886, %rd4892;
	xor.b64  	%rd4894, %rd4893, %rd4817;
	or.b64  	%rd4895, %rd4891, %rd4889;
	xor.b64  	%rd4896, %rd4895, %rd4886;
	and.b64  	%rd4897, %rd4891, %rd4894;
	xor.b64  	%rd4898, %rd4897, %rd4889;
	and.b64  	%rd4899, %rd4896, %rd4884;
	not.b64 	%rd4900, %rd4832;
	not.b64 	%rd4901, %rd4822;
	and.b64  	%rd4902, %rd4901, 4583929020217790590;
	xor.b64  	%rd4903, %rd4802, %rd4902;
	and.b64  	%rd4904, %rd4903, %rd4812;
	xor.b64  	%rd4905, %rd4904, 4583929020217790590;
	and.b64  	%rd4906, %rd4822, %rd4900;
	xor.b64  	%rd4907, %rd4903, %rd4906;
	not.b64 	%rd4908, %rd4812;
	and.b64  	%rd4909, %rd4822, %rd4908;
	xor.b64  	%rd4910, %rd4909, %rd4900;
	and.b64  	%rd4911, %rd4907, %rd4822;
	xor.b64  	%rd4912, %rd4911, %rd4812;
	xor.b64  	%rd4913, %rd4909, %rd4832;
	and.b64  	%rd4914, %rd4907, %rd4913;
	xor.b64  	%rd4915, %rd4914, %rd4822;
	or.b64  	%rd4916, %rd4912, %rd4910;
	xor.b64  	%rd4917, %rd4916, %rd4907;
	and.b64  	%rd4918, %rd4912, %rd4915;
	xor.b64  	%rd4919, %rd4918, %rd4910;
	and.b64  	%rd4920, %rd4917, %rd4905;
	xor.b64  	%rd4921, %rd4854, %rd4896;
	xor.b64  	%rd4922, %rd4855, %rd4891;
	xor.b64  	%rd4923, %rd4922, %rd4899;
	xor.b64  	%rd4924, %rd4894, %rd4884;
	xor.b64  	%rd4925, %rd4924, %rd4850;
	xor.b64  	%rd4926, %rd4925, %rd4852;
	xor.b64  	%rd4927, %rd4898, %rd4850;
	xor.b64  	%rd4928, %rd4923, %rd4850;
	xor.b64  	%rd4929, %rd4854, %rd4926;
	xor.b64  	%rd4930, %rd4927, %rd4855;
	xor.b64  	%rd4931, %rd4930, %rd4921;
	xor.b64  	%rd4932, %rd4921, %rd4852;
	xor.b64  	%rd4933, %rd4877, %rd4917;
	xor.b64  	%rd4934, %rd4878, %rd4912;
	xor.b64  	%rd4935, %rd4934, %rd4920;
	xor.b64  	%rd4936, %rd4915, %rd4905;
	xor.b64  	%rd4937, %rd4936, %rd4873;
	xor.b64  	%rd4938, %rd4937, %rd4875;
	xor.b64  	%rd4939, %rd4919, %rd4873;
	xor.b64  	%rd4940, %rd4935, %rd4873;
	xor.b64  	%rd4941, %rd4877, %rd4938;
	xor.b64  	%rd4942, %rd4939, %rd4878;
	xor.b64  	%rd4943, %rd4942, %rd4933;
	xor.b64  	%rd4944, %rd4933, %rd4875;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4921, 32;
	shr.b64 	%rhs, %rd4921, 32;
	add.u64 	%rd4945, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4933, 32;
	shr.b64 	%rhs, %rd4933, 32;
	add.u64 	%rd4946, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4923, 32;
	shr.b64 	%rhs, %rd4923, 32;
	add.u64 	%rd4947, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4935, 32;
	shr.b64 	%rhs, %rd4935, 32;
	add.u64 	%rd4948, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4926, 32;
	shr.b64 	%rhs, %rd4926, 32;
	add.u64 	%rd4949, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4938, 32;
	shr.b64 	%rhs, %rd4938, 32;
	add.u64 	%rd4950, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4927, 32;
	shr.b64 	%rhs, %rd4927, 32;
	add.u64 	%rd4951, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd4939, 32;
	shr.b64 	%rhs, %rd4939, 32;
	add.u64 	%rd4952, %lhs, %rhs;
	}
	not.b64 	%rd4953, %rd4932;
	not.b64 	%rd4954, %rd4931;
	and.b64  	%rd4955, %rd4954, 923971301691017682;
	xor.b64  	%rd4956, %rd4928, %rd4955;
	and.b64  	%rd4957, %rd4956, %rd4929;
	xor.b64  	%rd4958, %rd4957, 923971301691017682;
	and.b64  	%rd4959, %rd4931, %rd4953;
	xor.b64  	%rd4960, %rd4956, %rd4959;
	not.b64 	%rd4961, %rd4929;
	and.b64  	%rd4962, %rd4931, %rd4961;
	xor.b64  	%rd4963, %rd4962, %rd4953;
	and.b64  	%rd4964, %rd4960, %rd4931;
	xor.b64  	%rd4965, %rd4964, %rd4929;
	xor.b64  	%rd4966, %rd4962, %rd4932;
	and.b64  	%rd4967, %rd4960, %rd4966;
	xor.b64  	%rd4968, %rd4967, %rd4931;
	or.b64  	%rd4969, %rd4965, %rd4963;
	xor.b64  	%rd4970, %rd4969, %rd4960;
	and.b64  	%rd4971, %rd4965, %rd4968;
	xor.b64  	%rd4972, %rd4971, %rd4963;
	and.b64  	%rd4973, %rd4970, %rd4958;
	xor.b64  	%rd4974, %rd4973, %rd4965;
	xor.b64  	%rd4975, %rd4968, %rd4958;
	not.b64 	%rd4976, %rd4944;
	not.b64 	%rd4977, %rd4943;
	and.b64  	%rd4978, %rd4977, 3462376096804022879;
	xor.b64  	%rd4979, %rd4940, %rd4978;
	and.b64  	%rd4980, %rd4979, %rd4941;
	xor.b64  	%rd4981, %rd4980, 3462376096804022879;
	and.b64  	%rd4982, %rd4943, %rd4976;
	xor.b64  	%rd4983, %rd4979, %rd4982;
	not.b64 	%rd4984, %rd4941;
	and.b64  	%rd4985, %rd4943, %rd4984;
	xor.b64  	%rd4986, %rd4985, %rd4976;
	and.b64  	%rd4987, %rd4983, %rd4943;
	xor.b64  	%rd4988, %rd4987, %rd4941;
	xor.b64  	%rd4989, %rd4985, %rd4944;
	and.b64  	%rd4990, %rd4983, %rd4989;
	xor.b64  	%rd4991, %rd4990, %rd4943;
	or.b64  	%rd4992, %rd4988, %rd4986;
	xor.b64  	%rd4993, %rd4992, %rd4983;
	and.b64  	%rd4994, %rd4988, %rd4991;
	xor.b64  	%rd4995, %rd4994, %rd4986;
	and.b64  	%rd4996, %rd4993, %rd4981;
	xor.b64  	%rd4997, %rd4996, %rd4988;
	xor.b64  	%rd4998, %rd4991, %rd4981;
	not.b64 	%rd4999, %rd4951;
	not.b64 	%rd5000, %rd4949;
	and.b64  	%rd5001, %rd5000, -7479668700747847052;
	xor.b64  	%rd5002, %rd4945, %rd5001;
	and.b64  	%rd5003, %rd5002, %rd4947;
	xor.b64  	%rd5004, %rd5003, -7479668700747847052;
	and.b64  	%rd5005, %rd4949, %rd4999;
	xor.b64  	%rd5006, %rd5002, %rd5005;
	not.b64 	%rd5007, %rd4947;
	and.b64  	%rd5008, %rd4949, %rd5007;
	xor.b64  	%rd5009, %rd5008, %rd4999;
	and.b64  	%rd5010, %rd5006, %rd4949;
	xor.b64  	%rd5011, %rd5010, %rd4947;
	xor.b64  	%rd5012, %rd5008, %rd4951;
	and.b64  	%rd5013, %rd5006, %rd5012;
	xor.b64  	%rd5014, %rd5013, %rd4949;
	or.b64  	%rd5015, %rd5011, %rd5009;
	xor.b64  	%rd5016, %rd5015, %rd5006;
	and.b64  	%rd5017, %rd5011, %rd5014;
	xor.b64  	%rd5018, %rd5017, %rd5009;
	and.b64  	%rd5019, %rd5016, %rd5004;
	not.b64 	%rd5020, %rd4952;
	not.b64 	%rd5021, %rd4950;
	and.b64  	%rd5022, %rd5021, -7279841319664424179;
	xor.b64  	%rd5023, %rd4946, %rd5022;
	and.b64  	%rd5024, %rd5023, %rd4948;
	xor.b64  	%rd5025, %rd5024, -7279841319664424179;
	and.b64  	%rd5026, %rd4950, %rd5020;
	xor.b64  	%rd5027, %rd5023, %rd5026;
	not.b64 	%rd5028, %rd4948;
	and.b64  	%rd5029, %rd4950, %rd5028;
	xor.b64  	%rd5030, %rd5029, %rd5020;
	and.b64  	%rd5031, %rd5027, %rd4950;
	xor.b64  	%rd5032, %rd5031, %rd4948;
	xor.b64  	%rd5033, %rd5029, %rd4952;
	and.b64  	%rd5034, %rd5027, %rd5033;
	xor.b64  	%rd5035, %rd5034, %rd4950;
	or.b64  	%rd5036, %rd5032, %rd5030;
	xor.b64  	%rd5037, %rd5036, %rd5027;
	and.b64  	%rd5038, %rd5032, %rd5035;
	xor.b64  	%rd5039, %rd5038, %rd5030;
	and.b64  	%rd5040, %rd5037, %rd5025;
	xor.b64  	%rd5041, %rd4974, %rd5016;
	xor.b64  	%rd5042, %rd4975, %rd5011;
	xor.b64  	%rd5043, %rd5042, %rd5019;
	xor.b64  	%rd5044, %rd5014, %rd5004;
	xor.b64  	%rd5045, %rd5044, %rd4970;
	xor.b64  	%rd5046, %rd5045, %rd4972;
	xor.b64  	%rd5047, %rd5018, %rd4970;
	xor.b64  	%rd5048, %rd5043, %rd4970;
	xor.b64  	%rd5049, %rd4974, %rd5046;
	xor.b64  	%rd5050, %rd5047, %rd4975;
	xor.b64  	%rd5051, %rd5050, %rd5041;
	xor.b64  	%rd5052, %rd5041, %rd4972;
	xor.b64  	%rd5053, %rd4997, %rd5037;
	xor.b64  	%rd5054, %rd4998, %rd5032;
	xor.b64  	%rd5055, %rd5054, %rd5040;
	xor.b64  	%rd5056, %rd5035, %rd5025;
	xor.b64  	%rd5057, %rd5056, %rd4993;
	xor.b64  	%rd5058, %rd5057, %rd4995;
	xor.b64  	%rd5059, %rd5039, %rd4993;
	xor.b64  	%rd5060, %rd5055, %rd4993;
	xor.b64  	%rd5061, %rd4997, %rd5058;
	xor.b64  	%rd5062, %rd5059, %rd4998;
	xor.b64  	%rd5063, %rd5062, %rd5053;
	xor.b64  	%rd5064, %rd5053, %rd4995;
	not.b64 	%rd5065, %rd5052;
	not.b64 	%rd5066, %rd5051;
	and.b64  	%rd5067, %rd5066, -7892011110224706229;
	xor.b64  	%rd5068, %rd5048, %rd5067;
	and.b64  	%rd5069, %rd5068, %rd5049;
	xor.b64  	%rd5070, %rd5069, -7892011110224706229;
	and.b64  	%rd5071, %rd5051, %rd5065;
	xor.b64  	%rd5072, %rd5068, %rd5071;
	not.b64 	%rd5073, %rd5049;
	and.b64  	%rd5074, %rd5051, %rd5073;
	xor.b64  	%rd5075, %rd5074, %rd5065;
	and.b64  	%rd5076, %rd5072, %rd5051;
	xor.b64  	%rd5077, %rd5076, %rd5049;
	xor.b64  	%rd5078, %rd5074, %rd5052;
	and.b64  	%rd5079, %rd5072, %rd5078;
	xor.b64  	%rd5080, %rd5079, %rd5051;
	or.b64  	%rd5081, %rd5077, %rd5075;
	xor.b64  	%rd5082, %rd5081, %rd5072;
	and.b64  	%rd5083, %rd5077, %rd5080;
	xor.b64  	%rd5084, %rd5083, %rd5075;
	and.b64  	%rd5085, %rd5082, %rd5070;
	xor.b64  	%rd5086, %rd5085, %rd5077;
	xor.b64  	%rd5087, %rd5080, %rd5070;
	not.b64 	%rd5088, %rd5064;
	not.b64 	%rd5089, %rd5063;
	and.b64  	%rd5090, %rd5089, -3213170980530269697;
	xor.b64  	%rd5091, %rd5060, %rd5090;
	and.b64  	%rd5092, %rd5091, %rd5061;
	xor.b64  	%rd5093, %rd5092, -3213170980530269697;
	and.b64  	%rd5094, %rd5063, %rd5088;
	xor.b64  	%rd5095, %rd5091, %rd5094;
	not.b64 	%rd5096, %rd5061;
	and.b64  	%rd5097, %rd5063, %rd5096;
	xor.b64  	%rd5098, %rd5097, %rd5088;
	and.b64  	%rd5099, %rd5095, %rd5063;
	xor.b64  	%rd5100, %rd5099, %rd5061;
	xor.b64  	%rd5101, %rd5097, %rd5064;
	and.b64  	%rd5102, %rd5095, %rd5101;
	xor.b64  	%rd5103, %rd5102, %rd5063;
	or.b64  	%rd5104, %rd5100, %rd5098;
	xor.b64  	%rd5105, %rd5104, %rd5095;
	and.b64  	%rd5106, %rd5100, %rd5103;
	xor.b64  	%rd5107, %rd5106, %rd5098;
	and.b64  	%rd5108, %rd5105, %rd5093;
	xor.b64  	%rd5109, %rd5108, %rd5100;
	xor.b64  	%rd5110, %rd5103, %rd5093;
	not.b64 	%rd5111, %rd5059;
	not.b64 	%rd5112, %rd5058;
	and.b64  	%rd5113, %rd5112, 3559979946510984091;
	xor.b64  	%rd5114, %rd5053, %rd5113;
	and.b64  	%rd5115, %rd5114, %rd5055;
	xor.b64  	%rd5116, %rd5115, 3559979946510984091;
	and.b64  	%rd5117, %rd5058, %rd5111;
	xor.b64  	%rd5118, %rd5114, %rd5117;
	not.b64 	%rd5119, %rd5055;
	and.b64  	%rd5120, %rd5058, %rd5119;
	xor.b64  	%rd5121, %rd5120, %rd5111;
	and.b64  	%rd5122, %rd5118, %rd5058;
	xor.b64  	%rd5123, %rd5122, %rd5055;
	xor.b64  	%rd5124, %rd5120, %rd5059;
	and.b64  	%rd5125, %rd5118, %rd5124;
	xor.b64  	%rd5126, %rd5125, %rd5058;
	or.b64  	%rd5127, %rd5123, %rd5121;
	xor.b64  	%rd5128, %rd5127, %rd5118;
	and.b64  	%rd5129, %rd5123, %rd5126;
	xor.b64  	%rd5130, %rd5129, %rd5121;
	and.b64  	%rd5131, %rd5128, %rd5116;
	xor.b64  	%rd5132, %rd5131, %rd5123;
	not.b64 	%rd5133, %rd5047;
	not.b64 	%rd5134, %rd5046;
	and.b64  	%rd5135, %rd5134, 393231640453113548;
	xor.b64  	%rd5136, %rd5041, %rd5135;
	and.b64  	%rd5137, %rd5136, %rd5043;
	xor.b64  	%rd5138, %rd5137, 393231640453113548;
	and.b64  	%rd5139, %rd5046, %rd5133;
	xor.b64  	%rd5140, %rd5136, %rd5139;
	not.b64 	%rd5141, %rd5043;
	and.b64  	%rd5142, %rd5046, %rd5141;
	xor.b64  	%rd5143, %rd5142, %rd5133;
	and.b64  	%rd5144, %rd5140, %rd5046;
	xor.b64  	%rd5145, %rd5144, %rd5043;
	xor.b64  	%rd5146, %rd5142, %rd5047;
	and.b64  	%rd5147, %rd5140, %rd5146;
	xor.b64  	%rd5148, %rd5147, %rd5046;
	or.b64  	%rd5149, %rd5145, %rd5143;
	xor.b64  	%rd5150, %rd5149, %rd5140;
	and.b64  	%rd5151, %rd5145, %rd5148;
	xor.b64  	%rd5152, %rd5151, %rd5143;
	and.b64  	%rd5153, %rd5150, %rd5138;
	xor.b64  	%rd5154, %rd5086, %rd5128;
	xor.b64  	%rd5155, %rd5132, %rd5087;
	xor.b64  	%rd5156, %rd5126, %rd5116;
	xor.b64  	%rd5157, %rd5156, %rd5082;
	xor.b64  	%rd5158, %rd5157, %rd5084;
	xor.b64  	%rd5159, %rd5130, %rd5082;
	xor.b64  	%rd5160, %rd5082, %rd5155;
	xor.b64  	%rd5161, %rd5086, %rd5158;
	xor.b64  	%rd5162, %rd5159, %rd5087;
	xor.b64  	%rd5163, %rd5162, %rd5154;
	xor.b64  	%rd5164, %rd5154, %rd5084;
	xor.b64  	%rd5165, %rd5109, %rd5150;
	xor.b64  	%rd5166, %rd5110, %rd5145;
	xor.b64  	%rd5167, %rd5166, %rd5153;
	xor.b64  	%rd5168, %rd5148, %rd5138;
	xor.b64  	%rd5169, %rd5168, %rd5105;
	xor.b64  	%rd5170, %rd5169, %rd5107;
	xor.b64  	%rd5171, %rd5152, %rd5105;
	xor.b64  	%rd5172, %rd5167, %rd5105;
	xor.b64  	%rd5173, %rd5109, %rd5170;
	xor.b64  	%rd5174, %rd5171, %rd5110;
	xor.b64  	%rd5175, %rd5174, %rd5165;
	xor.b64  	%rd5176, %rd5165, %rd5107;
	and.b64  	%rd5177, %rd5154, 6148914691236517205;
	shl.b64 	%rd5178, %rd5177, 1;
	shr.u64 	%rd5179, %rd5154, 1;
	and.b64  	%rd5180, %rd5179, 6148914691236517205;
	or.b64  	%rd5181, %rd5180, %rd5178;
	and.b64  	%rd5182, %rd5165, 6148914691236517205;
	shl.b64 	%rd5183, %rd5182, 1;
	shr.u64 	%rd5184, %rd5165, 1;
	and.b64  	%rd5185, %rd5184, 6148914691236517205;
	or.b64  	%rd5186, %rd5185, %rd5183;
	and.b64  	%rd5187, %rd5155, 6148914691236517205;
	shl.b64 	%rd5188, %rd5187, 1;
	shr.u64 	%rd5189, %rd5155, 1;
	and.b64  	%rd5190, %rd5189, 6148914691236517205;
	or.b64  	%rd5191, %rd5190, %rd5188;
	and.b64  	%rd5192, %rd5167, 6148914691236517205;
	shl.b64 	%rd5193, %rd5192, 1;
	shr.u64 	%rd5194, %rd5167, 1;
	and.b64  	%rd5195, %rd5194, 6148914691236517205;
	or.b64  	%rd5196, %rd5195, %rd5193;
	and.b64  	%rd5197, %rd5158, 6148914691236517205;
	shl.b64 	%rd5198, %rd5197, 1;
	shr.u64 	%rd5199, %rd5158, 1;
	and.b64  	%rd5200, %rd5199, 6148914691236517205;
	or.b64  	%rd5201, %rd5200, %rd5198;
	and.b64  	%rd5202, %rd5170, 6148914691236517205;
	shl.b64 	%rd5203, %rd5202, 1;
	shr.u64 	%rd5204, %rd5170, 1;
	and.b64  	%rd5205, %rd5204, 6148914691236517205;
	or.b64  	%rd5206, %rd5205, %rd5203;
	and.b64  	%rd5207, %rd5159, 6148914691236517205;
	shl.b64 	%rd5208, %rd5207, 1;
	shr.u64 	%rd5209, %rd5159, 1;
	and.b64  	%rd5210, %rd5209, 6148914691236517205;
	or.b64  	%rd5211, %rd5210, %rd5208;
	and.b64  	%rd5212, %rd5171, 6148914691236517205;
	shl.b64 	%rd5213, %rd5212, 1;
	shr.u64 	%rd5214, %rd5171, 1;
	and.b64  	%rd5215, %rd5214, 6148914691236517205;
	or.b64  	%rd5216, %rd5215, %rd5213;
	not.b64 	%rd5217, %rd5164;
	not.b64 	%rd5218, %rd5163;
	and.b64  	%rd5219, %rd5218, -3572425343576738127;
	xor.b64  	%rd5220, %rd5160, %rd5219;
	and.b64  	%rd5221, %rd5220, %rd5161;
	xor.b64  	%rd5222, %rd5221, -3572425343576738127;
	and.b64  	%rd5223, %rd5163, %rd5217;
	xor.b64  	%rd5224, %rd5220, %rd5223;
	not.b64 	%rd5225, %rd5161;
	and.b64  	%rd5226, %rd5163, %rd5225;
	xor.b64  	%rd5227, %rd5226, %rd5217;
	and.b64  	%rd5228, %rd5224, %rd5163;
	xor.b64  	%rd5229, %rd5228, %rd5161;
	xor.b64  	%rd5230, %rd5226, %rd5164;
	and.b64  	%rd5231, %rd5224, %rd5230;
	xor.b64  	%rd5232, %rd5231, %rd5163;
	or.b64  	%rd5233, %rd5229, %rd5227;
	xor.b64  	%rd5234, %rd5233, %rd5224;
	and.b64  	%rd5235, %rd5229, %rd5232;
	xor.b64  	%rd5236, %rd5235, %rd5227;
	and.b64  	%rd5237, %rd5234, %rd5222;
	xor.b64  	%rd5238, %rd5237, %rd5229;
	xor.b64  	%rd5239, %rd5232, %rd5222;
	not.b64 	%rd5240, %rd5176;
	not.b64 	%rd5241, %rd5175;
	and.b64  	%rd5242, %rd5241, 7107249726874064700;
	xor.b64  	%rd5243, %rd5172, %rd5242;
	and.b64  	%rd5244, %rd5243, %rd5173;
	xor.b64  	%rd5245, %rd5244, 7107249726874064700;
	and.b64  	%rd5246, %rd5175, %rd5240;
	xor.b64  	%rd5247, %rd5243, %rd5246;
	not.b64 	%rd5248, %rd5173;
	and.b64  	%rd5249, %rd5175, %rd5248;
	xor.b64  	%rd5250, %rd5249, %rd5240;
	and.b64  	%rd5251, %rd5247, %rd5175;
	xor.b64  	%rd5252, %rd5251, %rd5173;
	xor.b64  	%rd5253, %rd5249, %rd5176;
	and.b64  	%rd5254, %rd5247, %rd5253;
	xor.b64  	%rd5255, %rd5254, %rd5175;
	or.b64  	%rd5256, %rd5252, %rd5250;
	xor.b64  	%rd5257, %rd5256, %rd5247;
	and.b64  	%rd5258, %rd5252, %rd5255;
	xor.b64  	%rd5259, %rd5258, %rd5250;
	and.b64  	%rd5260, %rd5257, %rd5245;
	xor.b64  	%rd5261, %rd5260, %rd5252;
	xor.b64  	%rd5262, %rd5255, %rd5245;
	not.b64 	%rd5263, %rd5211;
	not.b64 	%rd5264, %rd5201;
	and.b64  	%rd5265, %rd5264, 5122078734941891572;
	xor.b64  	%rd5266, %rd5181, %rd5265;
	and.b64  	%rd5267, %rd5266, %rd5191;
	xor.b64  	%rd5268, %rd5267, 5122078734941891572;
	and.b64  	%rd5269, %rd5201, %rd5263;
	xor.b64  	%rd5270, %rd5266, %rd5269;
	not.b64 	%rd5271, %rd5191;
	and.b64  	%rd5272, %rd5201, %rd5271;
	xor.b64  	%rd5273, %rd5272, %rd5263;
	and.b64  	%rd5274, %rd5270, %rd5201;
	xor.b64  	%rd5275, %rd5274, %rd5191;
	xor.b64  	%rd5276, %rd5272, %rd5211;
	and.b64  	%rd5277, %rd5270, %rd5276;
	xor.b64  	%rd5278, %rd5277, %rd5201;
	or.b64  	%rd5279, %rd5275, %rd5273;
	xor.b64  	%rd5280, %rd5279, %rd5270;
	and.b64  	%rd5281, %rd5275, %rd5278;
	xor.b64  	%rd5282, %rd5281, %rd5273;
	and.b64  	%rd5283, %rd5280, %rd5268;
	not.b64 	%rd5284, %rd5216;
	not.b64 	%rd5285, %rd5206;
	and.b64  	%rd5286, %rd5285, 5218144898981840639;
	xor.b64  	%rd5287, %rd5186, %rd5286;
	and.b64  	%rd5288, %rd5287, %rd5196;
	xor.b64  	%rd5289, %rd5288, 5218144898981840639;
	and.b64  	%rd5290, %rd5206, %rd5284;
	xor.b64  	%rd5291, %rd5287, %rd5290;
	not.b64 	%rd5292, %rd5196;
	and.b64  	%rd5293, %rd5206, %rd5292;
	xor.b64  	%rd5294, %rd5293, %rd5284;
	and.b64  	%rd5295, %rd5291, %rd5206;
	xor.b64  	%rd5296, %rd5295, %rd5196;
	xor.b64  	%rd5297, %rd5293, %rd5216;
	and.b64  	%rd5298, %rd5291, %rd5297;
	xor.b64  	%rd5299, %rd5298, %rd5206;
	or.b64  	%rd5300, %rd5296, %rd5294;
	xor.b64  	%rd5301, %rd5300, %rd5291;
	and.b64  	%rd5302, %rd5296, %rd5299;
	xor.b64  	%rd5303, %rd5302, %rd5294;
	and.b64  	%rd5304, %rd5301, %rd5289;
	xor.b64  	%rd5305, %rd5238, %rd5280;
	xor.b64  	%rd5306, %rd5239, %rd5275;
	xor.b64  	%rd5307, %rd5306, %rd5283;
	xor.b64  	%rd5308, %rd5278, %rd5268;
	xor.b64  	%rd5309, %rd5308, %rd5234;
	xor.b64  	%rd5310, %rd5309, %rd5236;
	xor.b64  	%rd5311, %rd5282, %rd5234;
	xor.b64  	%rd5312, %rd5307, %rd5234;
	xor.b64  	%rd5313, %rd5238, %rd5310;
	xor.b64  	%rd5314, %rd5311, %rd5239;
	xor.b64  	%rd5315, %rd5314, %rd5305;
	xor.b64  	%rd5316, %rd5305, %rd5236;
	xor.b64  	%rd5317, %rd5261, %rd5301;
	xor.b64  	%rd5318, %rd5262, %rd5296;
	xor.b64  	%rd5319, %rd5318, %rd5304;
	xor.b64  	%rd5320, %rd5299, %rd5289;
	xor.b64  	%rd5321, %rd5320, %rd5257;
	xor.b64  	%rd5322, %rd5321, %rd5259;
	xor.b64  	%rd5323, %rd5303, %rd5257;
	xor.b64  	%rd5324, %rd5319, %rd5257;
	xor.b64  	%rd5325, %rd5261, %rd5322;
	xor.b64  	%rd5326, %rd5323, %rd5262;
	xor.b64  	%rd5327, %rd5326, %rd5317;
	xor.b64  	%rd5328, %rd5317, %rd5259;
	and.b64  	%rd5329, %rd5305, 3689348814741910323;
	shl.b64 	%rd5330, %rd5329, 2;
	shr.u64 	%rd5331, %rd5305, 2;
	and.b64  	%rd5332, %rd5331, 3689348814741910323;
	or.b64  	%rd5333, %rd5332, %rd5330;
	and.b64  	%rd5334, %rd5317, 3689348814741910323;
	shl.b64 	%rd5335, %rd5334, 2;
	shr.u64 	%rd5336, %rd5317, 2;
	and.b64  	%rd5337, %rd5336, 3689348814741910323;
	or.b64  	%rd5338, %rd5337, %rd5335;
	and.b64  	%rd5339, %rd5307, 3689348814741910323;
	shl.b64 	%rd5340, %rd5339, 2;
	shr.u64 	%rd5341, %rd5307, 2;
	and.b64  	%rd5342, %rd5341, 3689348814741910323;
	or.b64  	%rd5343, %rd5342, %rd5340;
	and.b64  	%rd5344, %rd5319, 3689348814741910323;
	shl.b64 	%rd5345, %rd5344, 2;
	shr.u64 	%rd5346, %rd5319, 2;
	and.b64  	%rd5347, %rd5346, 3689348814741910323;
	or.b64  	%rd5348, %rd5347, %rd5345;
	and.b64  	%rd5349, %rd5310, 3689348814741910323;
	shl.b64 	%rd5350, %rd5349, 2;
	shr.u64 	%rd5351, %rd5310, 2;
	and.b64  	%rd5352, %rd5351, 3689348814741910323;
	or.b64  	%rd5353, %rd5352, %rd5350;
	and.b64  	%rd5354, %rd5322, 3689348814741910323;
	shl.b64 	%rd5355, %rd5354, 2;
	shr.u64 	%rd5356, %rd5322, 2;
	and.b64  	%rd5357, %rd5356, 3689348814741910323;
	or.b64  	%rd5358, %rd5357, %rd5355;
	and.b64  	%rd5359, %rd5311, 3689348814741910323;
	shl.b64 	%rd5360, %rd5359, 2;
	shr.u64 	%rd5361, %rd5311, 2;
	and.b64  	%rd5362, %rd5361, 3689348814741910323;
	or.b64  	%rd5363, %rd5362, %rd5360;
	and.b64  	%rd5364, %rd5323, 3689348814741910323;
	shl.b64 	%rd5365, %rd5364, 2;
	shr.u64 	%rd5366, %rd5323, 2;
	and.b64  	%rd5367, %rd5366, 3689348814741910323;
	or.b64  	%rd5368, %rd5367, %rd5365;
	not.b64 	%rd5369, %rd5316;
	not.b64 	%rd5370, %rd5315;
	and.b64  	%rd5371, %rd5370, 7306349659702222648;
	xor.b64  	%rd5372, %rd5312, %rd5371;
	and.b64  	%rd5373, %rd5372, %rd5313;
	xor.b64  	%rd5374, %rd5373, 7306349659702222648;
	and.b64  	%rd5375, %rd5315, %rd5369;
	xor.b64  	%rd5376, %rd5372, %rd5375;
	not.b64 	%rd5377, %rd5313;
	and.b64  	%rd5378, %rd5315, %rd5377;
	xor.b64  	%rd5379, %rd5378, %rd5369;
	and.b64  	%rd5380, %rd5376, %rd5315;
	xor.b64  	%rd5381, %rd5380, %rd5313;
	xor.b64  	%rd5382, %rd5378, %rd5316;
	and.b64  	%rd5383, %rd5376, %rd5382;
	xor.b64  	%rd5384, %rd5383, %rd5315;
	or.b64  	%rd5385, %rd5381, %rd5379;
	xor.b64  	%rd5386, %rd5385, %rd5376;
	and.b64  	%rd5387, %rd5381, %rd5384;
	xor.b64  	%rd5388, %rd5387, %rd5379;
	and.b64  	%rd5389, %rd5386, %rd5374;
	xor.b64  	%rd5390, %rd5389, %rd5381;
	xor.b64  	%rd5391, %rd5384, %rd5374;
	not.b64 	%rd5392, %rd5328;
	not.b64 	%rd5393, %rd5327;
	and.b64  	%rd5394, %rd5393, -8191899302990381838;
	xor.b64  	%rd5395, %rd5324, %rd5394;
	and.b64  	%rd5396, %rd5395, %rd5325;
	xor.b64  	%rd5397, %rd5396, -8191899302990381838;
	and.b64  	%rd5398, %rd5327, %rd5392;
	xor.b64  	%rd5399, %rd5395, %rd5398;
	not.b64 	%rd5400, %rd5325;
	and.b64  	%rd5401, %rd5327, %rd5400;
	xor.b64  	%rd5402, %rd5401, %rd5392;
	and.b64  	%rd5403, %rd5399, %rd5327;
	xor.b64  	%rd5404, %rd5403, %rd5325;
	xor.b64  	%rd5405, %rd5401, %rd5328;
	and.b64  	%rd5406, %rd5399, %rd5405;
	xor.b64  	%rd5407, %rd5406, %rd5327;
	or.b64  	%rd5408, %rd5404, %rd5402;
	xor.b64  	%rd5409, %rd5408, %rd5399;
	and.b64  	%rd5410, %rd5404, %rd5407;
	xor.b64  	%rd5411, %rd5410, %rd5402;
	and.b64  	%rd5412, %rd5409, %rd5397;
	xor.b64  	%rd5413, %rd5412, %rd5404;
	xor.b64  	%rd5414, %rd5407, %rd5397;
	not.b64 	%rd5415, %rd5363;
	not.b64 	%rd5416, %rd5353;
	and.b64  	%rd5417, %rd5416, -8734155538206658511;
	xor.b64  	%rd5418, %rd5333, %rd5417;
	and.b64  	%rd5419, %rd5418, %rd5343;
	xor.b64  	%rd5420, %rd5419, -8734155538206658511;
	and.b64  	%rd5421, %rd5353, %rd5415;
	xor.b64  	%rd5422, %rd5418, %rd5421;
	not.b64 	%rd5423, %rd5343;
	and.b64  	%rd5424, %rd5353, %rd5423;
	xor.b64  	%rd5425, %rd5424, %rd5415;
	and.b64  	%rd5426, %rd5422, %rd5353;
	xor.b64  	%rd5427, %rd5426, %rd5343;
	xor.b64  	%rd5428, %rd5424, %rd5363;
	and.b64  	%rd5429, %rd5422, %rd5428;
	xor.b64  	%rd5430, %rd5429, %rd5353;
	or.b64  	%rd5431, %rd5427, %rd5425;
	xor.b64  	%rd5432, %rd5431, %rd5422;
	and.b64  	%rd5433, %rd5427, %rd5430;
	xor.b64  	%rd5434, %rd5433, %rd5425;
	and.b64  	%rd5435, %rd5432, %rd5420;
	not.b64 	%rd5436, %rd5368;
	not.b64 	%rd5437, %rd5358;
	and.b64  	%rd5438, %rd5437, 5640609208577114352;
	xor.b64  	%rd5439, %rd5338, %rd5438;
	and.b64  	%rd5440, %rd5439, %rd5348;
	xor.b64  	%rd5441, %rd5440, 5640609208577114352;
	and.b64  	%rd5442, %rd5358, %rd5436;
	xor.b64  	%rd5443, %rd5439, %rd5442;
	not.b64 	%rd5444, %rd5348;
	and.b64  	%rd5445, %rd5358, %rd5444;
	xor.b64  	%rd5446, %rd5445, %rd5436;
	and.b64  	%rd5447, %rd5443, %rd5358;
	xor.b64  	%rd5448, %rd5447, %rd5348;
	xor.b64  	%rd5449, %rd5445, %rd5368;
	and.b64  	%rd5450, %rd5443, %rd5449;
	xor.b64  	%rd5451, %rd5450, %rd5358;
	or.b64  	%rd5452, %rd5448, %rd5446;
	xor.b64  	%rd5453, %rd5452, %rd5443;
	and.b64  	%rd5454, %rd5448, %rd5451;
	xor.b64  	%rd5455, %rd5454, %rd5446;
	and.b64  	%rd5456, %rd5453, %rd5441;
	xor.b64  	%rd5457, %rd5390, %rd5432;
	xor.b64  	%rd5458, %rd5391, %rd5427;
	xor.b64  	%rd5459, %rd5458, %rd5435;
	xor.b64  	%rd5460, %rd5430, %rd5420;
	xor.b64  	%rd5461, %rd5460, %rd5386;
	xor.b64  	%rd5462, %rd5461, %rd5388;
	xor.b64  	%rd5463, %rd5434, %rd5386;
	xor.b64  	%rd5464, %rd5459, %rd5386;
	xor.b64  	%rd5465, %rd5390, %rd5462;
	xor.b64  	%rd5466, %rd5463, %rd5391;
	xor.b64  	%rd5467, %rd5466, %rd5457;
	xor.b64  	%rd5468, %rd5457, %rd5388;
	xor.b64  	%rd5469, %rd5413, %rd5453;
	xor.b64  	%rd5470, %rd5414, %rd5448;
	xor.b64  	%rd5471, %rd5470, %rd5456;
	xor.b64  	%rd5472, %rd5451, %rd5441;
	xor.b64  	%rd5473, %rd5472, %rd5409;
	xor.b64  	%rd5474, %rd5473, %rd5411;
	xor.b64  	%rd5475, %rd5455, %rd5409;
	xor.b64  	%rd5476, %rd5471, %rd5409;
	xor.b64  	%rd5477, %rd5413, %rd5474;
	xor.b64  	%rd5478, %rd5475, %rd5414;
	xor.b64  	%rd5479, %rd5478, %rd5469;
	xor.b64  	%rd5480, %rd5469, %rd5411;
	and.b64  	%rd5481, %rd5457, 1085102592571150095;
	shl.b64 	%rd5482, %rd5481, 4;
	shr.u64 	%rd5483, %rd5457, 4;
	and.b64  	%rd5484, %rd5483, 1085102592571150095;
	or.b64  	%rd5485, %rd5484, %rd5482;
	and.b64  	%rd5486, %rd5469, 1085102592571150095;
	shl.b64 	%rd5487, %rd5486, 4;
	shr.u64 	%rd5488, %rd5469, 4;
	and.b64  	%rd5489, %rd5488, 1085102592571150095;
	or.b64  	%rd5490, %rd5489, %rd5487;
	and.b64  	%rd5491, %rd5459, 1085102592571150095;
	shl.b64 	%rd5492, %rd5491, 4;
	shr.u64 	%rd5493, %rd5459, 4;
	and.b64  	%rd5494, %rd5493, 1085102592571150095;
	or.b64  	%rd5495, %rd5494, %rd5492;
	and.b64  	%rd5496, %rd5471, 1085102592571150095;
	shl.b64 	%rd5497, %rd5496, 4;
	shr.u64 	%rd5498, %rd5471, 4;
	and.b64  	%rd5499, %rd5498, 1085102592571150095;
	or.b64  	%rd5500, %rd5499, %rd5497;
	and.b64  	%rd5501, %rd5462, 1085102592571150095;
	shl.b64 	%rd5502, %rd5501, 4;
	shr.u64 	%rd5503, %rd5462, 4;
	and.b64  	%rd5504, %rd5503, 1085102592571150095;
	or.b64  	%rd5505, %rd5504, %rd5502;
	and.b64  	%rd5506, %rd5474, 1085102592571150095;
	shl.b64 	%rd5507, %rd5506, 4;
	shr.u64 	%rd5508, %rd5474, 4;
	and.b64  	%rd5509, %rd5508, 1085102592571150095;
	or.b64  	%rd5510, %rd5509, %rd5507;
	and.b64  	%rd5511, %rd5463, 1085102592571150095;
	shl.b64 	%rd5512, %rd5511, 4;
	shr.u64 	%rd5513, %rd5463, 4;
	and.b64  	%rd5514, %rd5513, 1085102592571150095;
	or.b64  	%rd5515, %rd5514, %rd5512;
	and.b64  	%rd5516, %rd5475, 1085102592571150095;
	shl.b64 	%rd5517, %rd5516, 4;
	shr.u64 	%rd5518, %rd5475, 4;
	and.b64  	%rd5519, %rd5518, 1085102592571150095;
	or.b64  	%rd5520, %rd5519, %rd5517;
	not.b64 	%rd5521, %rd5468;
	not.b64 	%rd5522, %rd5467;
	and.b64  	%rd5523, %rd5522, -8991164178053029787;
	xor.b64  	%rd5524, %rd5464, %rd5523;
	and.b64  	%rd5525, %rd5524, %rd5465;
	xor.b64  	%rd5526, %rd5525, -8991164178053029787;
	and.b64  	%rd5527, %rd5467, %rd5521;
	xor.b64  	%rd5528, %rd5524, %rd5527;
	not.b64 	%rd5529, %rd5465;
	and.b64  	%rd5530, %rd5467, %rd5529;
	xor.b64  	%rd5531, %rd5530, %rd5521;
	and.b64  	%rd5532, %rd5528, %rd5467;
	xor.b64  	%rd5533, %rd5532, %rd5465;
	xor.b64  	%rd5534, %rd5530, %rd5468;
	and.b64  	%rd5535, %rd5528, %rd5534;
	xor.b64  	%rd5536, %rd5535, %rd5467;
	or.b64  	%rd5537, %rd5533, %rd5531;
	xor.b64  	%rd5538, %rd5537, %rd5528;
	and.b64  	%rd5539, %rd5533, %rd5536;
	xor.b64  	%rd5540, %rd5539, %rd5531;
	and.b64  	%rd5541, %rd5538, %rd5526;
	xor.b64  	%rd5542, %rd5541, %rd5533;
	xor.b64  	%rd5543, %rd5536, %rd5526;
	not.b64 	%rd5544, %rd5480;
	not.b64 	%rd5545, %rd5479;
	and.b64  	%rd5546, %rd5545, -4811483893189746953;
	xor.b64  	%rd5547, %rd5476, %rd5546;
	and.b64  	%rd5548, %rd5547, %rd5477;
	xor.b64  	%rd5549, %rd5548, -4811483893189746953;
	and.b64  	%rd5550, %rd5479, %rd5544;
	xor.b64  	%rd5551, %rd5547, %rd5550;
	not.b64 	%rd5552, %rd5477;
	and.b64  	%rd5553, %rd5479, %rd5552;
	xor.b64  	%rd5554, %rd5553, %rd5544;
	and.b64  	%rd5555, %rd5551, %rd5479;
	xor.b64  	%rd5556, %rd5555, %rd5477;
	xor.b64  	%rd5557, %rd5553, %rd5480;
	and.b64  	%rd5558, %rd5551, %rd5557;
	xor.b64  	%rd5559, %rd5558, %rd5479;
	or.b64  	%rd5560, %rd5556, %rd5554;
	xor.b64  	%rd5561, %rd5560, %rd5551;
	and.b64  	%rd5562, %rd5556, %rd5559;
	xor.b64  	%rd5563, %rd5562, %rd5554;
	and.b64  	%rd5564, %rd5561, %rd5549;
	xor.b64  	%rd5565, %rd5564, %rd5556;
	xor.b64  	%rd5566, %rd5559, %rd5549;
	not.b64 	%rd5567, %rd5515;
	not.b64 	%rd5568, %rd5505;
	and.b64  	%rd5569, %rd5568, 8068219628099376929;
	xor.b64  	%rd5570, %rd5485, %rd5569;
	and.b64  	%rd5571, %rd5570, %rd5495;
	xor.b64  	%rd5572, %rd5571, 8068219628099376929;
	and.b64  	%rd5573, %rd5505, %rd5567;
	xor.b64  	%rd5574, %rd5570, %rd5573;
	not.b64 	%rd5575, %rd5495;
	and.b64  	%rd5576, %rd5505, %rd5575;
	xor.b64  	%rd5577, %rd5576, %rd5567;
	and.b64  	%rd5578, %rd5574, %rd5505;
	xor.b64  	%rd5579, %rd5578, %rd5495;
	xor.b64  	%rd5580, %rd5576, %rd5515;
	and.b64  	%rd5581, %rd5574, %rd5580;
	xor.b64  	%rd5582, %rd5581, %rd5505;
	or.b64  	%rd5583, %rd5579, %rd5577;
	xor.b64  	%rd5584, %rd5583, %rd5574;
	and.b64  	%rd5585, %rd5579, %rd5582;
	xor.b64  	%rd5586, %rd5585, %rd5577;
	and.b64  	%rd5587, %rd5584, %rd5572;
	not.b64 	%rd5588, %rd5520;
	not.b64 	%rd5589, %rd5510;
	and.b64  	%rd5590, %rd5589, -1738776553750444893;
	xor.b64  	%rd5591, %rd5490, %rd5590;
	and.b64  	%rd5592, %rd5591, %rd5500;
	xor.b64  	%rd5593, %rd5592, -1738776553750444893;
	and.b64  	%rd5594, %rd5510, %rd5588;
	xor.b64  	%rd5595, %rd5591, %rd5594;
	not.b64 	%rd5596, %rd5500;
	and.b64  	%rd5597, %rd5510, %rd5596;
	xor.b64  	%rd5598, %rd5597, %rd5588;
	and.b64  	%rd5599, %rd5595, %rd5510;
	xor.b64  	%rd5600, %rd5599, %rd5500;
	xor.b64  	%rd5601, %rd5597, %rd5520;
	and.b64  	%rd5602, %rd5595, %rd5601;
	xor.b64  	%rd5603, %rd5602, %rd5510;
	or.b64  	%rd5604, %rd5600, %rd5598;
	xor.b64  	%rd5605, %rd5604, %rd5595;
	and.b64  	%rd5606, %rd5600, %rd5603;
	xor.b64  	%rd5607, %rd5606, %rd5598;
	and.b64  	%rd5608, %rd5605, %rd5593;
	xor.b64  	%rd5609, %rd5542, %rd5584;
	xor.b64  	%rd5610, %rd5543, %rd5579;
	xor.b64  	%rd5611, %rd5610, %rd5587;
	xor.b64  	%rd5612, %rd5582, %rd5572;
	xor.b64  	%rd5613, %rd5612, %rd5538;
	xor.b64  	%rd5614, %rd5613, %rd5540;
	xor.b64  	%rd5615, %rd5586, %rd5538;
	xor.b64  	%rd5616, %rd5611, %rd5538;
	xor.b64  	%rd5617, %rd5542, %rd5614;
	xor.b64  	%rd5618, %rd5615, %rd5543;
	xor.b64  	%rd5619, %rd5618, %rd5609;
	xor.b64  	%rd5620, %rd5609, %rd5540;
	xor.b64  	%rd5621, %rd5565, %rd5605;
	xor.b64  	%rd5622, %rd5566, %rd5600;
	xor.b64  	%rd5623, %rd5622, %rd5608;
	xor.b64  	%rd5624, %rd5603, %rd5593;
	xor.b64  	%rd5625, %rd5624, %rd5561;
	xor.b64  	%rd5626, %rd5625, %rd5563;
	xor.b64  	%rd5627, %rd5607, %rd5561;
	xor.b64  	%rd5628, %rd5623, %rd5561;
	xor.b64  	%rd5629, %rd5565, %rd5626;
	xor.b64  	%rd5630, %rd5627, %rd5566;
	xor.b64  	%rd5631, %rd5630, %rd5621;
	xor.b64  	%rd5632, %rd5621, %rd5563;
	and.b64  	%rd5633, %rd5609, 71777214294589695;
	shl.b64 	%rd5634, %rd5633, 8;
	shr.u64 	%rd5635, %rd5609, 8;
	and.b64  	%rd5636, %rd5635, 71777214294589695;
	or.b64  	%rd5637, %rd5636, %rd5634;
	and.b64  	%rd5638, %rd5621, 71777214294589695;
	shl.b64 	%rd5639, %rd5638, 8;
	shr.u64 	%rd5640, %rd5621, 8;
	and.b64  	%rd5641, %rd5640, 71777214294589695;
	or.b64  	%rd5642, %rd5641, %rd5639;
	and.b64  	%rd5643, %rd5611, 71777214294589695;
	shl.b64 	%rd5644, %rd5643, 8;
	shr.u64 	%rd5645, %rd5611, 8;
	and.b64  	%rd5646, %rd5645, 71777214294589695;
	or.b64  	%rd5647, %rd5646, %rd5644;
	and.b64  	%rd5648, %rd5623, 71777214294589695;
	shl.b64 	%rd5649, %rd5648, 8;
	shr.u64 	%rd5650, %rd5623, 8;
	and.b64  	%rd5651, %rd5650, 71777214294589695;
	or.b64  	%rd5652, %rd5651, %rd5649;
	and.b64  	%rd5653, %rd5614, 71777214294589695;
	shl.b64 	%rd5654, %rd5653, 8;
	shr.u64 	%rd5655, %rd5614, 8;
	and.b64  	%rd5656, %rd5655, 71777214294589695;
	or.b64  	%rd5657, %rd5656, %rd5654;
	and.b64  	%rd5658, %rd5626, 71777214294589695;
	shl.b64 	%rd5659, %rd5658, 8;
	shr.u64 	%rd5660, %rd5626, 8;
	and.b64  	%rd5661, %rd5660, 71777214294589695;
	or.b64  	%rd5662, %rd5661, %rd5659;
	and.b64  	%rd5663, %rd5615, 71777214294589695;
	shl.b64 	%rd5664, %rd5663, 8;
	shr.u64 	%rd5665, %rd5615, 8;
	and.b64  	%rd5666, %rd5665, 71777214294589695;
	or.b64  	%rd5667, %rd5666, %rd5664;
	and.b64  	%rd5668, %rd5627, 71777214294589695;
	shl.b64 	%rd5669, %rd5668, 8;
	shr.u64 	%rd5670, %rd5627, 8;
	and.b64  	%rd5671, %rd5670, 71777214294589695;
	or.b64  	%rd5672, %rd5671, %rd5669;
	not.b64 	%rd5673, %rd5620;
	not.b64 	%rd5674, %rd5619;
	and.b64  	%rd5675, %rd5674, -2769109631776087925;
	xor.b64  	%rd5676, %rd5616, %rd5675;
	and.b64  	%rd5677, %rd5676, %rd5617;
	xor.b64  	%rd5678, %rd5677, -2769109631776087925;
	and.b64  	%rd5679, %rd5619, %rd5673;
	xor.b64  	%rd5680, %rd5676, %rd5679;
	not.b64 	%rd5681, %rd5617;
	and.b64  	%rd5682, %rd5619, %rd5681;
	xor.b64  	%rd5683, %rd5682, %rd5673;
	and.b64  	%rd5684, %rd5680, %rd5619;
	xor.b64  	%rd5685, %rd5684, %rd5617;
	xor.b64  	%rd5686, %rd5682, %rd5620;
	and.b64  	%rd5687, %rd5680, %rd5686;
	xor.b64  	%rd5688, %rd5687, %rd5619;
	or.b64  	%rd5689, %rd5685, %rd5683;
	xor.b64  	%rd5690, %rd5689, %rd5680;
	and.b64  	%rd5691, %rd5685, %rd5688;
	xor.b64  	%rd5692, %rd5691, %rd5683;
	and.b64  	%rd5693, %rd5690, %rd5678;
	xor.b64  	%rd5694, %rd5693, %rd5685;
	xor.b64  	%rd5695, %rd5688, %rd5678;
	not.b64 	%rd5696, %rd5632;
	not.b64 	%rd5697, %rd5631;
	and.b64  	%rd5698, %rd5697, -4736981884029401796;
	xor.b64  	%rd5699, %rd5628, %rd5698;
	and.b64  	%rd5700, %rd5699, %rd5629;
	xor.b64  	%rd5701, %rd5700, -4736981884029401796;
	and.b64  	%rd5702, %rd5631, %rd5696;
	xor.b64  	%rd5703, %rd5699, %rd5702;
	not.b64 	%rd5704, %rd5629;
	and.b64  	%rd5705, %rd5631, %rd5704;
	xor.b64  	%rd5706, %rd5705, %rd5696;
	and.b64  	%rd5707, %rd5703, %rd5631;
	xor.b64  	%rd5708, %rd5707, %rd5629;
	xor.b64  	%rd5709, %rd5705, %rd5632;
	and.b64  	%rd5710, %rd5703, %rd5709;
	xor.b64  	%rd5711, %rd5710, %rd5631;
	or.b64  	%rd5712, %rd5708, %rd5706;
	xor.b64  	%rd5713, %rd5712, %rd5703;
	and.b64  	%rd5714, %rd5708, %rd5711;
	xor.b64  	%rd5715, %rd5714, %rd5706;
	and.b64  	%rd5716, %rd5713, %rd5701;
	xor.b64  	%rd5717, %rd5716, %rd5708;
	xor.b64  	%rd5718, %rd5711, %rd5701;
	not.b64 	%rd5719, %rd5667;
	not.b64 	%rd5720, %rd5657;
	and.b64  	%rd5721, %rd5720, 9128840062168770520;
	xor.b64  	%rd5722, %rd5637, %rd5721;
	and.b64  	%rd5723, %rd5722, %rd5647;
	xor.b64  	%rd5724, %rd5723, 9128840062168770520;
	and.b64  	%rd5725, %rd5657, %rd5719;
	xor.b64  	%rd5726, %rd5722, %rd5725;
	not.b64 	%rd5727, %rd5647;
	and.b64  	%rd5728, %rd5657, %rd5727;
	xor.b64  	%rd5729, %rd5728, %rd5719;
	and.b64  	%rd5730, %rd5726, %rd5657;
	xor.b64  	%rd5731, %rd5730, %rd5647;
	xor.b64  	%rd5732, %rd5728, %rd5667;
	and.b64  	%rd5733, %rd5726, %rd5732;
	xor.b64  	%rd5734, %rd5733, %rd5657;
	or.b64  	%rd5735, %rd5731, %rd5729;
	xor.b64  	%rd5736, %rd5735, %rd5726;
	and.b64  	%rd5737, %rd5731, %rd5734;
	xor.b64  	%rd5738, %rd5737, %rd5729;
	and.b64  	%rd5739, %rd5736, %rd5724;
	not.b64 	%rd5740, %rd5672;
	not.b64 	%rd5741, %rd5662;
	and.b64  	%rd5742, %rd5741, -2402601497671135917;
	xor.b64  	%rd5743, %rd5642, %rd5742;
	and.b64  	%rd5744, %rd5743, %rd5652;
	xor.b64  	%rd5745, %rd5744, -2402601497671135917;
	and.b64  	%rd5746, %rd5662, %rd5740;
	xor.b64  	%rd5747, %rd5743, %rd5746;
	not.b64 	%rd5748, %rd5652;
	and.b64  	%rd5749, %rd5662, %rd5748;
	xor.b64  	%rd5750, %rd5749, %rd5740;
	and.b64  	%rd5751, %rd5747, %rd5662;
	xor.b64  	%rd5752, %rd5751, %rd5652;
	xor.b64  	%rd5753, %rd5749, %rd5672;
	and.b64  	%rd5754, %rd5747, %rd5753;
	xor.b64  	%rd5755, %rd5754, %rd5662;
	or.b64  	%rd5756, %rd5752, %rd5750;
	xor.b64  	%rd5757, %rd5756, %rd5747;
	and.b64  	%rd5758, %rd5752, %rd5755;
	xor.b64  	%rd5759, %rd5758, %rd5750;
	and.b64  	%rd5760, %rd5757, %rd5745;
	xor.b64  	%rd5761, %rd5694, %rd5736;
	xor.b64  	%rd5762, %rd5695, %rd5731;
	xor.b64  	%rd5763, %rd5762, %rd5739;
	xor.b64  	%rd5764, %rd5734, %rd5724;
	xor.b64  	%rd5765, %rd5764, %rd5690;
	xor.b64  	%rd5766, %rd5765, %rd5692;
	xor.b64  	%rd5767, %rd5738, %rd5690;
	xor.b64  	%rd5768, %rd5763, %rd5690;
	xor.b64  	%rd5769, %rd5694, %rd5766;
	xor.b64  	%rd5770, %rd5767, %rd5695;
	xor.b64  	%rd5771, %rd5770, %rd5761;
	xor.b64  	%rd5772, %rd5761, %rd5692;
	xor.b64  	%rd5773, %rd5717, %rd5757;
	xor.b64  	%rd5774, %rd5718, %rd5752;
	xor.b64  	%rd5775, %rd5774, %rd5760;
	xor.b64  	%rd5776, %rd5755, %rd5745;
	xor.b64  	%rd5777, %rd5776, %rd5713;
	xor.b64  	%rd5778, %rd5777, %rd5715;
	xor.b64  	%rd5779, %rd5759, %rd5713;
	xor.b64  	%rd5780, %rd5775, %rd5713;
	xor.b64  	%rd5781, %rd5717, %rd5778;
	xor.b64  	%rd5782, %rd5779, %rd5718;
	xor.b64  	%rd5783, %rd5782, %rd5773;
	xor.b64  	%rd5784, %rd5773, %rd5715;
	and.b64  	%rd5785, %rd5761, 281470681808895;
	shl.b64 	%rd5786, %rd5785, 16;
	shr.u64 	%rd5787, %rd5761, 16;
	and.b64  	%rd5788, %rd5787, 281470681808895;
	or.b64  	%rd5789, %rd5788, %rd5786;
	and.b64  	%rd5790, %rd5773, 281470681808895;
	shl.b64 	%rd5791, %rd5790, 16;
	shr.u64 	%rd5792, %rd5773, 16;
	and.b64  	%rd5793, %rd5792, 281470681808895;
	or.b64  	%rd5794, %rd5793, %rd5791;
	and.b64  	%rd5795, %rd5763, 281470681808895;
	shl.b64 	%rd5796, %rd5795, 16;
	shr.u64 	%rd5797, %rd5763, 16;
	and.b64  	%rd5798, %rd5797, 281470681808895;
	or.b64  	%rd5799, %rd5798, %rd5796;
	and.b64  	%rd5800, %rd5775, 281470681808895;
	shl.b64 	%rd5801, %rd5800, 16;
	shr.u64 	%rd5802, %rd5775, 16;
	and.b64  	%rd5803, %rd5802, 281470681808895;
	or.b64  	%rd5804, %rd5803, %rd5801;
	and.b64  	%rd5805, %rd5766, 281470681808895;
	shl.b64 	%rd5806, %rd5805, 16;
	shr.u64 	%rd5807, %rd5766, 16;
	and.b64  	%rd5808, %rd5807, 281470681808895;
	or.b64  	%rd5809, %rd5808, %rd5806;
	and.b64  	%rd5810, %rd5778, 281470681808895;
	shl.b64 	%rd5811, %rd5810, 16;
	shr.u64 	%rd5812, %rd5778, 16;
	and.b64  	%rd5813, %rd5812, 281470681808895;
	or.b64  	%rd5814, %rd5813, %rd5811;
	and.b64  	%rd5815, %rd5767, 281470681808895;
	shl.b64 	%rd5816, %rd5815, 16;
	shr.u64 	%rd5817, %rd5767, 16;
	and.b64  	%rd5818, %rd5817, 281470681808895;
	or.b64  	%rd5819, %rd5818, %rd5816;
	and.b64  	%rd5820, %rd5779, 281470681808895;
	shl.b64 	%rd5821, %rd5820, 16;
	shr.u64 	%rd5822, %rd5779, 16;
	and.b64  	%rd5823, %rd5822, 281470681808895;
	or.b64  	%rd5824, %rd5823, %rd5821;
	not.b64 	%rd5825, %rd5772;
	not.b64 	%rd5826, %rd5771;
	and.b64  	%rd5827, %rd5826, -2852745875710663254;
	xor.b64  	%rd5828, %rd5768, %rd5827;
	and.b64  	%rd5829, %rd5828, %rd5769;
	xor.b64  	%rd5830, %rd5829, -2852745875710663254;
	and.b64  	%rd5831, %rd5771, %rd5825;
	xor.b64  	%rd5832, %rd5828, %rd5831;
	not.b64 	%rd5833, %rd5769;
	and.b64  	%rd5834, %rd5771, %rd5833;
	xor.b64  	%rd5835, %rd5834, %rd5825;
	and.b64  	%rd5836, %rd5832, %rd5771;
	xor.b64  	%rd5837, %rd5836, %rd5769;
	xor.b64  	%rd5838, %rd5834, %rd5772;
	and.b64  	%rd5839, %rd5832, %rd5838;
	xor.b64  	%rd5840, %rd5839, %rd5771;
	or.b64  	%rd5841, %rd5837, %rd5835;
	xor.b64  	%rd5842, %rd5841, %rd5832;
	and.b64  	%rd5843, %rd5837, %rd5840;
	xor.b64  	%rd5844, %rd5843, %rd5835;
	and.b64  	%rd5845, %rd5842, %rd5830;
	xor.b64  	%rd5846, %rd5845, %rd5837;
	xor.b64  	%rd5847, %rd5840, %rd5830;
	not.b64 	%rd5848, %rd5784;
	not.b64 	%rd5849, %rd5783;
	and.b64  	%rd5850, %rd5849, -502024798696376742;
	xor.b64  	%rd5851, %rd5780, %rd5850;
	and.b64  	%rd5852, %rd5851, %rd5781;
	xor.b64  	%rd5853, %rd5852, -502024798696376742;
	and.b64  	%rd5854, %rd5783, %rd5848;
	xor.b64  	%rd5855, %rd5851, %rd5854;
	not.b64 	%rd5856, %rd5781;
	and.b64  	%rd5857, %rd5783, %rd5856;
	xor.b64  	%rd5858, %rd5857, %rd5848;
	and.b64  	%rd5859, %rd5855, %rd5783;
	xor.b64  	%rd5860, %rd5859, %rd5781;
	xor.b64  	%rd5861, %rd5857, %rd5784;
	and.b64  	%rd5862, %rd5855, %rd5861;
	xor.b64  	%rd5863, %rd5862, %rd5783;
	or.b64  	%rd5864, %rd5860, %rd5858;
	xor.b64  	%rd5865, %rd5864, %rd5855;
	and.b64  	%rd5866, %rd5860, %rd5863;
	xor.b64  	%rd5867, %rd5866, %rd5858;
	and.b64  	%rd5868, %rd5865, %rd5853;
	xor.b64  	%rd5869, %rd5868, %rd5860;
	xor.b64  	%rd5870, %rd5863, %rd5853;
	not.b64 	%rd5871, %rd5819;
	not.b64 	%rd5872, %rd5809;
	and.b64  	%rd5873, %rd5872, -6550122716715851840;
	xor.b64  	%rd5874, %rd5789, %rd5873;
	and.b64  	%rd5875, %rd5874, %rd5799;
	xor.b64  	%rd5876, %rd5875, -6550122716715851840;
	and.b64  	%rd5877, %rd5809, %rd5871;
	xor.b64  	%rd5878, %rd5874, %rd5877;
	not.b64 	%rd5879, %rd5799;
	and.b64  	%rd5880, %rd5809, %rd5879;
	xor.b64  	%rd5881, %rd5880, %rd5871;
	and.b64  	%rd5882, %rd5878, %rd5809;
	xor.b64  	%rd5883, %rd5882, %rd5799;
	xor.b64  	%rd5884, %rd5880, %rd5819;
	and.b64  	%rd5885, %rd5878, %rd5884;
	xor.b64  	%rd5886, %rd5885, %rd5809;
	or.b64  	%rd5887, %rd5883, %rd5881;
	xor.b64  	%rd5888, %rd5887, %rd5878;
	and.b64  	%rd5889, %rd5883, %rd5886;
	xor.b64  	%rd5890, %rd5889, %rd5881;
	and.b64  	%rd5891, %rd5888, %rd5876;
	not.b64 	%rd5892, %rd5824;
	not.b64 	%rd5893, %rd5814;
	and.b64  	%rd5894, %rd5893, 7647672145973497239;
	xor.b64  	%rd5895, %rd5794, %rd5894;
	and.b64  	%rd5896, %rd5895, %rd5804;
	xor.b64  	%rd5897, %rd5896, 7647672145973497239;
	and.b64  	%rd5898, %rd5814, %rd5892;
	xor.b64  	%rd5899, %rd5895, %rd5898;
	not.b64 	%rd5900, %rd5804;
	and.b64  	%rd5901, %rd5814, %rd5900;
	xor.b64  	%rd5902, %rd5901, %rd5892;
	and.b64  	%rd5903, %rd5899, %rd5814;
	xor.b64  	%rd5904, %rd5903, %rd5804;
	xor.b64  	%rd5905, %rd5901, %rd5824;
	and.b64  	%rd5906, %rd5899, %rd5905;
	xor.b64  	%rd5907, %rd5906, %rd5814;
	or.b64  	%rd5908, %rd5904, %rd5902;
	xor.b64  	%rd5909, %rd5908, %rd5899;
	and.b64  	%rd5910, %rd5904, %rd5907;
	xor.b64  	%rd5911, %rd5910, %rd5902;
	and.b64  	%rd5912, %rd5909, %rd5897;
	xor.b64  	%rd5913, %rd5846, %rd5888;
	xor.b64  	%rd5914, %rd5847, %rd5883;
	xor.b64  	%rd5915, %rd5914, %rd5891;
	xor.b64  	%rd5916, %rd5886, %rd5876;
	xor.b64  	%rd5917, %rd5916, %rd5842;
	xor.b64  	%rd5918, %rd5917, %rd5844;
	xor.b64  	%rd5919, %rd5890, %rd5842;
	xor.b64  	%rd5920, %rd5915, %rd5842;
	xor.b64  	%rd5921, %rd5846, %rd5918;
	xor.b64  	%rd5922, %rd5919, %rd5847;
	xor.b64  	%rd5923, %rd5922, %rd5913;
	xor.b64  	%rd5924, %rd5913, %rd5844;
	xor.b64  	%rd5925, %rd5869, %rd5909;
	xor.b64  	%rd5926, %rd5870, %rd5904;
	xor.b64  	%rd5927, %rd5926, %rd5912;
	xor.b64  	%rd5928, %rd5907, %rd5897;
	xor.b64  	%rd5929, %rd5928, %rd5865;
	xor.b64  	%rd5930, %rd5929, %rd5867;
	xor.b64  	%rd5931, %rd5911, %rd5865;
	xor.b64  	%rd5932, %rd5927, %rd5865;
	xor.b64  	%rd5933, %rd5869, %rd5930;
	xor.b64  	%rd5934, %rd5931, %rd5870;
	xor.b64  	%rd5935, %rd5934, %rd5925;
	xor.b64  	%rd5936, %rd5925, %rd5867;
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5913, 32;
	shr.b64 	%rhs, %rd5913, 32;
	add.u64 	%rd5937, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5925, 32;
	shr.b64 	%rhs, %rd5925, 32;
	add.u64 	%rd5938, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5915, 32;
	shr.b64 	%rhs, %rd5915, 32;
	add.u64 	%rd5939, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5927, 32;
	shr.b64 	%rhs, %rd5927, 32;
	add.u64 	%rd5940, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5918, 32;
	shr.b64 	%rhs, %rd5918, 32;
	add.u64 	%rd5941, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5930, 32;
	shr.b64 	%rhs, %rd5930, 32;
	add.u64 	%rd5942, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5919, 32;
	shr.b64 	%rhs, %rd5919, 32;
	add.u64 	%rd5943, %lhs, %rhs;
	}
	{
	.reg .b64 %lhs;
	.reg .b64 %rhs;
	shl.b64 	%lhs, %rd5931, 32;
	shr.b64 	%rhs, %rd5931, 32;
	add.u64 	%rd5944, %lhs, %rhs;
	}
	not.b64 	%rd5945, %rd5924;
	not.b64 	%rd5946, %rd5923;
	and.b64  	%rd5947, %rd5946, 8076433916444587061;
	xor.b64  	%rd5948, %rd5920, %rd5947;
	and.b64  	%rd5949, %rd5948, %rd5921;
	xor.b64  	%rd5950, %rd5949, 8076433916444587061;
	and.b64  	%rd5951, %rd5923, %rd5945;
	xor.b64  	%rd5952, %rd5948, %rd5951;
	not.b64 	%rd5953, %rd5921;
	and.b64  	%rd5954, %rd5923, %rd5953;
	xor.b64  	%rd5955, %rd5954, %rd5945;
	and.b64  	%rd5956, %rd5952, %rd5923;
	xor.b64  	%rd5957, %rd5956, %rd5921;
	xor.b64  	%rd5958, %rd5954, %rd5924;
	and.b64  	%rd5959, %rd5952, %rd5958;
	xor.b64  	%rd5960, %rd5959, %rd5923;
	or.b64  	%rd5961, %rd5957, %rd5955;
	xor.b64  	%rd5962, %rd5961, %rd5952;
	and.b64  	%rd5963, %rd5957, %rd5960;
	xor.b64  	%rd5964, %rd5963, %rd5955;
	and.b64  	%rd5965, %rd5962, %rd5950;
	xor.b64  	%rd5966, %rd5965, %rd5957;
	xor.b64  	%rd5967, %rd5960, %rd5950;
	not.b64 	%rd5968, %rd5936;
	not.b64 	%rd5969, %rd5935;
	and.b64  	%rd5970, %rd5969, -7253946678857752854;
	xor.b64  	%rd5971, %rd5932, %rd5970;
	and.b64  	%rd5972, %rd5971, %rd5933;
	xor.b64  	%rd5973, %rd5972, -7253946678857752854;
	and.b64  	%rd5974, %rd5935, %rd5968;
	xor.b64  	%rd5975, %rd5971, %rd5974;
	not.b64 	%rd5976, %rd5933;
	and.b64  	%rd5977, %rd5935, %rd5976;
	xor.b64  	%rd5978, %rd5977, %rd5968;
	and.b64  	%rd5979, %rd5975, %rd5935;
	xor.b64  	%rd5980, %rd5979, %rd5933;
	xor.b64  	%rd5981, %rd5977, %rd5936;
	and.b64  	%rd5982, %rd5975, %rd5981;
	xor.b64  	%rd5983, %rd5982, %rd5935;
	or.b64  	%rd5984, %rd5980, %rd5978;
	xor.b64  	%rd5985, %rd5984, %rd5975;
	and.b64  	%rd5986, %rd5980, %rd5983;
	xor.b64  	%rd5987, %rd5986, %rd5978;
	and.b64  	%rd5988, %rd5985, %rd5973;
	xor.b64  	%rd5989, %rd5988, %rd5980;
	xor.b64  	%rd5990, %rd5983, %rd5973;
	not.b64 	%rd5991, %rd5943;
	not.b64 	%rd5992, %rd5941;
	and.b64  	%rd5993, %rd5992, 8232746495689085082;
	xor.b64  	%rd5994, %rd5937, %rd5993;
	and.b64  	%rd5995, %rd5994, %rd5939;
	xor.b64  	%rd5996, %rd5995, 8232746495689085082;
	and.b64  	%rd5997, %rd5941, %rd5991;
	xor.b64  	%rd5998, %rd5994, %rd5997;
	not.b64 	%rd5999, %rd5939;
	and.b64  	%rd6000, %rd5941, %rd5999;
	xor.b64  	%rd6001, %rd6000, %rd5991;
	and.b64  	%rd6002, %rd5998, %rd5941;
	xor.b64  	%rd6003, %rd6002, %rd5939;
	xor.b64  	%rd6004, %rd6000, %rd5943;
	and.b64  	%rd6005, %rd5998, %rd6004;
	xor.b64  	%rd6006, %rd6005, %rd5941;
	or.b64  	%rd6007, %rd6003, %rd6001;
	xor.b64  	%rd6008, %rd6007, %rd5998;
	and.b64  	%rd6009, %rd6003, %rd6006;
	xor.b64  	%rd6010, %rd6009, %rd6001;
	and.b64  	%rd6011, %rd6008, %rd5996;
	not.b64 	%rd6012, %rd5944;
	not.b64 	%rd6013, %rd5942;
	and.b64  	%rd6014, %rd6013, -2130405407412357642;
	xor.b64  	%rd6015, %rd5938, %rd6014;
	and.b64  	%rd6016, %rd6015, %rd5940;
	xor.b64  	%rd6017, %rd6016, -2130405407412357642;
	and.b64  	%rd6018, %rd5942, %rd6012;
	xor.b64  	%rd6019, %rd6015, %rd6018;
	not.b64 	%rd6020, %rd5940;
	and.b64  	%rd6021, %rd5942, %rd6020;
	xor.b64  	%rd6022, %rd6021, %rd6012;
	and.b64  	%rd6023, %rd6019, %rd5942;
	xor.b64  	%rd6024, %rd6023, %rd5940;
	xor.b64  	%rd6025, %rd6021, %rd5944;
	and.b64  	%rd6026, %rd6019, %rd6025;
	xor.b64  	%rd6027, %rd6026, %rd5942;
	or.b64  	%rd6028, %rd6024, %rd6022;
	xor.b64  	%rd6029, %rd6028, %rd6019;
	and.b64  	%rd6030, %rd6024, %rd6027;
	xor.b64  	%rd6031, %rd6030, %rd6022;
	and.b64  	%rd6032, %rd6029, %rd6017;
	xor.b64  	%rd6054, %rd5966, %rd6008;
	xor.b64  	%rd6033, %rd5967, %rd6003;
	xor.b64  	%rd6050, %rd6033, %rd6011;
	xor.b64  	%rd6034, %rd6006, %rd5996;
	xor.b64  	%rd6035, %rd6034, %rd5962;
	xor.b64  	%rd6046, %rd6035, %rd5964;
	xor.b64  	%rd6058, %rd6010, %rd5962;
	xor.b64  	%rd6057, %rd6050, %rd5962;
	xor.b64  	%rd6053, %rd5966, %rd6046;
	xor.b64  	%rd6036, %rd6058, %rd5967;
	xor.b64  	%rd6049, %rd6036, %rd6054;
	xor.b64  	%rd6045, %rd6054, %rd5964;
	xor.b64  	%rd6055, %rd5989, %rd6029;
	xor.b64  	%rd6037, %rd5990, %rd6024;
	xor.b64  	%rd6051, %rd6037, %rd6032;
	xor.b64  	%rd6038, %rd6027, %rd6017;
	xor.b64  	%rd6039, %rd6038, %rd5985;
	xor.b64  	%rd6047, %rd6039, %rd5987;
	xor.b64  	%rd6043, %rd6031, %rd5985;
	xor.b64  	%rd6056, %rd6051, %rd5985;
	xor.b64  	%rd6052, %rd5989, %rd6047;
	xor.b64  	%rd6040, %rd6043, %rd5990;
	xor.b64  	%rd6048, %rd6040, %rd6055;
	xor.b64  	%rd6044, %rd6055, %rd5987;
	add.s32 	%r253, %r253, 1;
	setp.lt.s32	%p3, %r253, 2;
	@%p3 bra 	BB2_1;

	xor.b64  	%rd6041, %rd6049, 128;
	mov.b64	{%r237, %r238}, %rd6041;
	mov.b32	{%rs193, %rs194}, %r237;
	shr.u16 	%rs195, %rs193, 8;
	shr.u16 	%rs196, %rs194, 8;
	st.global.v4.u8 	[%rd1+4], {%rs196, %rs194, %rs195, %rs193};
	mov.b32	{%rs197, %rs198}, %r238;
	shr.u16 	%rs199, %rs197, 8;
	shr.u16 	%rs200, %rs198, 8;
	st.global.v4.u8 	[%rd1], {%rs200, %rs198, %rs199, %rs197};
	mov.b64	{%r239, %r240}, %rd6048;
	mov.b32	{%rs201, %rs202}, %r239;
	shr.u16 	%rs203, %rs201, 8;
	shr.u16 	%rs204, %rs202, 8;
	st.global.v4.u8 	[%rd1+12], {%rs204, %rs202, %rs203, %rs201};
	mov.b32	{%rs205, %rs206}, %r240;
	shr.u16 	%rs207, %rs205, 8;
	shr.u16 	%rs208, %rs206, 8;
	st.global.v4.u8 	[%rd1+8], {%rs208, %rs206, %rs207, %rs205};
	mov.b64	{%r241, %r242}, %rd6047;
	mov.b32	{%rs209, %rs210}, %r241;
	shr.u16 	%rs211, %rs209, 8;
	shr.u16 	%rs212, %rs210, 8;
	st.global.v4.u8 	[%rd1+20], {%rs212, %rs210, %rs211, %rs209};
	mov.b32	{%rs213, %rs214}, %r242;
	shr.u16 	%rs215, %rs213, 8;
	shr.u16 	%rs216, %rs214, 8;
	st.global.v4.u8 	[%rd1+16], {%rs216, %rs214, %rs215, %rs213};
	mov.b64	{%r243, %r244}, %rd6046;
	mov.b32	{%rs217, %rs218}, %r243;
	shr.u16 	%rs219, %rs217, 8;
	shr.u16 	%rs220, %rs218, 8;
	st.global.v4.u8 	[%rd1+28], {%rs220, %rs218, %rs219, %rs217};
	mov.b32	{%rs221, %rs222}, %r244;
	shr.u16 	%rs223, %rs221, 8;
	shr.u16 	%rs224, %rs222, 8;
	st.global.v4.u8 	[%rd1+24], {%rs224, %rs222, %rs223, %rs221};
	mov.b64	{%r245, %r246}, %rd6045;
	mov.b32	{%rs225, %rs226}, %r245;
	shr.u16 	%rs227, %rs225, 8;
	shr.u16 	%rs228, %rs226, 8;
	st.global.v4.u8 	[%rd1+36], {%rs228, %rs226, %rs227, %rs225};
	mov.b32	{%rs229, %rs230}, %r246;
	shr.u16 	%rs231, %rs229, 8;
	shr.u16 	%rs232, %rs230, 8;
	st.global.v4.u8 	[%rd1+32], {%rs232, %rs230, %rs231, %rs229};
	mov.b64	{%r247, %r248}, %rd6044;
	mov.b32	{%rs233, %rs234}, %r247;
	shr.u16 	%rs235, %rs233, 8;
	shr.u16 	%rs236, %rs234, 8;
	st.global.v4.u8 	[%rd1+44], {%rs236, %rs234, %rs235, %rs233};
	mov.b32	{%rs237, %rs238}, %r248;
	shr.u16 	%rs239, %rs237, 8;
	shr.u16 	%rs240, %rs238, 8;
	st.global.v4.u8 	[%rd1+40], {%rs240, %rs238, %rs239, %rs237};
	mov.b64	{%r249, %r250}, %rd6043;
	mov.b32	{%rs241, %rs242}, %r249;
	shr.u16 	%rs243, %rs241, 8;
	shr.u16 	%rs244, %rs242, 8;
	st.global.v4.u8 	[%rd1+52], {%rs244, %rs242, %rs243, %rs241};
	mov.b32	{%rs245, %rs246}, %r250;
	shr.u16 	%rs247, %rs245, 8;
	shr.u16 	%rs248, %rs246, 8;
	st.global.v4.u8 	[%rd1+48], {%rs248, %rs246, %rs247, %rs245};
	xor.b64  	%rd6042, %rd6058, 562949953421312;
	mov.b64	{%r251, %r252}, %rd6042;
	mov.b32	{%rs249, %rs250}, %r251;
	shr.u16 	%rs251, %rs249, 8;
	shr.u16 	%rs252, %rs250, 8;
	st.global.v4.u8 	[%rd1+60], {%rs252, %rs250, %rs251, %rs249};
	mov.b32	{%rs253, %rs254}, %r252;
	shr.u16 	%rs255, %rs253, 8;
	shr.u16 	%rs256, %rs254, 8;
	st.global.v4.u8 	[%rd1+56], {%rs256, %rs254, %rs255, %rs253};
	bar.sync 	0;
	ret;
}

	// .globl	search3
.entry search3(
	.param .u64 .ptr .global .align 8 search3_param_0
)
.reqntid 256, 1, 1
{
	.reg .b16 	%rs<161>;
	.reg .b32 	%r<2844>;
	.reg .b64 	%rd<3188>;


	ld.param.u64 	%rd1, [search3_param_0];
	mov.b32	%r1, %envreg3;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mad.lo.s32 	%r4, %r3, %r2, %r1;
	mov.u32 	%r5, %tid.x;
	add.s32 	%r6, %r4, %r5;
	cvt.u64.u32	%rd2, %r6;
	mov.b32	%r7, %envreg0;
	mul.lo.s32 	%r8, %r2, %r7;
	sub.s32 	%r9, %r1, %r8;
	cvt.s64.s32	%rd3, %r9;
	sub.s64 	%rd4, %rd2, %rd3;
	shl.b64 	%rd5, %rd4, 6;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd6];
	cvt.u32.u16	%r10, %rs4;
	cvt.u32.u16	%r11, %rs3;
	bfi.b32 	%r12, %r11, %r10, 8, 8;
	cvt.u32.u16	%r13, %rs2;
	cvt.u32.u16	%r14, %rs1;
	bfi.b32 	%r15, %r14, %r13, 8, 8;
	bfi.b32 	%r16, %r15, %r12, 16, 16;
	ld.global.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd6+4];
	cvt.u32.u16	%r17, %rs10;
	cvt.u32.u16	%r18, %rs9;
	bfi.b32 	%r19, %r18, %r17, 8, 8;
	cvt.u32.u16	%r20, %rs8;
	cvt.u32.u16	%r21, %rs7;
	bfi.b32 	%r22, %r21, %r20, 8, 8;
	bfi.b32 	%r23, %r22, %r19, 16, 16;
	mov.b64	%rd7, {%r23, %r16};
	ld.global.v4.u8 	{%rs13, %rs14, %rs15, %rs16}, [%rd6+8];
	cvt.u32.u16	%r24, %rs16;
	cvt.u32.u16	%r25, %rs15;
	bfi.b32 	%r26, %r25, %r24, 8, 8;
	cvt.u32.u16	%r27, %rs14;
	cvt.u32.u16	%r28, %rs13;
	bfi.b32 	%r29, %r28, %r27, 8, 8;
	bfi.b32 	%r30, %r29, %r26, 16, 16;
	ld.global.v4.u8 	{%rs19, %rs20, %rs21, %rs22}, [%rd6+12];
	cvt.u32.u16	%r31, %rs22;
	cvt.u32.u16	%r32, %rs21;
	bfi.b32 	%r33, %r32, %r31, 8, 8;
	cvt.u32.u16	%r34, %rs20;
	cvt.u32.u16	%r35, %rs19;
	bfi.b32 	%r36, %r35, %r34, 8, 8;
	bfi.b32 	%r37, %r36, %r33, 16, 16;
	mov.b64	%rd8, {%r37, %r30};
	not.b64 	%rd9, %rd8;
	ld.global.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd6+16];
	cvt.u32.u16	%r38, %rs28;
	cvt.u32.u16	%r39, %rs27;
	bfi.b32 	%r40, %r39, %r38, 8, 8;
	cvt.u32.u16	%r41, %rs26;
	cvt.u32.u16	%r42, %rs25;
	bfi.b32 	%r43, %r42, %r41, 8, 8;
	bfi.b32 	%r44, %r43, %r40, 16, 16;
	ld.global.v4.u8 	{%rs31, %rs32, %rs33, %rs34}, [%rd6+20];
	cvt.u32.u16	%r45, %rs34;
	cvt.u32.u16	%r46, %rs33;
	bfi.b32 	%r47, %r46, %r45, 8, 8;
	cvt.u32.u16	%r48, %rs32;
	cvt.u32.u16	%r49, %rs31;
	bfi.b32 	%r50, %r49, %r48, 8, 8;
	bfi.b32 	%r51, %r50, %r47, 16, 16;
	mov.b64	%rd10, {%r51, %r44};
	not.b64 	%rd11, %rd10;
	ld.global.v4.u8 	{%rs37, %rs38, %rs39, %rs40}, [%rd6+24];
	cvt.u32.u16	%r52, %rs40;
	cvt.u32.u16	%r53, %rs39;
	bfi.b32 	%r54, %r53, %r52, 8, 8;
	cvt.u32.u16	%r55, %rs38;
	cvt.u32.u16	%r56, %rs37;
	bfi.b32 	%r57, %r56, %r55, 8, 8;
	bfi.b32 	%r58, %r57, %r54, 16, 16;
	ld.global.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd6+28];
	cvt.u32.u16	%r59, %rs46;
	cvt.u32.u16	%r60, %rs45;
	bfi.b32 	%r61, %r60, %r59, 8, 8;
	cvt.u32.u16	%r62, %rs44;
	cvt.u32.u16	%r63, %rs43;
	bfi.b32 	%r64, %r63, %r62, 8, 8;
	bfi.b32 	%r65, %r64, %r61, 16, 16;
	mov.b64	%rd12, {%r65, %r58};
	ld.global.v4.u8 	{%rs49, %rs50, %rs51, %rs52}, [%rd6+32];
	cvt.u32.u16	%r66, %rs52;
	cvt.u32.u16	%r67, %rs51;
	bfi.b32 	%r68, %r67, %r66, 8, 8;
	cvt.u32.u16	%r69, %rs50;
	cvt.u32.u16	%r70, %rs49;
	bfi.b32 	%r71, %r70, %r69, 8, 8;
	bfi.b32 	%r72, %r71, %r68, 16, 16;
	ld.global.v4.u8 	{%rs55, %rs56, %rs57, %rs58}, [%rd6+36];
	cvt.u32.u16	%r73, %rs58;
	cvt.u32.u16	%r74, %rs57;
	bfi.b32 	%r75, %r74, %r73, 8, 8;
	cvt.u32.u16	%r76, %rs56;
	cvt.u32.u16	%r77, %rs55;
	bfi.b32 	%r78, %r77, %r76, 8, 8;
	bfi.b32 	%r79, %r78, %r75, 16, 16;
	mov.b64	%rd13, {%r79, %r72};
	ld.global.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd6+40];
	cvt.u32.u16	%r80, %rs64;
	cvt.u32.u16	%r81, %rs63;
	bfi.b32 	%r82, %r81, %r80, 8, 8;
	cvt.u32.u16	%r83, %rs62;
	cvt.u32.u16	%r84, %rs61;
	bfi.b32 	%r85, %r84, %r83, 8, 8;
	bfi.b32 	%r86, %r85, %r82, 16, 16;
	ld.global.v4.u8 	{%rs67, %rs68, %rs69, %rs70}, [%rd6+44];
	cvt.u32.u16	%r87, %rs70;
	cvt.u32.u16	%r88, %rs69;
	bfi.b32 	%r89, %r88, %r87, 8, 8;
	cvt.u32.u16	%r90, %rs68;
	cvt.u32.u16	%r91, %rs67;
	bfi.b32 	%r92, %r91, %r90, 8, 8;
	bfi.b32 	%r93, %r92, %r89, 16, 16;
	mov.b64	%rd14, {%r93, %r86};
	ld.global.v4.u8 	{%rs73, %rs74, %rs75, %rs76}, [%rd6+48];
	cvt.u32.u16	%r94, %rs76;
	cvt.u32.u16	%r95, %rs75;
	bfi.b32 	%r96, %r95, %r94, 8, 8;
	cvt.u32.u16	%r97, %rs74;
	cvt.u32.u16	%r98, %rs73;
	bfi.b32 	%r99, %r98, %r97, 8, 8;
	bfi.b32 	%r100, %r99, %r96, 16, 16;
	ld.global.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd6+52];
	cvt.u32.u16	%r101, %rs82;
	cvt.u32.u16	%r102, %rs81;
	bfi.b32 	%r103, %r102, %r101, 8, 8;
	cvt.u32.u16	%r104, %rs80;
	cvt.u32.u16	%r105, %rs79;
	bfi.b32 	%r106, %r105, %r104, 8, 8;
	bfi.b32 	%r107, %r106, %r103, 16, 16;
	mov.b64	%rd15, {%r107, %r100};
	ld.global.v4.u8 	{%rs85, %rs86, %rs87, %rs88}, [%rd6+56];
	cvt.u32.u16	%r108, %rs88;
	cvt.u32.u16	%r109, %rs87;
	bfi.b32 	%r110, %r109, %r108, 8, 8;
	cvt.u32.u16	%r111, %rs86;
	cvt.u32.u16	%r112, %rs85;
	bfi.b32 	%r113, %r112, %r111, 8, 8;
	bfi.b32 	%r114, %r113, %r110, 16, 16;
	ld.global.v4.u8 	{%rs91, %rs92, %rs93, %rs94}, [%rd6+60];
	cvt.u32.u16	%r115, %rs94;
	cvt.u32.u16	%r116, %rs93;
	bfi.b32 	%r117, %r116, %r115, 8, 8;
	cvt.u32.u16	%r118, %rs92;
	cvt.u32.u16	%r119, %rs91;
	bfi.b32 	%r120, %r119, %r118, 8, 8;
	bfi.b32 	%r121, %r120, %r117, 16, 16;
	mov.b64	%rd16, {%r121, %r114};
	xor.b64  	%rd17, %rd15, %rd9;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r122}, %rd17;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r123,%dummy}, %rd17;
	}
	shf.l.wrap.b32 	%r124, %r123, %r122, 1;
	shf.l.wrap.b32 	%r125, %r122, %r123, 1;
	mov.b64 	%rd18, {%r125, %r124};
	xor.b64  	%rd19, %rd18, %rd13;
	xor.b64  	%rd20, %rd16, %rd11;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r126}, %rd20;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd20;
	}
	shf.l.wrap.b32 	%r128, %r127, %r126, 1;
	shf.l.wrap.b32 	%r129, %r126, %r127, 1;
	mov.b64 	%rd21, {%r129, %r128};
	xor.b64  	%rd22, %rd14, %rd7;
	xor.b64  	%rd23, %rd21, %rd22;
	not.b64 	%rd24, %rd23;
	xor.b64  	%rd25, %rd12, 9223372036854775806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd25;
	}
	shf.l.wrap.b32 	%r132, %r131, %r130, 1;
	shf.l.wrap.b32 	%r133, %r130, %r131, 1;
	mov.b64 	%rd26, {%r133, %r132};
	xor.b64  	%rd27, %rd26, %rd17;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd13;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd13;
	}
	shf.l.wrap.b32 	%r136, %r135, %r134, 1;
	shf.l.wrap.b32 	%r137, %r134, %r135, 1;
	mov.b64 	%rd28, {%r137, %r136};
	xor.b64  	%rd29, %rd28, %rd20;
	not.b64 	%rd30, %rd22;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r138}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r139,%dummy}, %rd30;
	}
	shf.l.wrap.b32 	%r140, %r139, %r138, 1;
	shf.l.wrap.b32 	%r141, %r138, %r139, 1;
	mov.b64 	%rd31, {%r141, %r140};
	xor.b64  	%rd32, %rd31, %rd25;
	xor.b64  	%rd33, %rd19, %rd7;
	xor.b64  	%rd34, %rd19, %rd14;
	not.b64 	%rd35, %rd19;
	xor.b64  	%rd36, %rd24, %rd9;
	xor.b64  	%rd37, %rd24, %rd15;
	xor.b64  	%rd38, %rd27, %rd11;
	xor.b64  	%rd39, %rd27, %rd16;
	not.b64 	%rd40, %rd27;
	xor.b64  	%rd41, %rd29, %rd12;
	xor.b64  	%rd42, %rd29, 9223372036854775806;
	xor.b64  	%rd43, %rd32, %rd13;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r143}, %rd34;
	}
	shf.r.wrap.b32 	%r144, %r143, %r142, 28;
	shf.r.wrap.b32 	%r145, %r142, %r143, 28;
	mov.b64 	%rd44, {%r145, %r144};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd19;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd19;
	}
	shf.l.wrap.b32 	%r148, %r147, %r146, 3;
	shf.l.wrap.b32 	%r149, %r146, %r147, 3;
	mov.b64 	%rd45, {%r149, %r148};
	shf.r.wrap.b32 	%r150, %r146, %r147, 23;
	shf.r.wrap.b32 	%r151, %r147, %r146, 23;
	mov.b64 	%rd46, {%r151, %r150};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd35;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r153,%dummy}, %rd35;
	}
	shf.l.wrap.b32 	%r154, %r153, %r152, 18;
	shf.l.wrap.b32 	%r155, %r152, %r153, 18;
	mov.b64 	%rd47, {%r155, %r154};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r156}, %rd36;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r157,%dummy}, %rd36;
	}
	shf.l.wrap.b32 	%r158, %r157, %r156, 1;
	shf.l.wrap.b32 	%r159, %r156, %r157, 1;
	mov.b64 	%rd48, {%r159, %r158};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r160,%dummy}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r161}, %rd37;
	}
	shf.r.wrap.b32 	%r162, %r161, %r160, 20;
	shf.r.wrap.b32 	%r163, %r160, %r161, 20;
	mov.b64 	%rd49, {%r163, %r162};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r164}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd24;
	}
	shf.l.wrap.b32 	%r166, %r165, %r164, 10;
	shf.l.wrap.b32 	%r167, %r164, %r165, 10;
	mov.b64 	%rd50, {%r167, %r166};
	shf.r.wrap.b32 	%r168, %r164, %r165, 19;
	shf.r.wrap.b32 	%r169, %r165, %r164, 19;
	mov.b64 	%rd51, {%r169, %r168};
	shf.l.wrap.b32 	%r170, %r165, %r164, 2;
	shf.l.wrap.b32 	%r171, %r164, %r165, 2;
	mov.b64 	%rd52, {%r171, %r170};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r172,%dummy}, %rd38;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd38;
	}
	shf.r.wrap.b32 	%r174, %r173, %r172, 2;
	shf.r.wrap.b32 	%r175, %r172, %r173, 2;
	mov.b64 	%rd53, {%r175, %r174};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd39;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd39;
	}
	shf.l.wrap.b32 	%r178, %r177, %r176, 6;
	shf.l.wrap.b32 	%r179, %r176, %r177, 6;
	mov.b64 	%rd54, {%r179, %r178};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r180,%dummy}, %rd40;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r181}, %rd40;
	}
	shf.r.wrap.b32 	%r182, %r181, %r180, 21;
	shf.r.wrap.b32 	%r183, %r180, %r181, 21;
	mov.b64 	%rd55, {%r183, %r182};
	shf.l.wrap.b32 	%r184, %r180, %r181, 15;
	shf.l.wrap.b32 	%r185, %r181, %r180, 15;
	mov.b64 	%rd56, {%r185, %r184};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd27;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 3;
	shf.r.wrap.b32 	%r189, %r186, %r187, 3;
	mov.b64 	%rd57, {%r189, %r188};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd41;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd41;
	}
	shf.l.wrap.b32 	%r192, %r191, %r190, 28;
	shf.l.wrap.b32 	%r193, %r190, %r191, 28;
	mov.b64 	%rd58, {%r193, %r192};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd42;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd42;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 9;
	shf.r.wrap.b32 	%r197, %r194, %r195, 9;
	mov.b64 	%rd59, {%r197, %r196};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd29;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd29;
	}
	shf.l.wrap.b32 	%r200, %r199, %r198, 25;
	shf.l.wrap.b32 	%r201, %r198, %r199, 25;
	mov.b64 	%rd60, {%r201, %r200};
	shf.l.wrap.b32 	%r202, %r199, %r198, 21;
	shf.l.wrap.b32 	%r203, %r198, %r199, 21;
	mov.b64 	%rd61, {%r203, %r202};
	shf.r.wrap.b32 	%r204, %r198, %r199, 8;
	shf.r.wrap.b32 	%r205, %r199, %r198, 8;
	mov.b64 	%rd62, {%r205, %r204};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r206}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd43;
	}
	shf.l.wrap.b32 	%r208, %r207, %r206, 27;
	shf.l.wrap.b32 	%r209, %r206, %r207, 27;
	mov.b64 	%rd63, {%r209, %r208};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd32;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd32;
	}
	shf.l.wrap.b32 	%r212, %r211, %r210, 20;
	shf.l.wrap.b32 	%r213, %r210, %r211, 20;
	mov.b64 	%rd64, {%r213, %r212};
	shf.r.wrap.b32 	%r214, %r210, %r211, 25;
	shf.r.wrap.b32 	%r215, %r211, %r210, 25;
	mov.b64 	%rd65, {%r215, %r214};
	shf.l.wrap.b32 	%r216, %r211, %r210, 8;
	shf.l.wrap.b32 	%r217, %r210, %r211, 8;
	mov.b64 	%rd66, {%r217, %r216};
	shf.l.wrap.b32 	%r218, %r211, %r210, 14;
	shf.l.wrap.b32 	%r219, %r210, %r211, 14;
	mov.b64 	%rd67, {%r219, %r218};
	not.b64 	%rd68, %rd55;
	or.b64  	%rd69, %rd55, %rd49;
	or.b64  	%rd70, %rd61, %rd68;
	xor.b64  	%rd71, %rd70, %rd49;
	and.b64  	%rd72, %rd67, %rd61;
	xor.b64  	%rd73, %rd72, %rd55;
	or.b64  	%rd74, %rd67, %rd33;
	xor.b64  	%rd75, %rd74, %rd61;
	and.b64  	%rd76, %rd49, %rd33;
	xor.b64  	%rd77, %rd67, %rd76;
	not.b64 	%rd78, %rd57;
	or.b64  	%rd79, %rd64, %rd45;
	xor.b64  	%rd80, %rd79, %rd58;
	and.b64  	%rd81, %rd51, %rd45;
	xor.b64  	%rd82, %rd64, %rd81;
	or.b64  	%rd83, %rd51, %rd78;
	xor.b64  	%rd84, %rd83, %rd45;
	or.b64  	%rd85, %rd58, %rd57;
	xor.b64  	%rd86, %rd85, %rd51;
	and.b64  	%rd87, %rd64, %rd58;
	xor.b64  	%rd88, %rd87, %rd57;
	not.b64 	%rd89, %rd66;
	or.b64  	%rd90, %rd60, %rd54;
	xor.b64  	%rd91, %rd90, %rd48;
	and.b64  	%rd92, %rd66, %rd60;
	xor.b64  	%rd93, %rd92, %rd54;
	and.b64  	%rd94, %rd47, %rd89;
	xor.b64  	%rd95, %rd94, %rd60;
	or.b64  	%rd96, %rd48, %rd47;
	xor.b64  	%rd97, %rd96, %rd89;
	and.b64  	%rd98, %rd54, %rd48;
	xor.b64  	%rd99, %rd98, %rd47;
	not.b64 	%rd100, %rd56;
	and.b64  	%rd101, %rd50, %rd44;
	xor.b64  	%rd102, %rd63, %rd101;
	or.b64  	%rd103, %rd56, %rd50;
	xor.b64  	%rd104, %rd103, %rd44;
	or.b64  	%rd105, %rd62, %rd100;
	xor.b64  	%rd106, %rd105, %rd50;
	and.b64  	%rd107, %rd63, %rd62;
	xor.b64  	%rd108, %rd107, %rd100;
	or.b64  	%rd109, %rd63, %rd44;
	xor.b64  	%rd110, %rd109, %rd62;
	not.b64 	%rd111, %rd59;
	and.b64  	%rd112, %rd65, %rd111;
	xor.b64  	%rd113, %rd112, %rd53;
	or.b64  	%rd114, %rd65, %rd46;
	xor.b64  	%rd115, %rd114, %rd111;
	and.b64  	%rd116, %rd52, %rd46;
	xor.b64  	%rd117, %rd65, %rd116;
	or.b64  	%rd118, %rd53, %rd52;
	xor.b64  	%rd119, %rd118, %rd46;
	and.b64  	%rd120, %rd59, %rd53;
	xor.b64  	%rd121, %rd120, %rd52;
	xor.b64  	%rd122, %rd33, %rd69;
	xor.b64  	%rd123, %rd122, 1;
	xor.b64  	%rd124, %rd82, %rd71;
	xor.b64  	%rd125, %rd93, %rd104;
	xor.b64  	%rd126, %rd115, %rd124;
	xor.b64  	%rd127, %rd126, %rd125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r220}, %rd127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r221,%dummy}, %rd127;
	}
	shf.l.wrap.b32 	%r222, %r221, %r220, 1;
	shf.l.wrap.b32 	%r223, %r220, %r221, 1;
	mov.b64 	%rd128, {%r223, %r222};
	xor.b64  	%rd129, %rd77, %rd88;
	xor.b64  	%rd130, %rd110, %rd99;
	xor.b64  	%rd131, %rd130, %rd121;
	xor.b64  	%rd132, %rd131, %rd128;
	xor.b64  	%rd133, %rd132, %rd129;
	xor.b64  	%rd134, %rd73, %rd84;
	xor.b64  	%rd135, %rd95, %rd106;
	xor.b64  	%rd136, %rd135, %rd117;
	xor.b64  	%rd137, %rd136, %rd134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd137;
	}
	shf.l.wrap.b32 	%r226, %r225, %r224, 1;
	shf.l.wrap.b32 	%r227, %r224, %r225, 1;
	mov.b64 	%rd138, {%r227, %r226};
	xor.b64  	%rd139, %rd80, %rd123;
	xor.b64  	%rd140, %rd102, %rd91;
	xor.b64  	%rd141, %rd113, %rd140;
	xor.b64  	%rd142, %rd141, %rd139;
	xor.b64  	%rd143, %rd142, %rd138;
	xor.b64  	%rd144, %rd75, %rd86;
	xor.b64  	%rd145, %rd97, %rd108;
	xor.b64  	%rd146, %rd145, %rd119;
	xor.b64  	%rd147, %rd146, %rd144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r228}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd147;
	}
	shf.l.wrap.b32 	%r230, %r229, %r228, 1;
	shf.l.wrap.b32 	%r231, %r228, %r229, 1;
	mov.b64 	%rd148, {%r231, %r230};
	xor.b64  	%rd149, %rd127, %rd148;
	xor.b64  	%rd150, %rd131, %rd129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r233,%dummy}, %rd150;
	}
	shf.l.wrap.b32 	%r234, %r233, %r232, 1;
	shf.l.wrap.b32 	%r235, %r232, %r233, 1;
	mov.b64 	%rd151, {%r235, %r234};
	xor.b64  	%rd152, %rd137, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r236}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r237,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r238, %r237, %r236, 1;
	shf.l.wrap.b32 	%r239, %r236, %r237, 1;
	mov.b64 	%rd153, {%r239, %r238};
	xor.b64  	%rd154, %rd147, %rd153;
	xor.b64  	%rd155, %rd133, %rd123;
	xor.b64  	%rd156, %rd133, %rd80;
	xor.b64  	%rd157, %rd133, %rd91;
	xor.b64  	%rd158, %rd133, %rd102;
	xor.b64  	%rd159, %rd133, %rd113;
	xor.b64  	%rd160, %rd143, %rd71;
	xor.b64  	%rd161, %rd143, %rd82;
	xor.b64  	%rd162, %rd143, %rd93;
	xor.b64  	%rd163, %rd143, %rd104;
	xor.b64  	%rd164, %rd143, %rd115;
	xor.b64  	%rd165, %rd149, %rd73;
	xor.b64  	%rd166, %rd149, %rd84;
	xor.b64  	%rd167, %rd149, %rd95;
	xor.b64  	%rd168, %rd149, %rd106;
	xor.b64  	%rd169, %rd149, %rd117;
	xor.b64  	%rd170, %rd152, %rd75;
	xor.b64  	%rd171, %rd152, %rd86;
	xor.b64  	%rd172, %rd152, %rd97;
	xor.b64  	%rd173, %rd152, %rd108;
	xor.b64  	%rd174, %rd152, %rd119;
	xor.b64  	%rd175, %rd154, %rd77;
	xor.b64  	%rd176, %rd154, %rd88;
	xor.b64  	%rd177, %rd154, %rd99;
	xor.b64  	%rd178, %rd154, %rd110;
	xor.b64  	%rd179, %rd154, %rd121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r240,%dummy}, %rd156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r241}, %rd156;
	}
	shf.r.wrap.b32 	%r242, %r241, %r240, 28;
	shf.r.wrap.b32 	%r243, %r240, %r241, 28;
	mov.b64 	%rd180, {%r243, %r242};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r244}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd157;
	}
	shf.l.wrap.b32 	%r246, %r245, %r244, 3;
	shf.l.wrap.b32 	%r247, %r244, %r245, 3;
	mov.b64 	%rd181, {%r247, %r246};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r248,%dummy}, %rd158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd158;
	}
	shf.r.wrap.b32 	%r250, %r249, %r248, 23;
	shf.r.wrap.b32 	%r251, %r248, %r249, 23;
	mov.b64 	%rd182, {%r251, %r250};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r252}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r253,%dummy}, %rd159;
	}
	shf.l.wrap.b32 	%r254, %r253, %r252, 18;
	shf.l.wrap.b32 	%r255, %r252, %r253, 18;
	mov.b64 	%rd183, {%r255, %r254};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd160;
	}
	shf.l.wrap.b32 	%r258, %r257, %r256, 1;
	shf.l.wrap.b32 	%r259, %r256, %r257, 1;
	mov.b64 	%rd184, {%r259, %r258};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r260,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r261}, %rd161;
	}
	shf.r.wrap.b32 	%r262, %r261, %r260, 20;
	shf.r.wrap.b32 	%r263, %r260, %r261, 20;
	mov.b64 	%rd185, {%r263, %r262};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r265,%dummy}, %rd162;
	}
	shf.l.wrap.b32 	%r266, %r265, %r264, 10;
	shf.l.wrap.b32 	%r267, %r264, %r265, 10;
	mov.b64 	%rd186, {%r267, %r266};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r268,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd163;
	}
	shf.r.wrap.b32 	%r270, %r269, %r268, 19;
	shf.r.wrap.b32 	%r271, %r268, %r269, 19;
	mov.b64 	%rd187, {%r271, %r270};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd164;
	}
	shf.l.wrap.b32 	%r274, %r273, %r272, 2;
	shf.l.wrap.b32 	%r275, %r272, %r273, 2;
	mov.b64 	%rd188, {%r275, %r274};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r276,%dummy}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r277}, %rd165;
	}
	shf.r.wrap.b32 	%r278, %r277, %r276, 2;
	shf.r.wrap.b32 	%r279, %r276, %r277, 2;
	mov.b64 	%rd189, {%r279, %r278};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r281,%dummy}, %rd166;
	}
	shf.l.wrap.b32 	%r282, %r281, %r280, 6;
	shf.l.wrap.b32 	%r283, %r280, %r281, 6;
	mov.b64 	%rd190, {%r283, %r282};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r284,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd167;
	}
	shf.r.wrap.b32 	%r286, %r285, %r284, 21;
	shf.r.wrap.b32 	%r287, %r284, %r285, 21;
	mov.b64 	%rd191, {%r287, %r286};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd168;
	}
	shf.l.wrap.b32 	%r290, %r289, %r288, 15;
	shf.l.wrap.b32 	%r291, %r288, %r289, 15;
	mov.b64 	%rd192, {%r291, %r290};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r292,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r293}, %rd169;
	}
	shf.r.wrap.b32 	%r294, %r293, %r292, 3;
	shf.r.wrap.b32 	%r295, %r292, %r293, 3;
	mov.b64 	%rd193, {%r295, %r294};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r297,%dummy}, %rd170;
	}
	shf.l.wrap.b32 	%r298, %r297, %r296, 28;
	shf.l.wrap.b32 	%r299, %r296, %r297, 28;
	mov.b64 	%rd194, {%r299, %r298};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd171;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 9;
	shf.r.wrap.b32 	%r303, %r300, %r301, 9;
	mov.b64 	%rd195, {%r303, %r302};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r304}, %rd172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd172;
	}
	shf.l.wrap.b32 	%r306, %r305, %r304, 25;
	shf.l.wrap.b32 	%r307, %r304, %r305, 25;
	mov.b64 	%rd196, {%r307, %r306};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd173;
	}
	shf.l.wrap.b32 	%r310, %r309, %r308, 21;
	shf.l.wrap.b32 	%r311, %r308, %r309, 21;
	mov.b64 	%rd197, {%r311, %r310};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd174;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 8;
	shf.r.wrap.b32 	%r315, %r312, %r313, 8;
	mov.b64 	%rd198, {%r315, %r314};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r316}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r317,%dummy}, %rd175;
	}
	shf.l.wrap.b32 	%r318, %r317, %r316, 27;
	shf.l.wrap.b32 	%r319, %r316, %r317, 27;
	mov.b64 	%rd199, {%r319, %r318};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd176;
	}
	shf.l.wrap.b32 	%r322, %r321, %r320, 20;
	shf.l.wrap.b32 	%r323, %r320, %r321, 20;
	mov.b64 	%rd200, {%r323, %r322};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd177;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 25;
	shf.r.wrap.b32 	%r327, %r324, %r325, 25;
	mov.b64 	%rd201, {%r327, %r326};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r328}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r329,%dummy}, %rd178;
	}
	shf.l.wrap.b32 	%r330, %r329, %r328, 8;
	shf.l.wrap.b32 	%r331, %r328, %r329, 8;
	mov.b64 	%rd202, {%r331, %r330};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r333,%dummy}, %rd179;
	}
	shf.l.wrap.b32 	%r334, %r333, %r332, 14;
	shf.l.wrap.b32 	%r335, %r332, %r333, 14;
	mov.b64 	%rd203, {%r335, %r334};
	not.b64 	%rd204, %rd191;
	or.b64  	%rd205, %rd191, %rd185;
	or.b64  	%rd206, %rd197, %rd204;
	xor.b64  	%rd207, %rd206, %rd185;
	and.b64  	%rd208, %rd203, %rd197;
	xor.b64  	%rd209, %rd208, %rd191;
	or.b64  	%rd210, %rd203, %rd155;
	xor.b64  	%rd211, %rd210, %rd197;
	and.b64  	%rd212, %rd185, %rd155;
	xor.b64  	%rd213, %rd203, %rd212;
	not.b64 	%rd214, %rd193;
	or.b64  	%rd215, %rd200, %rd181;
	xor.b64  	%rd216, %rd215, %rd194;
	and.b64  	%rd217, %rd187, %rd181;
	xor.b64  	%rd218, %rd200, %rd217;
	or.b64  	%rd219, %rd187, %rd214;
	xor.b64  	%rd220, %rd219, %rd181;
	or.b64  	%rd221, %rd194, %rd193;
	xor.b64  	%rd222, %rd221, %rd187;
	and.b64  	%rd223, %rd200, %rd194;
	xor.b64  	%rd224, %rd223, %rd193;
	not.b64 	%rd225, %rd202;
	or.b64  	%rd226, %rd196, %rd190;
	xor.b64  	%rd227, %rd226, %rd184;
	and.b64  	%rd228, %rd202, %rd196;
	xor.b64  	%rd229, %rd228, %rd190;
	and.b64  	%rd230, %rd183, %rd225;
	xor.b64  	%rd231, %rd230, %rd196;
	or.b64  	%rd232, %rd184, %rd183;
	xor.b64  	%rd233, %rd232, %rd225;
	and.b64  	%rd234, %rd190, %rd184;
	xor.b64  	%rd235, %rd234, %rd183;
	not.b64 	%rd236, %rd192;
	and.b64  	%rd237, %rd186, %rd180;
	xor.b64  	%rd238, %rd199, %rd237;
	or.b64  	%rd239, %rd192, %rd186;
	xor.b64  	%rd240, %rd239, %rd180;
	or.b64  	%rd241, %rd198, %rd236;
	xor.b64  	%rd242, %rd241, %rd186;
	and.b64  	%rd243, %rd199, %rd198;
	xor.b64  	%rd244, %rd243, %rd236;
	or.b64  	%rd245, %rd199, %rd180;
	xor.b64  	%rd246, %rd245, %rd198;
	not.b64 	%rd247, %rd195;
	and.b64  	%rd248, %rd201, %rd247;
	xor.b64  	%rd249, %rd248, %rd189;
	or.b64  	%rd250, %rd201, %rd182;
	xor.b64  	%rd251, %rd250, %rd247;
	and.b64  	%rd252, %rd188, %rd182;
	xor.b64  	%rd253, %rd201, %rd252;
	or.b64  	%rd254, %rd189, %rd188;
	xor.b64  	%rd255, %rd254, %rd182;
	and.b64  	%rd256, %rd195, %rd189;
	xor.b64  	%rd257, %rd256, %rd188;
	xor.b64  	%rd258, %rd155, %rd205;
	xor.b64  	%rd259, %rd258, 32898;
	xor.b64  	%rd260, %rd218, %rd207;
	xor.b64  	%rd261, %rd229, %rd240;
	xor.b64  	%rd262, %rd251, %rd260;
	xor.b64  	%rd263, %rd262, %rd261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r336}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd263;
	}
	shf.l.wrap.b32 	%r338, %r337, %r336, 1;
	shf.l.wrap.b32 	%r339, %r336, %r337, 1;
	mov.b64 	%rd264, {%r339, %r338};
	xor.b64  	%rd265, %rd213, %rd224;
	xor.b64  	%rd266, %rd246, %rd235;
	xor.b64  	%rd267, %rd266, %rd257;
	xor.b64  	%rd268, %rd267, %rd264;
	xor.b64  	%rd269, %rd268, %rd265;
	xor.b64  	%rd270, %rd209, %rd220;
	xor.b64  	%rd271, %rd231, %rd242;
	xor.b64  	%rd272, %rd271, %rd253;
	xor.b64  	%rd273, %rd272, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r340}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd273;
	}
	shf.l.wrap.b32 	%r342, %r341, %r340, 1;
	shf.l.wrap.b32 	%r343, %r340, %r341, 1;
	mov.b64 	%rd274, {%r343, %r342};
	xor.b64  	%rd275, %rd216, %rd259;
	xor.b64  	%rd276, %rd238, %rd227;
	xor.b64  	%rd277, %rd249, %rd276;
	xor.b64  	%rd278, %rd277, %rd275;
	xor.b64  	%rd279, %rd278, %rd274;
	xor.b64  	%rd280, %rd211, %rd222;
	xor.b64  	%rd281, %rd233, %rd244;
	xor.b64  	%rd282, %rd281, %rd255;
	xor.b64  	%rd283, %rd282, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r345,%dummy}, %rd283;
	}
	shf.l.wrap.b32 	%r346, %r345, %r344, 1;
	shf.l.wrap.b32 	%r347, %r344, %r345, 1;
	mov.b64 	%rd284, {%r347, %r346};
	xor.b64  	%rd285, %rd263, %rd284;
	xor.b64  	%rd286, %rd267, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r348}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd286;
	}
	shf.l.wrap.b32 	%r350, %r349, %r348, 1;
	shf.l.wrap.b32 	%r351, %r348, %r349, 1;
	mov.b64 	%rd287, {%r351, %r350};
	xor.b64  	%rd288, %rd273, %rd287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r352}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd278;
	}
	shf.l.wrap.b32 	%r354, %r353, %r352, 1;
	shf.l.wrap.b32 	%r355, %r352, %r353, 1;
	mov.b64 	%rd289, {%r355, %r354};
	xor.b64  	%rd290, %rd283, %rd289;
	xor.b64  	%rd291, %rd269, %rd259;
	xor.b64  	%rd292, %rd269, %rd216;
	xor.b64  	%rd293, %rd269, %rd227;
	xor.b64  	%rd294, %rd269, %rd238;
	xor.b64  	%rd295, %rd269, %rd249;
	xor.b64  	%rd296, %rd279, %rd207;
	xor.b64  	%rd297, %rd279, %rd218;
	xor.b64  	%rd298, %rd279, %rd229;
	xor.b64  	%rd299, %rd279, %rd240;
	xor.b64  	%rd300, %rd279, %rd251;
	xor.b64  	%rd301, %rd285, %rd209;
	xor.b64  	%rd302, %rd285, %rd220;
	xor.b64  	%rd303, %rd285, %rd231;
	xor.b64  	%rd304, %rd285, %rd242;
	xor.b64  	%rd305, %rd285, %rd253;
	xor.b64  	%rd306, %rd288, %rd211;
	xor.b64  	%rd307, %rd288, %rd222;
	xor.b64  	%rd308, %rd288, %rd233;
	xor.b64  	%rd309, %rd288, %rd244;
	xor.b64  	%rd310, %rd288, %rd255;
	xor.b64  	%rd311, %rd290, %rd213;
	xor.b64  	%rd312, %rd290, %rd224;
	xor.b64  	%rd313, %rd290, %rd235;
	xor.b64  	%rd314, %rd290, %rd246;
	xor.b64  	%rd315, %rd290, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r356,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r357}, %rd292;
	}
	shf.r.wrap.b32 	%r358, %r357, %r356, 28;
	shf.r.wrap.b32 	%r359, %r356, %r357, 28;
	mov.b64 	%rd316, {%r359, %r358};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r360}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd293;
	}
	shf.l.wrap.b32 	%r362, %r361, %r360, 3;
	shf.l.wrap.b32 	%r363, %r360, %r361, 3;
	mov.b64 	%rd317, {%r363, %r362};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd294;
	}
	shf.r.wrap.b32 	%r366, %r365, %r364, 23;
	shf.r.wrap.b32 	%r367, %r364, %r365, 23;
	mov.b64 	%rd318, {%r367, %r366};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd295;
	}
	shf.l.wrap.b32 	%r370, %r369, %r368, 18;
	shf.l.wrap.b32 	%r371, %r368, %r369, 18;
	mov.b64 	%rd319, {%r371, %r370};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd296;
	}
	shf.l.wrap.b32 	%r374, %r373, %r372, 1;
	shf.l.wrap.b32 	%r375, %r372, %r373, 1;
	mov.b64 	%rd320, {%r375, %r374};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r376,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd297;
	}
	shf.r.wrap.b32 	%r378, %r377, %r376, 20;
	shf.r.wrap.b32 	%r379, %r376, %r377, 20;
	mov.b64 	%rd321, {%r379, %r378};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r381,%dummy}, %rd298;
	}
	shf.l.wrap.b32 	%r382, %r381, %r380, 10;
	shf.l.wrap.b32 	%r383, %r380, %r381, 10;
	mov.b64 	%rd322, {%r383, %r382};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd299;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd323, {%r387, %r386};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd300;
	}
	shf.l.wrap.b32 	%r390, %r389, %r388, 2;
	shf.l.wrap.b32 	%r391, %r388, %r389, 2;
	mov.b64 	%rd324, {%r391, %r390};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r392,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd301;
	}
	shf.r.wrap.b32 	%r394, %r393, %r392, 2;
	shf.r.wrap.b32 	%r395, %r392, %r393, 2;
	mov.b64 	%rd325, {%r395, %r394};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd302;
	}
	shf.l.wrap.b32 	%r398, %r397, %r396, 6;
	shf.l.wrap.b32 	%r399, %r396, %r397, 6;
	mov.b64 	%rd326, {%r399, %r398};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r400,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r401}, %rd303;
	}
	shf.r.wrap.b32 	%r402, %r401, %r400, 21;
	shf.r.wrap.b32 	%r403, %r400, %r401, 21;
	mov.b64 	%rd327, {%r403, %r402};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd304;
	}
	shf.l.wrap.b32 	%r406, %r405, %r404, 15;
	shf.l.wrap.b32 	%r407, %r404, %r405, 15;
	mov.b64 	%rd328, {%r407, %r406};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd305;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 3;
	shf.r.wrap.b32 	%r411, %r408, %r409, 3;
	mov.b64 	%rd329, {%r411, %r410};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r413,%dummy}, %rd306;
	}
	shf.l.wrap.b32 	%r414, %r413, %r412, 28;
	shf.l.wrap.b32 	%r415, %r412, %r413, 28;
	mov.b64 	%rd330, {%r415, %r414};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r416,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r417}, %rd307;
	}
	shf.r.wrap.b32 	%r418, %r417, %r416, 9;
	shf.r.wrap.b32 	%r419, %r416, %r417, 9;
	mov.b64 	%rd331, {%r419, %r418};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd308;
	}
	shf.l.wrap.b32 	%r422, %r421, %r420, 25;
	shf.l.wrap.b32 	%r423, %r420, %r421, 25;
	mov.b64 	%rd332, {%r423, %r422};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r424}, %rd309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r425,%dummy}, %rd309;
	}
	shf.l.wrap.b32 	%r426, %r425, %r424, 21;
	shf.l.wrap.b32 	%r427, %r424, %r425, 21;
	mov.b64 	%rd333, {%r427, %r426};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd310;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 8;
	shf.r.wrap.b32 	%r431, %r428, %r429, 8;
	mov.b64 	%rd334, {%r431, %r430};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd311;
	}
	shf.l.wrap.b32 	%r434, %r433, %r432, 27;
	shf.l.wrap.b32 	%r435, %r432, %r433, 27;
	mov.b64 	%rd335, {%r435, %r434};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd312;
	}
	shf.l.wrap.b32 	%r438, %r437, %r436, 20;
	shf.l.wrap.b32 	%r439, %r436, %r437, 20;
	mov.b64 	%rd336, {%r439, %r438};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd313;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 25;
	shf.r.wrap.b32 	%r443, %r440, %r441, 25;
	mov.b64 	%rd337, {%r443, %r442};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r445,%dummy}, %rd314;
	}
	shf.l.wrap.b32 	%r446, %r445, %r444, 8;
	shf.l.wrap.b32 	%r447, %r444, %r445, 8;
	mov.b64 	%rd338, {%r447, %r446};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd315;
	}
	shf.l.wrap.b32 	%r450, %r449, %r448, 14;
	shf.l.wrap.b32 	%r451, %r448, %r449, 14;
	mov.b64 	%rd339, {%r451, %r450};
	not.b64 	%rd340, %rd327;
	or.b64  	%rd341, %rd327, %rd321;
	or.b64  	%rd342, %rd333, %rd340;
	xor.b64  	%rd343, %rd342, %rd321;
	and.b64  	%rd344, %rd339, %rd333;
	xor.b64  	%rd345, %rd344, %rd327;
	or.b64  	%rd346, %rd339, %rd291;
	xor.b64  	%rd347, %rd346, %rd333;
	and.b64  	%rd348, %rd321, %rd291;
	xor.b64  	%rd349, %rd339, %rd348;
	not.b64 	%rd350, %rd329;
	or.b64  	%rd351, %rd336, %rd317;
	xor.b64  	%rd352, %rd351, %rd330;
	and.b64  	%rd353, %rd323, %rd317;
	xor.b64  	%rd354, %rd336, %rd353;
	or.b64  	%rd355, %rd323, %rd350;
	xor.b64  	%rd356, %rd355, %rd317;
	or.b64  	%rd357, %rd330, %rd329;
	xor.b64  	%rd358, %rd357, %rd323;
	and.b64  	%rd359, %rd336, %rd330;
	xor.b64  	%rd360, %rd359, %rd329;
	not.b64 	%rd361, %rd338;
	or.b64  	%rd362, %rd332, %rd326;
	xor.b64  	%rd363, %rd362, %rd320;
	and.b64  	%rd364, %rd338, %rd332;
	xor.b64  	%rd365, %rd364, %rd326;
	and.b64  	%rd366, %rd319, %rd361;
	xor.b64  	%rd367, %rd366, %rd332;
	or.b64  	%rd368, %rd320, %rd319;
	xor.b64  	%rd369, %rd368, %rd361;
	and.b64  	%rd370, %rd326, %rd320;
	xor.b64  	%rd371, %rd370, %rd319;
	not.b64 	%rd372, %rd328;
	and.b64  	%rd373, %rd322, %rd316;
	xor.b64  	%rd374, %rd335, %rd373;
	or.b64  	%rd375, %rd328, %rd322;
	xor.b64  	%rd376, %rd375, %rd316;
	or.b64  	%rd377, %rd334, %rd372;
	xor.b64  	%rd378, %rd377, %rd322;
	and.b64  	%rd379, %rd335, %rd334;
	xor.b64  	%rd380, %rd379, %rd372;
	or.b64  	%rd381, %rd335, %rd316;
	xor.b64  	%rd382, %rd381, %rd334;
	not.b64 	%rd383, %rd331;
	and.b64  	%rd384, %rd337, %rd383;
	xor.b64  	%rd385, %rd384, %rd325;
	or.b64  	%rd386, %rd337, %rd318;
	xor.b64  	%rd387, %rd386, %rd383;
	and.b64  	%rd388, %rd324, %rd318;
	xor.b64  	%rd389, %rd337, %rd388;
	or.b64  	%rd390, %rd325, %rd324;
	xor.b64  	%rd391, %rd390, %rd318;
	and.b64  	%rd392, %rd331, %rd325;
	xor.b64  	%rd393, %rd392, %rd324;
	xor.b64  	%rd394, %rd291, %rd341;
	xor.b64  	%rd395, %rd394, -9223372036854742902;
	xor.b64  	%rd396, %rd354, %rd343;
	xor.b64  	%rd397, %rd365, %rd376;
	xor.b64  	%rd398, %rd387, %rd396;
	xor.b64  	%rd399, %rd398, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd399;
	}
	shf.l.wrap.b32 	%r454, %r453, %r452, 1;
	shf.l.wrap.b32 	%r455, %r452, %r453, 1;
	mov.b64 	%rd400, {%r455, %r454};
	xor.b64  	%rd401, %rd349, %rd360;
	xor.b64  	%rd402, %rd382, %rd371;
	xor.b64  	%rd403, %rd402, %rd393;
	xor.b64  	%rd404, %rd403, %rd400;
	xor.b64  	%rd405, %rd404, %rd401;
	xor.b64  	%rd406, %rd345, %rd356;
	xor.b64  	%rd407, %rd367, %rd378;
	xor.b64  	%rd408, %rd407, %rd389;
	xor.b64  	%rd409, %rd408, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r457,%dummy}, %rd409;
	}
	shf.l.wrap.b32 	%r458, %r457, %r456, 1;
	shf.l.wrap.b32 	%r459, %r456, %r457, 1;
	mov.b64 	%rd410, {%r459, %r458};
	xor.b64  	%rd411, %rd352, %rd395;
	xor.b64  	%rd412, %rd374, %rd363;
	xor.b64  	%rd413, %rd385, %rd412;
	xor.b64  	%rd414, %rd413, %rd411;
	xor.b64  	%rd415, %rd414, %rd410;
	xor.b64  	%rd416, %rd347, %rd358;
	xor.b64  	%rd417, %rd369, %rd380;
	xor.b64  	%rd418, %rd417, %rd391;
	xor.b64  	%rd419, %rd418, %rd416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r461,%dummy}, %rd419;
	}
	shf.l.wrap.b32 	%r462, %r461, %r460, 1;
	shf.l.wrap.b32 	%r463, %r460, %r461, 1;
	mov.b64 	%rd420, {%r463, %r462};
	xor.b64  	%rd421, %rd399, %rd420;
	xor.b64  	%rd422, %rd403, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd422;
	}
	shf.l.wrap.b32 	%r466, %r465, %r464, 1;
	shf.l.wrap.b32 	%r467, %r464, %r465, 1;
	mov.b64 	%rd423, {%r467, %r466};
	xor.b64  	%rd424, %rd409, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd414;
	}
	shf.l.wrap.b32 	%r470, %r469, %r468, 1;
	shf.l.wrap.b32 	%r471, %r468, %r469, 1;
	mov.b64 	%rd425, {%r471, %r470};
	xor.b64  	%rd426, %rd419, %rd425;
	xor.b64  	%rd427, %rd405, %rd395;
	xor.b64  	%rd428, %rd405, %rd352;
	xor.b64  	%rd429, %rd405, %rd363;
	xor.b64  	%rd430, %rd405, %rd374;
	xor.b64  	%rd431, %rd405, %rd385;
	xor.b64  	%rd432, %rd415, %rd343;
	xor.b64  	%rd433, %rd415, %rd354;
	xor.b64  	%rd434, %rd415, %rd365;
	xor.b64  	%rd435, %rd415, %rd376;
	xor.b64  	%rd436, %rd415, %rd387;
	xor.b64  	%rd437, %rd421, %rd345;
	xor.b64  	%rd438, %rd421, %rd356;
	xor.b64  	%rd439, %rd421, %rd367;
	xor.b64  	%rd440, %rd421, %rd378;
	xor.b64  	%rd441, %rd421, %rd389;
	xor.b64  	%rd442, %rd424, %rd347;
	xor.b64  	%rd443, %rd424, %rd358;
	xor.b64  	%rd444, %rd424, %rd369;
	xor.b64  	%rd445, %rd424, %rd380;
	xor.b64  	%rd446, %rd424, %rd391;
	xor.b64  	%rd447, %rd426, %rd349;
	xor.b64  	%rd448, %rd426, %rd360;
	xor.b64  	%rd449, %rd426, %rd371;
	xor.b64  	%rd450, %rd426, %rd382;
	xor.b64  	%rd451, %rd426, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd428;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 28;
	shf.r.wrap.b32 	%r475, %r472, %r473, 28;
	mov.b64 	%rd452, {%r475, %r474};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r477,%dummy}, %rd429;
	}
	shf.l.wrap.b32 	%r478, %r477, %r476, 3;
	shf.l.wrap.b32 	%r479, %r476, %r477, 3;
	mov.b64 	%rd453, {%r479, %r478};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd430;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 23;
	shf.r.wrap.b32 	%r483, %r480, %r481, 23;
	mov.b64 	%rd454, {%r483, %r482};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd431;
	}
	shf.l.wrap.b32 	%r486, %r485, %r484, 18;
	shf.l.wrap.b32 	%r487, %r484, %r485, 18;
	mov.b64 	%rd455, {%r487, %r486};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r489,%dummy}, %rd432;
	}
	shf.l.wrap.b32 	%r490, %r489, %r488, 1;
	shf.l.wrap.b32 	%r491, %r488, %r489, 1;
	mov.b64 	%rd456, {%r491, %r490};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd433;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 20;
	shf.r.wrap.b32 	%r495, %r492, %r493, 20;
	mov.b64 	%rd457, {%r495, %r494};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd434;
	}
	shf.l.wrap.b32 	%r498, %r497, %r496, 10;
	shf.l.wrap.b32 	%r499, %r496, %r497, 10;
	mov.b64 	%rd458, {%r499, %r498};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd435;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 19;
	shf.r.wrap.b32 	%r503, %r500, %r501, 19;
	mov.b64 	%rd459, {%r503, %r502};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r505,%dummy}, %rd436;
	}
	shf.l.wrap.b32 	%r506, %r505, %r504, 2;
	shf.l.wrap.b32 	%r507, %r504, %r505, 2;
	mov.b64 	%rd460, {%r507, %r506};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd437;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 2;
	shf.r.wrap.b32 	%r511, %r508, %r509, 2;
	mov.b64 	%rd461, {%r511, %r510};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd438;
	}
	shf.l.wrap.b32 	%r514, %r513, %r512, 6;
	shf.l.wrap.b32 	%r515, %r512, %r513, 6;
	mov.b64 	%rd462, {%r515, %r514};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd439;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 21;
	shf.r.wrap.b32 	%r519, %r516, %r517, 21;
	mov.b64 	%rd463, {%r519, %r518};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r521,%dummy}, %rd440;
	}
	shf.l.wrap.b32 	%r522, %r521, %r520, 15;
	shf.l.wrap.b32 	%r523, %r520, %r521, 15;
	mov.b64 	%rd464, {%r523, %r522};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd441;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 3;
	shf.r.wrap.b32 	%r527, %r524, %r525, 3;
	mov.b64 	%rd465, {%r527, %r526};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd442;
	}
	shf.l.wrap.b32 	%r530, %r529, %r528, 28;
	shf.l.wrap.b32 	%r531, %r528, %r529, 28;
	mov.b64 	%rd466, {%r531, %r530};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd443;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 9;
	shf.r.wrap.b32 	%r535, %r532, %r533, 9;
	mov.b64 	%rd467, {%r535, %r534};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r537,%dummy}, %rd444;
	}
	shf.l.wrap.b32 	%r538, %r537, %r536, 25;
	shf.l.wrap.b32 	%r539, %r536, %r537, 25;
	mov.b64 	%rd468, {%r539, %r538};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r541,%dummy}, %rd445;
	}
	shf.l.wrap.b32 	%r542, %r541, %r540, 21;
	shf.l.wrap.b32 	%r543, %r540, %r541, 21;
	mov.b64 	%rd469, {%r543, %r542};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd446;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 8;
	shf.r.wrap.b32 	%r547, %r544, %r545, 8;
	mov.b64 	%rd470, {%r547, %r546};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd447;
	}
	shf.l.wrap.b32 	%r550, %r549, %r548, 27;
	shf.l.wrap.b32 	%r551, %r548, %r549, 27;
	mov.b64 	%rd471, {%r551, %r550};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r553,%dummy}, %rd448;
	}
	shf.l.wrap.b32 	%r554, %r553, %r552, 20;
	shf.l.wrap.b32 	%r555, %r552, %r553, 20;
	mov.b64 	%rd472, {%r555, %r554};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd449;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 25;
	shf.r.wrap.b32 	%r559, %r556, %r557, 25;
	mov.b64 	%rd473, {%r559, %r558};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd450;
	}
	shf.l.wrap.b32 	%r562, %r561, %r560, 8;
	shf.l.wrap.b32 	%r563, %r560, %r561, 8;
	mov.b64 	%rd474, {%r563, %r562};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd451;
	}
	shf.l.wrap.b32 	%r566, %r565, %r564, 14;
	shf.l.wrap.b32 	%r567, %r564, %r565, 14;
	mov.b64 	%rd475, {%r567, %r566};
	not.b64 	%rd476, %rd463;
	or.b64  	%rd477, %rd463, %rd457;
	or.b64  	%rd478, %rd469, %rd476;
	xor.b64  	%rd479, %rd478, %rd457;
	and.b64  	%rd480, %rd475, %rd469;
	xor.b64  	%rd481, %rd480, %rd463;
	or.b64  	%rd482, %rd475, %rd427;
	xor.b64  	%rd483, %rd482, %rd469;
	and.b64  	%rd484, %rd457, %rd427;
	xor.b64  	%rd485, %rd475, %rd484;
	not.b64 	%rd486, %rd465;
	or.b64  	%rd487, %rd472, %rd453;
	xor.b64  	%rd488, %rd487, %rd466;
	and.b64  	%rd489, %rd459, %rd453;
	xor.b64  	%rd490, %rd472, %rd489;
	or.b64  	%rd491, %rd459, %rd486;
	xor.b64  	%rd492, %rd491, %rd453;
	or.b64  	%rd493, %rd466, %rd465;
	xor.b64  	%rd494, %rd493, %rd459;
	and.b64  	%rd495, %rd472, %rd466;
	xor.b64  	%rd496, %rd495, %rd465;
	not.b64 	%rd497, %rd474;
	or.b64  	%rd498, %rd468, %rd462;
	xor.b64  	%rd499, %rd498, %rd456;
	and.b64  	%rd500, %rd474, %rd468;
	xor.b64  	%rd501, %rd500, %rd462;
	and.b64  	%rd502, %rd455, %rd497;
	xor.b64  	%rd503, %rd502, %rd468;
	or.b64  	%rd504, %rd456, %rd455;
	xor.b64  	%rd505, %rd504, %rd497;
	and.b64  	%rd506, %rd462, %rd456;
	xor.b64  	%rd507, %rd506, %rd455;
	not.b64 	%rd508, %rd464;
	and.b64  	%rd509, %rd458, %rd452;
	xor.b64  	%rd510, %rd471, %rd509;
	or.b64  	%rd511, %rd464, %rd458;
	xor.b64  	%rd512, %rd511, %rd452;
	or.b64  	%rd513, %rd470, %rd508;
	xor.b64  	%rd514, %rd513, %rd458;
	and.b64  	%rd515, %rd471, %rd470;
	xor.b64  	%rd516, %rd515, %rd508;
	or.b64  	%rd517, %rd471, %rd452;
	xor.b64  	%rd518, %rd517, %rd470;
	not.b64 	%rd519, %rd467;
	and.b64  	%rd520, %rd473, %rd519;
	xor.b64  	%rd521, %rd520, %rd461;
	or.b64  	%rd522, %rd473, %rd454;
	xor.b64  	%rd523, %rd522, %rd519;
	and.b64  	%rd524, %rd460, %rd454;
	xor.b64  	%rd525, %rd473, %rd524;
	or.b64  	%rd526, %rd461, %rd460;
	xor.b64  	%rd527, %rd526, %rd454;
	and.b64  	%rd528, %rd467, %rd461;
	xor.b64  	%rd529, %rd528, %rd460;
	xor.b64  	%rd530, %rd427, %rd477;
	xor.b64  	%rd531, %rd530, -9223372034707259392;
	xor.b64  	%rd532, %rd490, %rd479;
	xor.b64  	%rd533, %rd501, %rd512;
	xor.b64  	%rd534, %rd523, %rd532;
	xor.b64  	%rd535, %rd534, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r569,%dummy}, %rd535;
	}
	shf.l.wrap.b32 	%r570, %r569, %r568, 1;
	shf.l.wrap.b32 	%r571, %r568, %r569, 1;
	mov.b64 	%rd536, {%r571, %r570};
	xor.b64  	%rd537, %rd485, %rd496;
	xor.b64  	%rd538, %rd518, %rd507;
	xor.b64  	%rd539, %rd538, %rd529;
	xor.b64  	%rd540, %rd539, %rd536;
	xor.b64  	%rd541, %rd540, %rd537;
	xor.b64  	%rd542, %rd481, %rd492;
	xor.b64  	%rd543, %rd503, %rd514;
	xor.b64  	%rd544, %rd543, %rd525;
	xor.b64  	%rd545, %rd544, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r573,%dummy}, %rd545;
	}
	shf.l.wrap.b32 	%r574, %r573, %r572, 1;
	shf.l.wrap.b32 	%r575, %r572, %r573, 1;
	mov.b64 	%rd546, {%r575, %r574};
	xor.b64  	%rd547, %rd488, %rd531;
	xor.b64  	%rd548, %rd510, %rd499;
	xor.b64  	%rd549, %rd521, %rd548;
	xor.b64  	%rd550, %rd549, %rd547;
	xor.b64  	%rd551, %rd550, %rd546;
	xor.b64  	%rd552, %rd483, %rd494;
	xor.b64  	%rd553, %rd505, %rd516;
	xor.b64  	%rd554, %rd553, %rd527;
	xor.b64  	%rd555, %rd554, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd555;
	}
	shf.l.wrap.b32 	%r578, %r577, %r576, 1;
	shf.l.wrap.b32 	%r579, %r576, %r577, 1;
	mov.b64 	%rd556, {%r579, %r578};
	xor.b64  	%rd557, %rd535, %rd556;
	xor.b64  	%rd558, %rd539, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd558;
	}
	shf.l.wrap.b32 	%r582, %r581, %r580, 1;
	shf.l.wrap.b32 	%r583, %r580, %r581, 1;
	mov.b64 	%rd559, {%r583, %r582};
	xor.b64  	%rd560, %rd545, %rd559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r585,%dummy}, %rd550;
	}
	shf.l.wrap.b32 	%r586, %r585, %r584, 1;
	shf.l.wrap.b32 	%r587, %r584, %r585, 1;
	mov.b64 	%rd561, {%r587, %r586};
	xor.b64  	%rd562, %rd555, %rd561;
	xor.b64  	%rd563, %rd541, %rd531;
	xor.b64  	%rd564, %rd541, %rd488;
	xor.b64  	%rd565, %rd541, %rd499;
	xor.b64  	%rd566, %rd541, %rd510;
	xor.b64  	%rd567, %rd541, %rd521;
	xor.b64  	%rd568, %rd551, %rd479;
	xor.b64  	%rd569, %rd551, %rd490;
	xor.b64  	%rd570, %rd551, %rd501;
	xor.b64  	%rd571, %rd551, %rd512;
	xor.b64  	%rd572, %rd551, %rd523;
	xor.b64  	%rd573, %rd557, %rd481;
	xor.b64  	%rd574, %rd557, %rd492;
	xor.b64  	%rd575, %rd557, %rd503;
	xor.b64  	%rd576, %rd557, %rd514;
	xor.b64  	%rd577, %rd557, %rd525;
	xor.b64  	%rd578, %rd560, %rd483;
	xor.b64  	%rd579, %rd560, %rd494;
	xor.b64  	%rd580, %rd560, %rd505;
	xor.b64  	%rd581, %rd560, %rd516;
	xor.b64  	%rd582, %rd560, %rd527;
	xor.b64  	%rd583, %rd562, %rd485;
	xor.b64  	%rd584, %rd562, %rd496;
	xor.b64  	%rd585, %rd562, %rd507;
	xor.b64  	%rd586, %rd562, %rd518;
	xor.b64  	%rd587, %rd562, %rd529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd564;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 28;
	shf.r.wrap.b32 	%r591, %r588, %r589, 28;
	mov.b64 	%rd588, {%r591, %r590};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd565;
	}
	shf.l.wrap.b32 	%r594, %r593, %r592, 3;
	shf.l.wrap.b32 	%r595, %r592, %r593, 3;
	mov.b64 	%rd589, {%r595, %r594};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd566;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 23;
	shf.r.wrap.b32 	%r599, %r596, %r597, 23;
	mov.b64 	%rd590, {%r599, %r598};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r601,%dummy}, %rd567;
	}
	shf.l.wrap.b32 	%r602, %r601, %r600, 18;
	shf.l.wrap.b32 	%r603, %r600, %r601, 18;
	mov.b64 	%rd591, {%r603, %r602};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r605,%dummy}, %rd568;
	}
	shf.l.wrap.b32 	%r606, %r605, %r604, 1;
	shf.l.wrap.b32 	%r607, %r604, %r605, 1;
	mov.b64 	%rd592, {%r607, %r606};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd569;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 20;
	shf.r.wrap.b32 	%r611, %r608, %r609, 20;
	mov.b64 	%rd593, {%r611, %r610};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd570;
	}
	shf.l.wrap.b32 	%r614, %r613, %r612, 10;
	shf.l.wrap.b32 	%r615, %r612, %r613, 10;
	mov.b64 	%rd594, {%r615, %r614};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd571;
	}
	shf.r.wrap.b32 	%r618, %r617, %r616, 19;
	shf.r.wrap.b32 	%r619, %r616, %r617, 19;
	mov.b64 	%rd595, {%r619, %r618};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r620}, %rd572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r621,%dummy}, %rd572;
	}
	shf.l.wrap.b32 	%r622, %r621, %r620, 2;
	shf.l.wrap.b32 	%r623, %r620, %r621, 2;
	mov.b64 	%rd596, {%r623, %r622};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd573;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 2;
	shf.r.wrap.b32 	%r627, %r624, %r625, 2;
	mov.b64 	%rd597, {%r627, %r626};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r628}, %rd574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd574;
	}
	shf.l.wrap.b32 	%r630, %r629, %r628, 6;
	shf.l.wrap.b32 	%r631, %r628, %r629, 6;
	mov.b64 	%rd598, {%r631, %r630};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd575;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 21;
	shf.r.wrap.b32 	%r635, %r632, %r633, 21;
	mov.b64 	%rd599, {%r635, %r634};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r637,%dummy}, %rd576;
	}
	shf.l.wrap.b32 	%r638, %r637, %r636, 15;
	shf.l.wrap.b32 	%r639, %r636, %r637, 15;
	mov.b64 	%rd600, {%r639, %r638};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd577;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 3;
	shf.r.wrap.b32 	%r643, %r640, %r641, 3;
	mov.b64 	%rd601, {%r643, %r642};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r644}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd578;
	}
	shf.l.wrap.b32 	%r646, %r645, %r644, 28;
	shf.l.wrap.b32 	%r647, %r644, %r645, 28;
	mov.b64 	%rd602, {%r647, %r646};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd579;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 9;
	shf.r.wrap.b32 	%r651, %r648, %r649, 9;
	mov.b64 	%rd603, {%r651, %r650};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r652}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd580;
	}
	shf.l.wrap.b32 	%r654, %r653, %r652, 25;
	shf.l.wrap.b32 	%r655, %r652, %r653, 25;
	mov.b64 	%rd604, {%r655, %r654};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd581;
	}
	shf.l.wrap.b32 	%r658, %r657, %r656, 21;
	shf.l.wrap.b32 	%r659, %r656, %r657, 21;
	mov.b64 	%rd605, {%r659, %r658};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd582;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 8;
	shf.r.wrap.b32 	%r663, %r660, %r661, 8;
	mov.b64 	%rd606, {%r663, %r662};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd583;
	}
	shf.l.wrap.b32 	%r666, %r665, %r664, 27;
	shf.l.wrap.b32 	%r667, %r664, %r665, 27;
	mov.b64 	%rd607, {%r667, %r666};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r668}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r669,%dummy}, %rd584;
	}
	shf.l.wrap.b32 	%r670, %r669, %r668, 20;
	shf.l.wrap.b32 	%r671, %r668, %r669, 20;
	mov.b64 	%rd608, {%r671, %r670};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd585;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 25;
	shf.r.wrap.b32 	%r675, %r672, %r673, 25;
	mov.b64 	%rd609, {%r675, %r674};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r676}, %rd586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd586;
	}
	shf.l.wrap.b32 	%r678, %r677, %r676, 8;
	shf.l.wrap.b32 	%r679, %r676, %r677, 8;
	mov.b64 	%rd610, {%r679, %r678};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r681,%dummy}, %rd587;
	}
	shf.l.wrap.b32 	%r682, %r681, %r680, 14;
	shf.l.wrap.b32 	%r683, %r680, %r681, 14;
	mov.b64 	%rd611, {%r683, %r682};
	not.b64 	%rd612, %rd599;
	or.b64  	%rd613, %rd599, %rd593;
	or.b64  	%rd614, %rd605, %rd612;
	xor.b64  	%rd615, %rd614, %rd593;
	and.b64  	%rd616, %rd611, %rd605;
	xor.b64  	%rd617, %rd616, %rd599;
	or.b64  	%rd618, %rd611, %rd563;
	xor.b64  	%rd619, %rd618, %rd605;
	and.b64  	%rd620, %rd593, %rd563;
	xor.b64  	%rd621, %rd611, %rd620;
	not.b64 	%rd622, %rd601;
	or.b64  	%rd623, %rd608, %rd589;
	xor.b64  	%rd624, %rd623, %rd602;
	and.b64  	%rd625, %rd595, %rd589;
	xor.b64  	%rd626, %rd608, %rd625;
	or.b64  	%rd627, %rd595, %rd622;
	xor.b64  	%rd628, %rd627, %rd589;
	or.b64  	%rd629, %rd602, %rd601;
	xor.b64  	%rd630, %rd629, %rd595;
	and.b64  	%rd631, %rd608, %rd602;
	xor.b64  	%rd632, %rd631, %rd601;
	not.b64 	%rd633, %rd610;
	or.b64  	%rd634, %rd604, %rd598;
	xor.b64  	%rd635, %rd634, %rd592;
	and.b64  	%rd636, %rd610, %rd604;
	xor.b64  	%rd637, %rd636, %rd598;
	and.b64  	%rd638, %rd591, %rd633;
	xor.b64  	%rd639, %rd638, %rd604;
	or.b64  	%rd640, %rd592, %rd591;
	xor.b64  	%rd641, %rd640, %rd633;
	and.b64  	%rd642, %rd598, %rd592;
	xor.b64  	%rd643, %rd642, %rd591;
	not.b64 	%rd644, %rd600;
	and.b64  	%rd645, %rd594, %rd588;
	xor.b64  	%rd646, %rd607, %rd645;
	or.b64  	%rd647, %rd600, %rd594;
	xor.b64  	%rd648, %rd647, %rd588;
	or.b64  	%rd649, %rd606, %rd644;
	xor.b64  	%rd650, %rd649, %rd594;
	and.b64  	%rd651, %rd607, %rd606;
	xor.b64  	%rd652, %rd651, %rd644;
	or.b64  	%rd653, %rd607, %rd588;
	xor.b64  	%rd654, %rd653, %rd606;
	not.b64 	%rd655, %rd603;
	and.b64  	%rd656, %rd609, %rd655;
	xor.b64  	%rd657, %rd656, %rd597;
	or.b64  	%rd658, %rd609, %rd590;
	xor.b64  	%rd659, %rd658, %rd655;
	and.b64  	%rd660, %rd596, %rd590;
	xor.b64  	%rd661, %rd609, %rd660;
	or.b64  	%rd662, %rd597, %rd596;
	xor.b64  	%rd663, %rd662, %rd590;
	and.b64  	%rd664, %rd603, %rd597;
	xor.b64  	%rd665, %rd664, %rd596;
	xor.b64  	%rd666, %rd563, %rd613;
	xor.b64  	%rd667, %rd666, 32907;
	xor.b64  	%rd668, %rd626, %rd615;
	xor.b64  	%rd669, %rd637, %rd648;
	xor.b64  	%rd670, %rd659, %rd668;
	xor.b64  	%rd671, %rd670, %rd669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r685,%dummy}, %rd671;
	}
	shf.l.wrap.b32 	%r686, %r685, %r684, 1;
	shf.l.wrap.b32 	%r687, %r684, %r685, 1;
	mov.b64 	%rd672, {%r687, %r686};
	xor.b64  	%rd673, %rd621, %rd632;
	xor.b64  	%rd674, %rd654, %rd643;
	xor.b64  	%rd675, %rd674, %rd665;
	xor.b64  	%rd676, %rd675, %rd672;
	xor.b64  	%rd677, %rd676, %rd673;
	xor.b64  	%rd678, %rd617, %rd628;
	xor.b64  	%rd679, %rd639, %rd650;
	xor.b64  	%rd680, %rd679, %rd661;
	xor.b64  	%rd681, %rd680, %rd678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd681;
	}
	shf.l.wrap.b32 	%r690, %r689, %r688, 1;
	shf.l.wrap.b32 	%r691, %r688, %r689, 1;
	mov.b64 	%rd682, {%r691, %r690};
	xor.b64  	%rd683, %rd624, %rd667;
	xor.b64  	%rd684, %rd646, %rd635;
	xor.b64  	%rd685, %rd657, %rd684;
	xor.b64  	%rd686, %rd685, %rd683;
	xor.b64  	%rd687, %rd686, %rd682;
	xor.b64  	%rd688, %rd619, %rd630;
	xor.b64  	%rd689, %rd641, %rd652;
	xor.b64  	%rd690, %rd689, %rd663;
	xor.b64  	%rd691, %rd690, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r692}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd691;
	}
	shf.l.wrap.b32 	%r694, %r693, %r692, 1;
	shf.l.wrap.b32 	%r695, %r692, %r693, 1;
	mov.b64 	%rd692, {%r695, %r694};
	xor.b64  	%rd693, %rd671, %rd692;
	xor.b64  	%rd694, %rd675, %rd673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd694;
	}
	shf.l.wrap.b32 	%r698, %r697, %r696, 1;
	shf.l.wrap.b32 	%r699, %r696, %r697, 1;
	mov.b64 	%rd695, {%r699, %r698};
	xor.b64  	%rd696, %rd681, %rd695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r700}, %rd686;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd686;
	}
	shf.l.wrap.b32 	%r702, %r701, %r700, 1;
	shf.l.wrap.b32 	%r703, %r700, %r701, 1;
	mov.b64 	%rd697, {%r703, %r702};
	xor.b64  	%rd698, %rd691, %rd697;
	xor.b64  	%rd699, %rd677, %rd667;
	xor.b64  	%rd700, %rd677, %rd624;
	xor.b64  	%rd701, %rd677, %rd635;
	xor.b64  	%rd702, %rd677, %rd646;
	xor.b64  	%rd703, %rd677, %rd657;
	xor.b64  	%rd704, %rd687, %rd615;
	xor.b64  	%rd705, %rd687, %rd626;
	xor.b64  	%rd706, %rd687, %rd637;
	xor.b64  	%rd707, %rd687, %rd648;
	xor.b64  	%rd708, %rd687, %rd659;
	xor.b64  	%rd709, %rd693, %rd617;
	xor.b64  	%rd710, %rd693, %rd628;
	xor.b64  	%rd711, %rd693, %rd639;
	xor.b64  	%rd712, %rd693, %rd650;
	xor.b64  	%rd713, %rd693, %rd661;
	xor.b64  	%rd714, %rd696, %rd619;
	xor.b64  	%rd715, %rd696, %rd630;
	xor.b64  	%rd716, %rd696, %rd641;
	xor.b64  	%rd717, %rd696, %rd652;
	xor.b64  	%rd718, %rd696, %rd663;
	xor.b64  	%rd719, %rd698, %rd621;
	xor.b64  	%rd720, %rd698, %rd632;
	xor.b64  	%rd721, %rd698, %rd643;
	xor.b64  	%rd722, %rd698, %rd654;
	xor.b64  	%rd723, %rd698, %rd665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r704,%dummy}, %rd700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r705}, %rd700;
	}
	shf.r.wrap.b32 	%r706, %r705, %r704, 28;
	shf.r.wrap.b32 	%r707, %r704, %r705, 28;
	mov.b64 	%rd724, {%r707, %r706};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd701;
	}
	shf.l.wrap.b32 	%r710, %r709, %r708, 3;
	shf.l.wrap.b32 	%r711, %r708, %r709, 3;
	mov.b64 	%rd725, {%r711, %r710};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r712,%dummy}, %rd702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd702;
	}
	shf.r.wrap.b32 	%r714, %r713, %r712, 23;
	shf.r.wrap.b32 	%r715, %r712, %r713, 23;
	mov.b64 	%rd726, {%r715, %r714};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r716}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd703;
	}
	shf.l.wrap.b32 	%r718, %r717, %r716, 18;
	shf.l.wrap.b32 	%r719, %r716, %r717, 18;
	mov.b64 	%rd727, {%r719, %r718};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd704;
	}
	shf.l.wrap.b32 	%r722, %r721, %r720, 1;
	shf.l.wrap.b32 	%r723, %r720, %r721, 1;
	mov.b64 	%rd728, {%r723, %r722};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r724,%dummy}, %rd705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd705;
	}
	shf.r.wrap.b32 	%r726, %r725, %r724, 20;
	shf.r.wrap.b32 	%r727, %r724, %r725, 20;
	mov.b64 	%rd729, {%r727, %r726};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r729,%dummy}, %rd706;
	}
	shf.l.wrap.b32 	%r730, %r729, %r728, 10;
	shf.l.wrap.b32 	%r731, %r728, %r729, 10;
	mov.b64 	%rd730, {%r731, %r730};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd707;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 19;
	shf.r.wrap.b32 	%r735, %r732, %r733, 19;
	mov.b64 	%rd731, {%r735, %r734};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r736}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd708;
	}
	shf.l.wrap.b32 	%r738, %r737, %r736, 2;
	shf.l.wrap.b32 	%r739, %r736, %r737, 2;
	mov.b64 	%rd732, {%r739, %r738};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd709;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 2;
	shf.r.wrap.b32 	%r743, %r740, %r741, 2;
	mov.b64 	%rd733, {%r743, %r742};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r745,%dummy}, %rd710;
	}
	shf.l.wrap.b32 	%r746, %r745, %r744, 6;
	shf.l.wrap.b32 	%r747, %r744, %r745, 6;
	mov.b64 	%rd734, {%r747, %r746};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r748,%dummy}, %rd711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd711;
	}
	shf.r.wrap.b32 	%r750, %r749, %r748, 21;
	shf.r.wrap.b32 	%r751, %r748, %r749, 21;
	mov.b64 	%rd735, {%r751, %r750};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r752}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd712;
	}
	shf.l.wrap.b32 	%r754, %r753, %r752, 15;
	shf.l.wrap.b32 	%r755, %r752, %r753, 15;
	mov.b64 	%rd736, {%r755, %r754};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd713;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 3;
	shf.r.wrap.b32 	%r759, %r756, %r757, 3;
	mov.b64 	%rd737, {%r759, %r758};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r760}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd714;
	}
	shf.l.wrap.b32 	%r762, %r761, %r760, 28;
	shf.l.wrap.b32 	%r763, %r760, %r761, 28;
	mov.b64 	%rd738, {%r763, %r762};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r764,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd715;
	}
	shf.r.wrap.b32 	%r766, %r765, %r764, 9;
	shf.r.wrap.b32 	%r767, %r764, %r765, 9;
	mov.b64 	%rd739, {%r767, %r766};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd716;
	}
	shf.l.wrap.b32 	%r770, %r769, %r768, 25;
	shf.l.wrap.b32 	%r771, %r768, %r769, 25;
	mov.b64 	%rd740, {%r771, %r770};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r772}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd717;
	}
	shf.l.wrap.b32 	%r774, %r773, %r772, 21;
	shf.l.wrap.b32 	%r775, %r772, %r773, 21;
	mov.b64 	%rd741, {%r775, %r774};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r776,%dummy}, %rd718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd718;
	}
	shf.r.wrap.b32 	%r778, %r777, %r776, 8;
	shf.r.wrap.b32 	%r779, %r776, %r777, 8;
	mov.b64 	%rd742, {%r779, %r778};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r780}, %rd719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd719;
	}
	shf.l.wrap.b32 	%r782, %r781, %r780, 27;
	shf.l.wrap.b32 	%r783, %r780, %r781, 27;
	mov.b64 	%rd743, {%r783, %r782};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r784}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd720;
	}
	shf.l.wrap.b32 	%r786, %r785, %r784, 20;
	shf.l.wrap.b32 	%r787, %r784, %r785, 20;
	mov.b64 	%rd744, {%r787, %r786};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r788,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r789}, %rd721;
	}
	shf.r.wrap.b32 	%r790, %r789, %r788, 25;
	shf.r.wrap.b32 	%r791, %r788, %r789, 25;
	mov.b64 	%rd745, {%r791, %r790};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r792}, %rd722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r793,%dummy}, %rd722;
	}
	shf.l.wrap.b32 	%r794, %r793, %r792, 8;
	shf.l.wrap.b32 	%r795, %r792, %r793, 8;
	mov.b64 	%rd746, {%r795, %r794};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r796}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd723;
	}
	shf.l.wrap.b32 	%r798, %r797, %r796, 14;
	shf.l.wrap.b32 	%r799, %r796, %r797, 14;
	mov.b64 	%rd747, {%r799, %r798};
	not.b64 	%rd748, %rd735;
	or.b64  	%rd749, %rd735, %rd729;
	or.b64  	%rd750, %rd741, %rd748;
	xor.b64  	%rd751, %rd750, %rd729;
	and.b64  	%rd752, %rd747, %rd741;
	xor.b64  	%rd753, %rd752, %rd735;
	or.b64  	%rd754, %rd747, %rd699;
	xor.b64  	%rd755, %rd754, %rd741;
	and.b64  	%rd756, %rd729, %rd699;
	xor.b64  	%rd757, %rd747, %rd756;
	not.b64 	%rd758, %rd737;
	or.b64  	%rd759, %rd744, %rd725;
	xor.b64  	%rd760, %rd759, %rd738;
	and.b64  	%rd761, %rd731, %rd725;
	xor.b64  	%rd762, %rd744, %rd761;
	or.b64  	%rd763, %rd731, %rd758;
	xor.b64  	%rd764, %rd763, %rd725;
	or.b64  	%rd765, %rd738, %rd737;
	xor.b64  	%rd766, %rd765, %rd731;
	and.b64  	%rd767, %rd744, %rd738;
	xor.b64  	%rd768, %rd767, %rd737;
	not.b64 	%rd769, %rd746;
	or.b64  	%rd770, %rd740, %rd734;
	xor.b64  	%rd771, %rd770, %rd728;
	and.b64  	%rd772, %rd746, %rd740;
	xor.b64  	%rd773, %rd772, %rd734;
	and.b64  	%rd774, %rd727, %rd769;
	xor.b64  	%rd775, %rd774, %rd740;
	or.b64  	%rd776, %rd728, %rd727;
	xor.b64  	%rd777, %rd776, %rd769;
	and.b64  	%rd778, %rd734, %rd728;
	xor.b64  	%rd779, %rd778, %rd727;
	not.b64 	%rd780, %rd736;
	and.b64  	%rd781, %rd730, %rd724;
	xor.b64  	%rd782, %rd743, %rd781;
	or.b64  	%rd783, %rd736, %rd730;
	xor.b64  	%rd784, %rd783, %rd724;
	or.b64  	%rd785, %rd742, %rd780;
	xor.b64  	%rd786, %rd785, %rd730;
	and.b64  	%rd787, %rd743, %rd742;
	xor.b64  	%rd788, %rd787, %rd780;
	or.b64  	%rd789, %rd743, %rd724;
	xor.b64  	%rd790, %rd789, %rd742;
	not.b64 	%rd791, %rd739;
	and.b64  	%rd792, %rd745, %rd791;
	xor.b64  	%rd793, %rd792, %rd733;
	or.b64  	%rd794, %rd745, %rd726;
	xor.b64  	%rd795, %rd794, %rd791;
	and.b64  	%rd796, %rd732, %rd726;
	xor.b64  	%rd797, %rd745, %rd796;
	or.b64  	%rd798, %rd733, %rd732;
	xor.b64  	%rd799, %rd798, %rd726;
	and.b64  	%rd800, %rd739, %rd733;
	xor.b64  	%rd801, %rd800, %rd732;
	xor.b64  	%rd802, %rd699, %rd749;
	xor.b64  	%rd803, %rd802, 2147483649;
	xor.b64  	%rd804, %rd762, %rd751;
	xor.b64  	%rd805, %rd773, %rd784;
	xor.b64  	%rd806, %rd795, %rd804;
	xor.b64  	%rd807, %rd806, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r800}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd807;
	}
	shf.l.wrap.b32 	%r802, %r801, %r800, 1;
	shf.l.wrap.b32 	%r803, %r800, %r801, 1;
	mov.b64 	%rd808, {%r803, %r802};
	xor.b64  	%rd809, %rd757, %rd768;
	xor.b64  	%rd810, %rd790, %rd779;
	xor.b64  	%rd811, %rd810, %rd801;
	xor.b64  	%rd812, %rd811, %rd808;
	xor.b64  	%rd813, %rd812, %rd809;
	xor.b64  	%rd814, %rd753, %rd764;
	xor.b64  	%rd815, %rd775, %rd786;
	xor.b64  	%rd816, %rd815, %rd797;
	xor.b64  	%rd817, %rd816, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r804}, %rd817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd817;
	}
	shf.l.wrap.b32 	%r806, %r805, %r804, 1;
	shf.l.wrap.b32 	%r807, %r804, %r805, 1;
	mov.b64 	%rd818, {%r807, %r806};
	xor.b64  	%rd819, %rd760, %rd803;
	xor.b64  	%rd820, %rd782, %rd771;
	xor.b64  	%rd821, %rd793, %rd820;
	xor.b64  	%rd822, %rd821, %rd819;
	xor.b64  	%rd823, %rd822, %rd818;
	xor.b64  	%rd824, %rd755, %rd766;
	xor.b64  	%rd825, %rd777, %rd788;
	xor.b64  	%rd826, %rd825, %rd799;
	xor.b64  	%rd827, %rd826, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r809,%dummy}, %rd827;
	}
	shf.l.wrap.b32 	%r810, %r809, %r808, 1;
	shf.l.wrap.b32 	%r811, %r808, %r809, 1;
	mov.b64 	%rd828, {%r811, %r810};
	xor.b64  	%rd829, %rd807, %rd828;
	xor.b64  	%rd830, %rd811, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r812}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd830;
	}
	shf.l.wrap.b32 	%r814, %r813, %r812, 1;
	shf.l.wrap.b32 	%r815, %r812, %r813, 1;
	mov.b64 	%rd831, {%r815, %r814};
	xor.b64  	%rd832, %rd817, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r816}, %rd822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd822;
	}
	shf.l.wrap.b32 	%r818, %r817, %r816, 1;
	shf.l.wrap.b32 	%r819, %r816, %r817, 1;
	mov.b64 	%rd833, {%r819, %r818};
	xor.b64  	%rd834, %rd827, %rd833;
	xor.b64  	%rd835, %rd813, %rd803;
	xor.b64  	%rd836, %rd813, %rd760;
	xor.b64  	%rd837, %rd813, %rd771;
	xor.b64  	%rd838, %rd813, %rd782;
	xor.b64  	%rd839, %rd813, %rd793;
	xor.b64  	%rd840, %rd823, %rd751;
	xor.b64  	%rd841, %rd823, %rd762;
	xor.b64  	%rd842, %rd823, %rd773;
	xor.b64  	%rd843, %rd823, %rd784;
	xor.b64  	%rd844, %rd823, %rd795;
	xor.b64  	%rd845, %rd829, %rd753;
	xor.b64  	%rd846, %rd829, %rd764;
	xor.b64  	%rd847, %rd829, %rd775;
	xor.b64  	%rd848, %rd829, %rd786;
	xor.b64  	%rd849, %rd829, %rd797;
	xor.b64  	%rd850, %rd832, %rd755;
	xor.b64  	%rd851, %rd832, %rd766;
	xor.b64  	%rd852, %rd832, %rd777;
	xor.b64  	%rd853, %rd832, %rd788;
	xor.b64  	%rd854, %rd832, %rd799;
	xor.b64  	%rd855, %rd834, %rd757;
	xor.b64  	%rd856, %rd834, %rd768;
	xor.b64  	%rd857, %rd834, %rd779;
	xor.b64  	%rd858, %rd834, %rd790;
	xor.b64  	%rd859, %rd834, %rd801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd836;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 28;
	shf.r.wrap.b32 	%r823, %r820, %r821, 28;
	mov.b64 	%rd860, {%r823, %r822};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r824}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r825,%dummy}, %rd837;
	}
	shf.l.wrap.b32 	%r826, %r825, %r824, 3;
	shf.l.wrap.b32 	%r827, %r824, %r825, 3;
	mov.b64 	%rd861, {%r827, %r826};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r828,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd838;
	}
	shf.r.wrap.b32 	%r830, %r829, %r828, 23;
	shf.r.wrap.b32 	%r831, %r828, %r829, 23;
	mov.b64 	%rd862, {%r831, %r830};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r833,%dummy}, %rd839;
	}
	shf.l.wrap.b32 	%r834, %r833, %r832, 18;
	shf.l.wrap.b32 	%r835, %r832, %r833, 18;
	mov.b64 	%rd863, {%r835, %r834};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r836}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd840;
	}
	shf.l.wrap.b32 	%r838, %r837, %r836, 1;
	shf.l.wrap.b32 	%r839, %r836, %r837, 1;
	mov.b64 	%rd864, {%r839, %r838};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r840,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd841;
	}
	shf.r.wrap.b32 	%r842, %r841, %r840, 20;
	shf.r.wrap.b32 	%r843, %r840, %r841, 20;
	mov.b64 	%rd865, {%r843, %r842};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r844}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd842;
	}
	shf.l.wrap.b32 	%r846, %r845, %r844, 10;
	shf.l.wrap.b32 	%r847, %r844, %r845, 10;
	mov.b64 	%rd866, {%r847, %r846};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r848,%dummy}, %rd843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd843;
	}
	shf.r.wrap.b32 	%r850, %r849, %r848, 19;
	shf.r.wrap.b32 	%r851, %r848, %r849, 19;
	mov.b64 	%rd867, {%r851, %r850};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r852}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd844;
	}
	shf.l.wrap.b32 	%r854, %r853, %r852, 2;
	shf.l.wrap.b32 	%r855, %r852, %r853, 2;
	mov.b64 	%rd868, {%r855, %r854};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd845;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 2;
	shf.r.wrap.b32 	%r859, %r856, %r857, 2;
	mov.b64 	%rd869, {%r859, %r858};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r860}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd846;
	}
	shf.l.wrap.b32 	%r862, %r861, %r860, 6;
	shf.l.wrap.b32 	%r863, %r860, %r861, 6;
	mov.b64 	%rd870, {%r863, %r862};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r864,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r865}, %rd847;
	}
	shf.r.wrap.b32 	%r866, %r865, %r864, 21;
	shf.r.wrap.b32 	%r867, %r864, %r865, 21;
	mov.b64 	%rd871, {%r867, %r866};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r868}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd848;
	}
	shf.l.wrap.b32 	%r870, %r869, %r868, 15;
	shf.l.wrap.b32 	%r871, %r868, %r869, 15;
	mov.b64 	%rd872, {%r871, %r870};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r872,%dummy}, %rd849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r873}, %rd849;
	}
	shf.r.wrap.b32 	%r874, %r873, %r872, 3;
	shf.r.wrap.b32 	%r875, %r872, %r873, 3;
	mov.b64 	%rd873, {%r875, %r874};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r876}, %rd850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd850;
	}
	shf.l.wrap.b32 	%r878, %r877, %r876, 28;
	shf.l.wrap.b32 	%r879, %r876, %r877, 28;
	mov.b64 	%rd874, {%r879, %r878};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r880,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r881}, %rd851;
	}
	shf.r.wrap.b32 	%r882, %r881, %r880, 9;
	shf.r.wrap.b32 	%r883, %r880, %r881, 9;
	mov.b64 	%rd875, {%r883, %r882};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r884}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd852;
	}
	shf.l.wrap.b32 	%r886, %r885, %r884, 25;
	shf.l.wrap.b32 	%r887, %r884, %r885, 25;
	mov.b64 	%rd876, {%r887, %r886};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r889,%dummy}, %rd853;
	}
	shf.l.wrap.b32 	%r890, %r889, %r888, 21;
	shf.l.wrap.b32 	%r891, %r888, %r889, 21;
	mov.b64 	%rd877, {%r891, %r890};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r892,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd854;
	}
	shf.r.wrap.b32 	%r894, %r893, %r892, 8;
	shf.r.wrap.b32 	%r895, %r892, %r893, 8;
	mov.b64 	%rd878, {%r895, %r894};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd855;
	}
	shf.l.wrap.b32 	%r898, %r897, %r896, 27;
	shf.l.wrap.b32 	%r899, %r896, %r897, 27;
	mov.b64 	%rd879, {%r899, %r898};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd856;
	}
	shf.l.wrap.b32 	%r902, %r901, %r900, 20;
	shf.l.wrap.b32 	%r903, %r900, %r901, 20;
	mov.b64 	%rd880, {%r903, %r902};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r904,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd857;
	}
	shf.r.wrap.b32 	%r906, %r905, %r904, 25;
	shf.r.wrap.b32 	%r907, %r904, %r905, 25;
	mov.b64 	%rd881, {%r907, %r906};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd858;
	}
	shf.l.wrap.b32 	%r910, %r909, %r908, 8;
	shf.l.wrap.b32 	%r911, %r908, %r909, 8;
	mov.b64 	%rd882, {%r911, %r910};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd859;
	}
	shf.l.wrap.b32 	%r914, %r913, %r912, 14;
	shf.l.wrap.b32 	%r915, %r912, %r913, 14;
	mov.b64 	%rd883, {%r915, %r914};
	not.b64 	%rd884, %rd871;
	or.b64  	%rd885, %rd871, %rd865;
	or.b64  	%rd886, %rd877, %rd884;
	xor.b64  	%rd887, %rd886, %rd865;
	and.b64  	%rd888, %rd883, %rd877;
	xor.b64  	%rd889, %rd888, %rd871;
	or.b64  	%rd890, %rd883, %rd835;
	xor.b64  	%rd891, %rd890, %rd877;
	and.b64  	%rd892, %rd865, %rd835;
	xor.b64  	%rd893, %rd883, %rd892;
	not.b64 	%rd894, %rd873;
	or.b64  	%rd895, %rd880, %rd861;
	xor.b64  	%rd896, %rd895, %rd874;
	and.b64  	%rd897, %rd867, %rd861;
	xor.b64  	%rd898, %rd880, %rd897;
	or.b64  	%rd899, %rd867, %rd894;
	xor.b64  	%rd900, %rd899, %rd861;
	or.b64  	%rd901, %rd874, %rd873;
	xor.b64  	%rd902, %rd901, %rd867;
	and.b64  	%rd903, %rd880, %rd874;
	xor.b64  	%rd904, %rd903, %rd873;
	not.b64 	%rd905, %rd882;
	or.b64  	%rd906, %rd876, %rd870;
	xor.b64  	%rd907, %rd906, %rd864;
	and.b64  	%rd908, %rd882, %rd876;
	xor.b64  	%rd909, %rd908, %rd870;
	and.b64  	%rd910, %rd863, %rd905;
	xor.b64  	%rd911, %rd910, %rd876;
	or.b64  	%rd912, %rd864, %rd863;
	xor.b64  	%rd913, %rd912, %rd905;
	and.b64  	%rd914, %rd870, %rd864;
	xor.b64  	%rd915, %rd914, %rd863;
	not.b64 	%rd916, %rd872;
	and.b64  	%rd917, %rd866, %rd860;
	xor.b64  	%rd918, %rd879, %rd917;
	or.b64  	%rd919, %rd872, %rd866;
	xor.b64  	%rd920, %rd919, %rd860;
	or.b64  	%rd921, %rd878, %rd916;
	xor.b64  	%rd922, %rd921, %rd866;
	and.b64  	%rd923, %rd879, %rd878;
	xor.b64  	%rd924, %rd923, %rd916;
	or.b64  	%rd925, %rd879, %rd860;
	xor.b64  	%rd926, %rd925, %rd878;
	not.b64 	%rd927, %rd875;
	and.b64  	%rd928, %rd881, %rd927;
	xor.b64  	%rd929, %rd928, %rd869;
	or.b64  	%rd930, %rd881, %rd862;
	xor.b64  	%rd931, %rd930, %rd927;
	and.b64  	%rd932, %rd868, %rd862;
	xor.b64  	%rd933, %rd881, %rd932;
	or.b64  	%rd934, %rd869, %rd868;
	xor.b64  	%rd935, %rd934, %rd862;
	and.b64  	%rd936, %rd875, %rd869;
	xor.b64  	%rd937, %rd936, %rd868;
	xor.b64  	%rd938, %rd835, %rd885;
	xor.b64  	%rd939, %rd938, -9223372034707259263;
	xor.b64  	%rd940, %rd898, %rd887;
	xor.b64  	%rd941, %rd909, %rd920;
	xor.b64  	%rd942, %rd931, %rd940;
	xor.b64  	%rd943, %rd942, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r916}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd943;
	}
	shf.l.wrap.b32 	%r918, %r917, %r916, 1;
	shf.l.wrap.b32 	%r919, %r916, %r917, 1;
	mov.b64 	%rd944, {%r919, %r918};
	xor.b64  	%rd945, %rd893, %rd904;
	xor.b64  	%rd946, %rd926, %rd915;
	xor.b64  	%rd947, %rd946, %rd937;
	xor.b64  	%rd948, %rd947, %rd944;
	xor.b64  	%rd949, %rd948, %rd945;
	xor.b64  	%rd950, %rd889, %rd900;
	xor.b64  	%rd951, %rd911, %rd922;
	xor.b64  	%rd952, %rd951, %rd933;
	xor.b64  	%rd953, %rd952, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd953;
	}
	shf.l.wrap.b32 	%r922, %r921, %r920, 1;
	shf.l.wrap.b32 	%r923, %r920, %r921, 1;
	mov.b64 	%rd954, {%r923, %r922};
	xor.b64  	%rd955, %rd896, %rd939;
	xor.b64  	%rd956, %rd918, %rd907;
	xor.b64  	%rd957, %rd929, %rd956;
	xor.b64  	%rd958, %rd957, %rd955;
	xor.b64  	%rd959, %rd958, %rd954;
	xor.b64  	%rd960, %rd891, %rd902;
	xor.b64  	%rd961, %rd913, %rd924;
	xor.b64  	%rd962, %rd961, %rd935;
	xor.b64  	%rd963, %rd962, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r924}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd963;
	}
	shf.l.wrap.b32 	%r926, %r925, %r924, 1;
	shf.l.wrap.b32 	%r927, %r924, %r925, 1;
	mov.b64 	%rd964, {%r927, %r926};
	xor.b64  	%rd965, %rd943, %rd964;
	xor.b64  	%rd966, %rd947, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd966;
	}
	shf.l.wrap.b32 	%r930, %r929, %r928, 1;
	shf.l.wrap.b32 	%r931, %r928, %r929, 1;
	mov.b64 	%rd967, {%r931, %r930};
	xor.b64  	%rd968, %rd953, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r932}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd958;
	}
	shf.l.wrap.b32 	%r934, %r933, %r932, 1;
	shf.l.wrap.b32 	%r935, %r932, %r933, 1;
	mov.b64 	%rd969, {%r935, %r934};
	xor.b64  	%rd970, %rd963, %rd969;
	xor.b64  	%rd971, %rd949, %rd939;
	xor.b64  	%rd972, %rd949, %rd896;
	xor.b64  	%rd973, %rd949, %rd907;
	xor.b64  	%rd974, %rd949, %rd918;
	xor.b64  	%rd975, %rd949, %rd929;
	xor.b64  	%rd976, %rd959, %rd887;
	xor.b64  	%rd977, %rd959, %rd898;
	xor.b64  	%rd978, %rd959, %rd909;
	xor.b64  	%rd979, %rd959, %rd920;
	xor.b64  	%rd980, %rd959, %rd931;
	xor.b64  	%rd981, %rd965, %rd889;
	xor.b64  	%rd982, %rd965, %rd900;
	xor.b64  	%rd983, %rd965, %rd911;
	xor.b64  	%rd984, %rd965, %rd922;
	xor.b64  	%rd985, %rd965, %rd933;
	xor.b64  	%rd986, %rd968, %rd891;
	xor.b64  	%rd987, %rd968, %rd902;
	xor.b64  	%rd988, %rd968, %rd913;
	xor.b64  	%rd989, %rd968, %rd924;
	xor.b64  	%rd990, %rd968, %rd935;
	xor.b64  	%rd991, %rd970, %rd893;
	xor.b64  	%rd992, %rd970, %rd904;
	xor.b64  	%rd993, %rd970, %rd915;
	xor.b64  	%rd994, %rd970, %rd926;
	xor.b64  	%rd995, %rd970, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd972;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 28;
	shf.r.wrap.b32 	%r939, %r936, %r937, 28;
	mov.b64 	%rd996, {%r939, %r938};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r940}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd973;
	}
	shf.l.wrap.b32 	%r942, %r941, %r940, 3;
	shf.l.wrap.b32 	%r943, %r940, %r941, 3;
	mov.b64 	%rd997, {%r943, %r942};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd974;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 23;
	shf.r.wrap.b32 	%r947, %r944, %r945, 23;
	mov.b64 	%rd998, {%r947, %r946};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r948}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd975;
	}
	shf.l.wrap.b32 	%r950, %r949, %r948, 18;
	shf.l.wrap.b32 	%r951, %r948, %r949, 18;
	mov.b64 	%rd999, {%r951, %r950};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r953,%dummy}, %rd976;
	}
	shf.l.wrap.b32 	%r954, %r953, %r952, 1;
	shf.l.wrap.b32 	%r955, %r952, %r953, 1;
	mov.b64 	%rd1000, {%r955, %r954};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r956,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd977;
	}
	shf.r.wrap.b32 	%r958, %r957, %r956, 20;
	shf.r.wrap.b32 	%r959, %r956, %r957, 20;
	mov.b64 	%rd1001, {%r959, %r958};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd978;
	}
	shf.l.wrap.b32 	%r962, %r961, %r960, 10;
	shf.l.wrap.b32 	%r963, %r960, %r961, 10;
	mov.b64 	%rd1002, {%r963, %r962};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r964,%dummy}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r965}, %rd979;
	}
	shf.r.wrap.b32 	%r966, %r965, %r964, 19;
	shf.r.wrap.b32 	%r967, %r964, %r965, 19;
	mov.b64 	%rd1003, {%r967, %r966};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r969,%dummy}, %rd980;
	}
	shf.l.wrap.b32 	%r970, %r969, %r968, 2;
	shf.l.wrap.b32 	%r971, %r968, %r969, 2;
	mov.b64 	%rd1004, {%r971, %r970};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r972,%dummy}, %rd981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd981;
	}
	shf.r.wrap.b32 	%r974, %r973, %r972, 2;
	shf.r.wrap.b32 	%r975, %r972, %r973, 2;
	mov.b64 	%rd1005, {%r975, %r974};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r977,%dummy}, %rd982;
	}
	shf.l.wrap.b32 	%r978, %r977, %r976, 6;
	shf.l.wrap.b32 	%r979, %r976, %r977, 6;
	mov.b64 	%rd1006, {%r979, %r978};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r980,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r981}, %rd983;
	}
	shf.r.wrap.b32 	%r982, %r981, %r980, 21;
	shf.r.wrap.b32 	%r983, %r980, %r981, 21;
	mov.b64 	%rd1007, {%r983, %r982};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd984;
	}
	shf.l.wrap.b32 	%r986, %r985, %r984, 15;
	shf.l.wrap.b32 	%r987, %r984, %r985, 15;
	mov.b64 	%rd1008, {%r987, %r986};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r988,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd985;
	}
	shf.r.wrap.b32 	%r990, %r989, %r988, 3;
	shf.r.wrap.b32 	%r991, %r988, %r989, 3;
	mov.b64 	%rd1009, {%r991, %r990};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd986;
	}
	shf.l.wrap.b32 	%r994, %r993, %r992, 28;
	shf.l.wrap.b32 	%r995, %r992, %r993, 28;
	mov.b64 	%rd1010, {%r995, %r994};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r996,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r997}, %rd987;
	}
	shf.r.wrap.b32 	%r998, %r997, %r996, 9;
	shf.r.wrap.b32 	%r999, %r996, %r997, 9;
	mov.b64 	%rd1011, {%r999, %r998};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd988;
	}
	shf.l.wrap.b32 	%r1002, %r1001, %r1000, 25;
	shf.l.wrap.b32 	%r1003, %r1000, %r1001, 25;
	mov.b64 	%rd1012, {%r1003, %r1002};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1005,%dummy}, %rd989;
	}
	shf.l.wrap.b32 	%r1006, %r1005, %r1004, 21;
	shf.l.wrap.b32 	%r1007, %r1004, %r1005, 21;
	mov.b64 	%rd1013, {%r1007, %r1006};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd990;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 8;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 8;
	mov.b64 	%rd1014, {%r1011, %r1010};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1012}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd991;
	}
	shf.l.wrap.b32 	%r1014, %r1013, %r1012, 27;
	shf.l.wrap.b32 	%r1015, %r1012, %r1013, 27;
	mov.b64 	%rd1015, {%r1015, %r1014};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1017,%dummy}, %rd992;
	}
	shf.l.wrap.b32 	%r1018, %r1017, %r1016, 20;
	shf.l.wrap.b32 	%r1019, %r1016, %r1017, 20;
	mov.b64 	%rd1016, {%r1019, %r1018};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1020,%dummy}, %rd993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd993;
	}
	shf.r.wrap.b32 	%r1022, %r1021, %r1020, 25;
	shf.r.wrap.b32 	%r1023, %r1020, %r1021, 25;
	mov.b64 	%rd1017, {%r1023, %r1022};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd994;
	}
	shf.l.wrap.b32 	%r1026, %r1025, %r1024, 8;
	shf.l.wrap.b32 	%r1027, %r1024, %r1025, 8;
	mov.b64 	%rd1018, {%r1027, %r1026};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd995;
	}
	shf.l.wrap.b32 	%r1030, %r1029, %r1028, 14;
	shf.l.wrap.b32 	%r1031, %r1028, %r1029, 14;
	mov.b64 	%rd1019, {%r1031, %r1030};
	not.b64 	%rd1020, %rd1007;
	or.b64  	%rd1021, %rd1007, %rd1001;
	or.b64  	%rd1022, %rd1013, %rd1020;
	xor.b64  	%rd1023, %rd1022, %rd1001;
	and.b64  	%rd1024, %rd1019, %rd1013;
	xor.b64  	%rd1025, %rd1024, %rd1007;
	or.b64  	%rd1026, %rd1019, %rd971;
	xor.b64  	%rd1027, %rd1026, %rd1013;
	and.b64  	%rd1028, %rd1001, %rd971;
	xor.b64  	%rd1029, %rd1019, %rd1028;
	not.b64 	%rd1030, %rd1009;
	or.b64  	%rd1031, %rd1016, %rd997;
	xor.b64  	%rd1032, %rd1031, %rd1010;
	and.b64  	%rd1033, %rd1003, %rd997;
	xor.b64  	%rd1034, %rd1016, %rd1033;
	or.b64  	%rd1035, %rd1003, %rd1030;
	xor.b64  	%rd1036, %rd1035, %rd997;
	or.b64  	%rd1037, %rd1010, %rd1009;
	xor.b64  	%rd1038, %rd1037, %rd1003;
	and.b64  	%rd1039, %rd1016, %rd1010;
	xor.b64  	%rd1040, %rd1039, %rd1009;
	not.b64 	%rd1041, %rd1018;
	or.b64  	%rd1042, %rd1012, %rd1006;
	xor.b64  	%rd1043, %rd1042, %rd1000;
	and.b64  	%rd1044, %rd1018, %rd1012;
	xor.b64  	%rd1045, %rd1044, %rd1006;
	and.b64  	%rd1046, %rd999, %rd1041;
	xor.b64  	%rd1047, %rd1046, %rd1012;
	or.b64  	%rd1048, %rd1000, %rd999;
	xor.b64  	%rd1049, %rd1048, %rd1041;
	and.b64  	%rd1050, %rd1006, %rd1000;
	xor.b64  	%rd1051, %rd1050, %rd999;
	not.b64 	%rd1052, %rd1008;
	and.b64  	%rd1053, %rd1002, %rd996;
	xor.b64  	%rd1054, %rd1015, %rd1053;
	or.b64  	%rd1055, %rd1008, %rd1002;
	xor.b64  	%rd1056, %rd1055, %rd996;
	or.b64  	%rd1057, %rd1014, %rd1052;
	xor.b64  	%rd1058, %rd1057, %rd1002;
	and.b64  	%rd1059, %rd1015, %rd1014;
	xor.b64  	%rd1060, %rd1059, %rd1052;
	or.b64  	%rd1061, %rd1015, %rd996;
	xor.b64  	%rd1062, %rd1061, %rd1014;
	not.b64 	%rd1063, %rd1011;
	and.b64  	%rd1064, %rd1017, %rd1063;
	xor.b64  	%rd1065, %rd1064, %rd1005;
	or.b64  	%rd1066, %rd1017, %rd998;
	xor.b64  	%rd1067, %rd1066, %rd1063;
	and.b64  	%rd1068, %rd1004, %rd998;
	xor.b64  	%rd1069, %rd1017, %rd1068;
	or.b64  	%rd1070, %rd1005, %rd1004;
	xor.b64  	%rd1071, %rd1070, %rd998;
	and.b64  	%rd1072, %rd1011, %rd1005;
	xor.b64  	%rd1073, %rd1072, %rd1004;
	xor.b64  	%rd1074, %rd971, %rd1021;
	xor.b64  	%rd1075, %rd1074, -9223372036854743031;
	xor.b64  	%rd1076, %rd1034, %rd1023;
	xor.b64  	%rd1077, %rd1045, %rd1056;
	xor.b64  	%rd1078, %rd1067, %rd1076;
	xor.b64  	%rd1079, %rd1078, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1033,%dummy}, %rd1079;
	}
	shf.l.wrap.b32 	%r1034, %r1033, %r1032, 1;
	shf.l.wrap.b32 	%r1035, %r1032, %r1033, 1;
	mov.b64 	%rd1080, {%r1035, %r1034};
	xor.b64  	%rd1081, %rd1029, %rd1040;
	xor.b64  	%rd1082, %rd1062, %rd1051;
	xor.b64  	%rd1083, %rd1082, %rd1073;
	xor.b64  	%rd1084, %rd1083, %rd1080;
	xor.b64  	%rd1085, %rd1084, %rd1081;
	xor.b64  	%rd1086, %rd1025, %rd1036;
	xor.b64  	%rd1087, %rd1047, %rd1058;
	xor.b64  	%rd1088, %rd1087, %rd1069;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1037,%dummy}, %rd1089;
	}
	shf.l.wrap.b32 	%r1038, %r1037, %r1036, 1;
	shf.l.wrap.b32 	%r1039, %r1036, %r1037, 1;
	mov.b64 	%rd1090, {%r1039, %r1038};
	xor.b64  	%rd1091, %rd1032, %rd1075;
	xor.b64  	%rd1092, %rd1054, %rd1043;
	xor.b64  	%rd1093, %rd1065, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	xor.b64  	%rd1095, %rd1094, %rd1090;
	xor.b64  	%rd1096, %rd1027, %rd1038;
	xor.b64  	%rd1097, %rd1049, %rd1060;
	xor.b64  	%rd1098, %rd1097, %rd1071;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd1099;
	}
	shf.l.wrap.b32 	%r1042, %r1041, %r1040, 1;
	shf.l.wrap.b32 	%r1043, %r1040, %r1041, 1;
	mov.b64 	%rd1100, {%r1043, %r1042};
	xor.b64  	%rd1101, %rd1079, %rd1100;
	xor.b64  	%rd1102, %rd1083, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd1102;
	}
	shf.l.wrap.b32 	%r1046, %r1045, %r1044, 1;
	shf.l.wrap.b32 	%r1047, %r1044, %r1045, 1;
	mov.b64 	%rd1103, {%r1047, %r1046};
	xor.b64  	%rd1104, %rd1089, %rd1103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1049,%dummy}, %rd1094;
	}
	shf.l.wrap.b32 	%r1050, %r1049, %r1048, 1;
	shf.l.wrap.b32 	%r1051, %r1048, %r1049, 1;
	mov.b64 	%rd1105, {%r1051, %r1050};
	xor.b64  	%rd1106, %rd1099, %rd1105;
	xor.b64  	%rd1107, %rd1085, %rd1075;
	xor.b64  	%rd1108, %rd1085, %rd1032;
	xor.b64  	%rd1109, %rd1085, %rd1043;
	xor.b64  	%rd1110, %rd1085, %rd1054;
	xor.b64  	%rd1111, %rd1085, %rd1065;
	xor.b64  	%rd1112, %rd1095, %rd1023;
	xor.b64  	%rd1113, %rd1095, %rd1034;
	xor.b64  	%rd1114, %rd1095, %rd1045;
	xor.b64  	%rd1115, %rd1095, %rd1056;
	xor.b64  	%rd1116, %rd1095, %rd1067;
	xor.b64  	%rd1117, %rd1101, %rd1025;
	xor.b64  	%rd1118, %rd1101, %rd1036;
	xor.b64  	%rd1119, %rd1101, %rd1047;
	xor.b64  	%rd1120, %rd1101, %rd1058;
	xor.b64  	%rd1121, %rd1101, %rd1069;
	xor.b64  	%rd1122, %rd1104, %rd1027;
	xor.b64  	%rd1123, %rd1104, %rd1038;
	xor.b64  	%rd1124, %rd1104, %rd1049;
	xor.b64  	%rd1125, %rd1104, %rd1060;
	xor.b64  	%rd1126, %rd1104, %rd1071;
	xor.b64  	%rd1127, %rd1106, %rd1029;
	xor.b64  	%rd1128, %rd1106, %rd1040;
	xor.b64  	%rd1129, %rd1106, %rd1051;
	xor.b64  	%rd1130, %rd1106, %rd1062;
	xor.b64  	%rd1131, %rd1106, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd1108;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 28;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 28;
	mov.b64 	%rd1132, {%r1055, %r1054};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd1109;
	}
	shf.l.wrap.b32 	%r1058, %r1057, %r1056, 3;
	shf.l.wrap.b32 	%r1059, %r1056, %r1057, 3;
	mov.b64 	%rd1133, {%r1059, %r1058};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd1110;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 23;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 23;
	mov.b64 	%rd1134, {%r1063, %r1062};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1065,%dummy}, %rd1111;
	}
	shf.l.wrap.b32 	%r1066, %r1065, %r1064, 18;
	shf.l.wrap.b32 	%r1067, %r1064, %r1065, 18;
	mov.b64 	%rd1135, {%r1067, %r1066};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1068}, %rd1112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd1112;
	}
	shf.l.wrap.b32 	%r1070, %r1069, %r1068, 1;
	shf.l.wrap.b32 	%r1071, %r1068, %r1069, 1;
	mov.b64 	%rd1136, {%r1071, %r1070};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1113;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 20;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 20;
	mov.b64 	%rd1137, {%r1075, %r1074};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd1114;
	}
	shf.l.wrap.b32 	%r1078, %r1077, %r1076, 10;
	shf.l.wrap.b32 	%r1079, %r1076, %r1077, 10;
	mov.b64 	%rd1138, {%r1079, %r1078};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1115;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 19;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 19;
	mov.b64 	%rd1139, {%r1083, %r1082};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1084}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1085,%dummy}, %rd1116;
	}
	shf.l.wrap.b32 	%r1086, %r1085, %r1084, 2;
	shf.l.wrap.b32 	%r1087, %r1084, %r1085, 2;
	mov.b64 	%rd1140, {%r1087, %r1086};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd1117;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 2;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 2;
	mov.b64 	%rd1141, {%r1091, %r1090};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1092}, %rd1118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd1118;
	}
	shf.l.wrap.b32 	%r1094, %r1093, %r1092, 6;
	shf.l.wrap.b32 	%r1095, %r1092, %r1093, 6;
	mov.b64 	%rd1142, {%r1095, %r1094};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1096,%dummy}, %rd1119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd1119;
	}
	shf.r.wrap.b32 	%r1098, %r1097, %r1096, 21;
	shf.r.wrap.b32 	%r1099, %r1096, %r1097, 21;
	mov.b64 	%rd1143, {%r1099, %r1098};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd1120;
	}
	shf.l.wrap.b32 	%r1102, %r1101, %r1100, 15;
	shf.l.wrap.b32 	%r1103, %r1100, %r1101, 15;
	mov.b64 	%rd1144, {%r1103, %r1102};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1104,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1105}, %rd1121;
	}
	shf.r.wrap.b32 	%r1106, %r1105, %r1104, 3;
	shf.r.wrap.b32 	%r1107, %r1104, %r1105, 3;
	mov.b64 	%rd1145, {%r1107, %r1106};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1108}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd1122;
	}
	shf.l.wrap.b32 	%r1110, %r1109, %r1108, 28;
	shf.l.wrap.b32 	%r1111, %r1108, %r1109, 28;
	mov.b64 	%rd1146, {%r1111, %r1110};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd1123;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 9;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 9;
	mov.b64 	%rd1147, {%r1115, %r1114};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1116}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1124;
	}
	shf.l.wrap.b32 	%r1118, %r1117, %r1116, 25;
	shf.l.wrap.b32 	%r1119, %r1116, %r1117, 25;
	mov.b64 	%rd1148, {%r1119, %r1118};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1120}, %rd1125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd1125;
	}
	shf.l.wrap.b32 	%r1122, %r1121, %r1120, 21;
	shf.l.wrap.b32 	%r1123, %r1120, %r1121, 21;
	mov.b64 	%rd1149, {%r1123, %r1122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1124,%dummy}, %rd1126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1125}, %rd1126;
	}
	shf.r.wrap.b32 	%r1126, %r1125, %r1124, 8;
	shf.r.wrap.b32 	%r1127, %r1124, %r1125, 8;
	mov.b64 	%rd1150, {%r1127, %r1126};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1128}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1127;
	}
	shf.l.wrap.b32 	%r1130, %r1129, %r1128, 27;
	shf.l.wrap.b32 	%r1131, %r1128, %r1129, 27;
	mov.b64 	%rd1151, {%r1131, %r1130};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1132}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1128;
	}
	shf.l.wrap.b32 	%r1134, %r1133, %r1132, 20;
	shf.l.wrap.b32 	%r1135, %r1132, %r1133, 20;
	mov.b64 	%rd1152, {%r1135, %r1134};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1129;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 25;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 25;
	mov.b64 	%rd1153, {%r1139, %r1138};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1130;
	}
	shf.l.wrap.b32 	%r1142, %r1141, %r1140, 8;
	shf.l.wrap.b32 	%r1143, %r1140, %r1141, 8;
	mov.b64 	%rd1154, {%r1143, %r1142};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd1131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1145,%dummy}, %rd1131;
	}
	shf.l.wrap.b32 	%r1146, %r1145, %r1144, 14;
	shf.l.wrap.b32 	%r1147, %r1144, %r1145, 14;
	mov.b64 	%rd1155, {%r1147, %r1146};
	not.b64 	%rd1156, %rd1143;
	or.b64  	%rd1157, %rd1143, %rd1137;
	or.b64  	%rd1158, %rd1149, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1137;
	and.b64  	%rd1160, %rd1155, %rd1149;
	xor.b64  	%rd1161, %rd1160, %rd1143;
	or.b64  	%rd1162, %rd1155, %rd1107;
	xor.b64  	%rd1163, %rd1162, %rd1149;
	and.b64  	%rd1164, %rd1137, %rd1107;
	xor.b64  	%rd1165, %rd1155, %rd1164;
	not.b64 	%rd1166, %rd1145;
	or.b64  	%rd1167, %rd1152, %rd1133;
	xor.b64  	%rd1168, %rd1167, %rd1146;
	and.b64  	%rd1169, %rd1139, %rd1133;
	xor.b64  	%rd1170, %rd1152, %rd1169;
	or.b64  	%rd1171, %rd1139, %rd1166;
	xor.b64  	%rd1172, %rd1171, %rd1133;
	or.b64  	%rd1173, %rd1146, %rd1145;
	xor.b64  	%rd1174, %rd1173, %rd1139;
	and.b64  	%rd1175, %rd1152, %rd1146;
	xor.b64  	%rd1176, %rd1175, %rd1145;
	not.b64 	%rd1177, %rd1154;
	or.b64  	%rd1178, %rd1148, %rd1142;
	xor.b64  	%rd1179, %rd1178, %rd1136;
	and.b64  	%rd1180, %rd1154, %rd1148;
	xor.b64  	%rd1181, %rd1180, %rd1142;
	and.b64  	%rd1182, %rd1135, %rd1177;
	xor.b64  	%rd1183, %rd1182, %rd1148;
	or.b64  	%rd1184, %rd1136, %rd1135;
	xor.b64  	%rd1185, %rd1184, %rd1177;
	and.b64  	%rd1186, %rd1142, %rd1136;
	xor.b64  	%rd1187, %rd1186, %rd1135;
	not.b64 	%rd1188, %rd1144;
	and.b64  	%rd1189, %rd1138, %rd1132;
	xor.b64  	%rd1190, %rd1151, %rd1189;
	or.b64  	%rd1191, %rd1144, %rd1138;
	xor.b64  	%rd1192, %rd1191, %rd1132;
	or.b64  	%rd1193, %rd1150, %rd1188;
	xor.b64  	%rd1194, %rd1193, %rd1138;
	and.b64  	%rd1195, %rd1151, %rd1150;
	xor.b64  	%rd1196, %rd1195, %rd1188;
	or.b64  	%rd1197, %rd1151, %rd1132;
	xor.b64  	%rd1198, %rd1197, %rd1150;
	not.b64 	%rd1199, %rd1147;
	and.b64  	%rd1200, %rd1153, %rd1199;
	xor.b64  	%rd1201, %rd1200, %rd1141;
	or.b64  	%rd1202, %rd1153, %rd1134;
	xor.b64  	%rd1203, %rd1202, %rd1199;
	and.b64  	%rd1204, %rd1140, %rd1134;
	xor.b64  	%rd1205, %rd1153, %rd1204;
	or.b64  	%rd1206, %rd1141, %rd1140;
	xor.b64  	%rd1207, %rd1206, %rd1134;
	and.b64  	%rd1208, %rd1147, %rd1141;
	xor.b64  	%rd1209, %rd1208, %rd1140;
	xor.b64  	%rd1210, %rd1107, %rd1157;
	xor.b64  	%rd1211, %rd1210, 138;
	xor.b64  	%rd1212, %rd1170, %rd1159;
	xor.b64  	%rd1213, %rd1181, %rd1192;
	xor.b64  	%rd1214, %rd1203, %rd1212;
	xor.b64  	%rd1215, %rd1214, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1148}, %rd1215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1215;
	}
	shf.l.wrap.b32 	%r1150, %r1149, %r1148, 1;
	shf.l.wrap.b32 	%r1151, %r1148, %r1149, 1;
	mov.b64 	%rd1216, {%r1151, %r1150};
	xor.b64  	%rd1217, %rd1165, %rd1176;
	xor.b64  	%rd1218, %rd1198, %rd1187;
	xor.b64  	%rd1219, %rd1218, %rd1209;
	xor.b64  	%rd1220, %rd1219, %rd1216;
	xor.b64  	%rd1221, %rd1220, %rd1217;
	xor.b64  	%rd1222, %rd1161, %rd1172;
	xor.b64  	%rd1223, %rd1183, %rd1194;
	xor.b64  	%rd1224, %rd1223, %rd1205;
	xor.b64  	%rd1225, %rd1224, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1152}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1225;
	}
	shf.l.wrap.b32 	%r1154, %r1153, %r1152, 1;
	shf.l.wrap.b32 	%r1155, %r1152, %r1153, 1;
	mov.b64 	%rd1226, {%r1155, %r1154};
	xor.b64  	%rd1227, %rd1168, %rd1211;
	xor.b64  	%rd1228, %rd1190, %rd1179;
	xor.b64  	%rd1229, %rd1201, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	xor.b64  	%rd1231, %rd1230, %rd1226;
	xor.b64  	%rd1232, %rd1163, %rd1174;
	xor.b64  	%rd1233, %rd1185, %rd1196;
	xor.b64  	%rd1234, %rd1233, %rd1207;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1156}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1235;
	}
	shf.l.wrap.b32 	%r1158, %r1157, %r1156, 1;
	shf.l.wrap.b32 	%r1159, %r1156, %r1157, 1;
	mov.b64 	%rd1236, {%r1159, %r1158};
	xor.b64  	%rd1237, %rd1215, %rd1236;
	xor.b64  	%rd1238, %rd1219, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1160}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1161,%dummy}, %rd1238;
	}
	shf.l.wrap.b32 	%r1162, %r1161, %r1160, 1;
	shf.l.wrap.b32 	%r1163, %r1160, %r1161, 1;
	mov.b64 	%rd1239, {%r1163, %r1162};
	xor.b64  	%rd1240, %rd1225, %rd1239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1230;
	}
	shf.l.wrap.b32 	%r1166, %r1165, %r1164, 1;
	shf.l.wrap.b32 	%r1167, %r1164, %r1165, 1;
	mov.b64 	%rd1241, {%r1167, %r1166};
	xor.b64  	%rd1242, %rd1235, %rd1241;
	xor.b64  	%rd1243, %rd1221, %rd1211;
	xor.b64  	%rd1244, %rd1221, %rd1168;
	xor.b64  	%rd1245, %rd1221, %rd1179;
	xor.b64  	%rd1246, %rd1221, %rd1190;
	xor.b64  	%rd1247, %rd1221, %rd1201;
	xor.b64  	%rd1248, %rd1231, %rd1159;
	xor.b64  	%rd1249, %rd1231, %rd1170;
	xor.b64  	%rd1250, %rd1231, %rd1181;
	xor.b64  	%rd1251, %rd1231, %rd1192;
	xor.b64  	%rd1252, %rd1231, %rd1203;
	xor.b64  	%rd1253, %rd1237, %rd1161;
	xor.b64  	%rd1254, %rd1237, %rd1172;
	xor.b64  	%rd1255, %rd1237, %rd1183;
	xor.b64  	%rd1256, %rd1237, %rd1194;
	xor.b64  	%rd1257, %rd1237, %rd1205;
	xor.b64  	%rd1258, %rd1240, %rd1163;
	xor.b64  	%rd1259, %rd1240, %rd1174;
	xor.b64  	%rd1260, %rd1240, %rd1185;
	xor.b64  	%rd1261, %rd1240, %rd1196;
	xor.b64  	%rd1262, %rd1240, %rd1207;
	xor.b64  	%rd1263, %rd1242, %rd1165;
	xor.b64  	%rd1264, %rd1242, %rd1176;
	xor.b64  	%rd1265, %rd1242, %rd1187;
	xor.b64  	%rd1266, %rd1242, %rd1198;
	xor.b64  	%rd1267, %rd1242, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1244;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 28;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 28;
	mov.b64 	%rd1268, {%r1171, %r1170};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1172}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1245;
	}
	shf.l.wrap.b32 	%r1174, %r1173, %r1172, 3;
	shf.l.wrap.b32 	%r1175, %r1172, %r1173, 3;
	mov.b64 	%rd1269, {%r1175, %r1174};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1246;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 23;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 23;
	mov.b64 	%rd1270, {%r1179, %r1178};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1180}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1247;
	}
	shf.l.wrap.b32 	%r1182, %r1181, %r1180, 18;
	shf.l.wrap.b32 	%r1183, %r1180, %r1181, 18;
	mov.b64 	%rd1271, {%r1183, %r1182};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd1248;
	}
	shf.l.wrap.b32 	%r1186, %r1185, %r1184, 1;
	shf.l.wrap.b32 	%r1187, %r1184, %r1185, 1;
	mov.b64 	%rd1272, {%r1187, %r1186};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1249;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 20;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 20;
	mov.b64 	%rd1273, {%r1191, %r1190};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd1250;
	}
	shf.l.wrap.b32 	%r1194, %r1193, %r1192, 10;
	shf.l.wrap.b32 	%r1195, %r1192, %r1193, 10;
	mov.b64 	%rd1274, {%r1195, %r1194};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1251;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 19;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 19;
	mov.b64 	%rd1275, {%r1199, %r1198};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd1252;
	}
	shf.l.wrap.b32 	%r1202, %r1201, %r1200, 2;
	shf.l.wrap.b32 	%r1203, %r1200, %r1201, 2;
	mov.b64 	%rd1276, {%r1203, %r1202};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd1253;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 2;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 2;
	mov.b64 	%rd1277, {%r1207, %r1206};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd1254;
	}
	shf.l.wrap.b32 	%r1210, %r1209, %r1208, 6;
	shf.l.wrap.b32 	%r1211, %r1208, %r1209, 6;
	mov.b64 	%rd1278, {%r1211, %r1210};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1212,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd1255;
	}
	shf.r.wrap.b32 	%r1214, %r1213, %r1212, 21;
	shf.r.wrap.b32 	%r1215, %r1212, %r1213, 21;
	mov.b64 	%rd1279, {%r1215, %r1214};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd1256;
	}
	shf.l.wrap.b32 	%r1218, %r1217, %r1216, 15;
	shf.l.wrap.b32 	%r1219, %r1216, %r1217, 15;
	mov.b64 	%rd1280, {%r1219, %r1218};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1220,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1221}, %rd1257;
	}
	shf.r.wrap.b32 	%r1222, %r1221, %r1220, 3;
	shf.r.wrap.b32 	%r1223, %r1220, %r1221, 3;
	mov.b64 	%rd1281, {%r1223, %r1222};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd1258;
	}
	shf.l.wrap.b32 	%r1226, %r1225, %r1224, 28;
	shf.l.wrap.b32 	%r1227, %r1224, %r1225, 28;
	mov.b64 	%rd1282, {%r1227, %r1226};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd1259;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 9;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 9;
	mov.b64 	%rd1283, {%r1231, %r1230};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1260;
	}
	shf.l.wrap.b32 	%r1234, %r1233, %r1232, 25;
	shf.l.wrap.b32 	%r1235, %r1232, %r1233, 25;
	mov.b64 	%rd1284, {%r1235, %r1234};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1236}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1261;
	}
	shf.l.wrap.b32 	%r1238, %r1237, %r1236, 21;
	shf.l.wrap.b32 	%r1239, %r1236, %r1237, 21;
	mov.b64 	%rd1285, {%r1239, %r1238};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd1262;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 8;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 8;
	mov.b64 	%rd1286, {%r1243, %r1242};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1263;
	}
	shf.l.wrap.b32 	%r1246, %r1245, %r1244, 27;
	shf.l.wrap.b32 	%r1247, %r1244, %r1245, 27;
	mov.b64 	%rd1287, {%r1247, %r1246};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd1264;
	}
	shf.l.wrap.b32 	%r1250, %r1249, %r1248, 20;
	shf.l.wrap.b32 	%r1251, %r1248, %r1249, 20;
	mov.b64 	%rd1288, {%r1251, %r1250};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd1265;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 25;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 25;
	mov.b64 	%rd1289, {%r1255, %r1254};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd1266;
	}
	shf.l.wrap.b32 	%r1258, %r1257, %r1256, 8;
	shf.l.wrap.b32 	%r1259, %r1256, %r1257, 8;
	mov.b64 	%rd1290, {%r1259, %r1258};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1260}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1267;
	}
	shf.l.wrap.b32 	%r1262, %r1261, %r1260, 14;
	shf.l.wrap.b32 	%r1263, %r1260, %r1261, 14;
	mov.b64 	%rd1291, {%r1263, %r1262};
	not.b64 	%rd1292, %rd1279;
	or.b64  	%rd1293, %rd1279, %rd1273;
	or.b64  	%rd1294, %rd1285, %rd1292;
	xor.b64  	%rd1295, %rd1294, %rd1273;
	and.b64  	%rd1296, %rd1291, %rd1285;
	xor.b64  	%rd1297, %rd1296, %rd1279;
	or.b64  	%rd1298, %rd1291, %rd1243;
	xor.b64  	%rd1299, %rd1298, %rd1285;
	and.b64  	%rd1300, %rd1273, %rd1243;
	xor.b64  	%rd1301, %rd1291, %rd1300;
	not.b64 	%rd1302, %rd1281;
	or.b64  	%rd1303, %rd1288, %rd1269;
	xor.b64  	%rd1304, %rd1303, %rd1282;
	and.b64  	%rd1305, %rd1275, %rd1269;
	xor.b64  	%rd1306, %rd1288, %rd1305;
	or.b64  	%rd1307, %rd1275, %rd1302;
	xor.b64  	%rd1308, %rd1307, %rd1269;
	or.b64  	%rd1309, %rd1282, %rd1281;
	xor.b64  	%rd1310, %rd1309, %rd1275;
	and.b64  	%rd1311, %rd1288, %rd1282;
	xor.b64  	%rd1312, %rd1311, %rd1281;
	not.b64 	%rd1313, %rd1290;
	or.b64  	%rd1314, %rd1284, %rd1278;
	xor.b64  	%rd1315, %rd1314, %rd1272;
	and.b64  	%rd1316, %rd1290, %rd1284;
	xor.b64  	%rd1317, %rd1316, %rd1278;
	and.b64  	%rd1318, %rd1271, %rd1313;
	xor.b64  	%rd1319, %rd1318, %rd1284;
	or.b64  	%rd1320, %rd1272, %rd1271;
	xor.b64  	%rd1321, %rd1320, %rd1313;
	and.b64  	%rd1322, %rd1278, %rd1272;
	xor.b64  	%rd1323, %rd1322, %rd1271;
	not.b64 	%rd1324, %rd1280;
	and.b64  	%rd1325, %rd1274, %rd1268;
	xor.b64  	%rd1326, %rd1287, %rd1325;
	or.b64  	%rd1327, %rd1280, %rd1274;
	xor.b64  	%rd1328, %rd1327, %rd1268;
	or.b64  	%rd1329, %rd1286, %rd1324;
	xor.b64  	%rd1330, %rd1329, %rd1274;
	and.b64  	%rd1331, %rd1287, %rd1286;
	xor.b64  	%rd1332, %rd1331, %rd1324;
	or.b64  	%rd1333, %rd1287, %rd1268;
	xor.b64  	%rd1334, %rd1333, %rd1286;
	not.b64 	%rd1335, %rd1283;
	and.b64  	%rd1336, %rd1289, %rd1335;
	xor.b64  	%rd1337, %rd1336, %rd1277;
	or.b64  	%rd1338, %rd1289, %rd1270;
	xor.b64  	%rd1339, %rd1338, %rd1335;
	and.b64  	%rd1340, %rd1276, %rd1270;
	xor.b64  	%rd1341, %rd1289, %rd1340;
	or.b64  	%rd1342, %rd1277, %rd1276;
	xor.b64  	%rd1343, %rd1342, %rd1270;
	and.b64  	%rd1344, %rd1283, %rd1277;
	xor.b64  	%rd1345, %rd1344, %rd1276;
	xor.b64  	%rd1346, %rd1243, %rd1293;
	xor.b64  	%rd1347, %rd1346, 136;
	xor.b64  	%rd1348, %rd1306, %rd1295;
	xor.b64  	%rd1349, %rd1317, %rd1328;
	xor.b64  	%rd1350, %rd1339, %rd1348;
	xor.b64  	%rd1351, %rd1350, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd1351;
	}
	shf.l.wrap.b32 	%r1266, %r1265, %r1264, 1;
	shf.l.wrap.b32 	%r1267, %r1264, %r1265, 1;
	mov.b64 	%rd1352, {%r1267, %r1266};
	xor.b64  	%rd1353, %rd1301, %rd1312;
	xor.b64  	%rd1354, %rd1334, %rd1323;
	xor.b64  	%rd1355, %rd1354, %rd1345;
	xor.b64  	%rd1356, %rd1355, %rd1352;
	xor.b64  	%rd1357, %rd1356, %rd1353;
	xor.b64  	%rd1358, %rd1297, %rd1308;
	xor.b64  	%rd1359, %rd1319, %rd1330;
	xor.b64  	%rd1360, %rd1359, %rd1341;
	xor.b64  	%rd1361, %rd1360, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1268}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1361;
	}
	shf.l.wrap.b32 	%r1270, %r1269, %r1268, 1;
	shf.l.wrap.b32 	%r1271, %r1268, %r1269, 1;
	mov.b64 	%rd1362, {%r1271, %r1270};
	xor.b64  	%rd1363, %rd1304, %rd1347;
	xor.b64  	%rd1364, %rd1326, %rd1315;
	xor.b64  	%rd1365, %rd1337, %rd1364;
	xor.b64  	%rd1366, %rd1365, %rd1363;
	xor.b64  	%rd1367, %rd1366, %rd1362;
	xor.b64  	%rd1368, %rd1299, %rd1310;
	xor.b64  	%rd1369, %rd1321, %rd1332;
	xor.b64  	%rd1370, %rd1369, %rd1343;
	xor.b64  	%rd1371, %rd1370, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd1371;
	}
	shf.l.wrap.b32 	%r1274, %r1273, %r1272, 1;
	shf.l.wrap.b32 	%r1275, %r1272, %r1273, 1;
	mov.b64 	%rd1372, {%r1275, %r1274};
	xor.b64  	%rd1373, %rd1351, %rd1372;
	xor.b64  	%rd1374, %rd1355, %rd1353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1276}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1374;
	}
	shf.l.wrap.b32 	%r1278, %r1277, %r1276, 1;
	shf.l.wrap.b32 	%r1279, %r1276, %r1277, 1;
	mov.b64 	%rd1375, {%r1279, %r1278};
	xor.b64  	%rd1376, %rd1361, %rd1375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd1366;
	}
	shf.l.wrap.b32 	%r1282, %r1281, %r1280, 1;
	shf.l.wrap.b32 	%r1283, %r1280, %r1281, 1;
	mov.b64 	%rd1377, {%r1283, %r1282};
	xor.b64  	%rd1378, %rd1371, %rd1377;
	xor.b64  	%rd1379, %rd1357, %rd1347;
	xor.b64  	%rd1380, %rd1357, %rd1304;
	xor.b64  	%rd1381, %rd1357, %rd1315;
	xor.b64  	%rd1382, %rd1357, %rd1326;
	xor.b64  	%rd1383, %rd1357, %rd1337;
	xor.b64  	%rd1384, %rd1367, %rd1295;
	xor.b64  	%rd1385, %rd1367, %rd1306;
	xor.b64  	%rd1386, %rd1367, %rd1317;
	xor.b64  	%rd1387, %rd1367, %rd1328;
	xor.b64  	%rd1388, %rd1367, %rd1339;
	xor.b64  	%rd1389, %rd1373, %rd1297;
	xor.b64  	%rd1390, %rd1373, %rd1308;
	xor.b64  	%rd1391, %rd1373, %rd1319;
	xor.b64  	%rd1392, %rd1373, %rd1330;
	xor.b64  	%rd1393, %rd1373, %rd1341;
	xor.b64  	%rd1394, %rd1376, %rd1299;
	xor.b64  	%rd1395, %rd1376, %rd1310;
	xor.b64  	%rd1396, %rd1376, %rd1321;
	xor.b64  	%rd1397, %rd1376, %rd1332;
	xor.b64  	%rd1398, %rd1376, %rd1343;
	xor.b64  	%rd1399, %rd1378, %rd1301;
	xor.b64  	%rd1400, %rd1378, %rd1312;
	xor.b64  	%rd1401, %rd1378, %rd1323;
	xor.b64  	%rd1402, %rd1378, %rd1334;
	xor.b64  	%rd1403, %rd1378, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1284,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1285}, %rd1380;
	}
	shf.r.wrap.b32 	%r1286, %r1285, %r1284, 28;
	shf.r.wrap.b32 	%r1287, %r1284, %r1285, 28;
	mov.b64 	%rd1404, {%r1287, %r1286};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd1381;
	}
	shf.l.wrap.b32 	%r1290, %r1289, %r1288, 3;
	shf.l.wrap.b32 	%r1291, %r1288, %r1289, 3;
	mov.b64 	%rd1405, {%r1291, %r1290};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd1382;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 23;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 23;
	mov.b64 	%rd1406, {%r1295, %r1294};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd1383;
	}
	shf.l.wrap.b32 	%r1298, %r1297, %r1296, 18;
	shf.l.wrap.b32 	%r1299, %r1296, %r1297, 18;
	mov.b64 	%rd1407, {%r1299, %r1298};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1300}, %rd1384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1384;
	}
	shf.l.wrap.b32 	%r1302, %r1301, %r1300, 1;
	shf.l.wrap.b32 	%r1303, %r1300, %r1301, 1;
	mov.b64 	%rd1408, {%r1303, %r1302};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd1385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd1385;
	}
	shf.r.wrap.b32 	%r1306, %r1305, %r1304, 20;
	shf.r.wrap.b32 	%r1307, %r1304, %r1305, 20;
	mov.b64 	%rd1409, {%r1307, %r1306};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1308}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd1386;
	}
	shf.l.wrap.b32 	%r1310, %r1309, %r1308, 10;
	shf.l.wrap.b32 	%r1311, %r1308, %r1309, 10;
	mov.b64 	%rd1410, {%r1311, %r1310};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1387;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 19;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 19;
	mov.b64 	%rd1411, {%r1315, %r1314};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1316}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd1388;
	}
	shf.l.wrap.b32 	%r1318, %r1317, %r1316, 2;
	shf.l.wrap.b32 	%r1319, %r1316, %r1317, 2;
	mov.b64 	%rd1412, {%r1319, %r1318};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1320,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd1389;
	}
	shf.r.wrap.b32 	%r1322, %r1321, %r1320, 2;
	shf.r.wrap.b32 	%r1323, %r1320, %r1321, 2;
	mov.b64 	%rd1413, {%r1323, %r1322};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1324}, %rd1390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd1390;
	}
	shf.l.wrap.b32 	%r1326, %r1325, %r1324, 6;
	shf.l.wrap.b32 	%r1327, %r1324, %r1325, 6;
	mov.b64 	%rd1414, {%r1327, %r1326};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1329}, %rd1391;
	}
	shf.r.wrap.b32 	%r1330, %r1329, %r1328, 21;
	shf.r.wrap.b32 	%r1331, %r1328, %r1329, 21;
	mov.b64 	%rd1415, {%r1331, %r1330};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1332}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd1392;
	}
	shf.l.wrap.b32 	%r1334, %r1333, %r1332, 15;
	shf.l.wrap.b32 	%r1335, %r1332, %r1333, 15;
	mov.b64 	%rd1416, {%r1335, %r1334};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd1393;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 3;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 3;
	mov.b64 	%rd1417, {%r1339, %r1338};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1340}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd1394;
	}
	shf.l.wrap.b32 	%r1342, %r1341, %r1340, 28;
	shf.l.wrap.b32 	%r1343, %r1340, %r1341, 28;
	mov.b64 	%rd1418, {%r1343, %r1342};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd1395;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 9;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 9;
	mov.b64 	%rd1419, {%r1347, %r1346};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1348}, %rd1396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd1396;
	}
	shf.l.wrap.b32 	%r1350, %r1349, %r1348, 25;
	shf.l.wrap.b32 	%r1351, %r1348, %r1349, 25;
	mov.b64 	%rd1420, {%r1351, %r1350};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd1397;
	}
	shf.l.wrap.b32 	%r1354, %r1353, %r1352, 21;
	shf.l.wrap.b32 	%r1355, %r1352, %r1353, 21;
	mov.b64 	%rd1421, {%r1355, %r1354};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1356,%dummy}, %rd1398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd1398;
	}
	shf.r.wrap.b32 	%r1358, %r1357, %r1356, 8;
	shf.r.wrap.b32 	%r1359, %r1356, %r1357, 8;
	mov.b64 	%rd1422, {%r1359, %r1358};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1361,%dummy}, %rd1399;
	}
	shf.l.wrap.b32 	%r1362, %r1361, %r1360, 27;
	shf.l.wrap.b32 	%r1363, %r1360, %r1361, 27;
	mov.b64 	%rd1423, {%r1363, %r1362};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd1400;
	}
	shf.l.wrap.b32 	%r1366, %r1365, %r1364, 20;
	shf.l.wrap.b32 	%r1367, %r1364, %r1365, 20;
	mov.b64 	%rd1424, {%r1367, %r1366};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1368,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd1401;
	}
	shf.r.wrap.b32 	%r1370, %r1369, %r1368, 25;
	shf.r.wrap.b32 	%r1371, %r1368, %r1369, 25;
	mov.b64 	%rd1425, {%r1371, %r1370};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1372}, %rd1402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1373,%dummy}, %rd1402;
	}
	shf.l.wrap.b32 	%r1374, %r1373, %r1372, 8;
	shf.l.wrap.b32 	%r1375, %r1372, %r1373, 8;
	mov.b64 	%rd1426, {%r1375, %r1374};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd1403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd1403;
	}
	shf.l.wrap.b32 	%r1378, %r1377, %r1376, 14;
	shf.l.wrap.b32 	%r1379, %r1376, %r1377, 14;
	mov.b64 	%rd1427, {%r1379, %r1378};
	not.b64 	%rd1428, %rd1415;
	or.b64  	%rd1429, %rd1415, %rd1409;
	or.b64  	%rd1430, %rd1421, %rd1428;
	xor.b64  	%rd1431, %rd1430, %rd1409;
	and.b64  	%rd1432, %rd1427, %rd1421;
	xor.b64  	%rd1433, %rd1432, %rd1415;
	or.b64  	%rd1434, %rd1427, %rd1379;
	xor.b64  	%rd1435, %rd1434, %rd1421;
	and.b64  	%rd1436, %rd1409, %rd1379;
	xor.b64  	%rd1437, %rd1427, %rd1436;
	not.b64 	%rd1438, %rd1417;
	or.b64  	%rd1439, %rd1424, %rd1405;
	xor.b64  	%rd1440, %rd1439, %rd1418;
	and.b64  	%rd1441, %rd1411, %rd1405;
	xor.b64  	%rd1442, %rd1424, %rd1441;
	or.b64  	%rd1443, %rd1411, %rd1438;
	xor.b64  	%rd1444, %rd1443, %rd1405;
	or.b64  	%rd1445, %rd1418, %rd1417;
	xor.b64  	%rd1446, %rd1445, %rd1411;
	and.b64  	%rd1447, %rd1424, %rd1418;
	xor.b64  	%rd1448, %rd1447, %rd1417;
	not.b64 	%rd1449, %rd1426;
	or.b64  	%rd1450, %rd1420, %rd1414;
	xor.b64  	%rd1451, %rd1450, %rd1408;
	and.b64  	%rd1452, %rd1426, %rd1420;
	xor.b64  	%rd1453, %rd1452, %rd1414;
	and.b64  	%rd1454, %rd1407, %rd1449;
	xor.b64  	%rd1455, %rd1454, %rd1420;
	or.b64  	%rd1456, %rd1408, %rd1407;
	xor.b64  	%rd1457, %rd1456, %rd1449;
	and.b64  	%rd1458, %rd1414, %rd1408;
	xor.b64  	%rd1459, %rd1458, %rd1407;
	not.b64 	%rd1460, %rd1416;
	and.b64  	%rd1461, %rd1410, %rd1404;
	xor.b64  	%rd1462, %rd1423, %rd1461;
	or.b64  	%rd1463, %rd1416, %rd1410;
	xor.b64  	%rd1464, %rd1463, %rd1404;
	or.b64  	%rd1465, %rd1422, %rd1460;
	xor.b64  	%rd1466, %rd1465, %rd1410;
	and.b64  	%rd1467, %rd1423, %rd1422;
	xor.b64  	%rd1468, %rd1467, %rd1460;
	or.b64  	%rd1469, %rd1423, %rd1404;
	xor.b64  	%rd1470, %rd1469, %rd1422;
	not.b64 	%rd1471, %rd1419;
	and.b64  	%rd1472, %rd1425, %rd1471;
	xor.b64  	%rd1473, %rd1472, %rd1413;
	or.b64  	%rd1474, %rd1425, %rd1406;
	xor.b64  	%rd1475, %rd1474, %rd1471;
	and.b64  	%rd1476, %rd1412, %rd1406;
	xor.b64  	%rd1477, %rd1425, %rd1476;
	or.b64  	%rd1478, %rd1413, %rd1412;
	xor.b64  	%rd1479, %rd1478, %rd1406;
	and.b64  	%rd1480, %rd1419, %rd1413;
	xor.b64  	%rd1481, %rd1480, %rd1412;
	xor.b64  	%rd1482, %rd1379, %rd1429;
	xor.b64  	%rd1483, %rd1482, 2147516425;
	xor.b64  	%rd1484, %rd1442, %rd1431;
	xor.b64  	%rd1485, %rd1453, %rd1464;
	xor.b64  	%rd1486, %rd1475, %rd1484;
	xor.b64  	%rd1487, %rd1486, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1380}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd1487;
	}
	shf.l.wrap.b32 	%r1382, %r1381, %r1380, 1;
	shf.l.wrap.b32 	%r1383, %r1380, %r1381, 1;
	mov.b64 	%rd1488, {%r1383, %r1382};
	xor.b64  	%rd1489, %rd1437, %rd1448;
	xor.b64  	%rd1490, %rd1470, %rd1459;
	xor.b64  	%rd1491, %rd1490, %rd1481;
	xor.b64  	%rd1492, %rd1491, %rd1488;
	xor.b64  	%rd1493, %rd1492, %rd1489;
	xor.b64  	%rd1494, %rd1433, %rd1444;
	xor.b64  	%rd1495, %rd1455, %rd1466;
	xor.b64  	%rd1496, %rd1495, %rd1477;
	xor.b64  	%rd1497, %rd1496, %rd1494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1385,%dummy}, %rd1497;
	}
	shf.l.wrap.b32 	%r1386, %r1385, %r1384, 1;
	shf.l.wrap.b32 	%r1387, %r1384, %r1385, 1;
	mov.b64 	%rd1498, {%r1387, %r1386};
	xor.b64  	%rd1499, %rd1440, %rd1483;
	xor.b64  	%rd1500, %rd1462, %rd1451;
	xor.b64  	%rd1501, %rd1473, %rd1500;
	xor.b64  	%rd1502, %rd1501, %rd1499;
	xor.b64  	%rd1503, %rd1502, %rd1498;
	xor.b64  	%rd1504, %rd1435, %rd1446;
	xor.b64  	%rd1505, %rd1457, %rd1468;
	xor.b64  	%rd1506, %rd1505, %rd1479;
	xor.b64  	%rd1507, %rd1506, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1388}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1389,%dummy}, %rd1507;
	}
	shf.l.wrap.b32 	%r1390, %r1389, %r1388, 1;
	shf.l.wrap.b32 	%r1391, %r1388, %r1389, 1;
	mov.b64 	%rd1508, {%r1391, %r1390};
	xor.b64  	%rd1509, %rd1487, %rd1508;
	xor.b64  	%rd1510, %rd1491, %rd1489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd1510;
	}
	shf.l.wrap.b32 	%r1394, %r1393, %r1392, 1;
	shf.l.wrap.b32 	%r1395, %r1392, %r1393, 1;
	mov.b64 	%rd1511, {%r1395, %r1394};
	xor.b64  	%rd1512, %rd1497, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1396}, %rd1502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd1502;
	}
	shf.l.wrap.b32 	%r1398, %r1397, %r1396, 1;
	shf.l.wrap.b32 	%r1399, %r1396, %r1397, 1;
	mov.b64 	%rd1513, {%r1399, %r1398};
	xor.b64  	%rd1514, %rd1507, %rd1513;
	xor.b64  	%rd1515, %rd1493, %rd1483;
	xor.b64  	%rd1516, %rd1493, %rd1440;
	xor.b64  	%rd1517, %rd1493, %rd1451;
	xor.b64  	%rd1518, %rd1493, %rd1462;
	xor.b64  	%rd1519, %rd1493, %rd1473;
	xor.b64  	%rd1520, %rd1503, %rd1431;
	xor.b64  	%rd1521, %rd1503, %rd1442;
	xor.b64  	%rd1522, %rd1503, %rd1453;
	xor.b64  	%rd1523, %rd1503, %rd1464;
	xor.b64  	%rd1524, %rd1503, %rd1475;
	xor.b64  	%rd1525, %rd1509, %rd1433;
	xor.b64  	%rd1526, %rd1509, %rd1444;
	xor.b64  	%rd1527, %rd1509, %rd1455;
	xor.b64  	%rd1528, %rd1509, %rd1466;
	xor.b64  	%rd1529, %rd1509, %rd1477;
	xor.b64  	%rd1530, %rd1512, %rd1435;
	xor.b64  	%rd1531, %rd1512, %rd1446;
	xor.b64  	%rd1532, %rd1512, %rd1457;
	xor.b64  	%rd1533, %rd1512, %rd1468;
	xor.b64  	%rd1534, %rd1512, %rd1479;
	xor.b64  	%rd1535, %rd1514, %rd1437;
	xor.b64  	%rd1536, %rd1514, %rd1448;
	xor.b64  	%rd1537, %rd1514, %rd1459;
	xor.b64  	%rd1538, %rd1514, %rd1470;
	xor.b64  	%rd1539, %rd1514, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1400,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1401}, %rd1516;
	}
	shf.r.wrap.b32 	%r1402, %r1401, %r1400, 28;
	shf.r.wrap.b32 	%r1403, %r1400, %r1401, 28;
	mov.b64 	%rd1540, {%r1403, %r1402};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1404}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd1517;
	}
	shf.l.wrap.b32 	%r1406, %r1405, %r1404, 3;
	shf.l.wrap.b32 	%r1407, %r1404, %r1405, 3;
	mov.b64 	%rd1541, {%r1407, %r1406};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1408,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1409}, %rd1518;
	}
	shf.r.wrap.b32 	%r1410, %r1409, %r1408, 23;
	shf.r.wrap.b32 	%r1411, %r1408, %r1409, 23;
	mov.b64 	%rd1542, {%r1411, %r1410};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1412}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd1519;
	}
	shf.l.wrap.b32 	%r1414, %r1413, %r1412, 18;
	shf.l.wrap.b32 	%r1415, %r1412, %r1413, 18;
	mov.b64 	%rd1543, {%r1415, %r1414};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd1520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd1520;
	}
	shf.l.wrap.b32 	%r1418, %r1417, %r1416, 1;
	shf.l.wrap.b32 	%r1419, %r1416, %r1417, 1;
	mov.b64 	%rd1544, {%r1419, %r1418};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd1521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd1521;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 20;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 20;
	mov.b64 	%rd1545, {%r1423, %r1422};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd1522;
	}
	shf.l.wrap.b32 	%r1426, %r1425, %r1424, 10;
	shf.l.wrap.b32 	%r1427, %r1424, %r1425, 10;
	mov.b64 	%rd1546, {%r1427, %r1426};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1428,%dummy}, %rd1523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1429}, %rd1523;
	}
	shf.r.wrap.b32 	%r1430, %r1429, %r1428, 19;
	shf.r.wrap.b32 	%r1431, %r1428, %r1429, 19;
	mov.b64 	%rd1547, {%r1431, %r1430};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd1524;
	}
	shf.l.wrap.b32 	%r1434, %r1433, %r1432, 2;
	shf.l.wrap.b32 	%r1435, %r1432, %r1433, 2;
	mov.b64 	%rd1548, {%r1435, %r1434};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd1525;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 2;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 2;
	mov.b64 	%rd1549, {%r1439, %r1438};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd1526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd1526;
	}
	shf.l.wrap.b32 	%r1442, %r1441, %r1440, 6;
	shf.l.wrap.b32 	%r1443, %r1440, %r1441, 6;
	mov.b64 	%rd1550, {%r1443, %r1442};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1444,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1445}, %rd1527;
	}
	shf.r.wrap.b32 	%r1446, %r1445, %r1444, 21;
	shf.r.wrap.b32 	%r1447, %r1444, %r1445, 21;
	mov.b64 	%rd1551, {%r1447, %r1446};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1449,%dummy}, %rd1528;
	}
	shf.l.wrap.b32 	%r1450, %r1449, %r1448, 15;
	shf.l.wrap.b32 	%r1451, %r1448, %r1449, 15;
	mov.b64 	%rd1552, {%r1451, %r1450};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1452,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd1529;
	}
	shf.r.wrap.b32 	%r1454, %r1453, %r1452, 3;
	shf.r.wrap.b32 	%r1455, %r1452, %r1453, 3;
	mov.b64 	%rd1553, {%r1455, %r1454};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd1530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd1530;
	}
	shf.l.wrap.b32 	%r1458, %r1457, %r1456, 28;
	shf.l.wrap.b32 	%r1459, %r1456, %r1457, 28;
	mov.b64 	%rd1554, {%r1459, %r1458};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd1531;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 9;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 9;
	mov.b64 	%rd1555, {%r1463, %r1462};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd1532;
	}
	shf.l.wrap.b32 	%r1466, %r1465, %r1464, 25;
	shf.l.wrap.b32 	%r1467, %r1464, %r1465, 25;
	mov.b64 	%rd1556, {%r1467, %r1466};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1468}, %rd1533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1469,%dummy}, %rd1533;
	}
	shf.l.wrap.b32 	%r1470, %r1469, %r1468, 21;
	shf.l.wrap.b32 	%r1471, %r1468, %r1469, 21;
	mov.b64 	%rd1557, {%r1471, %r1470};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1472,%dummy}, %rd1534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1473}, %rd1534;
	}
	shf.r.wrap.b32 	%r1474, %r1473, %r1472, 8;
	shf.r.wrap.b32 	%r1475, %r1472, %r1473, 8;
	mov.b64 	%rd1558, {%r1475, %r1474};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1476}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd1535;
	}
	shf.l.wrap.b32 	%r1478, %r1477, %r1476, 27;
	shf.l.wrap.b32 	%r1479, %r1476, %r1477, 27;
	mov.b64 	%rd1559, {%r1479, %r1478};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1481,%dummy}, %rd1536;
	}
	shf.l.wrap.b32 	%r1482, %r1481, %r1480, 20;
	shf.l.wrap.b32 	%r1483, %r1480, %r1481, 20;
	mov.b64 	%rd1560, {%r1483, %r1482};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd1537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd1537;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 25;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 25;
	mov.b64 	%rd1561, {%r1487, %r1486};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd1538;
	}
	shf.l.wrap.b32 	%r1490, %r1489, %r1488, 8;
	shf.l.wrap.b32 	%r1491, %r1488, %r1489, 8;
	mov.b64 	%rd1562, {%r1491, %r1490};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1492}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd1539;
	}
	shf.l.wrap.b32 	%r1494, %r1493, %r1492, 14;
	shf.l.wrap.b32 	%r1495, %r1492, %r1493, 14;
	mov.b64 	%rd1563, {%r1495, %r1494};
	not.b64 	%rd1564, %rd1551;
	or.b64  	%rd1565, %rd1551, %rd1545;
	or.b64  	%rd1566, %rd1557, %rd1564;
	xor.b64  	%rd1567, %rd1566, %rd1545;
	and.b64  	%rd1568, %rd1563, %rd1557;
	xor.b64  	%rd1569, %rd1568, %rd1551;
	or.b64  	%rd1570, %rd1563, %rd1515;
	xor.b64  	%rd1571, %rd1570, %rd1557;
	and.b64  	%rd1572, %rd1545, %rd1515;
	xor.b64  	%rd1573, %rd1563, %rd1572;
	not.b64 	%rd1574, %rd1553;
	or.b64  	%rd1575, %rd1560, %rd1541;
	xor.b64  	%rd1576, %rd1575, %rd1554;
	and.b64  	%rd1577, %rd1547, %rd1541;
	xor.b64  	%rd1578, %rd1560, %rd1577;
	or.b64  	%rd1579, %rd1547, %rd1574;
	xor.b64  	%rd1580, %rd1579, %rd1541;
	or.b64  	%rd1581, %rd1554, %rd1553;
	xor.b64  	%rd1582, %rd1581, %rd1547;
	and.b64  	%rd1583, %rd1560, %rd1554;
	xor.b64  	%rd1584, %rd1583, %rd1553;
	not.b64 	%rd1585, %rd1562;
	or.b64  	%rd1586, %rd1556, %rd1550;
	xor.b64  	%rd1587, %rd1586, %rd1544;
	and.b64  	%rd1588, %rd1562, %rd1556;
	xor.b64  	%rd1589, %rd1588, %rd1550;
	and.b64  	%rd1590, %rd1543, %rd1585;
	xor.b64  	%rd1591, %rd1590, %rd1556;
	or.b64  	%rd1592, %rd1544, %rd1543;
	xor.b64  	%rd1593, %rd1592, %rd1585;
	and.b64  	%rd1594, %rd1550, %rd1544;
	xor.b64  	%rd1595, %rd1594, %rd1543;
	not.b64 	%rd1596, %rd1552;
	and.b64  	%rd1597, %rd1546, %rd1540;
	xor.b64  	%rd1598, %rd1559, %rd1597;
	or.b64  	%rd1599, %rd1552, %rd1546;
	xor.b64  	%rd1600, %rd1599, %rd1540;
	or.b64  	%rd1601, %rd1558, %rd1596;
	xor.b64  	%rd1602, %rd1601, %rd1546;
	and.b64  	%rd1603, %rd1559, %rd1558;
	xor.b64  	%rd1604, %rd1603, %rd1596;
	or.b64  	%rd1605, %rd1559, %rd1540;
	xor.b64  	%rd1606, %rd1605, %rd1558;
	not.b64 	%rd1607, %rd1555;
	and.b64  	%rd1608, %rd1561, %rd1607;
	xor.b64  	%rd1609, %rd1608, %rd1549;
	or.b64  	%rd1610, %rd1561, %rd1542;
	xor.b64  	%rd1611, %rd1610, %rd1607;
	and.b64  	%rd1612, %rd1548, %rd1542;
	xor.b64  	%rd1613, %rd1561, %rd1612;
	or.b64  	%rd1614, %rd1549, %rd1548;
	xor.b64  	%rd1615, %rd1614, %rd1542;
	and.b64  	%rd1616, %rd1555, %rd1549;
	xor.b64  	%rd1617, %rd1616, %rd1548;
	xor.b64  	%rd1618, %rd1515, %rd1565;
	xor.b64  	%rd1619, %rd1618, 2147483658;
	xor.b64  	%rd1620, %rd1578, %rd1567;
	xor.b64  	%rd1621, %rd1589, %rd1600;
	xor.b64  	%rd1622, %rd1611, %rd1620;
	xor.b64  	%rd1623, %rd1622, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1497,%dummy}, %rd1623;
	}
	shf.l.wrap.b32 	%r1498, %r1497, %r1496, 1;
	shf.l.wrap.b32 	%r1499, %r1496, %r1497, 1;
	mov.b64 	%rd1624, {%r1499, %r1498};
	xor.b64  	%rd1625, %rd1573, %rd1584;
	xor.b64  	%rd1626, %rd1606, %rd1595;
	xor.b64  	%rd1627, %rd1626, %rd1617;
	xor.b64  	%rd1628, %rd1627, %rd1624;
	xor.b64  	%rd1629, %rd1628, %rd1625;
	xor.b64  	%rd1630, %rd1569, %rd1580;
	xor.b64  	%rd1631, %rd1591, %rd1602;
	xor.b64  	%rd1632, %rd1631, %rd1613;
	xor.b64  	%rd1633, %rd1632, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1500}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd1633;
	}
	shf.l.wrap.b32 	%r1502, %r1501, %r1500, 1;
	shf.l.wrap.b32 	%r1503, %r1500, %r1501, 1;
	mov.b64 	%rd1634, {%r1503, %r1502};
	xor.b64  	%rd1635, %rd1576, %rd1619;
	xor.b64  	%rd1636, %rd1598, %rd1587;
	xor.b64  	%rd1637, %rd1609, %rd1636;
	xor.b64  	%rd1638, %rd1637, %rd1635;
	xor.b64  	%rd1639, %rd1638, %rd1634;
	xor.b64  	%rd1640, %rd1571, %rd1582;
	xor.b64  	%rd1641, %rd1593, %rd1604;
	xor.b64  	%rd1642, %rd1641, %rd1615;
	xor.b64  	%rd1643, %rd1642, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd1643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd1643;
	}
	shf.l.wrap.b32 	%r1506, %r1505, %r1504, 1;
	shf.l.wrap.b32 	%r1507, %r1504, %r1505, 1;
	mov.b64 	%rd1644, {%r1507, %r1506};
	xor.b64  	%rd1645, %rd1623, %rd1644;
	xor.b64  	%rd1646, %rd1627, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1508}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd1646;
	}
	shf.l.wrap.b32 	%r1510, %r1509, %r1508, 1;
	shf.l.wrap.b32 	%r1511, %r1508, %r1509, 1;
	mov.b64 	%rd1647, {%r1511, %r1510};
	xor.b64  	%rd1648, %rd1633, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd1638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1513,%dummy}, %rd1638;
	}
	shf.l.wrap.b32 	%r1514, %r1513, %r1512, 1;
	shf.l.wrap.b32 	%r1515, %r1512, %r1513, 1;
	mov.b64 	%rd1649, {%r1515, %r1514};
	xor.b64  	%rd1650, %rd1643, %rd1649;
	xor.b64  	%rd1651, %rd1629, %rd1619;
	xor.b64  	%rd1652, %rd1629, %rd1576;
	xor.b64  	%rd1653, %rd1629, %rd1587;
	xor.b64  	%rd1654, %rd1629, %rd1598;
	xor.b64  	%rd1655, %rd1629, %rd1609;
	xor.b64  	%rd1656, %rd1639, %rd1567;
	xor.b64  	%rd1657, %rd1639, %rd1578;
	xor.b64  	%rd1658, %rd1639, %rd1589;
	xor.b64  	%rd1659, %rd1639, %rd1600;
	xor.b64  	%rd1660, %rd1639, %rd1611;
	xor.b64  	%rd1661, %rd1645, %rd1569;
	xor.b64  	%rd1662, %rd1645, %rd1580;
	xor.b64  	%rd1663, %rd1645, %rd1591;
	xor.b64  	%rd1664, %rd1645, %rd1602;
	xor.b64  	%rd1665, %rd1645, %rd1613;
	xor.b64  	%rd1666, %rd1648, %rd1571;
	xor.b64  	%rd1667, %rd1648, %rd1582;
	xor.b64  	%rd1668, %rd1648, %rd1593;
	xor.b64  	%rd1669, %rd1648, %rd1604;
	xor.b64  	%rd1670, %rd1648, %rd1615;
	xor.b64  	%rd1671, %rd1650, %rd1573;
	xor.b64  	%rd1672, %rd1650, %rd1584;
	xor.b64  	%rd1673, %rd1650, %rd1595;
	xor.b64  	%rd1674, %rd1650, %rd1606;
	xor.b64  	%rd1675, %rd1650, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd1652;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 28;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 28;
	mov.b64 	%rd1676, {%r1519, %r1518};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd1653;
	}
	shf.l.wrap.b32 	%r1522, %r1521, %r1520, 3;
	shf.l.wrap.b32 	%r1523, %r1520, %r1521, 3;
	mov.b64 	%rd1677, {%r1523, %r1522};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd1654;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 23;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 23;
	mov.b64 	%rd1678, {%r1527, %r1526};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1528}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd1655;
	}
	shf.l.wrap.b32 	%r1530, %r1529, %r1528, 18;
	shf.l.wrap.b32 	%r1531, %r1528, %r1529, 18;
	mov.b64 	%rd1679, {%r1531, %r1530};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd1656;
	}
	shf.l.wrap.b32 	%r1534, %r1533, %r1532, 1;
	shf.l.wrap.b32 	%r1535, %r1532, %r1533, 1;
	mov.b64 	%rd1680, {%r1535, %r1534};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1536,%dummy}, %rd1657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1537}, %rd1657;
	}
	shf.r.wrap.b32 	%r1538, %r1537, %r1536, 20;
	shf.r.wrap.b32 	%r1539, %r1536, %r1537, 20;
	mov.b64 	%rd1681, {%r1539, %r1538};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd1658;
	}
	shf.l.wrap.b32 	%r1542, %r1541, %r1540, 10;
	shf.l.wrap.b32 	%r1543, %r1540, %r1541, 10;
	mov.b64 	%rd1682, {%r1543, %r1542};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd1659;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 19;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 19;
	mov.b64 	%rd1683, {%r1547, %r1546};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1548}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd1660;
	}
	shf.l.wrap.b32 	%r1550, %r1549, %r1548, 2;
	shf.l.wrap.b32 	%r1551, %r1548, %r1549, 2;
	mov.b64 	%rd1684, {%r1551, %r1550};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd1661;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 2;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 2;
	mov.b64 	%rd1685, {%r1555, %r1554};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1557,%dummy}, %rd1662;
	}
	shf.l.wrap.b32 	%r1558, %r1557, %r1556, 6;
	shf.l.wrap.b32 	%r1559, %r1556, %r1557, 6;
	mov.b64 	%rd1686, {%r1559, %r1558};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1560,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd1663;
	}
	shf.r.wrap.b32 	%r1562, %r1561, %r1560, 21;
	shf.r.wrap.b32 	%r1563, %r1560, %r1561, 21;
	mov.b64 	%rd1687, {%r1563, %r1562};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1564}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd1664;
	}
	shf.l.wrap.b32 	%r1566, %r1565, %r1564, 15;
	shf.l.wrap.b32 	%r1567, %r1564, %r1565, 15;
	mov.b64 	%rd1688, {%r1567, %r1566};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1568,%dummy}, %rd1665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1569}, %rd1665;
	}
	shf.r.wrap.b32 	%r1570, %r1569, %r1568, 3;
	shf.r.wrap.b32 	%r1571, %r1568, %r1569, 3;
	mov.b64 	%rd1689, {%r1571, %r1570};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1572}, %rd1666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd1666;
	}
	shf.l.wrap.b32 	%r1574, %r1573, %r1572, 28;
	shf.l.wrap.b32 	%r1575, %r1572, %r1573, 28;
	mov.b64 	%rd1690, {%r1575, %r1574};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1576,%dummy}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd1667;
	}
	shf.r.wrap.b32 	%r1578, %r1577, %r1576, 9;
	shf.r.wrap.b32 	%r1579, %r1576, %r1577, 9;
	mov.b64 	%rd1691, {%r1579, %r1578};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1581,%dummy}, %rd1668;
	}
	shf.l.wrap.b32 	%r1582, %r1581, %r1580, 25;
	shf.l.wrap.b32 	%r1583, %r1580, %r1581, 25;
	mov.b64 	%rd1692, {%r1583, %r1582};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1584}, %rd1669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd1669;
	}
	shf.l.wrap.b32 	%r1586, %r1585, %r1584, 21;
	shf.l.wrap.b32 	%r1587, %r1584, %r1585, 21;
	mov.b64 	%rd1693, {%r1587, %r1586};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1588,%dummy}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd1670;
	}
	shf.r.wrap.b32 	%r1590, %r1589, %r1588, 8;
	shf.r.wrap.b32 	%r1591, %r1588, %r1589, 8;
	mov.b64 	%rd1694, {%r1591, %r1590};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd1671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1593,%dummy}, %rd1671;
	}
	shf.l.wrap.b32 	%r1594, %r1593, %r1592, 27;
	shf.l.wrap.b32 	%r1595, %r1592, %r1593, 27;
	mov.b64 	%rd1695, {%r1595, %r1594};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1596}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd1672;
	}
	shf.l.wrap.b32 	%r1598, %r1597, %r1596, 20;
	shf.l.wrap.b32 	%r1599, %r1596, %r1597, 20;
	mov.b64 	%rd1696, {%r1599, %r1598};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1600,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1601}, %rd1673;
	}
	shf.r.wrap.b32 	%r1602, %r1601, %r1600, 25;
	shf.r.wrap.b32 	%r1603, %r1600, %r1601, 25;
	mov.b64 	%rd1697, {%r1603, %r1602};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1604}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd1674;
	}
	shf.l.wrap.b32 	%r1606, %r1605, %r1604, 8;
	shf.l.wrap.b32 	%r1607, %r1604, %r1605, 8;
	mov.b64 	%rd1698, {%r1607, %r1606};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd1675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd1675;
	}
	shf.l.wrap.b32 	%r1610, %r1609, %r1608, 14;
	shf.l.wrap.b32 	%r1611, %r1608, %r1609, 14;
	mov.b64 	%rd1699, {%r1611, %r1610};
	not.b64 	%rd1700, %rd1687;
	or.b64  	%rd1701, %rd1687, %rd1681;
	or.b64  	%rd1702, %rd1693, %rd1700;
	xor.b64  	%rd1703, %rd1702, %rd1681;
	and.b64  	%rd1704, %rd1699, %rd1693;
	xor.b64  	%rd1705, %rd1704, %rd1687;
	or.b64  	%rd1706, %rd1699, %rd1651;
	xor.b64  	%rd1707, %rd1706, %rd1693;
	and.b64  	%rd1708, %rd1681, %rd1651;
	xor.b64  	%rd1709, %rd1699, %rd1708;
	not.b64 	%rd1710, %rd1689;
	or.b64  	%rd1711, %rd1696, %rd1677;
	xor.b64  	%rd1712, %rd1711, %rd1690;
	and.b64  	%rd1713, %rd1683, %rd1677;
	xor.b64  	%rd1714, %rd1696, %rd1713;
	or.b64  	%rd1715, %rd1683, %rd1710;
	xor.b64  	%rd1716, %rd1715, %rd1677;
	or.b64  	%rd1717, %rd1690, %rd1689;
	xor.b64  	%rd1718, %rd1717, %rd1683;
	and.b64  	%rd1719, %rd1696, %rd1690;
	xor.b64  	%rd1720, %rd1719, %rd1689;
	not.b64 	%rd1721, %rd1698;
	or.b64  	%rd1722, %rd1692, %rd1686;
	xor.b64  	%rd1723, %rd1722, %rd1680;
	and.b64  	%rd1724, %rd1698, %rd1692;
	xor.b64  	%rd1725, %rd1724, %rd1686;
	and.b64  	%rd1726, %rd1679, %rd1721;
	xor.b64  	%rd1727, %rd1726, %rd1692;
	or.b64  	%rd1728, %rd1680, %rd1679;
	xor.b64  	%rd1729, %rd1728, %rd1721;
	and.b64  	%rd1730, %rd1686, %rd1680;
	xor.b64  	%rd1731, %rd1730, %rd1679;
	not.b64 	%rd1732, %rd1688;
	and.b64  	%rd1733, %rd1682, %rd1676;
	xor.b64  	%rd1734, %rd1695, %rd1733;
	or.b64  	%rd1735, %rd1688, %rd1682;
	xor.b64  	%rd1736, %rd1735, %rd1676;
	or.b64  	%rd1737, %rd1694, %rd1732;
	xor.b64  	%rd1738, %rd1737, %rd1682;
	and.b64  	%rd1739, %rd1695, %rd1694;
	xor.b64  	%rd1740, %rd1739, %rd1732;
	or.b64  	%rd1741, %rd1695, %rd1676;
	xor.b64  	%rd1742, %rd1741, %rd1694;
	not.b64 	%rd1743, %rd1691;
	and.b64  	%rd1744, %rd1697, %rd1743;
	xor.b64  	%rd1745, %rd1744, %rd1685;
	or.b64  	%rd1746, %rd1697, %rd1678;
	xor.b64  	%rd1747, %rd1746, %rd1743;
	and.b64  	%rd1748, %rd1684, %rd1678;
	xor.b64  	%rd1749, %rd1697, %rd1748;
	or.b64  	%rd1750, %rd1685, %rd1684;
	xor.b64  	%rd1751, %rd1750, %rd1678;
	and.b64  	%rd1752, %rd1691, %rd1685;
	xor.b64  	%rd1753, %rd1752, %rd1684;
	xor.b64  	%rd1754, %rd1651, %rd1701;
	xor.b64  	%rd1755, %rd1754, 2147516555;
	xor.b64  	%rd1756, %rd1714, %rd1703;
	xor.b64  	%rd1757, %rd1725, %rd1736;
	xor.b64  	%rd1758, %rd1747, %rd1756;
	xor.b64  	%rd1759, %rd1758, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1612}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1613,%dummy}, %rd1759;
	}
	shf.l.wrap.b32 	%r1614, %r1613, %r1612, 1;
	shf.l.wrap.b32 	%r1615, %r1612, %r1613, 1;
	mov.b64 	%rd1760, {%r1615, %r1614};
	xor.b64  	%rd1761, %rd1709, %rd1720;
	xor.b64  	%rd1762, %rd1742, %rd1731;
	xor.b64  	%rd1763, %rd1762, %rd1753;
	xor.b64  	%rd1764, %rd1763, %rd1760;
	xor.b64  	%rd1765, %rd1764, %rd1761;
	xor.b64  	%rd1766, %rd1705, %rd1716;
	xor.b64  	%rd1767, %rd1727, %rd1738;
	xor.b64  	%rd1768, %rd1767, %rd1749;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd1769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1617,%dummy}, %rd1769;
	}
	shf.l.wrap.b32 	%r1618, %r1617, %r1616, 1;
	shf.l.wrap.b32 	%r1619, %r1616, %r1617, 1;
	mov.b64 	%rd1770, {%r1619, %r1618};
	xor.b64  	%rd1771, %rd1712, %rd1755;
	xor.b64  	%rd1772, %rd1734, %rd1723;
	xor.b64  	%rd1773, %rd1745, %rd1772;
	xor.b64  	%rd1774, %rd1773, %rd1771;
	xor.b64  	%rd1775, %rd1774, %rd1770;
	xor.b64  	%rd1776, %rd1707, %rd1718;
	xor.b64  	%rd1777, %rd1729, %rd1740;
	xor.b64  	%rd1778, %rd1777, %rd1751;
	xor.b64  	%rd1779, %rd1778, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd1779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd1779;
	}
	shf.l.wrap.b32 	%r1622, %r1621, %r1620, 1;
	shf.l.wrap.b32 	%r1623, %r1620, %r1621, 1;
	mov.b64 	%rd1780, {%r1623, %r1622};
	xor.b64  	%rd1781, %rd1759, %rd1780;
	xor.b64  	%rd1782, %rd1763, %rd1761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd1782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1625,%dummy}, %rd1782;
	}
	shf.l.wrap.b32 	%r1626, %r1625, %r1624, 1;
	shf.l.wrap.b32 	%r1627, %r1624, %r1625, 1;
	mov.b64 	%rd1783, {%r1627, %r1626};
	xor.b64  	%rd1784, %rd1769, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1628}, %rd1774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd1774;
	}
	shf.l.wrap.b32 	%r1630, %r1629, %r1628, 1;
	shf.l.wrap.b32 	%r1631, %r1628, %r1629, 1;
	mov.b64 	%rd1785, {%r1631, %r1630};
	xor.b64  	%rd1786, %rd1779, %rd1785;
	xor.b64  	%rd1787, %rd1765, %rd1755;
	xor.b64  	%rd1788, %rd1765, %rd1712;
	xor.b64  	%rd1789, %rd1765, %rd1723;
	xor.b64  	%rd1790, %rd1765, %rd1734;
	xor.b64  	%rd1791, %rd1765, %rd1745;
	xor.b64  	%rd1792, %rd1775, %rd1703;
	xor.b64  	%rd1793, %rd1775, %rd1714;
	xor.b64  	%rd1794, %rd1775, %rd1725;
	xor.b64  	%rd1795, %rd1775, %rd1736;
	xor.b64  	%rd1796, %rd1775, %rd1747;
	xor.b64  	%rd1797, %rd1781, %rd1705;
	xor.b64  	%rd1798, %rd1781, %rd1716;
	xor.b64  	%rd1799, %rd1781, %rd1727;
	xor.b64  	%rd1800, %rd1781, %rd1738;
	xor.b64  	%rd1801, %rd1781, %rd1749;
	xor.b64  	%rd1802, %rd1784, %rd1707;
	xor.b64  	%rd1803, %rd1784, %rd1718;
	xor.b64  	%rd1804, %rd1784, %rd1729;
	xor.b64  	%rd1805, %rd1784, %rd1740;
	xor.b64  	%rd1806, %rd1784, %rd1751;
	xor.b64  	%rd1807, %rd1786, %rd1709;
	xor.b64  	%rd1808, %rd1786, %rd1720;
	xor.b64  	%rd1809, %rd1786, %rd1731;
	xor.b64  	%rd1810, %rd1786, %rd1742;
	xor.b64  	%rd1811, %rd1786, %rd1753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd1788;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 28;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 28;
	mov.b64 	%rd1812, {%r1635, %r1634};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd1789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd1789;
	}
	shf.l.wrap.b32 	%r1638, %r1637, %r1636, 3;
	shf.l.wrap.b32 	%r1639, %r1636, %r1637, 3;
	mov.b64 	%rd1813, {%r1639, %r1638};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1640,%dummy}, %rd1790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd1790;
	}
	shf.r.wrap.b32 	%r1642, %r1641, %r1640, 23;
	shf.r.wrap.b32 	%r1643, %r1640, %r1641, 23;
	mov.b64 	%rd1814, {%r1643, %r1642};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1644}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1645,%dummy}, %rd1791;
	}
	shf.l.wrap.b32 	%r1646, %r1645, %r1644, 18;
	shf.l.wrap.b32 	%r1647, %r1644, %r1645, 18;
	mov.b64 	%rd1815, {%r1647, %r1646};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd1792;
	}
	shf.l.wrap.b32 	%r1650, %r1649, %r1648, 1;
	shf.l.wrap.b32 	%r1651, %r1648, %r1649, 1;
	mov.b64 	%rd1816, {%r1651, %r1650};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd1793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd1793;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 20;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 20;
	mov.b64 	%rd1817, {%r1655, %r1654};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1657,%dummy}, %rd1794;
	}
	shf.l.wrap.b32 	%r1658, %r1657, %r1656, 10;
	shf.l.wrap.b32 	%r1659, %r1656, %r1657, 10;
	mov.b64 	%rd1818, {%r1659, %r1658};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1660,%dummy}, %rd1795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1661}, %rd1795;
	}
	shf.r.wrap.b32 	%r1662, %r1661, %r1660, 19;
	shf.r.wrap.b32 	%r1663, %r1660, %r1661, 19;
	mov.b64 	%rd1819, {%r1663, %r1662};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd1796;
	}
	shf.l.wrap.b32 	%r1666, %r1665, %r1664, 2;
	shf.l.wrap.b32 	%r1667, %r1664, %r1665, 2;
	mov.b64 	%rd1820, {%r1667, %r1666};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd1797;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 2;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 2;
	mov.b64 	%rd1821, {%r1671, %r1670};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1673,%dummy}, %rd1798;
	}
	shf.l.wrap.b32 	%r1674, %r1673, %r1672, 6;
	shf.l.wrap.b32 	%r1675, %r1672, %r1673, 6;
	mov.b64 	%rd1822, {%r1675, %r1674};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1676,%dummy}, %rd1799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1677}, %rd1799;
	}
	shf.r.wrap.b32 	%r1678, %r1677, %r1676, 21;
	shf.r.wrap.b32 	%r1679, %r1676, %r1677, 21;
	mov.b64 	%rd1823, {%r1679, %r1678};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd1800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd1800;
	}
	shf.l.wrap.b32 	%r1682, %r1681, %r1680, 15;
	shf.l.wrap.b32 	%r1683, %r1680, %r1681, 15;
	mov.b64 	%rd1824, {%r1683, %r1682};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd1801;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 3;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 3;
	mov.b64 	%rd1825, {%r1687, %r1686};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd1802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1689,%dummy}, %rd1802;
	}
	shf.l.wrap.b32 	%r1690, %r1689, %r1688, 28;
	shf.l.wrap.b32 	%r1691, %r1688, %r1689, 28;
	mov.b64 	%rd1826, {%r1691, %r1690};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd1803;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 9;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 9;
	mov.b64 	%rd1827, {%r1695, %r1694};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1697,%dummy}, %rd1804;
	}
	shf.l.wrap.b32 	%r1698, %r1697, %r1696, 25;
	shf.l.wrap.b32 	%r1699, %r1696, %r1697, 25;
	mov.b64 	%rd1828, {%r1699, %r1698};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1700}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd1805;
	}
	shf.l.wrap.b32 	%r1702, %r1701, %r1700, 21;
	shf.l.wrap.b32 	%r1703, %r1700, %r1701, 21;
	mov.b64 	%rd1829, {%r1703, %r1702};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd1806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd1806;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 8;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 8;
	mov.b64 	%rd1830, {%r1707, %r1706};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1708}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1709,%dummy}, %rd1807;
	}
	shf.l.wrap.b32 	%r1710, %r1709, %r1708, 27;
	shf.l.wrap.b32 	%r1711, %r1708, %r1709, 27;
	mov.b64 	%rd1831, {%r1711, %r1710};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1713,%dummy}, %rd1808;
	}
	shf.l.wrap.b32 	%r1714, %r1713, %r1712, 20;
	shf.l.wrap.b32 	%r1715, %r1712, %r1713, 20;
	mov.b64 	%rd1832, {%r1715, %r1714};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd1809;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 25;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 25;
	mov.b64 	%rd1833, {%r1719, %r1718};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd1810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1721,%dummy}, %rd1810;
	}
	shf.l.wrap.b32 	%r1722, %r1721, %r1720, 8;
	shf.l.wrap.b32 	%r1723, %r1720, %r1721, 8;
	mov.b64 	%rd1834, {%r1723, %r1722};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1724}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1725,%dummy}, %rd1811;
	}
	shf.l.wrap.b32 	%r1726, %r1725, %r1724, 14;
	shf.l.wrap.b32 	%r1727, %r1724, %r1725, 14;
	mov.b64 	%rd1835, {%r1727, %r1726};
	not.b64 	%rd1836, %rd1823;
	or.b64  	%rd1837, %rd1823, %rd1817;
	or.b64  	%rd1838, %rd1829, %rd1836;
	xor.b64  	%rd1839, %rd1838, %rd1817;
	and.b64  	%rd1840, %rd1835, %rd1829;
	xor.b64  	%rd1841, %rd1840, %rd1823;
	or.b64  	%rd1842, %rd1835, %rd1787;
	xor.b64  	%rd1843, %rd1842, %rd1829;
	and.b64  	%rd1844, %rd1817, %rd1787;
	xor.b64  	%rd1845, %rd1835, %rd1844;
	not.b64 	%rd1846, %rd1825;
	or.b64  	%rd1847, %rd1832, %rd1813;
	xor.b64  	%rd1848, %rd1847, %rd1826;
	and.b64  	%rd1849, %rd1819, %rd1813;
	xor.b64  	%rd1850, %rd1832, %rd1849;
	or.b64  	%rd1851, %rd1819, %rd1846;
	xor.b64  	%rd1852, %rd1851, %rd1813;
	or.b64  	%rd1853, %rd1826, %rd1825;
	xor.b64  	%rd1854, %rd1853, %rd1819;
	and.b64  	%rd1855, %rd1832, %rd1826;
	xor.b64  	%rd1856, %rd1855, %rd1825;
	not.b64 	%rd1857, %rd1834;
	or.b64  	%rd1858, %rd1828, %rd1822;
	xor.b64  	%rd1859, %rd1858, %rd1816;
	and.b64  	%rd1860, %rd1834, %rd1828;
	xor.b64  	%rd1861, %rd1860, %rd1822;
	and.b64  	%rd1862, %rd1815, %rd1857;
	xor.b64  	%rd1863, %rd1862, %rd1828;
	or.b64  	%rd1864, %rd1816, %rd1815;
	xor.b64  	%rd1865, %rd1864, %rd1857;
	and.b64  	%rd1866, %rd1822, %rd1816;
	xor.b64  	%rd1867, %rd1866, %rd1815;
	not.b64 	%rd1868, %rd1824;
	and.b64  	%rd1869, %rd1818, %rd1812;
	xor.b64  	%rd1870, %rd1831, %rd1869;
	or.b64  	%rd1871, %rd1824, %rd1818;
	xor.b64  	%rd1872, %rd1871, %rd1812;
	or.b64  	%rd1873, %rd1830, %rd1868;
	xor.b64  	%rd1874, %rd1873, %rd1818;
	and.b64  	%rd1875, %rd1831, %rd1830;
	xor.b64  	%rd1876, %rd1875, %rd1868;
	or.b64  	%rd1877, %rd1831, %rd1812;
	xor.b64  	%rd1878, %rd1877, %rd1830;
	not.b64 	%rd1879, %rd1827;
	and.b64  	%rd1880, %rd1833, %rd1879;
	xor.b64  	%rd1881, %rd1880, %rd1821;
	or.b64  	%rd1882, %rd1833, %rd1814;
	xor.b64  	%rd1883, %rd1882, %rd1879;
	and.b64  	%rd1884, %rd1820, %rd1814;
	xor.b64  	%rd1885, %rd1833, %rd1884;
	or.b64  	%rd1886, %rd1821, %rd1820;
	xor.b64  	%rd1887, %rd1886, %rd1814;
	and.b64  	%rd1888, %rd1827, %rd1821;
	xor.b64  	%rd1889, %rd1888, %rd1820;
	xor.b64  	%rd1890, %rd1787, %rd1837;
	xor.b64  	%rd1891, %rd1890, -9223372036854775669;
	xor.b64  	%rd1892, %rd1850, %rd1839;
	xor.b64  	%rd1893, %rd1861, %rd1872;
	xor.b64  	%rd1894, %rd1883, %rd1892;
	xor.b64  	%rd1895, %rd1894, %rd1893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd1895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd1895;
	}
	shf.l.wrap.b32 	%r1730, %r1729, %r1728, 1;
	shf.l.wrap.b32 	%r1731, %r1728, %r1729, 1;
	mov.b64 	%rd1896, {%r1731, %r1730};
	xor.b64  	%rd1897, %rd1845, %rd1856;
	xor.b64  	%rd1898, %rd1878, %rd1867;
	xor.b64  	%rd1899, %rd1898, %rd1889;
	xor.b64  	%rd1900, %rd1899, %rd1896;
	xor.b64  	%rd1901, %rd1900, %rd1897;
	xor.b64  	%rd1902, %rd1841, %rd1852;
	xor.b64  	%rd1903, %rd1863, %rd1874;
	xor.b64  	%rd1904, %rd1903, %rd1885;
	xor.b64  	%rd1905, %rd1904, %rd1902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1732}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1733,%dummy}, %rd1905;
	}
	shf.l.wrap.b32 	%r1734, %r1733, %r1732, 1;
	shf.l.wrap.b32 	%r1735, %r1732, %r1733, 1;
	mov.b64 	%rd1906, {%r1735, %r1734};
	xor.b64  	%rd1907, %rd1848, %rd1891;
	xor.b64  	%rd1908, %rd1870, %rd1859;
	xor.b64  	%rd1909, %rd1881, %rd1908;
	xor.b64  	%rd1910, %rd1909, %rd1907;
	xor.b64  	%rd1911, %rd1910, %rd1906;
	xor.b64  	%rd1912, %rd1843, %rd1854;
	xor.b64  	%rd1913, %rd1865, %rd1876;
	xor.b64  	%rd1914, %rd1913, %rd1887;
	xor.b64  	%rd1915, %rd1914, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd1915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd1915;
	}
	shf.l.wrap.b32 	%r1738, %r1737, %r1736, 1;
	shf.l.wrap.b32 	%r1739, %r1736, %r1737, 1;
	mov.b64 	%rd1916, {%r1739, %r1738};
	xor.b64  	%rd1917, %rd1895, %rd1916;
	xor.b64  	%rd1918, %rd1899, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1740}, %rd1918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1741,%dummy}, %rd1918;
	}
	shf.l.wrap.b32 	%r1742, %r1741, %r1740, 1;
	shf.l.wrap.b32 	%r1743, %r1740, %r1741, 1;
	mov.b64 	%rd1919, {%r1743, %r1742};
	xor.b64  	%rd1920, %rd1905, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd1910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd1910;
	}
	shf.l.wrap.b32 	%r1746, %r1745, %r1744, 1;
	shf.l.wrap.b32 	%r1747, %r1744, %r1745, 1;
	mov.b64 	%rd1921, {%r1747, %r1746};
	xor.b64  	%rd1922, %rd1915, %rd1921;
	xor.b64  	%rd1923, %rd1901, %rd1891;
	xor.b64  	%rd1924, %rd1901, %rd1848;
	xor.b64  	%rd1925, %rd1901, %rd1859;
	xor.b64  	%rd1926, %rd1901, %rd1870;
	xor.b64  	%rd1927, %rd1901, %rd1881;
	xor.b64  	%rd1928, %rd1911, %rd1839;
	xor.b64  	%rd1929, %rd1911, %rd1850;
	xor.b64  	%rd1930, %rd1911, %rd1861;
	xor.b64  	%rd1931, %rd1911, %rd1872;
	xor.b64  	%rd1932, %rd1911, %rd1883;
	xor.b64  	%rd1933, %rd1917, %rd1841;
	xor.b64  	%rd1934, %rd1917, %rd1852;
	xor.b64  	%rd1935, %rd1917, %rd1863;
	xor.b64  	%rd1936, %rd1917, %rd1874;
	xor.b64  	%rd1937, %rd1917, %rd1885;
	xor.b64  	%rd1938, %rd1920, %rd1843;
	xor.b64  	%rd1939, %rd1920, %rd1854;
	xor.b64  	%rd1940, %rd1920, %rd1865;
	xor.b64  	%rd1941, %rd1920, %rd1876;
	xor.b64  	%rd1942, %rd1920, %rd1887;
	xor.b64  	%rd1943, %rd1922, %rd1845;
	xor.b64  	%rd1944, %rd1922, %rd1856;
	xor.b64  	%rd1945, %rd1922, %rd1867;
	xor.b64  	%rd1946, %rd1922, %rd1878;
	xor.b64  	%rd1947, %rd1922, %rd1889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1748,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1749}, %rd1924;
	}
	shf.r.wrap.b32 	%r1750, %r1749, %r1748, 28;
	shf.r.wrap.b32 	%r1751, %r1748, %r1749, 28;
	mov.b64 	%rd1948, {%r1751, %r1750};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1753,%dummy}, %rd1925;
	}
	shf.l.wrap.b32 	%r1754, %r1753, %r1752, 3;
	shf.l.wrap.b32 	%r1755, %r1752, %r1753, 3;
	mov.b64 	%rd1949, {%r1755, %r1754};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1756,%dummy}, %rd1926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd1926;
	}
	shf.r.wrap.b32 	%r1758, %r1757, %r1756, 23;
	shf.r.wrap.b32 	%r1759, %r1756, %r1757, 23;
	mov.b64 	%rd1950, {%r1759, %r1758};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd1927;
	}
	shf.l.wrap.b32 	%r1762, %r1761, %r1760, 18;
	shf.l.wrap.b32 	%r1763, %r1760, %r1761, 18;
	mov.b64 	%rd1951, {%r1763, %r1762};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd1928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1765,%dummy}, %rd1928;
	}
	shf.l.wrap.b32 	%r1766, %r1765, %r1764, 1;
	shf.l.wrap.b32 	%r1767, %r1764, %r1765, 1;
	mov.b64 	%rd1952, {%r1767, %r1766};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd1929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd1929;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 20;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 20;
	mov.b64 	%rd1953, {%r1771, %r1770};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1773,%dummy}, %rd1930;
	}
	shf.l.wrap.b32 	%r1774, %r1773, %r1772, 10;
	shf.l.wrap.b32 	%r1775, %r1772, %r1773, 10;
	mov.b64 	%rd1954, {%r1775, %r1774};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd1931;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 19;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 19;
	mov.b64 	%rd1955, {%r1779, %r1778};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1780}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd1932;
	}
	shf.l.wrap.b32 	%r1782, %r1781, %r1780, 2;
	shf.l.wrap.b32 	%r1783, %r1780, %r1781, 2;
	mov.b64 	%rd1956, {%r1783, %r1782};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd1933;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 2;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 2;
	mov.b64 	%rd1957, {%r1787, %r1786};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1788}, %rd1934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1789,%dummy}, %rd1934;
	}
	shf.l.wrap.b32 	%r1790, %r1789, %r1788, 6;
	shf.l.wrap.b32 	%r1791, %r1788, %r1789, 6;
	mov.b64 	%rd1958, {%r1791, %r1790};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd1935;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 21;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 21;
	mov.b64 	%rd1959, {%r1795, %r1794};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1796}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd1936;
	}
	shf.l.wrap.b32 	%r1798, %r1797, %r1796, 15;
	shf.l.wrap.b32 	%r1799, %r1796, %r1797, 15;
	mov.b64 	%rd1960, {%r1799, %r1798};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd1937;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 3;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 3;
	mov.b64 	%rd1961, {%r1803, %r1802};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1804}, %rd1938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd1938;
	}
	shf.l.wrap.b32 	%r1806, %r1805, %r1804, 28;
	shf.l.wrap.b32 	%r1807, %r1804, %r1805, 28;
	mov.b64 	%rd1962, {%r1807, %r1806};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd1939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd1939;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 9;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 9;
	mov.b64 	%rd1963, {%r1811, %r1810};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1812}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd1940;
	}
	shf.l.wrap.b32 	%r1814, %r1813, %r1812, 25;
	shf.l.wrap.b32 	%r1815, %r1812, %r1813, 25;
	mov.b64 	%rd1964, {%r1815, %r1814};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1817,%dummy}, %rd1941;
	}
	shf.l.wrap.b32 	%r1818, %r1817, %r1816, 21;
	shf.l.wrap.b32 	%r1819, %r1816, %r1817, 21;
	mov.b64 	%rd1965, {%r1819, %r1818};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1820,%dummy}, %rd1942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd1942;
	}
	shf.r.wrap.b32 	%r1822, %r1821, %r1820, 8;
	shf.r.wrap.b32 	%r1823, %r1820, %r1821, 8;
	mov.b64 	%rd1966, {%r1823, %r1822};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1825,%dummy}, %rd1943;
	}
	shf.l.wrap.b32 	%r1826, %r1825, %r1824, 27;
	shf.l.wrap.b32 	%r1827, %r1824, %r1825, 27;
	mov.b64 	%rd1967, {%r1827, %r1826};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1828}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd1944;
	}
	shf.l.wrap.b32 	%r1830, %r1829, %r1828, 20;
	shf.l.wrap.b32 	%r1831, %r1828, %r1829, 20;
	mov.b64 	%rd1968, {%r1831, %r1830};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd1945;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 25;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 25;
	mov.b64 	%rd1969, {%r1835, %r1834};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1836}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1837,%dummy}, %rd1946;
	}
	shf.l.wrap.b32 	%r1838, %r1837, %r1836, 8;
	shf.l.wrap.b32 	%r1839, %r1836, %r1837, 8;
	mov.b64 	%rd1970, {%r1839, %r1838};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd1947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd1947;
	}
	shf.l.wrap.b32 	%r1842, %r1841, %r1840, 14;
	shf.l.wrap.b32 	%r1843, %r1840, %r1841, 14;
	mov.b64 	%rd1971, {%r1843, %r1842};
	not.b64 	%rd1972, %rd1959;
	or.b64  	%rd1973, %rd1959, %rd1953;
	or.b64  	%rd1974, %rd1965, %rd1972;
	xor.b64  	%rd1975, %rd1974, %rd1953;
	and.b64  	%rd1976, %rd1971, %rd1965;
	xor.b64  	%rd1977, %rd1976, %rd1959;
	or.b64  	%rd1978, %rd1971, %rd1923;
	xor.b64  	%rd1979, %rd1978, %rd1965;
	and.b64  	%rd1980, %rd1953, %rd1923;
	xor.b64  	%rd1981, %rd1971, %rd1980;
	not.b64 	%rd1982, %rd1961;
	or.b64  	%rd1983, %rd1968, %rd1949;
	xor.b64  	%rd1984, %rd1983, %rd1962;
	and.b64  	%rd1985, %rd1955, %rd1949;
	xor.b64  	%rd1986, %rd1968, %rd1985;
	or.b64  	%rd1987, %rd1955, %rd1982;
	xor.b64  	%rd1988, %rd1987, %rd1949;
	or.b64  	%rd1989, %rd1962, %rd1961;
	xor.b64  	%rd1990, %rd1989, %rd1955;
	and.b64  	%rd1991, %rd1968, %rd1962;
	xor.b64  	%rd1992, %rd1991, %rd1961;
	not.b64 	%rd1993, %rd1970;
	or.b64  	%rd1994, %rd1964, %rd1958;
	xor.b64  	%rd1995, %rd1994, %rd1952;
	and.b64  	%rd1996, %rd1970, %rd1964;
	xor.b64  	%rd1997, %rd1996, %rd1958;
	and.b64  	%rd1998, %rd1951, %rd1993;
	xor.b64  	%rd1999, %rd1998, %rd1964;
	or.b64  	%rd2000, %rd1952, %rd1951;
	xor.b64  	%rd2001, %rd2000, %rd1993;
	and.b64  	%rd2002, %rd1958, %rd1952;
	xor.b64  	%rd2003, %rd2002, %rd1951;
	not.b64 	%rd2004, %rd1960;
	and.b64  	%rd2005, %rd1954, %rd1948;
	xor.b64  	%rd2006, %rd1967, %rd2005;
	or.b64  	%rd2007, %rd1960, %rd1954;
	xor.b64  	%rd2008, %rd2007, %rd1948;
	or.b64  	%rd2009, %rd1966, %rd2004;
	xor.b64  	%rd2010, %rd2009, %rd1954;
	and.b64  	%rd2011, %rd1967, %rd1966;
	xor.b64  	%rd2012, %rd2011, %rd2004;
	or.b64  	%rd2013, %rd1967, %rd1948;
	xor.b64  	%rd2014, %rd2013, %rd1966;
	not.b64 	%rd2015, %rd1963;
	and.b64  	%rd2016, %rd1969, %rd2015;
	xor.b64  	%rd2017, %rd2016, %rd1957;
	or.b64  	%rd2018, %rd1969, %rd1950;
	xor.b64  	%rd2019, %rd2018, %rd2015;
	and.b64  	%rd2020, %rd1956, %rd1950;
	xor.b64  	%rd2021, %rd1969, %rd2020;
	or.b64  	%rd2022, %rd1957, %rd1956;
	xor.b64  	%rd2023, %rd2022, %rd1950;
	and.b64  	%rd2024, %rd1963, %rd1957;
	xor.b64  	%rd2025, %rd2024, %rd1956;
	xor.b64  	%rd2026, %rd1923, %rd1973;
	xor.b64  	%rd2027, %rd2026, -9223372036854742903;
	xor.b64  	%rd2028, %rd1986, %rd1975;
	xor.b64  	%rd2029, %rd1997, %rd2008;
	xor.b64  	%rd2030, %rd2019, %rd2028;
	xor.b64  	%rd2031, %rd2030, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1844}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1845,%dummy}, %rd2031;
	}
	shf.l.wrap.b32 	%r1846, %r1845, %r1844, 1;
	shf.l.wrap.b32 	%r1847, %r1844, %r1845, 1;
	mov.b64 	%rd2032, {%r1847, %r1846};
	xor.b64  	%rd2033, %rd1981, %rd1992;
	xor.b64  	%rd2034, %rd2014, %rd2003;
	xor.b64  	%rd2035, %rd2034, %rd2025;
	xor.b64  	%rd2036, %rd2035, %rd2032;
	xor.b64  	%rd2037, %rd2036, %rd2033;
	xor.b64  	%rd2038, %rd1977, %rd1988;
	xor.b64  	%rd2039, %rd1999, %rd2010;
	xor.b64  	%rd2040, %rd2039, %rd2021;
	xor.b64  	%rd2041, %rd2040, %rd2038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1849,%dummy}, %rd2041;
	}
	shf.l.wrap.b32 	%r1850, %r1849, %r1848, 1;
	shf.l.wrap.b32 	%r1851, %r1848, %r1849, 1;
	mov.b64 	%rd2042, {%r1851, %r1850};
	xor.b64  	%rd2043, %rd1984, %rd2027;
	xor.b64  	%rd2044, %rd2006, %rd1995;
	xor.b64  	%rd2045, %rd2017, %rd2044;
	xor.b64  	%rd2046, %rd2045, %rd2043;
	xor.b64  	%rd2047, %rd2046, %rd2042;
	xor.b64  	%rd2048, %rd1979, %rd1990;
	xor.b64  	%rd2049, %rd2001, %rd2012;
	xor.b64  	%rd2050, %rd2049, %rd2023;
	xor.b64  	%rd2051, %rd2050, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1852}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1853,%dummy}, %rd2051;
	}
	shf.l.wrap.b32 	%r1854, %r1853, %r1852, 1;
	shf.l.wrap.b32 	%r1855, %r1852, %r1853, 1;
	mov.b64 	%rd2052, {%r1855, %r1854};
	xor.b64  	%rd2053, %rd2031, %rd2052;
	xor.b64  	%rd2054, %rd2035, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd2054;
	}
	shf.l.wrap.b32 	%r1858, %r1857, %r1856, 1;
	shf.l.wrap.b32 	%r1859, %r1856, %r1857, 1;
	mov.b64 	%rd2055, {%r1859, %r1858};
	xor.b64  	%rd2056, %rd2041, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1860}, %rd2046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd2046;
	}
	shf.l.wrap.b32 	%r1862, %r1861, %r1860, 1;
	shf.l.wrap.b32 	%r1863, %r1860, %r1861, 1;
	mov.b64 	%rd2057, {%r1863, %r1862};
	xor.b64  	%rd2058, %rd2051, %rd2057;
	xor.b64  	%rd2059, %rd2037, %rd2027;
	xor.b64  	%rd2060, %rd2037, %rd1984;
	xor.b64  	%rd2061, %rd2037, %rd1995;
	xor.b64  	%rd2062, %rd2037, %rd2006;
	xor.b64  	%rd2063, %rd2037, %rd2017;
	xor.b64  	%rd2064, %rd2047, %rd1975;
	xor.b64  	%rd2065, %rd2047, %rd1986;
	xor.b64  	%rd2066, %rd2047, %rd1997;
	xor.b64  	%rd2067, %rd2047, %rd2008;
	xor.b64  	%rd2068, %rd2047, %rd2019;
	xor.b64  	%rd2069, %rd2053, %rd1977;
	xor.b64  	%rd2070, %rd2053, %rd1988;
	xor.b64  	%rd2071, %rd2053, %rd1999;
	xor.b64  	%rd2072, %rd2053, %rd2010;
	xor.b64  	%rd2073, %rd2053, %rd2021;
	xor.b64  	%rd2074, %rd2056, %rd1979;
	xor.b64  	%rd2075, %rd2056, %rd1990;
	xor.b64  	%rd2076, %rd2056, %rd2001;
	xor.b64  	%rd2077, %rd2056, %rd2012;
	xor.b64  	%rd2078, %rd2056, %rd2023;
	xor.b64  	%rd2079, %rd2058, %rd1981;
	xor.b64  	%rd2080, %rd2058, %rd1992;
	xor.b64  	%rd2081, %rd2058, %rd2003;
	xor.b64  	%rd2082, %rd2058, %rd2014;
	xor.b64  	%rd2083, %rd2058, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd2060;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 28;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 28;
	mov.b64 	%rd2084, {%r1867, %r1866};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1868}, %rd2061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1869,%dummy}, %rd2061;
	}
	shf.l.wrap.b32 	%r1870, %r1869, %r1868, 3;
	shf.l.wrap.b32 	%r1871, %r1868, %r1869, 3;
	mov.b64 	%rd2085, {%r1871, %r1870};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd2062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2062;
	}
	shf.r.wrap.b32 	%r1874, %r1873, %r1872, 23;
	shf.r.wrap.b32 	%r1875, %r1872, %r1873, 23;
	mov.b64 	%rd2086, {%r1875, %r1874};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1876}, %rd2063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd2063;
	}
	shf.l.wrap.b32 	%r1878, %r1877, %r1876, 18;
	shf.l.wrap.b32 	%r1879, %r1876, %r1877, 18;
	mov.b64 	%rd2087, {%r1879, %r1878};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1881,%dummy}, %rd2064;
	}
	shf.l.wrap.b32 	%r1882, %r1881, %r1880, 1;
	shf.l.wrap.b32 	%r1883, %r1880, %r1881, 1;
	mov.b64 	%rd2088, {%r1883, %r1882};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd2065;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 20;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 20;
	mov.b64 	%rd2089, {%r1887, %r1886};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd2066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1889,%dummy}, %rd2066;
	}
	shf.l.wrap.b32 	%r1890, %r1889, %r1888, 10;
	shf.l.wrap.b32 	%r1891, %r1888, %r1889, 10;
	mov.b64 	%rd2090, {%r1891, %r1890};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd2067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd2067;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 19;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 19;
	mov.b64 	%rd2091, {%r1895, %r1894};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1897,%dummy}, %rd2068;
	}
	shf.l.wrap.b32 	%r1898, %r1897, %r1896, 2;
	shf.l.wrap.b32 	%r1899, %r1896, %r1897, 2;
	mov.b64 	%rd2092, {%r1899, %r1898};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd2069;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 2;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 2;
	mov.b64 	%rd2093, {%r1903, %r1902};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1905,%dummy}, %rd2070;
	}
	shf.l.wrap.b32 	%r1906, %r1905, %r1904, 6;
	shf.l.wrap.b32 	%r1907, %r1904, %r1905, 6;
	mov.b64 	%rd2094, {%r1907, %r1906};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd2071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd2071;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 21;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 21;
	mov.b64 	%rd2095, {%r1911, %r1910};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1913,%dummy}, %rd2072;
	}
	shf.l.wrap.b32 	%r1914, %r1913, %r1912, 15;
	shf.l.wrap.b32 	%r1915, %r1912, %r1913, 15;
	mov.b64 	%rd2096, {%r1915, %r1914};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd2073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd2073;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 3;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 3;
	mov.b64 	%rd2097, {%r1919, %r1918};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1921,%dummy}, %rd2074;
	}
	shf.l.wrap.b32 	%r1922, %r1921, %r1920, 28;
	shf.l.wrap.b32 	%r1923, %r1920, %r1921, 28;
	mov.b64 	%rd2098, {%r1923, %r1922};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd2075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd2075;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 9;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 9;
	mov.b64 	%rd2099, {%r1927, %r1926};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1929,%dummy}, %rd2076;
	}
	shf.l.wrap.b32 	%r1930, %r1929, %r1928, 25;
	shf.l.wrap.b32 	%r1931, %r1928, %r1929, 25;
	mov.b64 	%rd2100, {%r1931, %r1930};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd2077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1933,%dummy}, %rd2077;
	}
	shf.l.wrap.b32 	%r1934, %r1933, %r1932, 21;
	shf.l.wrap.b32 	%r1935, %r1932, %r1933, 21;
	mov.b64 	%rd2101, {%r1935, %r1934};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1936,%dummy}, %rd2078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1937}, %rd2078;
	}
	shf.r.wrap.b32 	%r1938, %r1937, %r1936, 8;
	shf.r.wrap.b32 	%r1939, %r1936, %r1937, 8;
	mov.b64 	%rd2102, {%r1939, %r1938};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1940}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd2079;
	}
	shf.l.wrap.b32 	%r1942, %r1941, %r1940, 27;
	shf.l.wrap.b32 	%r1943, %r1940, %r1941, 27;
	mov.b64 	%rd2103, {%r1943, %r1942};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1944}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1945,%dummy}, %rd2080;
	}
	shf.l.wrap.b32 	%r1946, %r1945, %r1944, 20;
	shf.l.wrap.b32 	%r1947, %r1944, %r1945, 20;
	mov.b64 	%rd2104, {%r1947, %r1946};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd2081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd2081;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 25;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 25;
	mov.b64 	%rd2105, {%r1951, %r1950};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1952}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd2082;
	}
	shf.l.wrap.b32 	%r1954, %r1953, %r1952, 8;
	shf.l.wrap.b32 	%r1955, %r1952, %r1953, 8;
	mov.b64 	%rd2106, {%r1955, %r1954};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1956}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd2083;
	}
	shf.l.wrap.b32 	%r1958, %r1957, %r1956, 14;
	shf.l.wrap.b32 	%r1959, %r1956, %r1957, 14;
	mov.b64 	%rd2107, {%r1959, %r1958};
	not.b64 	%rd2108, %rd2095;
	or.b64  	%rd2109, %rd2095, %rd2089;
	or.b64  	%rd2110, %rd2101, %rd2108;
	xor.b64  	%rd2111, %rd2110, %rd2089;
	and.b64  	%rd2112, %rd2107, %rd2101;
	xor.b64  	%rd2113, %rd2112, %rd2095;
	or.b64  	%rd2114, %rd2107, %rd2059;
	xor.b64  	%rd2115, %rd2114, %rd2101;
	and.b64  	%rd2116, %rd2089, %rd2059;
	xor.b64  	%rd2117, %rd2107, %rd2116;
	not.b64 	%rd2118, %rd2097;
	or.b64  	%rd2119, %rd2104, %rd2085;
	xor.b64  	%rd2120, %rd2119, %rd2098;
	and.b64  	%rd2121, %rd2091, %rd2085;
	xor.b64  	%rd2122, %rd2104, %rd2121;
	or.b64  	%rd2123, %rd2091, %rd2118;
	xor.b64  	%rd2124, %rd2123, %rd2085;
	or.b64  	%rd2125, %rd2098, %rd2097;
	xor.b64  	%rd2126, %rd2125, %rd2091;
	and.b64  	%rd2127, %rd2104, %rd2098;
	xor.b64  	%rd2128, %rd2127, %rd2097;
	not.b64 	%rd2129, %rd2106;
	or.b64  	%rd2130, %rd2100, %rd2094;
	xor.b64  	%rd2131, %rd2130, %rd2088;
	and.b64  	%rd2132, %rd2106, %rd2100;
	xor.b64  	%rd2133, %rd2132, %rd2094;
	and.b64  	%rd2134, %rd2087, %rd2129;
	xor.b64  	%rd2135, %rd2134, %rd2100;
	or.b64  	%rd2136, %rd2088, %rd2087;
	xor.b64  	%rd2137, %rd2136, %rd2129;
	and.b64  	%rd2138, %rd2094, %rd2088;
	xor.b64  	%rd2139, %rd2138, %rd2087;
	not.b64 	%rd2140, %rd2096;
	and.b64  	%rd2141, %rd2090, %rd2084;
	xor.b64  	%rd2142, %rd2103, %rd2141;
	or.b64  	%rd2143, %rd2096, %rd2090;
	xor.b64  	%rd2144, %rd2143, %rd2084;
	or.b64  	%rd2145, %rd2102, %rd2140;
	xor.b64  	%rd2146, %rd2145, %rd2090;
	and.b64  	%rd2147, %rd2103, %rd2102;
	xor.b64  	%rd2148, %rd2147, %rd2140;
	or.b64  	%rd2149, %rd2103, %rd2084;
	xor.b64  	%rd2150, %rd2149, %rd2102;
	not.b64 	%rd2151, %rd2099;
	and.b64  	%rd2152, %rd2105, %rd2151;
	xor.b64  	%rd2153, %rd2152, %rd2093;
	or.b64  	%rd2154, %rd2105, %rd2086;
	xor.b64  	%rd2155, %rd2154, %rd2151;
	and.b64  	%rd2156, %rd2092, %rd2086;
	xor.b64  	%rd2157, %rd2105, %rd2156;
	or.b64  	%rd2158, %rd2093, %rd2092;
	xor.b64  	%rd2159, %rd2158, %rd2086;
	and.b64  	%rd2160, %rd2099, %rd2093;
	xor.b64  	%rd2161, %rd2160, %rd2092;
	xor.b64  	%rd2162, %rd2059, %rd2109;
	xor.b64  	%rd2163, %rd2162, -9223372036854743037;
	xor.b64  	%rd2164, %rd2122, %rd2111;
	xor.b64  	%rd2165, %rd2133, %rd2144;
	xor.b64  	%rd2166, %rd2155, %rd2164;
	xor.b64  	%rd2167, %rd2166, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1960}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1961,%dummy}, %rd2167;
	}
	shf.l.wrap.b32 	%r1962, %r1961, %r1960, 1;
	shf.l.wrap.b32 	%r1963, %r1960, %r1961, 1;
	mov.b64 	%rd2168, {%r1963, %r1962};
	xor.b64  	%rd2169, %rd2117, %rd2128;
	xor.b64  	%rd2170, %rd2150, %rd2139;
	xor.b64  	%rd2171, %rd2170, %rd2161;
	xor.b64  	%rd2172, %rd2171, %rd2168;
	xor.b64  	%rd2173, %rd2172, %rd2169;
	xor.b64  	%rd2174, %rd2113, %rd2124;
	xor.b64  	%rd2175, %rd2135, %rd2146;
	xor.b64  	%rd2176, %rd2175, %rd2157;
	xor.b64  	%rd2177, %rd2176, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1964}, %rd2177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1965,%dummy}, %rd2177;
	}
	shf.l.wrap.b32 	%r1966, %r1965, %r1964, 1;
	shf.l.wrap.b32 	%r1967, %r1964, %r1965, 1;
	mov.b64 	%rd2178, {%r1967, %r1966};
	xor.b64  	%rd2179, %rd2120, %rd2163;
	xor.b64  	%rd2180, %rd2142, %rd2131;
	xor.b64  	%rd2181, %rd2153, %rd2180;
	xor.b64  	%rd2182, %rd2181, %rd2179;
	xor.b64  	%rd2183, %rd2182, %rd2178;
	xor.b64  	%rd2184, %rd2115, %rd2126;
	xor.b64  	%rd2185, %rd2137, %rd2148;
	xor.b64  	%rd2186, %rd2185, %rd2159;
	xor.b64  	%rd2187, %rd2186, %rd2184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1968}, %rd2187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1969,%dummy}, %rd2187;
	}
	shf.l.wrap.b32 	%r1970, %r1969, %r1968, 1;
	shf.l.wrap.b32 	%r1971, %r1968, %r1969, 1;
	mov.b64 	%rd2188, {%r1971, %r1970};
	xor.b64  	%rd2189, %rd2167, %rd2188;
	xor.b64  	%rd2190, %rd2171, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd2190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd2190;
	}
	shf.l.wrap.b32 	%r1974, %r1973, %r1972, 1;
	shf.l.wrap.b32 	%r1975, %r1972, %r1973, 1;
	mov.b64 	%rd2191, {%r1975, %r1974};
	xor.b64  	%rd2192, %rd2177, %rd2191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1976}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1977,%dummy}, %rd2182;
	}
	shf.l.wrap.b32 	%r1978, %r1977, %r1976, 1;
	shf.l.wrap.b32 	%r1979, %r1976, %r1977, 1;
	mov.b64 	%rd2193, {%r1979, %r1978};
	xor.b64  	%rd2194, %rd2187, %rd2193;
	xor.b64  	%rd2195, %rd2173, %rd2163;
	xor.b64  	%rd2196, %rd2173, %rd2120;
	xor.b64  	%rd2197, %rd2173, %rd2131;
	xor.b64  	%rd2198, %rd2173, %rd2142;
	xor.b64  	%rd2199, %rd2173, %rd2153;
	xor.b64  	%rd2200, %rd2183, %rd2111;
	xor.b64  	%rd2201, %rd2183, %rd2122;
	xor.b64  	%rd2202, %rd2183, %rd2133;
	xor.b64  	%rd2203, %rd2183, %rd2144;
	xor.b64  	%rd2204, %rd2183, %rd2155;
	xor.b64  	%rd2205, %rd2189, %rd2113;
	xor.b64  	%rd2206, %rd2189, %rd2124;
	xor.b64  	%rd2207, %rd2189, %rd2135;
	xor.b64  	%rd2208, %rd2189, %rd2146;
	xor.b64  	%rd2209, %rd2189, %rd2157;
	xor.b64  	%rd2210, %rd2192, %rd2115;
	xor.b64  	%rd2211, %rd2192, %rd2126;
	xor.b64  	%rd2212, %rd2192, %rd2137;
	xor.b64  	%rd2213, %rd2192, %rd2148;
	xor.b64  	%rd2214, %rd2192, %rd2159;
	xor.b64  	%rd2215, %rd2194, %rd2117;
	xor.b64  	%rd2216, %rd2194, %rd2128;
	xor.b64  	%rd2217, %rd2194, %rd2139;
	xor.b64  	%rd2218, %rd2194, %rd2150;
	xor.b64  	%rd2219, %rd2194, %rd2161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd2196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd2196;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 28;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 28;
	mov.b64 	%rd2220, {%r1983, %r1982};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1984}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd2197;
	}
	shf.l.wrap.b32 	%r1986, %r1985, %r1984, 3;
	shf.l.wrap.b32 	%r1987, %r1984, %r1985, 3;
	mov.b64 	%rd2221, {%r1987, %r1986};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd2198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd2198;
	}
	shf.r.wrap.b32 	%r1990, %r1989, %r1988, 23;
	shf.r.wrap.b32 	%r1991, %r1988, %r1989, 23;
	mov.b64 	%rd2222, {%r1991, %r1990};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1992}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1993,%dummy}, %rd2199;
	}
	shf.l.wrap.b32 	%r1994, %r1993, %r1992, 18;
	shf.l.wrap.b32 	%r1995, %r1992, %r1993, 18;
	mov.b64 	%rd2223, {%r1995, %r1994};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1997,%dummy}, %rd2200;
	}
	shf.l.wrap.b32 	%r1998, %r1997, %r1996, 1;
	shf.l.wrap.b32 	%r1999, %r1996, %r1997, 1;
	mov.b64 	%rd2224, {%r1999, %r1998};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd2201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2201;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 20;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 20;
	mov.b64 	%rd2225, {%r2003, %r2002};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd2202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2005,%dummy}, %rd2202;
	}
	shf.l.wrap.b32 	%r2006, %r2005, %r2004, 10;
	shf.l.wrap.b32 	%r2007, %r2004, %r2005, 10;
	mov.b64 	%rd2226, {%r2007, %r2006};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2008,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2009}, %rd2203;
	}
	shf.r.wrap.b32 	%r2010, %r2009, %r2008, 19;
	shf.r.wrap.b32 	%r2011, %r2008, %r2009, 19;
	mov.b64 	%rd2227, {%r2011, %r2010};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd2204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd2204;
	}
	shf.l.wrap.b32 	%r2014, %r2013, %r2012, 2;
	shf.l.wrap.b32 	%r2015, %r2012, %r2013, 2;
	mov.b64 	%rd2228, {%r2015, %r2014};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2016,%dummy}, %rd2205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2017}, %rd2205;
	}
	shf.r.wrap.b32 	%r2018, %r2017, %r2016, 2;
	shf.r.wrap.b32 	%r2019, %r2016, %r2017, 2;
	mov.b64 	%rd2229, {%r2019, %r2018};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2021,%dummy}, %rd2206;
	}
	shf.l.wrap.b32 	%r2022, %r2021, %r2020, 6;
	shf.l.wrap.b32 	%r2023, %r2020, %r2021, 6;
	mov.b64 	%rd2230, {%r2023, %r2022};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2024,%dummy}, %rd2207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2025}, %rd2207;
	}
	shf.r.wrap.b32 	%r2026, %r2025, %r2024, 21;
	shf.r.wrap.b32 	%r2027, %r2024, %r2025, 21;
	mov.b64 	%rd2231, {%r2027, %r2026};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2029,%dummy}, %rd2208;
	}
	shf.l.wrap.b32 	%r2030, %r2029, %r2028, 15;
	shf.l.wrap.b32 	%r2031, %r2028, %r2029, 15;
	mov.b64 	%rd2232, {%r2031, %r2030};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2032,%dummy}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2033}, %rd2209;
	}
	shf.r.wrap.b32 	%r2034, %r2033, %r2032, 3;
	shf.r.wrap.b32 	%r2035, %r2032, %r2033, 3;
	mov.b64 	%rd2233, {%r2035, %r2034};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd2210;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd2210;
	}
	shf.l.wrap.b32 	%r2038, %r2037, %r2036, 28;
	shf.l.wrap.b32 	%r2039, %r2036, %r2037, 28;
	mov.b64 	%rd2234, {%r2039, %r2038};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2040,%dummy}, %rd2211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2041}, %rd2211;
	}
	shf.r.wrap.b32 	%r2042, %r2041, %r2040, 9;
	shf.r.wrap.b32 	%r2043, %r2040, %r2041, 9;
	mov.b64 	%rd2235, {%r2043, %r2042};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2045,%dummy}, %rd2212;
	}
	shf.l.wrap.b32 	%r2046, %r2045, %r2044, 25;
	shf.l.wrap.b32 	%r2047, %r2044, %r2045, 25;
	mov.b64 	%rd2236, {%r2047, %r2046};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2048}, %rd2213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2049,%dummy}, %rd2213;
	}
	shf.l.wrap.b32 	%r2050, %r2049, %r2048, 21;
	shf.l.wrap.b32 	%r2051, %r2048, %r2049, 21;
	mov.b64 	%rd2237, {%r2051, %r2050};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2052,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd2214;
	}
	shf.r.wrap.b32 	%r2054, %r2053, %r2052, 8;
	shf.r.wrap.b32 	%r2055, %r2052, %r2053, 8;
	mov.b64 	%rd2238, {%r2055, %r2054};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2056}, %rd2215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2057,%dummy}, %rd2215;
	}
	shf.l.wrap.b32 	%r2058, %r2057, %r2056, 27;
	shf.l.wrap.b32 	%r2059, %r2056, %r2057, 27;
	mov.b64 	%rd2239, {%r2059, %r2058};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2061,%dummy}, %rd2216;
	}
	shf.l.wrap.b32 	%r2062, %r2061, %r2060, 20;
	shf.l.wrap.b32 	%r2063, %r2060, %r2061, 20;
	mov.b64 	%rd2240, {%r2063, %r2062};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2064,%dummy}, %rd2217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2065}, %rd2217;
	}
	shf.r.wrap.b32 	%r2066, %r2065, %r2064, 25;
	shf.r.wrap.b32 	%r2067, %r2064, %r2065, 25;
	mov.b64 	%rd2241, {%r2067, %r2066};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd2218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2069,%dummy}, %rd2218;
	}
	shf.l.wrap.b32 	%r2070, %r2069, %r2068, 8;
	shf.l.wrap.b32 	%r2071, %r2068, %r2069, 8;
	mov.b64 	%rd2242, {%r2071, %r2070};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2072}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2073,%dummy}, %rd2219;
	}
	shf.l.wrap.b32 	%r2074, %r2073, %r2072, 14;
	shf.l.wrap.b32 	%r2075, %r2072, %r2073, 14;
	mov.b64 	%rd2243, {%r2075, %r2074};
	not.b64 	%rd2244, %rd2231;
	or.b64  	%rd2245, %rd2231, %rd2225;
	or.b64  	%rd2246, %rd2237, %rd2244;
	xor.b64  	%rd2247, %rd2246, %rd2225;
	and.b64  	%rd2248, %rd2243, %rd2237;
	xor.b64  	%rd2249, %rd2248, %rd2231;
	or.b64  	%rd2250, %rd2243, %rd2195;
	xor.b64  	%rd2251, %rd2250, %rd2237;
	and.b64  	%rd2252, %rd2225, %rd2195;
	xor.b64  	%rd2253, %rd2243, %rd2252;
	not.b64 	%rd2254, %rd2233;
	or.b64  	%rd2255, %rd2240, %rd2221;
	xor.b64  	%rd2256, %rd2255, %rd2234;
	and.b64  	%rd2257, %rd2227, %rd2221;
	xor.b64  	%rd2258, %rd2240, %rd2257;
	or.b64  	%rd2259, %rd2227, %rd2254;
	xor.b64  	%rd2260, %rd2259, %rd2221;
	or.b64  	%rd2261, %rd2234, %rd2233;
	xor.b64  	%rd2262, %rd2261, %rd2227;
	and.b64  	%rd2263, %rd2240, %rd2234;
	xor.b64  	%rd2264, %rd2263, %rd2233;
	not.b64 	%rd2265, %rd2242;
	or.b64  	%rd2266, %rd2236, %rd2230;
	xor.b64  	%rd2267, %rd2266, %rd2224;
	and.b64  	%rd2268, %rd2242, %rd2236;
	xor.b64  	%rd2269, %rd2268, %rd2230;
	and.b64  	%rd2270, %rd2223, %rd2265;
	xor.b64  	%rd2271, %rd2270, %rd2236;
	or.b64  	%rd2272, %rd2224, %rd2223;
	xor.b64  	%rd2273, %rd2272, %rd2265;
	and.b64  	%rd2274, %rd2230, %rd2224;
	xor.b64  	%rd2275, %rd2274, %rd2223;
	not.b64 	%rd2276, %rd2232;
	and.b64  	%rd2277, %rd2226, %rd2220;
	xor.b64  	%rd2278, %rd2239, %rd2277;
	or.b64  	%rd2279, %rd2232, %rd2226;
	xor.b64  	%rd2280, %rd2279, %rd2220;
	or.b64  	%rd2281, %rd2238, %rd2276;
	xor.b64  	%rd2282, %rd2281, %rd2226;
	and.b64  	%rd2283, %rd2239, %rd2238;
	xor.b64  	%rd2284, %rd2283, %rd2276;
	or.b64  	%rd2285, %rd2239, %rd2220;
	xor.b64  	%rd2286, %rd2285, %rd2238;
	not.b64 	%rd2287, %rd2235;
	and.b64  	%rd2288, %rd2241, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2229;
	or.b64  	%rd2290, %rd2241, %rd2222;
	xor.b64  	%rd2291, %rd2290, %rd2287;
	and.b64  	%rd2292, %rd2228, %rd2222;
	xor.b64  	%rd2293, %rd2241, %rd2292;
	or.b64  	%rd2294, %rd2229, %rd2228;
	xor.b64  	%rd2295, %rd2294, %rd2222;
	and.b64  	%rd2296, %rd2235, %rd2229;
	xor.b64  	%rd2297, %rd2296, %rd2228;
	xor.b64  	%rd2298, %rd2195, %rd2245;
	xor.b64  	%rd2299, %rd2298, -9223372036854743038;
	xor.b64  	%rd2300, %rd2258, %rd2247;
	xor.b64  	%rd2301, %rd2269, %rd2280;
	xor.b64  	%rd2302, %rd2291, %rd2300;
	xor.b64  	%rd2303, %rd2302, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd2303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2077,%dummy}, %rd2303;
	}
	shf.l.wrap.b32 	%r2078, %r2077, %r2076, 1;
	shf.l.wrap.b32 	%r2079, %r2076, %r2077, 1;
	mov.b64 	%rd2304, {%r2079, %r2078};
	xor.b64  	%rd2305, %rd2253, %rd2264;
	xor.b64  	%rd2306, %rd2286, %rd2275;
	xor.b64  	%rd2307, %rd2306, %rd2297;
	xor.b64  	%rd2308, %rd2307, %rd2304;
	xor.b64  	%rd2309, %rd2308, %rd2305;
	xor.b64  	%rd2310, %rd2249, %rd2260;
	xor.b64  	%rd2311, %rd2271, %rd2282;
	xor.b64  	%rd2312, %rd2311, %rd2293;
	xor.b64  	%rd2313, %rd2312, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2080}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2081,%dummy}, %rd2313;
	}
	shf.l.wrap.b32 	%r2082, %r2081, %r2080, 1;
	shf.l.wrap.b32 	%r2083, %r2080, %r2081, 1;
	mov.b64 	%rd2314, {%r2083, %r2082};
	xor.b64  	%rd2315, %rd2256, %rd2299;
	xor.b64  	%rd2316, %rd2278, %rd2267;
	xor.b64  	%rd2317, %rd2289, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	xor.b64  	%rd2319, %rd2318, %rd2314;
	xor.b64  	%rd2320, %rd2251, %rd2262;
	xor.b64  	%rd2321, %rd2273, %rd2284;
	xor.b64  	%rd2322, %rd2321, %rd2295;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2085,%dummy}, %rd2323;
	}
	shf.l.wrap.b32 	%r2086, %r2085, %r2084, 1;
	shf.l.wrap.b32 	%r2087, %r2084, %r2085, 1;
	mov.b64 	%rd2324, {%r2087, %r2086};
	xor.b64  	%rd2325, %rd2303, %rd2324;
	xor.b64  	%rd2326, %rd2307, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2088}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2089,%dummy}, %rd2326;
	}
	shf.l.wrap.b32 	%r2090, %r2089, %r2088, 1;
	shf.l.wrap.b32 	%r2091, %r2088, %r2089, 1;
	mov.b64 	%rd2327, {%r2091, %r2090};
	xor.b64  	%rd2328, %rd2313, %rd2327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2093,%dummy}, %rd2318;
	}
	shf.l.wrap.b32 	%r2094, %r2093, %r2092, 1;
	shf.l.wrap.b32 	%r2095, %r2092, %r2093, 1;
	mov.b64 	%rd2329, {%r2095, %r2094};
	xor.b64  	%rd2330, %rd2323, %rd2329;
	xor.b64  	%rd2331, %rd2309, %rd2299;
	xor.b64  	%rd2332, %rd2309, %rd2256;
	xor.b64  	%rd2333, %rd2309, %rd2267;
	xor.b64  	%rd2334, %rd2309, %rd2278;
	xor.b64  	%rd2335, %rd2309, %rd2289;
	xor.b64  	%rd2336, %rd2319, %rd2247;
	xor.b64  	%rd2337, %rd2319, %rd2258;
	xor.b64  	%rd2338, %rd2319, %rd2269;
	xor.b64  	%rd2339, %rd2319, %rd2280;
	xor.b64  	%rd2340, %rd2319, %rd2291;
	xor.b64  	%rd2341, %rd2325, %rd2249;
	xor.b64  	%rd2342, %rd2325, %rd2260;
	xor.b64  	%rd2343, %rd2325, %rd2271;
	xor.b64  	%rd2344, %rd2325, %rd2282;
	xor.b64  	%rd2345, %rd2325, %rd2293;
	xor.b64  	%rd2346, %rd2328, %rd2251;
	xor.b64  	%rd2347, %rd2328, %rd2262;
	xor.b64  	%rd2348, %rd2328, %rd2273;
	xor.b64  	%rd2349, %rd2328, %rd2284;
	xor.b64  	%rd2350, %rd2328, %rd2295;
	xor.b64  	%rd2351, %rd2330, %rd2253;
	xor.b64  	%rd2352, %rd2330, %rd2264;
	xor.b64  	%rd2353, %rd2330, %rd2275;
	xor.b64  	%rd2354, %rd2330, %rd2286;
	xor.b64  	%rd2355, %rd2330, %rd2297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2096,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2097}, %rd2332;
	}
	shf.r.wrap.b32 	%r2098, %r2097, %r2096, 28;
	shf.r.wrap.b32 	%r2099, %r2096, %r2097, 28;
	mov.b64 	%rd2356, {%r2099, %r2098};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2100}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2101,%dummy}, %rd2333;
	}
	shf.l.wrap.b32 	%r2102, %r2101, %r2100, 3;
	shf.l.wrap.b32 	%r2103, %r2100, %r2101, 3;
	mov.b64 	%rd2357, {%r2103, %r2102};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2104,%dummy}, %rd2334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2105}, %rd2334;
	}
	shf.r.wrap.b32 	%r2106, %r2105, %r2104, 23;
	shf.r.wrap.b32 	%r2107, %r2104, %r2105, 23;
	mov.b64 	%rd2358, {%r2107, %r2106};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd2335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2109,%dummy}, %rd2335;
	}
	shf.l.wrap.b32 	%r2110, %r2109, %r2108, 18;
	shf.l.wrap.b32 	%r2111, %r2108, %r2109, 18;
	mov.b64 	%rd2359, {%r2111, %r2110};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2112}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2113,%dummy}, %rd2336;
	}
	shf.l.wrap.b32 	%r2114, %r2113, %r2112, 1;
	shf.l.wrap.b32 	%r2115, %r2112, %r2113, 1;
	mov.b64 	%rd2360, {%r2115, %r2114};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2116,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2117}, %rd2337;
	}
	shf.r.wrap.b32 	%r2118, %r2117, %r2116, 20;
	shf.r.wrap.b32 	%r2119, %r2116, %r2117, 20;
	mov.b64 	%rd2361, {%r2119, %r2118};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2120}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2121,%dummy}, %rd2338;
	}
	shf.l.wrap.b32 	%r2122, %r2121, %r2120, 10;
	shf.l.wrap.b32 	%r2123, %r2120, %r2121, 10;
	mov.b64 	%rd2362, {%r2123, %r2122};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2124,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2125}, %rd2339;
	}
	shf.r.wrap.b32 	%r2126, %r2125, %r2124, 19;
	shf.r.wrap.b32 	%r2127, %r2124, %r2125, 19;
	mov.b64 	%rd2363, {%r2127, %r2126};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2128}, %rd2340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2129,%dummy}, %rd2340;
	}
	shf.l.wrap.b32 	%r2130, %r2129, %r2128, 2;
	shf.l.wrap.b32 	%r2131, %r2128, %r2129, 2;
	mov.b64 	%rd2364, {%r2131, %r2130};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2132,%dummy}, %rd2341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd2341;
	}
	shf.r.wrap.b32 	%r2134, %r2133, %r2132, 2;
	shf.r.wrap.b32 	%r2135, %r2132, %r2133, 2;
	mov.b64 	%rd2365, {%r2135, %r2134};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2136}, %rd2342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2137,%dummy}, %rd2342;
	}
	shf.l.wrap.b32 	%r2138, %r2137, %r2136, 6;
	shf.l.wrap.b32 	%r2139, %r2136, %r2137, 6;
	mov.b64 	%rd2366, {%r2139, %r2138};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd2343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd2343;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 21;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 21;
	mov.b64 	%rd2367, {%r2143, %r2142};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2144}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2145,%dummy}, %rd2344;
	}
	shf.l.wrap.b32 	%r2146, %r2145, %r2144, 15;
	shf.l.wrap.b32 	%r2147, %r2144, %r2145, 15;
	mov.b64 	%rd2368, {%r2147, %r2146};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2148,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2149}, %rd2345;
	}
	shf.r.wrap.b32 	%r2150, %r2149, %r2148, 3;
	shf.r.wrap.b32 	%r2151, %r2148, %r2149, 3;
	mov.b64 	%rd2369, {%r2151, %r2150};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2152}, %rd2346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2153,%dummy}, %rd2346;
	}
	shf.l.wrap.b32 	%r2154, %r2153, %r2152, 28;
	shf.l.wrap.b32 	%r2155, %r2152, %r2153, 28;
	mov.b64 	%rd2370, {%r2155, %r2154};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2156,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2157}, %rd2347;
	}
	shf.r.wrap.b32 	%r2158, %r2157, %r2156, 9;
	shf.r.wrap.b32 	%r2159, %r2156, %r2157, 9;
	mov.b64 	%rd2371, {%r2159, %r2158};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2160}, %rd2348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2161,%dummy}, %rd2348;
	}
	shf.l.wrap.b32 	%r2162, %r2161, %r2160, 25;
	shf.l.wrap.b32 	%r2163, %r2160, %r2161, 25;
	mov.b64 	%rd2372, {%r2163, %r2162};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2164}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2165,%dummy}, %rd2349;
	}
	shf.l.wrap.b32 	%r2166, %r2165, %r2164, 21;
	shf.l.wrap.b32 	%r2167, %r2164, %r2165, 21;
	mov.b64 	%rd2373, {%r2167, %r2166};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2168,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2169}, %rd2350;
	}
	shf.r.wrap.b32 	%r2170, %r2169, %r2168, 8;
	shf.r.wrap.b32 	%r2171, %r2168, %r2169, 8;
	mov.b64 	%rd2374, {%r2171, %r2170};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2172}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2173,%dummy}, %rd2351;
	}
	shf.l.wrap.b32 	%r2174, %r2173, %r2172, 27;
	shf.l.wrap.b32 	%r2175, %r2172, %r2173, 27;
	mov.b64 	%rd2375, {%r2175, %r2174};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2176}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2177,%dummy}, %rd2352;
	}
	shf.l.wrap.b32 	%r2178, %r2177, %r2176, 20;
	shf.l.wrap.b32 	%r2179, %r2176, %r2177, 20;
	mov.b64 	%rd2376, {%r2179, %r2178};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2180,%dummy}, %rd2353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2181}, %rd2353;
	}
	shf.r.wrap.b32 	%r2182, %r2181, %r2180, 25;
	shf.r.wrap.b32 	%r2183, %r2180, %r2181, 25;
	mov.b64 	%rd2377, {%r2183, %r2182};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2184}, %rd2354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2185,%dummy}, %rd2354;
	}
	shf.l.wrap.b32 	%r2186, %r2185, %r2184, 8;
	shf.l.wrap.b32 	%r2187, %r2184, %r2185, 8;
	mov.b64 	%rd2378, {%r2187, %r2186};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2188}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2189,%dummy}, %rd2355;
	}
	shf.l.wrap.b32 	%r2190, %r2189, %r2188, 14;
	shf.l.wrap.b32 	%r2191, %r2188, %r2189, 14;
	mov.b64 	%rd2379, {%r2191, %r2190};
	not.b64 	%rd2380, %rd2367;
	or.b64  	%rd2381, %rd2367, %rd2361;
	or.b64  	%rd2382, %rd2373, %rd2380;
	xor.b64  	%rd2383, %rd2382, %rd2361;
	and.b64  	%rd2384, %rd2379, %rd2373;
	xor.b64  	%rd2385, %rd2384, %rd2367;
	or.b64  	%rd2386, %rd2379, %rd2331;
	xor.b64  	%rd2387, %rd2386, %rd2373;
	and.b64  	%rd2388, %rd2361, %rd2331;
	xor.b64  	%rd2389, %rd2379, %rd2388;
	not.b64 	%rd2390, %rd2369;
	or.b64  	%rd2391, %rd2376, %rd2357;
	xor.b64  	%rd2392, %rd2391, %rd2370;
	and.b64  	%rd2393, %rd2363, %rd2357;
	xor.b64  	%rd2394, %rd2376, %rd2393;
	or.b64  	%rd2395, %rd2363, %rd2390;
	xor.b64  	%rd2396, %rd2395, %rd2357;
	or.b64  	%rd2397, %rd2370, %rd2369;
	xor.b64  	%rd2398, %rd2397, %rd2363;
	and.b64  	%rd2399, %rd2376, %rd2370;
	xor.b64  	%rd2400, %rd2399, %rd2369;
	not.b64 	%rd2401, %rd2378;
	or.b64  	%rd2402, %rd2372, %rd2366;
	xor.b64  	%rd2403, %rd2402, %rd2360;
	and.b64  	%rd2404, %rd2378, %rd2372;
	xor.b64  	%rd2405, %rd2404, %rd2366;
	and.b64  	%rd2406, %rd2359, %rd2401;
	xor.b64  	%rd2407, %rd2406, %rd2372;
	or.b64  	%rd2408, %rd2360, %rd2359;
	xor.b64  	%rd2409, %rd2408, %rd2401;
	and.b64  	%rd2410, %rd2366, %rd2360;
	xor.b64  	%rd2411, %rd2410, %rd2359;
	not.b64 	%rd2412, %rd2368;
	and.b64  	%rd2413, %rd2362, %rd2356;
	xor.b64  	%rd2414, %rd2375, %rd2413;
	or.b64  	%rd2415, %rd2368, %rd2362;
	xor.b64  	%rd2416, %rd2415, %rd2356;
	or.b64  	%rd2417, %rd2374, %rd2412;
	xor.b64  	%rd2418, %rd2417, %rd2362;
	and.b64  	%rd2419, %rd2375, %rd2374;
	xor.b64  	%rd2420, %rd2419, %rd2412;
	or.b64  	%rd2421, %rd2375, %rd2356;
	xor.b64  	%rd2422, %rd2421, %rd2374;
	not.b64 	%rd2423, %rd2371;
	and.b64  	%rd2424, %rd2377, %rd2423;
	xor.b64  	%rd2425, %rd2424, %rd2365;
	or.b64  	%rd2426, %rd2377, %rd2358;
	xor.b64  	%rd2427, %rd2426, %rd2423;
	and.b64  	%rd2428, %rd2364, %rd2358;
	xor.b64  	%rd2429, %rd2377, %rd2428;
	or.b64  	%rd2430, %rd2365, %rd2364;
	xor.b64  	%rd2431, %rd2430, %rd2358;
	and.b64  	%rd2432, %rd2371, %rd2365;
	xor.b64  	%rd2433, %rd2432, %rd2364;
	xor.b64  	%rd2434, %rd2331, %rd2381;
	xor.b64  	%rd2435, %rd2434, -9223372036854775680;
	xor.b64  	%rd2436, %rd2394, %rd2383;
	xor.b64  	%rd2437, %rd2405, %rd2416;
	xor.b64  	%rd2438, %rd2427, %rd2436;
	xor.b64  	%rd2439, %rd2438, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2192}, %rd2439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2193,%dummy}, %rd2439;
	}
	shf.l.wrap.b32 	%r2194, %r2193, %r2192, 1;
	shf.l.wrap.b32 	%r2195, %r2192, %r2193, 1;
	mov.b64 	%rd2440, {%r2195, %r2194};
	xor.b64  	%rd2441, %rd2389, %rd2400;
	xor.b64  	%rd2442, %rd2422, %rd2411;
	xor.b64  	%rd2443, %rd2442, %rd2433;
	xor.b64  	%rd2444, %rd2443, %rd2440;
	xor.b64  	%rd2445, %rd2444, %rd2441;
	xor.b64  	%rd2446, %rd2385, %rd2396;
	xor.b64  	%rd2447, %rd2407, %rd2418;
	xor.b64  	%rd2448, %rd2447, %rd2429;
	xor.b64  	%rd2449, %rd2448, %rd2446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2196}, %rd2449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2197,%dummy}, %rd2449;
	}
	shf.l.wrap.b32 	%r2198, %r2197, %r2196, 1;
	shf.l.wrap.b32 	%r2199, %r2196, %r2197, 1;
	mov.b64 	%rd2450, {%r2199, %r2198};
	xor.b64  	%rd2451, %rd2392, %rd2435;
	xor.b64  	%rd2452, %rd2414, %rd2403;
	xor.b64  	%rd2453, %rd2425, %rd2452;
	xor.b64  	%rd2454, %rd2453, %rd2451;
	xor.b64  	%rd2455, %rd2454, %rd2450;
	xor.b64  	%rd2456, %rd2387, %rd2398;
	xor.b64  	%rd2457, %rd2409, %rd2420;
	xor.b64  	%rd2458, %rd2457, %rd2431;
	xor.b64  	%rd2459, %rd2458, %rd2456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2200}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2201,%dummy}, %rd2459;
	}
	shf.l.wrap.b32 	%r2202, %r2201, %r2200, 1;
	shf.l.wrap.b32 	%r2203, %r2200, %r2201, 1;
	mov.b64 	%rd2460, {%r2203, %r2202};
	xor.b64  	%rd2461, %rd2439, %rd2460;
	xor.b64  	%rd2462, %rd2443, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2204}, %rd2462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd2462;
	}
	shf.l.wrap.b32 	%r2206, %r2205, %r2204, 1;
	shf.l.wrap.b32 	%r2207, %r2204, %r2205, 1;
	mov.b64 	%rd2463, {%r2207, %r2206};
	xor.b64  	%rd2464, %rd2449, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2208}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2209,%dummy}, %rd2454;
	}
	shf.l.wrap.b32 	%r2210, %r2209, %r2208, 1;
	shf.l.wrap.b32 	%r2211, %r2208, %r2209, 1;
	mov.b64 	%rd2465, {%r2211, %r2210};
	xor.b64  	%rd2466, %rd2459, %rd2465;
	xor.b64  	%rd2467, %rd2445, %rd2435;
	xor.b64  	%rd2468, %rd2445, %rd2392;
	xor.b64  	%rd2469, %rd2445, %rd2403;
	xor.b64  	%rd2470, %rd2445, %rd2414;
	xor.b64  	%rd2471, %rd2445, %rd2425;
	xor.b64  	%rd2472, %rd2455, %rd2383;
	xor.b64  	%rd2473, %rd2455, %rd2394;
	xor.b64  	%rd2474, %rd2455, %rd2405;
	xor.b64  	%rd2475, %rd2455, %rd2416;
	xor.b64  	%rd2476, %rd2455, %rd2427;
	xor.b64  	%rd2477, %rd2461, %rd2385;
	xor.b64  	%rd2478, %rd2461, %rd2396;
	xor.b64  	%rd2479, %rd2461, %rd2407;
	xor.b64  	%rd2480, %rd2461, %rd2418;
	xor.b64  	%rd2481, %rd2461, %rd2429;
	xor.b64  	%rd2482, %rd2464, %rd2387;
	xor.b64  	%rd2483, %rd2464, %rd2398;
	xor.b64  	%rd2484, %rd2464, %rd2409;
	xor.b64  	%rd2485, %rd2464, %rd2420;
	xor.b64  	%rd2486, %rd2464, %rd2431;
	xor.b64  	%rd2487, %rd2466, %rd2389;
	xor.b64  	%rd2488, %rd2466, %rd2400;
	xor.b64  	%rd2489, %rd2466, %rd2411;
	xor.b64  	%rd2490, %rd2466, %rd2422;
	xor.b64  	%rd2491, %rd2466, %rd2433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2212,%dummy}, %rd2468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2213}, %rd2468;
	}
	shf.r.wrap.b32 	%r2214, %r2213, %r2212, 28;
	shf.r.wrap.b32 	%r2215, %r2212, %r2213, 28;
	mov.b64 	%rd2492, {%r2215, %r2214};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2216}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2217,%dummy}, %rd2469;
	}
	shf.l.wrap.b32 	%r2218, %r2217, %r2216, 3;
	shf.l.wrap.b32 	%r2219, %r2216, %r2217, 3;
	mov.b64 	%rd2493, {%r2219, %r2218};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd2470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd2470;
	}
	shf.r.wrap.b32 	%r2222, %r2221, %r2220, 23;
	shf.r.wrap.b32 	%r2223, %r2220, %r2221, 23;
	mov.b64 	%rd2494, {%r2223, %r2222};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2224}, %rd2471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2225,%dummy}, %rd2471;
	}
	shf.l.wrap.b32 	%r2226, %r2225, %r2224, 18;
	shf.l.wrap.b32 	%r2227, %r2224, %r2225, 18;
	mov.b64 	%rd2495, {%r2227, %r2226};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2228}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd2472;
	}
	shf.l.wrap.b32 	%r2230, %r2229, %r2228, 1;
	shf.l.wrap.b32 	%r2231, %r2228, %r2229, 1;
	mov.b64 	%rd2496, {%r2231, %r2230};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2232,%dummy}, %rd2473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2233}, %rd2473;
	}
	shf.r.wrap.b32 	%r2234, %r2233, %r2232, 20;
	shf.r.wrap.b32 	%r2235, %r2232, %r2233, 20;
	mov.b64 	%rd2497, {%r2235, %r2234};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd2474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2237,%dummy}, %rd2474;
	}
	shf.l.wrap.b32 	%r2238, %r2237, %r2236, 10;
	shf.l.wrap.b32 	%r2239, %r2236, %r2237, 10;
	mov.b64 	%rd2498, {%r2239, %r2238};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2240,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2241}, %rd2475;
	}
	shf.r.wrap.b32 	%r2242, %r2241, %r2240, 19;
	shf.r.wrap.b32 	%r2243, %r2240, %r2241, 19;
	mov.b64 	%rd2499, {%r2243, %r2242};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2244}, %rd2476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2245,%dummy}, %rd2476;
	}
	shf.l.wrap.b32 	%r2246, %r2245, %r2244, 2;
	shf.l.wrap.b32 	%r2247, %r2244, %r2245, 2;
	mov.b64 	%rd2500, {%r2247, %r2246};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2248,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2249}, %rd2477;
	}
	shf.r.wrap.b32 	%r2250, %r2249, %r2248, 2;
	shf.r.wrap.b32 	%r2251, %r2248, %r2249, 2;
	mov.b64 	%rd2501, {%r2251, %r2250};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2252}, %rd2478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd2478;
	}
	shf.l.wrap.b32 	%r2254, %r2253, %r2252, 6;
	shf.l.wrap.b32 	%r2255, %r2252, %r2253, 6;
	mov.b64 	%rd2502, {%r2255, %r2254};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2256,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2257}, %rd2479;
	}
	shf.r.wrap.b32 	%r2258, %r2257, %r2256, 21;
	shf.r.wrap.b32 	%r2259, %r2256, %r2257, 21;
	mov.b64 	%rd2503, {%r2259, %r2258};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2261,%dummy}, %rd2480;
	}
	shf.l.wrap.b32 	%r2262, %r2261, %r2260, 15;
	shf.l.wrap.b32 	%r2263, %r2260, %r2261, 15;
	mov.b64 	%rd2504, {%r2263, %r2262};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2264,%dummy}, %rd2481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2265}, %rd2481;
	}
	shf.r.wrap.b32 	%r2266, %r2265, %r2264, 3;
	shf.r.wrap.b32 	%r2267, %r2264, %r2265, 3;
	mov.b64 	%rd2505, {%r2267, %r2266};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2268}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2269,%dummy}, %rd2482;
	}
	shf.l.wrap.b32 	%r2270, %r2269, %r2268, 28;
	shf.l.wrap.b32 	%r2271, %r2268, %r2269, 28;
	mov.b64 	%rd2506, {%r2271, %r2270};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2272,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2273}, %rd2483;
	}
	shf.r.wrap.b32 	%r2274, %r2273, %r2272, 9;
	shf.r.wrap.b32 	%r2275, %r2272, %r2273, 9;
	mov.b64 	%rd2507, {%r2275, %r2274};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2276}, %rd2484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd2484;
	}
	shf.l.wrap.b32 	%r2278, %r2277, %r2276, 25;
	shf.l.wrap.b32 	%r2279, %r2276, %r2277, 25;
	mov.b64 	%rd2508, {%r2279, %r2278};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2280}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2281,%dummy}, %rd2485;
	}
	shf.l.wrap.b32 	%r2282, %r2281, %r2280, 21;
	shf.l.wrap.b32 	%r2283, %r2280, %r2281, 21;
	mov.b64 	%rd2509, {%r2283, %r2282};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2284,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2285}, %rd2486;
	}
	shf.r.wrap.b32 	%r2286, %r2285, %r2284, 8;
	shf.r.wrap.b32 	%r2287, %r2284, %r2285, 8;
	mov.b64 	%rd2510, {%r2287, %r2286};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2288}, %rd2487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2289,%dummy}, %rd2487;
	}
	shf.l.wrap.b32 	%r2290, %r2289, %r2288, 27;
	shf.l.wrap.b32 	%r2291, %r2288, %r2289, 27;
	mov.b64 	%rd2511, {%r2291, %r2290};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2292}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2293,%dummy}, %rd2488;
	}
	shf.l.wrap.b32 	%r2294, %r2293, %r2292, 20;
	shf.l.wrap.b32 	%r2295, %r2292, %r2293, 20;
	mov.b64 	%rd2512, {%r2295, %r2294};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2296,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2297}, %rd2489;
	}
	shf.r.wrap.b32 	%r2298, %r2297, %r2296, 25;
	shf.r.wrap.b32 	%r2299, %r2296, %r2297, 25;
	mov.b64 	%rd2513, {%r2299, %r2298};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2300}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd2490;
	}
	shf.l.wrap.b32 	%r2302, %r2301, %r2300, 8;
	shf.l.wrap.b32 	%r2303, %r2300, %r2301, 8;
	mov.b64 	%rd2514, {%r2303, %r2302};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2304}, %rd2491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2305,%dummy}, %rd2491;
	}
	shf.l.wrap.b32 	%r2306, %r2305, %r2304, 14;
	shf.l.wrap.b32 	%r2307, %r2304, %r2305, 14;
	mov.b64 	%rd2515, {%r2307, %r2306};
	not.b64 	%rd2516, %rd2503;
	or.b64  	%rd2517, %rd2503, %rd2497;
	or.b64  	%rd2518, %rd2509, %rd2516;
	xor.b64  	%rd2519, %rd2518, %rd2497;
	and.b64  	%rd2520, %rd2515, %rd2509;
	xor.b64  	%rd2521, %rd2520, %rd2503;
	or.b64  	%rd2522, %rd2515, %rd2467;
	xor.b64  	%rd2523, %rd2522, %rd2509;
	and.b64  	%rd2524, %rd2497, %rd2467;
	xor.b64  	%rd2525, %rd2515, %rd2524;
	not.b64 	%rd2526, %rd2505;
	or.b64  	%rd2527, %rd2512, %rd2493;
	xor.b64  	%rd2528, %rd2527, %rd2506;
	and.b64  	%rd2529, %rd2499, %rd2493;
	xor.b64  	%rd2530, %rd2512, %rd2529;
	or.b64  	%rd2531, %rd2499, %rd2526;
	xor.b64  	%rd2532, %rd2531, %rd2493;
	or.b64  	%rd2533, %rd2506, %rd2505;
	xor.b64  	%rd2534, %rd2533, %rd2499;
	and.b64  	%rd2535, %rd2512, %rd2506;
	xor.b64  	%rd2536, %rd2535, %rd2505;
	not.b64 	%rd2537, %rd2514;
	or.b64  	%rd2538, %rd2508, %rd2502;
	xor.b64  	%rd2539, %rd2538, %rd2496;
	and.b64  	%rd2540, %rd2514, %rd2508;
	xor.b64  	%rd2541, %rd2540, %rd2502;
	and.b64  	%rd2542, %rd2495, %rd2537;
	xor.b64  	%rd2543, %rd2542, %rd2508;
	or.b64  	%rd2544, %rd2496, %rd2495;
	xor.b64  	%rd2545, %rd2544, %rd2537;
	and.b64  	%rd2546, %rd2502, %rd2496;
	xor.b64  	%rd2547, %rd2546, %rd2495;
	not.b64 	%rd2548, %rd2504;
	and.b64  	%rd2549, %rd2498, %rd2492;
	xor.b64  	%rd2550, %rd2511, %rd2549;
	or.b64  	%rd2551, %rd2504, %rd2498;
	xor.b64  	%rd2552, %rd2551, %rd2492;
	or.b64  	%rd2553, %rd2510, %rd2548;
	xor.b64  	%rd2554, %rd2553, %rd2498;
	and.b64  	%rd2555, %rd2511, %rd2510;
	xor.b64  	%rd2556, %rd2555, %rd2548;
	or.b64  	%rd2557, %rd2511, %rd2492;
	xor.b64  	%rd2558, %rd2557, %rd2510;
	not.b64 	%rd2559, %rd2507;
	and.b64  	%rd2560, %rd2513, %rd2559;
	xor.b64  	%rd2561, %rd2560, %rd2501;
	or.b64  	%rd2562, %rd2513, %rd2494;
	xor.b64  	%rd2563, %rd2562, %rd2559;
	and.b64  	%rd2564, %rd2500, %rd2494;
	xor.b64  	%rd2565, %rd2513, %rd2564;
	or.b64  	%rd2566, %rd2501, %rd2500;
	xor.b64  	%rd2567, %rd2566, %rd2494;
	and.b64  	%rd2568, %rd2507, %rd2501;
	xor.b64  	%rd2569, %rd2568, %rd2500;
	xor.b64  	%rd2570, %rd2467, %rd2517;
	xor.b64  	%rd2571, %rd2570, 32778;
	xor.b64  	%rd2572, %rd2530, %rd2519;
	xor.b64  	%rd2573, %rd2541, %rd2552;
	xor.b64  	%rd2574, %rd2563, %rd2572;
	xor.b64  	%rd2575, %rd2574, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2309,%dummy}, %rd2575;
	}
	shf.l.wrap.b32 	%r2310, %r2309, %r2308, 1;
	shf.l.wrap.b32 	%r2311, %r2308, %r2309, 1;
	mov.b64 	%rd2576, {%r2311, %r2310};
	xor.b64  	%rd2577, %rd2525, %rd2536;
	xor.b64  	%rd2578, %rd2558, %rd2547;
	xor.b64  	%rd2579, %rd2578, %rd2569;
	xor.b64  	%rd2580, %rd2579, %rd2576;
	xor.b64  	%rd2581, %rd2580, %rd2577;
	xor.b64  	%rd2582, %rd2521, %rd2532;
	xor.b64  	%rd2583, %rd2543, %rd2554;
	xor.b64  	%rd2584, %rd2583, %rd2565;
	xor.b64  	%rd2585, %rd2584, %rd2582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2312}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2313,%dummy}, %rd2585;
	}
	shf.l.wrap.b32 	%r2314, %r2313, %r2312, 1;
	shf.l.wrap.b32 	%r2315, %r2312, %r2313, 1;
	mov.b64 	%rd2586, {%r2315, %r2314};
	xor.b64  	%rd2587, %rd2528, %rd2571;
	xor.b64  	%rd2588, %rd2550, %rd2539;
	xor.b64  	%rd2589, %rd2561, %rd2588;
	xor.b64  	%rd2590, %rd2589, %rd2587;
	xor.b64  	%rd2591, %rd2590, %rd2586;
	xor.b64  	%rd2592, %rd2523, %rd2534;
	xor.b64  	%rd2593, %rd2545, %rd2556;
	xor.b64  	%rd2594, %rd2593, %rd2567;
	xor.b64  	%rd2595, %rd2594, %rd2592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2316}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd2595;
	}
	shf.l.wrap.b32 	%r2318, %r2317, %r2316, 1;
	shf.l.wrap.b32 	%r2319, %r2316, %r2317, 1;
	mov.b64 	%rd2596, {%r2319, %r2318};
	xor.b64  	%rd2597, %rd2575, %rd2596;
	xor.b64  	%rd2598, %rd2579, %rd2577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2321,%dummy}, %rd2598;
	}
	shf.l.wrap.b32 	%r2322, %r2321, %r2320, 1;
	shf.l.wrap.b32 	%r2323, %r2320, %r2321, 1;
	mov.b64 	%rd2599, {%r2323, %r2322};
	xor.b64  	%rd2600, %rd2585, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2324}, %rd2590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd2590;
	}
	shf.l.wrap.b32 	%r2326, %r2325, %r2324, 1;
	shf.l.wrap.b32 	%r2327, %r2324, %r2325, 1;
	mov.b64 	%rd2601, {%r2327, %r2326};
	xor.b64  	%rd2602, %rd2595, %rd2601;
	xor.b64  	%rd2603, %rd2581, %rd2571;
	xor.b64  	%rd2604, %rd2581, %rd2528;
	xor.b64  	%rd2605, %rd2581, %rd2539;
	xor.b64  	%rd2606, %rd2581, %rd2550;
	xor.b64  	%rd2607, %rd2581, %rd2561;
	xor.b64  	%rd2608, %rd2591, %rd2519;
	xor.b64  	%rd2609, %rd2591, %rd2530;
	xor.b64  	%rd2610, %rd2591, %rd2541;
	xor.b64  	%rd2611, %rd2591, %rd2552;
	xor.b64  	%rd2612, %rd2591, %rd2563;
	xor.b64  	%rd2613, %rd2597, %rd2521;
	xor.b64  	%rd2614, %rd2597, %rd2532;
	xor.b64  	%rd2615, %rd2597, %rd2543;
	xor.b64  	%rd2616, %rd2597, %rd2554;
	xor.b64  	%rd2617, %rd2597, %rd2565;
	xor.b64  	%rd2618, %rd2600, %rd2523;
	xor.b64  	%rd2619, %rd2600, %rd2534;
	xor.b64  	%rd2620, %rd2600, %rd2545;
	xor.b64  	%rd2621, %rd2600, %rd2556;
	xor.b64  	%rd2622, %rd2600, %rd2567;
	xor.b64  	%rd2623, %rd2602, %rd2525;
	xor.b64  	%rd2624, %rd2602, %rd2536;
	xor.b64  	%rd2625, %rd2602, %rd2547;
	xor.b64  	%rd2626, %rd2602, %rd2558;
	xor.b64  	%rd2627, %rd2602, %rd2569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2328,%dummy}, %rd2604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2329}, %rd2604;
	}
	shf.r.wrap.b32 	%r2330, %r2329, %r2328, 28;
	shf.r.wrap.b32 	%r2331, %r2328, %r2329, 28;
	mov.b64 	%rd2628, {%r2331, %r2330};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd2605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2333,%dummy}, %rd2605;
	}
	shf.l.wrap.b32 	%r2334, %r2333, %r2332, 3;
	shf.l.wrap.b32 	%r2335, %r2332, %r2333, 3;
	mov.b64 	%rd2629, {%r2335, %r2334};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2336,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2337}, %rd2606;
	}
	shf.r.wrap.b32 	%r2338, %r2337, %r2336, 23;
	shf.r.wrap.b32 	%r2339, %r2336, %r2337, 23;
	mov.b64 	%rd2630, {%r2339, %r2338};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2340}, %rd2607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2341,%dummy}, %rd2607;
	}
	shf.l.wrap.b32 	%r2342, %r2341, %r2340, 18;
	shf.l.wrap.b32 	%r2343, %r2340, %r2341, 18;
	mov.b64 	%rd2631, {%r2343, %r2342};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2345,%dummy}, %rd2608;
	}
	shf.l.wrap.b32 	%r2346, %r2345, %r2344, 1;
	shf.l.wrap.b32 	%r2347, %r2344, %r2345, 1;
	mov.b64 	%rd2632, {%r2347, %r2346};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd2609;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 20;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 20;
	mov.b64 	%rd2633, {%r2351, %r2350};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2352}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2353,%dummy}, %rd2610;
	}
	shf.l.wrap.b32 	%r2354, %r2353, %r2352, 10;
	shf.l.wrap.b32 	%r2355, %r2352, %r2353, 10;
	mov.b64 	%rd2634, {%r2355, %r2354};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd2611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd2611;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 19;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 19;
	mov.b64 	%rd2635, {%r2359, %r2358};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2360}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2361,%dummy}, %rd2612;
	}
	shf.l.wrap.b32 	%r2362, %r2361, %r2360, 2;
	shf.l.wrap.b32 	%r2363, %r2360, %r2361, 2;
	mov.b64 	%rd2636, {%r2363, %r2362};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2364,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd2613;
	}
	shf.r.wrap.b32 	%r2366, %r2365, %r2364, 2;
	shf.r.wrap.b32 	%r2367, %r2364, %r2365, 2;
	mov.b64 	%rd2637, {%r2367, %r2366};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd2614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2369,%dummy}, %rd2614;
	}
	shf.l.wrap.b32 	%r2370, %r2369, %r2368, 6;
	shf.l.wrap.b32 	%r2371, %r2368, %r2369, 6;
	mov.b64 	%rd2638, {%r2371, %r2370};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd2615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2373}, %rd2615;
	}
	shf.r.wrap.b32 	%r2374, %r2373, %r2372, 21;
	shf.r.wrap.b32 	%r2375, %r2372, %r2373, 21;
	mov.b64 	%rd2639, {%r2375, %r2374};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2376}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd2616;
	}
	shf.l.wrap.b32 	%r2378, %r2377, %r2376, 15;
	shf.l.wrap.b32 	%r2379, %r2376, %r2377, 15;
	mov.b64 	%rd2640, {%r2379, %r2378};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2380,%dummy}, %rd2617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd2617;
	}
	shf.r.wrap.b32 	%r2382, %r2381, %r2380, 3;
	shf.r.wrap.b32 	%r2383, %r2380, %r2381, 3;
	mov.b64 	%rd2641, {%r2383, %r2382};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2384}, %rd2618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2385,%dummy}, %rd2618;
	}
	shf.l.wrap.b32 	%r2386, %r2385, %r2384, 28;
	shf.l.wrap.b32 	%r2387, %r2384, %r2385, 28;
	mov.b64 	%rd2642, {%r2387, %r2386};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2388,%dummy}, %rd2619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2389}, %rd2619;
	}
	shf.r.wrap.b32 	%r2390, %r2389, %r2388, 9;
	shf.r.wrap.b32 	%r2391, %r2388, %r2389, 9;
	mov.b64 	%rd2643, {%r2391, %r2390};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2392}, %rd2620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2393,%dummy}, %rd2620;
	}
	shf.l.wrap.b32 	%r2394, %r2393, %r2392, 25;
	shf.l.wrap.b32 	%r2395, %r2392, %r2393, 25;
	mov.b64 	%rd2644, {%r2395, %r2394};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2396}, %rd2621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd2621;
	}
	shf.l.wrap.b32 	%r2398, %r2397, %r2396, 21;
	shf.l.wrap.b32 	%r2399, %r2396, %r2397, 21;
	mov.b64 	%rd2645, {%r2399, %r2398};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd2622;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 8;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 8;
	mov.b64 	%rd2646, {%r2403, %r2402};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2404}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2405,%dummy}, %rd2623;
	}
	shf.l.wrap.b32 	%r2406, %r2405, %r2404, 27;
	shf.l.wrap.b32 	%r2407, %r2404, %r2405, 27;
	mov.b64 	%rd2647, {%r2407, %r2406};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2408}, %rd2624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2409,%dummy}, %rd2624;
	}
	shf.l.wrap.b32 	%r2410, %r2409, %r2408, 20;
	shf.l.wrap.b32 	%r2411, %r2408, %r2409, 20;
	mov.b64 	%rd2648, {%r2411, %r2410};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd2625;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 25;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 25;
	mov.b64 	%rd2649, {%r2415, %r2414};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd2626;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2417,%dummy}, %rd2626;
	}
	shf.l.wrap.b32 	%r2418, %r2417, %r2416, 8;
	shf.l.wrap.b32 	%r2419, %r2416, %r2417, 8;
	mov.b64 	%rd2650, {%r2419, %r2418};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2420}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2421,%dummy}, %rd2627;
	}
	shf.l.wrap.b32 	%r2422, %r2421, %r2420, 14;
	shf.l.wrap.b32 	%r2423, %r2420, %r2421, 14;
	mov.b64 	%rd2651, {%r2423, %r2422};
	not.b64 	%rd2652, %rd2639;
	or.b64  	%rd2653, %rd2639, %rd2633;
	or.b64  	%rd2654, %rd2645, %rd2652;
	xor.b64  	%rd2655, %rd2654, %rd2633;
	and.b64  	%rd2656, %rd2651, %rd2645;
	xor.b64  	%rd2657, %rd2656, %rd2639;
	or.b64  	%rd2658, %rd2651, %rd2603;
	xor.b64  	%rd2659, %rd2658, %rd2645;
	and.b64  	%rd2660, %rd2633, %rd2603;
	xor.b64  	%rd2661, %rd2651, %rd2660;
	not.b64 	%rd2662, %rd2641;
	or.b64  	%rd2663, %rd2648, %rd2629;
	xor.b64  	%rd2664, %rd2663, %rd2642;
	and.b64  	%rd2665, %rd2635, %rd2629;
	xor.b64  	%rd2666, %rd2648, %rd2665;
	or.b64  	%rd2667, %rd2635, %rd2662;
	xor.b64  	%rd2668, %rd2667, %rd2629;
	or.b64  	%rd2669, %rd2642, %rd2641;
	xor.b64  	%rd2670, %rd2669, %rd2635;
	and.b64  	%rd2671, %rd2648, %rd2642;
	xor.b64  	%rd2672, %rd2671, %rd2641;
	not.b64 	%rd2673, %rd2650;
	or.b64  	%rd2674, %rd2644, %rd2638;
	xor.b64  	%rd2675, %rd2674, %rd2632;
	and.b64  	%rd2676, %rd2650, %rd2644;
	xor.b64  	%rd2677, %rd2676, %rd2638;
	and.b64  	%rd2678, %rd2631, %rd2673;
	xor.b64  	%rd2679, %rd2678, %rd2644;
	or.b64  	%rd2680, %rd2632, %rd2631;
	xor.b64  	%rd2681, %rd2680, %rd2673;
	and.b64  	%rd2682, %rd2638, %rd2632;
	xor.b64  	%rd2683, %rd2682, %rd2631;
	not.b64 	%rd2684, %rd2640;
	and.b64  	%rd2685, %rd2634, %rd2628;
	xor.b64  	%rd2686, %rd2647, %rd2685;
	or.b64  	%rd2687, %rd2640, %rd2634;
	xor.b64  	%rd2688, %rd2687, %rd2628;
	or.b64  	%rd2689, %rd2646, %rd2684;
	xor.b64  	%rd2690, %rd2689, %rd2634;
	and.b64  	%rd2691, %rd2647, %rd2646;
	xor.b64  	%rd2692, %rd2691, %rd2684;
	or.b64  	%rd2693, %rd2647, %rd2628;
	xor.b64  	%rd2694, %rd2693, %rd2646;
	not.b64 	%rd2695, %rd2643;
	and.b64  	%rd2696, %rd2649, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2637;
	or.b64  	%rd2698, %rd2649, %rd2630;
	xor.b64  	%rd2699, %rd2698, %rd2695;
	and.b64  	%rd2700, %rd2636, %rd2630;
	xor.b64  	%rd2701, %rd2649, %rd2700;
	or.b64  	%rd2702, %rd2637, %rd2636;
	xor.b64  	%rd2703, %rd2702, %rd2630;
	and.b64  	%rd2704, %rd2643, %rd2637;
	xor.b64  	%rd2705, %rd2704, %rd2636;
	xor.b64  	%rd2706, %rd2603, %rd2653;
	xor.b64  	%rd2707, %rd2706, -9223372034707292150;
	xor.b64  	%rd2708, %rd2666, %rd2655;
	xor.b64  	%rd2709, %rd2677, %rd2688;
	xor.b64  	%rd2710, %rd2699, %rd2708;
	xor.b64  	%rd2711, %rd2710, %rd2709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd2711;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2425,%dummy}, %rd2711;
	}
	shf.l.wrap.b32 	%r2426, %r2425, %r2424, 1;
	shf.l.wrap.b32 	%r2427, %r2424, %r2425, 1;
	mov.b64 	%rd2712, {%r2427, %r2426};
	xor.b64  	%rd2713, %rd2661, %rd2672;
	xor.b64  	%rd2714, %rd2694, %rd2683;
	xor.b64  	%rd2715, %rd2714, %rd2705;
	xor.b64  	%rd2716, %rd2715, %rd2712;
	xor.b64  	%rd2717, %rd2716, %rd2713;
	xor.b64  	%rd2718, %rd2657, %rd2668;
	xor.b64  	%rd2719, %rd2679, %rd2690;
	xor.b64  	%rd2720, %rd2719, %rd2701;
	xor.b64  	%rd2721, %rd2720, %rd2718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2428}, %rd2721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2429,%dummy}, %rd2721;
	}
	shf.l.wrap.b32 	%r2430, %r2429, %r2428, 1;
	shf.l.wrap.b32 	%r2431, %r2428, %r2429, 1;
	mov.b64 	%rd2722, {%r2431, %r2430};
	xor.b64  	%rd2723, %rd2664, %rd2707;
	xor.b64  	%rd2724, %rd2686, %rd2675;
	xor.b64  	%rd2725, %rd2697, %rd2724;
	xor.b64  	%rd2726, %rd2725, %rd2723;
	xor.b64  	%rd2727, %rd2726, %rd2722;
	xor.b64  	%rd2728, %rd2659, %rd2670;
	xor.b64  	%rd2729, %rd2681, %rd2692;
	xor.b64  	%rd2730, %rd2729, %rd2703;
	xor.b64  	%rd2731, %rd2730, %rd2728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2432}, %rd2731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2433,%dummy}, %rd2731;
	}
	shf.l.wrap.b32 	%r2434, %r2433, %r2432, 1;
	shf.l.wrap.b32 	%r2435, %r2432, %r2433, 1;
	mov.b64 	%rd2732, {%r2435, %r2434};
	xor.b64  	%rd2733, %rd2711, %rd2732;
	xor.b64  	%rd2734, %rd2715, %rd2713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2436}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2437,%dummy}, %rd2734;
	}
	shf.l.wrap.b32 	%r2438, %r2437, %r2436, 1;
	shf.l.wrap.b32 	%r2439, %r2436, %r2437, 1;
	mov.b64 	%rd2735, {%r2439, %r2438};
	xor.b64  	%rd2736, %rd2721, %rd2735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2440}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd2726;
	}
	shf.l.wrap.b32 	%r2442, %r2441, %r2440, 1;
	shf.l.wrap.b32 	%r2443, %r2440, %r2441, 1;
	mov.b64 	%rd2737, {%r2443, %r2442};
	xor.b64  	%rd2738, %rd2731, %rd2737;
	xor.b64  	%rd2739, %rd2717, %rd2707;
	xor.b64  	%rd2740, %rd2717, %rd2664;
	xor.b64  	%rd2741, %rd2717, %rd2675;
	xor.b64  	%rd2742, %rd2717, %rd2686;
	xor.b64  	%rd2743, %rd2717, %rd2697;
	xor.b64  	%rd2744, %rd2727, %rd2655;
	xor.b64  	%rd2745, %rd2727, %rd2666;
	xor.b64  	%rd2746, %rd2727, %rd2677;
	xor.b64  	%rd2747, %rd2727, %rd2688;
	xor.b64  	%rd2748, %rd2727, %rd2699;
	xor.b64  	%rd2749, %rd2733, %rd2657;
	xor.b64  	%rd2750, %rd2733, %rd2668;
	xor.b64  	%rd2751, %rd2733, %rd2679;
	xor.b64  	%rd2752, %rd2733, %rd2690;
	xor.b64  	%rd2753, %rd2733, %rd2701;
	xor.b64  	%rd2754, %rd2736, %rd2659;
	xor.b64  	%rd2755, %rd2736, %rd2670;
	xor.b64  	%rd2756, %rd2736, %rd2681;
	xor.b64  	%rd2757, %rd2736, %rd2692;
	xor.b64  	%rd2758, %rd2736, %rd2703;
	xor.b64  	%rd2759, %rd2738, %rd2661;
	xor.b64  	%rd2760, %rd2738, %rd2672;
	xor.b64  	%rd2761, %rd2738, %rd2683;
	xor.b64  	%rd2762, %rd2738, %rd2694;
	xor.b64  	%rd2763, %rd2738, %rd2705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd2740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd2740;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 28;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 28;
	mov.b64 	%rd2764, {%r2447, %r2446};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd2741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd2741;
	}
	shf.l.wrap.b32 	%r2450, %r2449, %r2448, 3;
	shf.l.wrap.b32 	%r2451, %r2448, %r2449, 3;
	mov.b64 	%rd2765, {%r2451, %r2450};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd2742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd2742;
	}
	shf.r.wrap.b32 	%r2454, %r2453, %r2452, 23;
	shf.r.wrap.b32 	%r2455, %r2452, %r2453, 23;
	mov.b64 	%rd2766, {%r2455, %r2454};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2456}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2457,%dummy}, %rd2743;
	}
	shf.l.wrap.b32 	%r2458, %r2457, %r2456, 18;
	shf.l.wrap.b32 	%r2459, %r2456, %r2457, 18;
	mov.b64 	%rd2767, {%r2459, %r2458};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2460}, %rd2744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2461,%dummy}, %rd2744;
	}
	shf.l.wrap.b32 	%r2462, %r2461, %r2460, 1;
	shf.l.wrap.b32 	%r2463, %r2460, %r2461, 1;
	mov.b64 	%rd2768, {%r2463, %r2462};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2464,%dummy}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2465}, %rd2745;
	}
	shf.r.wrap.b32 	%r2466, %r2465, %r2464, 20;
	shf.r.wrap.b32 	%r2467, %r2464, %r2465, 20;
	mov.b64 	%rd2769, {%r2467, %r2466};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2468}, %rd2746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2469,%dummy}, %rd2746;
	}
	shf.l.wrap.b32 	%r2470, %r2469, %r2468, 10;
	shf.l.wrap.b32 	%r2471, %r2468, %r2469, 10;
	mov.b64 	%rd2770, {%r2471, %r2470};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2472,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd2747;
	}
	shf.r.wrap.b32 	%r2474, %r2473, %r2472, 19;
	shf.r.wrap.b32 	%r2475, %r2472, %r2473, 19;
	mov.b64 	%rd2771, {%r2475, %r2474};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2477,%dummy}, %rd2748;
	}
	shf.l.wrap.b32 	%r2478, %r2477, %r2476, 2;
	shf.l.wrap.b32 	%r2479, %r2476, %r2477, 2;
	mov.b64 	%rd2772, {%r2479, %r2478};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2480,%dummy}, %rd2749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd2749;
	}
	shf.r.wrap.b32 	%r2482, %r2481, %r2480, 2;
	shf.r.wrap.b32 	%r2483, %r2480, %r2481, 2;
	mov.b64 	%rd2773, {%r2483, %r2482};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd2750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2485,%dummy}, %rd2750;
	}
	shf.l.wrap.b32 	%r2486, %r2485, %r2484, 6;
	shf.l.wrap.b32 	%r2487, %r2484, %r2485, 6;
	mov.b64 	%rd2774, {%r2487, %r2486};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd2751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd2751;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 21;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 21;
	mov.b64 	%rd2775, {%r2491, %r2490};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2492}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2493,%dummy}, %rd2752;
	}
	shf.l.wrap.b32 	%r2494, %r2493, %r2492, 15;
	shf.l.wrap.b32 	%r2495, %r2492, %r2493, 15;
	mov.b64 	%rd2776, {%r2495, %r2494};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd2753;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 3;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 3;
	mov.b64 	%rd2777, {%r2499, %r2498};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2500}, %rd2754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2501,%dummy}, %rd2754;
	}
	shf.l.wrap.b32 	%r2502, %r2501, %r2500, 28;
	shf.l.wrap.b32 	%r2503, %r2500, %r2501, 28;
	mov.b64 	%rd2778, {%r2503, %r2502};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd2755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd2755;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 9;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 9;
	mov.b64 	%rd2779, {%r2507, %r2506};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2508}, %rd2756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd2756;
	}
	shf.l.wrap.b32 	%r2510, %r2509, %r2508, 25;
	shf.l.wrap.b32 	%r2511, %r2508, %r2509, 25;
	mov.b64 	%rd2780, {%r2511, %r2510};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd2757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2513,%dummy}, %rd2757;
	}
	shf.l.wrap.b32 	%r2514, %r2513, %r2512, 21;
	shf.l.wrap.b32 	%r2515, %r2512, %r2513, 21;
	mov.b64 	%rd2781, {%r2515, %r2514};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd2758;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 8;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 8;
	mov.b64 	%rd2782, {%r2519, %r2518};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2521,%dummy}, %rd2759;
	}
	shf.l.wrap.b32 	%r2522, %r2521, %r2520, 27;
	shf.l.wrap.b32 	%r2523, %r2520, %r2521, 27;
	mov.b64 	%rd2783, {%r2523, %r2522};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2524}, %rd2760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2525,%dummy}, %rd2760;
	}
	shf.l.wrap.b32 	%r2526, %r2525, %r2524, 20;
	shf.l.wrap.b32 	%r2527, %r2524, %r2525, 20;
	mov.b64 	%rd2784, {%r2527, %r2526};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd2761;
	}
	shf.r.wrap.b32 	%r2530, %r2529, %r2528, 25;
	shf.r.wrap.b32 	%r2531, %r2528, %r2529, 25;
	mov.b64 	%rd2785, {%r2531, %r2530};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2532}, %rd2762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2533,%dummy}, %rd2762;
	}
	shf.l.wrap.b32 	%r2534, %r2533, %r2532, 8;
	shf.l.wrap.b32 	%r2535, %r2532, %r2533, 8;
	mov.b64 	%rd2786, {%r2535, %r2534};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd2763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2537,%dummy}, %rd2763;
	}
	shf.l.wrap.b32 	%r2538, %r2537, %r2536, 14;
	shf.l.wrap.b32 	%r2539, %r2536, %r2537, 14;
	mov.b64 	%rd2787, {%r2539, %r2538};
	not.b64 	%rd2788, %rd2775;
	or.b64  	%rd2789, %rd2775, %rd2769;
	or.b64  	%rd2790, %rd2781, %rd2788;
	xor.b64  	%rd2791, %rd2790, %rd2769;
	and.b64  	%rd2792, %rd2787, %rd2781;
	xor.b64  	%rd2793, %rd2792, %rd2775;
	or.b64  	%rd2794, %rd2787, %rd2739;
	xor.b64  	%rd2795, %rd2794, %rd2781;
	and.b64  	%rd2796, %rd2769, %rd2739;
	xor.b64  	%rd2797, %rd2787, %rd2796;
	not.b64 	%rd2798, %rd2777;
	or.b64  	%rd2799, %rd2784, %rd2765;
	xor.b64  	%rd2800, %rd2799, %rd2778;
	and.b64  	%rd2801, %rd2771, %rd2765;
	xor.b64  	%rd2802, %rd2784, %rd2801;
	or.b64  	%rd2803, %rd2771, %rd2798;
	xor.b64  	%rd2804, %rd2803, %rd2765;
	or.b64  	%rd2805, %rd2778, %rd2777;
	xor.b64  	%rd2806, %rd2805, %rd2771;
	and.b64  	%rd2807, %rd2784, %rd2778;
	xor.b64  	%rd2808, %rd2807, %rd2777;
	not.b64 	%rd2809, %rd2786;
	or.b64  	%rd2810, %rd2780, %rd2774;
	xor.b64  	%rd2811, %rd2810, %rd2768;
	and.b64  	%rd2812, %rd2786, %rd2780;
	xor.b64  	%rd2813, %rd2812, %rd2774;
	and.b64  	%rd2814, %rd2767, %rd2809;
	xor.b64  	%rd2815, %rd2814, %rd2780;
	or.b64  	%rd2816, %rd2768, %rd2767;
	xor.b64  	%rd2817, %rd2816, %rd2809;
	and.b64  	%rd2818, %rd2774, %rd2768;
	xor.b64  	%rd2819, %rd2818, %rd2767;
	not.b64 	%rd2820, %rd2776;
	and.b64  	%rd2821, %rd2770, %rd2764;
	xor.b64  	%rd2822, %rd2783, %rd2821;
	or.b64  	%rd2823, %rd2776, %rd2770;
	xor.b64  	%rd2824, %rd2823, %rd2764;
	or.b64  	%rd2825, %rd2782, %rd2820;
	xor.b64  	%rd2826, %rd2825, %rd2770;
	and.b64  	%rd2827, %rd2783, %rd2782;
	xor.b64  	%rd2828, %rd2827, %rd2820;
	or.b64  	%rd2829, %rd2783, %rd2764;
	xor.b64  	%rd2830, %rd2829, %rd2782;
	not.b64 	%rd2831, %rd2779;
	and.b64  	%rd2832, %rd2785, %rd2831;
	xor.b64  	%rd2833, %rd2832, %rd2773;
	or.b64  	%rd2834, %rd2785, %rd2766;
	xor.b64  	%rd2835, %rd2834, %rd2831;
	and.b64  	%rd2836, %rd2772, %rd2766;
	xor.b64  	%rd2837, %rd2785, %rd2836;
	or.b64  	%rd2838, %rd2773, %rd2772;
	xor.b64  	%rd2839, %rd2838, %rd2766;
	and.b64  	%rd2840, %rd2779, %rd2773;
	xor.b64  	%rd2841, %rd2840, %rd2772;
	xor.b64  	%rd2842, %rd2739, %rd2789;
	xor.b64  	%rd2843, %rd2842, -9223372034707259263;
	xor.b64  	%rd2844, %rd2802, %rd2791;
	xor.b64  	%rd2845, %rd2813, %rd2824;
	xor.b64  	%rd2846, %rd2835, %rd2844;
	xor.b64  	%rd2847, %rd2846, %rd2845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2540}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2541,%dummy}, %rd2847;
	}
	shf.l.wrap.b32 	%r2542, %r2541, %r2540, 1;
	shf.l.wrap.b32 	%r2543, %r2540, %r2541, 1;
	mov.b64 	%rd2848, {%r2543, %r2542};
	xor.b64  	%rd2849, %rd2797, %rd2808;
	xor.b64  	%rd2850, %rd2830, %rd2819;
	xor.b64  	%rd2851, %rd2850, %rd2841;
	xor.b64  	%rd2852, %rd2851, %rd2848;
	xor.b64  	%rd2853, %rd2852, %rd2849;
	xor.b64  	%rd2854, %rd2793, %rd2804;
	xor.b64  	%rd2855, %rd2815, %rd2826;
	xor.b64  	%rd2856, %rd2855, %rd2837;
	xor.b64  	%rd2857, %rd2856, %rd2854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd2857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2545,%dummy}, %rd2857;
	}
	shf.l.wrap.b32 	%r2546, %r2545, %r2544, 1;
	shf.l.wrap.b32 	%r2547, %r2544, %r2545, 1;
	mov.b64 	%rd2858, {%r2547, %r2546};
	xor.b64  	%rd2859, %rd2800, %rd2843;
	xor.b64  	%rd2860, %rd2822, %rd2811;
	xor.b64  	%rd2861, %rd2833, %rd2860;
	xor.b64  	%rd2862, %rd2861, %rd2859;
	xor.b64  	%rd2863, %rd2862, %rd2858;
	xor.b64  	%rd2864, %rd2795, %rd2806;
	xor.b64  	%rd2865, %rd2817, %rd2828;
	xor.b64  	%rd2866, %rd2865, %rd2839;
	xor.b64  	%rd2867, %rd2866, %rd2864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2548}, %rd2867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2549,%dummy}, %rd2867;
	}
	shf.l.wrap.b32 	%r2550, %r2549, %r2548, 1;
	shf.l.wrap.b32 	%r2551, %r2548, %r2549, 1;
	mov.b64 	%rd2868, {%r2551, %r2550};
	xor.b64  	%rd2869, %rd2847, %rd2868;
	xor.b64  	%rd2870, %rd2851, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd2870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2553,%dummy}, %rd2870;
	}
	shf.l.wrap.b32 	%r2554, %r2553, %r2552, 1;
	shf.l.wrap.b32 	%r2555, %r2552, %r2553, 1;
	mov.b64 	%rd2871, {%r2555, %r2554};
	xor.b64  	%rd2872, %rd2857, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2556}, %rd2862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2557,%dummy}, %rd2862;
	}
	shf.l.wrap.b32 	%r2558, %r2557, %r2556, 1;
	shf.l.wrap.b32 	%r2559, %r2556, %r2557, 1;
	mov.b64 	%rd2873, {%r2559, %r2558};
	xor.b64  	%rd2874, %rd2867, %rd2873;
	xor.b64  	%rd2875, %rd2853, %rd2843;
	xor.b64  	%rd2876, %rd2853, %rd2800;
	xor.b64  	%rd2877, %rd2853, %rd2811;
	xor.b64  	%rd2878, %rd2853, %rd2822;
	xor.b64  	%rd2879, %rd2853, %rd2833;
	xor.b64  	%rd2880, %rd2863, %rd2791;
	xor.b64  	%rd2881, %rd2863, %rd2802;
	xor.b64  	%rd2882, %rd2863, %rd2813;
	xor.b64  	%rd2883, %rd2863, %rd2824;
	xor.b64  	%rd2884, %rd2863, %rd2835;
	xor.b64  	%rd2885, %rd2869, %rd2793;
	xor.b64  	%rd2886, %rd2869, %rd2804;
	xor.b64  	%rd2887, %rd2869, %rd2815;
	xor.b64  	%rd2888, %rd2869, %rd2826;
	xor.b64  	%rd2889, %rd2869, %rd2837;
	xor.b64  	%rd2890, %rd2872, %rd2795;
	xor.b64  	%rd2891, %rd2872, %rd2806;
	xor.b64  	%rd2892, %rd2872, %rd2817;
	xor.b64  	%rd2893, %rd2872, %rd2828;
	xor.b64  	%rd2894, %rd2872, %rd2839;
	xor.b64  	%rd2895, %rd2874, %rd2797;
	xor.b64  	%rd2896, %rd2874, %rd2808;
	xor.b64  	%rd2897, %rd2874, %rd2819;
	xor.b64  	%rd2898, %rd2874, %rd2830;
	xor.b64  	%rd2899, %rd2874, %rd2841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd2876;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 28;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 28;
	mov.b64 	%rd2900, {%r2563, %r2562};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2564}, %rd2877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2565,%dummy}, %rd2877;
	}
	shf.l.wrap.b32 	%r2566, %r2565, %r2564, 3;
	shf.l.wrap.b32 	%r2567, %r2564, %r2565, 3;
	mov.b64 	%rd2901, {%r2567, %r2566};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd2878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd2878;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 23;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 23;
	mov.b64 	%rd2902, {%r2571, %r2570};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2572}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2573,%dummy}, %rd2879;
	}
	shf.l.wrap.b32 	%r2574, %r2573, %r2572, 18;
	shf.l.wrap.b32 	%r2575, %r2572, %r2573, 18;
	mov.b64 	%rd2903, {%r2575, %r2574};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2576}, %rd2880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2577,%dummy}, %rd2880;
	}
	shf.l.wrap.b32 	%r2578, %r2577, %r2576, 1;
	shf.l.wrap.b32 	%r2579, %r2576, %r2577, 1;
	mov.b64 	%rd2904, {%r2579, %r2578};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2580,%dummy}, %rd2881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2581}, %rd2881;
	}
	shf.r.wrap.b32 	%r2582, %r2581, %r2580, 20;
	shf.r.wrap.b32 	%r2583, %r2580, %r2581, 20;
	mov.b64 	%rd2905, {%r2583, %r2582};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd2882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2585,%dummy}, %rd2882;
	}
	shf.l.wrap.b32 	%r2586, %r2585, %r2584, 10;
	shf.l.wrap.b32 	%r2587, %r2584, %r2585, 10;
	mov.b64 	%rd2906, {%r2587, %r2586};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2588,%dummy}, %rd2883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2589}, %rd2883;
	}
	shf.r.wrap.b32 	%r2590, %r2589, %r2588, 19;
	shf.r.wrap.b32 	%r2591, %r2588, %r2589, 19;
	mov.b64 	%rd2907, {%r2591, %r2590};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2593,%dummy}, %rd2884;
	}
	shf.l.wrap.b32 	%r2594, %r2593, %r2592, 2;
	shf.l.wrap.b32 	%r2595, %r2592, %r2593, 2;
	mov.b64 	%rd2908, {%r2595, %r2594};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd2885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd2885;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 2;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 2;
	mov.b64 	%rd2909, {%r2599, %r2598};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd2886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2601,%dummy}, %rd2886;
	}
	shf.l.wrap.b32 	%r2602, %r2601, %r2600, 6;
	shf.l.wrap.b32 	%r2603, %r2600, %r2601, 6;
	mov.b64 	%rd2910, {%r2603, %r2602};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2604,%dummy}, %rd2887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2605}, %rd2887;
	}
	shf.r.wrap.b32 	%r2606, %r2605, %r2604, 21;
	shf.r.wrap.b32 	%r2607, %r2604, %r2605, 21;
	mov.b64 	%rd2911, {%r2607, %r2606};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd2888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2609,%dummy}, %rd2888;
	}
	shf.l.wrap.b32 	%r2610, %r2609, %r2608, 15;
	shf.l.wrap.b32 	%r2611, %r2608, %r2609, 15;
	mov.b64 	%rd2912, {%r2611, %r2610};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2612,%dummy}, %rd2889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2613}, %rd2889;
	}
	shf.r.wrap.b32 	%r2614, %r2613, %r2612, 3;
	shf.r.wrap.b32 	%r2615, %r2612, %r2613, 3;
	mov.b64 	%rd2913, {%r2615, %r2614};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd2890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2617,%dummy}, %rd2890;
	}
	shf.l.wrap.b32 	%r2618, %r2617, %r2616, 28;
	shf.l.wrap.b32 	%r2619, %r2616, %r2617, 28;
	mov.b64 	%rd2914, {%r2619, %r2618};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2620,%dummy}, %rd2891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2621}, %rd2891;
	}
	shf.r.wrap.b32 	%r2622, %r2621, %r2620, 9;
	shf.r.wrap.b32 	%r2623, %r2620, %r2621, 9;
	mov.b64 	%rd2915, {%r2623, %r2622};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd2892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2625,%dummy}, %rd2892;
	}
	shf.l.wrap.b32 	%r2626, %r2625, %r2624, 25;
	shf.l.wrap.b32 	%r2627, %r2624, %r2625, 25;
	mov.b64 	%rd2916, {%r2627, %r2626};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2628}, %rd2893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2629,%dummy}, %rd2893;
	}
	shf.l.wrap.b32 	%r2630, %r2629, %r2628, 21;
	shf.l.wrap.b32 	%r2631, %r2628, %r2629, 21;
	mov.b64 	%rd2917, {%r2631, %r2630};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd2894;
	}
	shf.r.wrap.b32 	%r2634, %r2633, %r2632, 8;
	shf.r.wrap.b32 	%r2635, %r2632, %r2633, 8;
	mov.b64 	%rd2918, {%r2635, %r2634};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2636}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2637,%dummy}, %rd2895;
	}
	shf.l.wrap.b32 	%r2638, %r2637, %r2636, 27;
	shf.l.wrap.b32 	%r2639, %r2636, %r2637, 27;
	mov.b64 	%rd2919, {%r2639, %r2638};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd2896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2641,%dummy}, %rd2896;
	}
	shf.l.wrap.b32 	%r2642, %r2641, %r2640, 20;
	shf.l.wrap.b32 	%r2643, %r2640, %r2641, 20;
	mov.b64 	%rd2920, {%r2643, %r2642};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd2897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd2897;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 25;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 25;
	mov.b64 	%rd2921, {%r2647, %r2646};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd2898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2649,%dummy}, %rd2898;
	}
	shf.l.wrap.b32 	%r2650, %r2649, %r2648, 8;
	shf.l.wrap.b32 	%r2651, %r2648, %r2649, 8;
	mov.b64 	%rd2922, {%r2651, %r2650};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2652}, %rd2899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2653,%dummy}, %rd2899;
	}
	shf.l.wrap.b32 	%r2654, %r2653, %r2652, 14;
	shf.l.wrap.b32 	%r2655, %r2652, %r2653, 14;
	mov.b64 	%rd2923, {%r2655, %r2654};
	not.b64 	%rd2924, %rd2911;
	or.b64  	%rd2925, %rd2911, %rd2905;
	or.b64  	%rd2926, %rd2917, %rd2924;
	xor.b64  	%rd2927, %rd2926, %rd2905;
	and.b64  	%rd2928, %rd2923, %rd2917;
	xor.b64  	%rd2929, %rd2928, %rd2911;
	or.b64  	%rd2930, %rd2923, %rd2875;
	xor.b64  	%rd2931, %rd2930, %rd2917;
	and.b64  	%rd2932, %rd2905, %rd2875;
	xor.b64  	%rd2933, %rd2923, %rd2932;
	not.b64 	%rd2934, %rd2913;
	or.b64  	%rd2935, %rd2920, %rd2901;
	xor.b64  	%rd2936, %rd2935, %rd2914;
	and.b64  	%rd2937, %rd2907, %rd2901;
	xor.b64  	%rd2938, %rd2920, %rd2937;
	or.b64  	%rd2939, %rd2907, %rd2934;
	xor.b64  	%rd2940, %rd2939, %rd2901;
	or.b64  	%rd2941, %rd2914, %rd2913;
	xor.b64  	%rd2942, %rd2941, %rd2907;
	and.b64  	%rd2943, %rd2920, %rd2914;
	xor.b64  	%rd2944, %rd2943, %rd2913;
	not.b64 	%rd2945, %rd2922;
	or.b64  	%rd2946, %rd2916, %rd2910;
	xor.b64  	%rd2947, %rd2946, %rd2904;
	and.b64  	%rd2948, %rd2922, %rd2916;
	xor.b64  	%rd2949, %rd2948, %rd2910;
	and.b64  	%rd2950, %rd2903, %rd2945;
	xor.b64  	%rd2951, %rd2950, %rd2916;
	or.b64  	%rd2952, %rd2904, %rd2903;
	xor.b64  	%rd2953, %rd2952, %rd2945;
	and.b64  	%rd2954, %rd2910, %rd2904;
	xor.b64  	%rd2955, %rd2954, %rd2903;
	not.b64 	%rd2956, %rd2912;
	and.b64  	%rd2957, %rd2906, %rd2900;
	xor.b64  	%rd2958, %rd2919, %rd2957;
	or.b64  	%rd2959, %rd2912, %rd2906;
	xor.b64  	%rd2960, %rd2959, %rd2900;
	or.b64  	%rd2961, %rd2918, %rd2956;
	xor.b64  	%rd2962, %rd2961, %rd2906;
	and.b64  	%rd2963, %rd2919, %rd2918;
	xor.b64  	%rd2964, %rd2963, %rd2956;
	or.b64  	%rd2965, %rd2919, %rd2900;
	xor.b64  	%rd2966, %rd2965, %rd2918;
	not.b64 	%rd2967, %rd2915;
	and.b64  	%rd2968, %rd2921, %rd2967;
	xor.b64  	%rd2969, %rd2968, %rd2909;
	or.b64  	%rd2970, %rd2921, %rd2902;
	xor.b64  	%rd2971, %rd2970, %rd2967;
	and.b64  	%rd2972, %rd2908, %rd2902;
	xor.b64  	%rd2973, %rd2921, %rd2972;
	or.b64  	%rd2974, %rd2909, %rd2908;
	xor.b64  	%rd2975, %rd2974, %rd2902;
	and.b64  	%rd2976, %rd2915, %rd2909;
	xor.b64  	%rd2977, %rd2976, %rd2908;
	xor.b64  	%rd2978, %rd2875, %rd2925;
	xor.b64  	%rd2979, %rd2978, -9223372036854742912;
	xor.b64  	%rd2980, %rd2938, %rd2927;
	xor.b64  	%rd2981, %rd2949, %rd2960;
	xor.b64  	%rd2982, %rd2971, %rd2980;
	xor.b64  	%rd2983, %rd2982, %rd2981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd2983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2657,%dummy}, %rd2983;
	}
	shf.l.wrap.b32 	%r2658, %r2657, %r2656, 1;
	shf.l.wrap.b32 	%r2659, %r2656, %r2657, 1;
	mov.b64 	%rd2984, {%r2659, %r2658};
	xor.b64  	%rd2985, %rd2933, %rd2944;
	xor.b64  	%rd2986, %rd2966, %rd2955;
	xor.b64  	%rd2987, %rd2986, %rd2977;
	xor.b64  	%rd2988, %rd2987, %rd2984;
	xor.b64  	%rd2989, %rd2988, %rd2985;
	xor.b64  	%rd2990, %rd2929, %rd2940;
	xor.b64  	%rd2991, %rd2951, %rd2962;
	xor.b64  	%rd2992, %rd2991, %rd2973;
	xor.b64  	%rd2993, %rd2992, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2660}, %rd2993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2661,%dummy}, %rd2993;
	}
	shf.l.wrap.b32 	%r2662, %r2661, %r2660, 1;
	shf.l.wrap.b32 	%r2663, %r2660, %r2661, 1;
	mov.b64 	%rd2994, {%r2663, %r2662};
	xor.b64  	%rd2995, %rd2936, %rd2979;
	xor.b64  	%rd2996, %rd2958, %rd2947;
	xor.b64  	%rd2997, %rd2969, %rd2996;
	xor.b64  	%rd2998, %rd2997, %rd2995;
	xor.b64  	%rd2999, %rd2998, %rd2994;
	xor.b64  	%rd3000, %rd2931, %rd2942;
	xor.b64  	%rd3001, %rd2953, %rd2964;
	xor.b64  	%rd3002, %rd3001, %rd2975;
	xor.b64  	%rd3003, %rd3002, %rd3000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2665,%dummy}, %rd3003;
	}
	shf.l.wrap.b32 	%r2666, %r2665, %r2664, 1;
	shf.l.wrap.b32 	%r2667, %r2664, %r2665, 1;
	mov.b64 	%rd3004, {%r2667, %r2666};
	xor.b64  	%rd3005, %rd2983, %rd3004;
	xor.b64  	%rd3006, %rd2987, %rd2985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2668}, %rd3006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2669,%dummy}, %rd3006;
	}
	shf.l.wrap.b32 	%r2670, %r2669, %r2668, 1;
	shf.l.wrap.b32 	%r2671, %r2668, %r2669, 1;
	mov.b64 	%rd3007, {%r2671, %r2670};
	xor.b64  	%rd3008, %rd2993, %rd3007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd2998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2673,%dummy}, %rd2998;
	}
	shf.l.wrap.b32 	%r2674, %r2673, %r2672, 1;
	shf.l.wrap.b32 	%r2675, %r2672, %r2673, 1;
	mov.b64 	%rd3009, {%r2675, %r2674};
	xor.b64  	%rd3010, %rd3003, %rd3009;
	xor.b64  	%rd3011, %rd2989, %rd2979;
	xor.b64  	%rd3012, %rd2989, %rd2936;
	xor.b64  	%rd3013, %rd2989, %rd2947;
	xor.b64  	%rd3014, %rd2989, %rd2958;
	xor.b64  	%rd3015, %rd2989, %rd2969;
	xor.b64  	%rd3016, %rd2999, %rd2927;
	xor.b64  	%rd3017, %rd2999, %rd2938;
	xor.b64  	%rd3018, %rd2999, %rd2949;
	xor.b64  	%rd3019, %rd2999, %rd2960;
	xor.b64  	%rd3020, %rd2999, %rd2971;
	xor.b64  	%rd3021, %rd3005, %rd2929;
	xor.b64  	%rd3022, %rd3005, %rd2940;
	xor.b64  	%rd3023, %rd3005, %rd2951;
	xor.b64  	%rd3024, %rd3005, %rd2962;
	xor.b64  	%rd3025, %rd3005, %rd2973;
	xor.b64  	%rd3026, %rd3008, %rd2931;
	xor.b64  	%rd3027, %rd3008, %rd2942;
	xor.b64  	%rd3028, %rd3008, %rd2953;
	xor.b64  	%rd3029, %rd3008, %rd2964;
	xor.b64  	%rd3030, %rd3008, %rd2975;
	xor.b64  	%rd3031, %rd3010, %rd2933;
	xor.b64  	%rd3032, %rd3010, %rd2944;
	xor.b64  	%rd3033, %rd3010, %rd2955;
	xor.b64  	%rd3034, %rd3010, %rd2966;
	xor.b64  	%rd3035, %rd3010, %rd2977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2676,%dummy}, %rd3012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2677}, %rd3012;
	}
	shf.r.wrap.b32 	%r2678, %r2677, %r2676, 28;
	shf.r.wrap.b32 	%r2679, %r2676, %r2677, 28;
	mov.b64 	%rd3036, {%r2679, %r2678};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd3013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2681,%dummy}, %rd3013;
	}
	shf.l.wrap.b32 	%r2682, %r2681, %r2680, 3;
	shf.l.wrap.b32 	%r2683, %r2680, %r2681, 3;
	mov.b64 	%rd3037, {%r2683, %r2682};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2684,%dummy}, %rd3014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2685}, %rd3014;
	}
	shf.r.wrap.b32 	%r2686, %r2685, %r2684, 23;
	shf.r.wrap.b32 	%r2687, %r2684, %r2685, 23;
	mov.b64 	%rd3038, {%r2687, %r2686};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd3015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2689,%dummy}, %rd3015;
	}
	shf.l.wrap.b32 	%r2690, %r2689, %r2688, 18;
	shf.l.wrap.b32 	%r2691, %r2688, %r2689, 18;
	mov.b64 	%rd3039, {%r2691, %r2690};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2692}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2693,%dummy}, %rd3016;
	}
	shf.l.wrap.b32 	%r2694, %r2693, %r2692, 1;
	shf.l.wrap.b32 	%r2695, %r2692, %r2693, 1;
	mov.b64 	%rd3040, {%r2695, %r2694};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2696,%dummy}, %rd3017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd3017;
	}
	shf.r.wrap.b32 	%r2698, %r2697, %r2696, 20;
	shf.r.wrap.b32 	%r2699, %r2696, %r2697, 20;
	mov.b64 	%rd3041, {%r2699, %r2698};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2700}, %rd3018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2701,%dummy}, %rd3018;
	}
	shf.l.wrap.b32 	%r2702, %r2701, %r2700, 10;
	shf.l.wrap.b32 	%r2703, %r2700, %r2701, 10;
	mov.b64 	%rd3042, {%r2703, %r2702};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd3019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3019;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 19;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 19;
	mov.b64 	%rd3043, {%r2707, %r2706};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2708}, %rd3020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2709,%dummy}, %rd3020;
	}
	shf.l.wrap.b32 	%r2710, %r2709, %r2708, 2;
	shf.l.wrap.b32 	%r2711, %r2708, %r2709, 2;
	mov.b64 	%rd3044, {%r2711, %r2710};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2712,%dummy}, %rd3021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2713}, %rd3021;
	}
	shf.r.wrap.b32 	%r2714, %r2713, %r2712, 2;
	shf.r.wrap.b32 	%r2715, %r2712, %r2713, 2;
	mov.b64 	%rd3045, {%r2715, %r2714};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2716}, %rd3022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2717,%dummy}, %rd3022;
	}
	shf.l.wrap.b32 	%r2718, %r2717, %r2716, 6;
	shf.l.wrap.b32 	%r2719, %r2716, %r2717, 6;
	mov.b64 	%rd3046, {%r2719, %r2718};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2720,%dummy}, %rd3023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2721}, %rd3023;
	}
	shf.r.wrap.b32 	%r2722, %r2721, %r2720, 21;
	shf.r.wrap.b32 	%r2723, %r2720, %r2721, 21;
	mov.b64 	%rd3047, {%r2723, %r2722};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2724}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2725,%dummy}, %rd3024;
	}
	shf.l.wrap.b32 	%r2726, %r2725, %r2724, 15;
	shf.l.wrap.b32 	%r2727, %r2724, %r2725, 15;
	mov.b64 	%rd3048, {%r2727, %r2726};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd3025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd3025;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 3;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 3;
	mov.b64 	%rd3049, {%r2731, %r2730};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2732}, %rd3026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2733,%dummy}, %rd3026;
	}
	shf.l.wrap.b32 	%r2734, %r2733, %r2732, 28;
	shf.l.wrap.b32 	%r2735, %r2732, %r2733, 28;
	mov.b64 	%rd3050, {%r2735, %r2734};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2736,%dummy}, %rd3027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2737}, %rd3027;
	}
	shf.r.wrap.b32 	%r2738, %r2737, %r2736, 9;
	shf.r.wrap.b32 	%r2739, %r2736, %r2737, 9;
	mov.b64 	%rd3051, {%r2739, %r2738};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2740}, %rd3028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2741,%dummy}, %rd3028;
	}
	shf.l.wrap.b32 	%r2742, %r2741, %r2740, 25;
	shf.l.wrap.b32 	%r2743, %r2740, %r2741, 25;
	mov.b64 	%rd3052, {%r2743, %r2742};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2744}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2745,%dummy}, %rd3029;
	}
	shf.l.wrap.b32 	%r2746, %r2745, %r2744, 21;
	shf.l.wrap.b32 	%r2747, %r2744, %r2745, 21;
	mov.b64 	%rd3053, {%r2747, %r2746};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2748,%dummy}, %rd3030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd3030;
	}
	shf.r.wrap.b32 	%r2750, %r2749, %r2748, 8;
	shf.r.wrap.b32 	%r2751, %r2748, %r2749, 8;
	mov.b64 	%rd3054, {%r2751, %r2750};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2752}, %rd3031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2753,%dummy}, %rd3031;
	}
	shf.l.wrap.b32 	%r2754, %r2753, %r2752, 27;
	shf.l.wrap.b32 	%r2755, %r2752, %r2753, 27;
	mov.b64 	%rd3055, {%r2755, %r2754};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2756}, %rd3032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2757,%dummy}, %rd3032;
	}
	shf.l.wrap.b32 	%r2758, %r2757, %r2756, 20;
	shf.l.wrap.b32 	%r2759, %r2756, %r2757, 20;
	mov.b64 	%rd3056, {%r2759, %r2758};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd3033;
	}
	shf.r.wrap.b32 	%r2762, %r2761, %r2760, 25;
	shf.r.wrap.b32 	%r2763, %r2760, %r2761, 25;
	mov.b64 	%rd3057, {%r2763, %r2762};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2764}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2765,%dummy}, %rd3034;
	}
	shf.l.wrap.b32 	%r2766, %r2765, %r2764, 8;
	shf.l.wrap.b32 	%r2767, %r2764, %r2765, 8;
	mov.b64 	%rd3058, {%r2767, %r2766};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2768}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2769,%dummy}, %rd3035;
	}
	shf.l.wrap.b32 	%r2770, %r2769, %r2768, 14;
	shf.l.wrap.b32 	%r2771, %r2768, %r2769, 14;
	mov.b64 	%rd3059, {%r2771, %r2770};
	not.b64 	%rd3060, %rd3047;
	or.b64  	%rd3061, %rd3047, %rd3041;
	or.b64  	%rd3062, %rd3053, %rd3060;
	xor.b64  	%rd3063, %rd3062, %rd3041;
	and.b64  	%rd3064, %rd3059, %rd3053;
	or.b64  	%rd3065, %rd3059, %rd3011;
	xor.b64  	%rd3066, %rd3065, %rd3053;
	and.b64  	%rd3067, %rd3041, %rd3011;
	not.b64 	%rd3068, %rd3049;
	or.b64  	%rd3069, %rd3056, %rd3037;
	and.b64  	%rd3070, %rd3043, %rd3037;
	xor.b64  	%rd3071, %rd3056, %rd3070;
	or.b64  	%rd3072, %rd3043, %rd3068;
	or.b64  	%rd3073, %rd3050, %rd3049;
	xor.b64  	%rd3074, %rd3073, %rd3043;
	and.b64  	%rd3075, %rd3056, %rd3050;
	xor.b64  	%rd3076, %rd3075, %rd3049;
	not.b64 	%rd3077, %rd3058;
	or.b64  	%rd3078, %rd3052, %rd3046;
	xor.b64  	%rd3079, %rd3078, %rd3040;
	and.b64  	%rd3080, %rd3058, %rd3052;
	and.b64  	%rd3081, %rd3039, %rd3077;
	xor.b64  	%rd3082, %rd3081, %rd3052;
	or.b64  	%rd3083, %rd3040, %rd3039;
	and.b64  	%rd3084, %rd3046, %rd3040;
	not.b64 	%rd3085, %rd3048;
	and.b64  	%rd3086, %rd3042, %rd3036;
	or.b64  	%rd3087, %rd3048, %rd3042;
	xor.b64  	%rd3088, %rd3087, %rd3036;
	or.b64  	%rd3089, %rd3054, %rd3085;
	xor.b64  	%rd3090, %rd3089, %rd3042;
	and.b64  	%rd3091, %rd3055, %rd3054;
	xor.b64  	%rd3092, %rd3091, %rd3085;
	or.b64  	%rd3093, %rd3055, %rd3036;
	not.b64 	%rd3094, %rd3051;
	and.b64  	%rd3095, %rd3057, %rd3094;
	xor.b64  	%rd3096, %rd3095, %rd3045;
	or.b64  	%rd3097, %rd3057, %rd3038;
	xor.b64  	%rd3098, %rd3097, %rd3094;
	and.b64  	%rd3099, %rd3044, %rd3038;
	xor.b64  	%rd3100, %rd3057, %rd3099;
	or.b64  	%rd3101, %rd3045, %rd3044;
	xor.b64  	%rd3102, %rd3101, %rd3038;
	and.b64  	%rd3103, %rd3051, %rd3045;
	xor.b64  	%rd3104, %rd3103, %rd3044;
	xor.b64  	%rd3105, %rd3011, %rd3061;
	xor.b64  	%rd3106, %rd3105, 2147483649;
	xor.b64  	%rd3107, %rd3063, %rd3071;
	xor.b64  	%rd3108, %rd3088, %rd3046;
	xor.b64  	%rd3109, %rd3108, %rd3080;
	xor.b64  	%rd3110, %rd3098, %rd3107;
	xor.b64  	%rd3111, %rd3110, %rd3109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2772}, %rd3111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2773,%dummy}, %rd3111;
	}
	shf.l.wrap.b32 	%r2774, %r2773, %r2772, 1;
	shf.l.wrap.b32 	%r2775, %r2772, %r2773, 1;
	mov.b64 	%rd3112, {%r2775, %r2774};
	xor.b64  	%rd3113, %rd3076, %rd3067;
	xor.b64  	%rd3114, %rd3113, %rd3059;
	xor.b64  	%rd3115, %rd3084, %rd3039;
	xor.b64  	%rd3116, %rd3115, %rd3054;
	xor.b64  	%rd3117, %rd3116, %rd3093;
	xor.b64  	%rd3118, %rd3117, %rd3104;
	xor.b64  	%rd3119, %rd3118, %rd3112;
	xor.b64  	%rd3120, %rd3119, %rd3114;
	xor.b64  	%rd3121, %rd3047, %rd3037;
	xor.b64  	%rd3122, %rd3121, %rd3072;
	xor.b64  	%rd3123, %rd3122, %rd3064;
	xor.b64  	%rd3124, %rd3090, %rd3082;
	xor.b64  	%rd3125, %rd3123, %rd3100;
	xor.b64  	%rd3126, %rd3125, %rd3124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd3126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2777,%dummy}, %rd3126;
	}
	shf.l.wrap.b32 	%r2778, %r2777, %r2776, 1;
	shf.l.wrap.b32 	%r2779, %r2776, %r2777, 1;
	mov.b64 	%rd3127, {%r2779, %r2778};
	xor.b64  	%rd3128, %rd3050, %rd3106;
	xor.b64  	%rd3129, %rd3128, %rd3069;
	xor.b64  	%rd3130, %rd3079, %rd3086;
	xor.b64  	%rd3131, %rd3130, %rd3055;
	xor.b64  	%rd3132, %rd3129, %rd3131;
	xor.b64  	%rd3133, %rd3132, %rd3096;
	xor.b64  	%rd3134, %rd3133, %rd3127;
	xor.b64  	%rd3135, %rd3074, %rd3066;
	xor.b64  	%rd3136, %rd3092, %rd3083;
	xor.b64  	%rd3137, %rd3136, %rd3077;
	xor.b64  	%rd3138, %rd3137, %rd3102;
	xor.b64  	%rd3139, %rd3138, %rd3135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2780}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2781,%dummy}, %rd3139;
	}
	shf.l.wrap.b32 	%r2782, %r2781, %r2780, 1;
	shf.l.wrap.b32 	%r2783, %r2780, %r2781, 1;
	mov.b64 	%rd3140, {%r2783, %r2782};
	xor.b64  	%rd3141, %rd3111, %rd3140;
	xor.b64  	%rd3142, %rd3118, %rd3114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2784}, %rd3142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2785,%dummy}, %rd3142;
	}
	shf.l.wrap.b32 	%r2786, %r2785, %r2784, 1;
	shf.l.wrap.b32 	%r2787, %r2784, %r2785, 1;
	mov.b64 	%rd3143, {%r2787, %r2786};
	xor.b64  	%rd3144, %rd3124, %rd3100;
	xor.b64  	%rd3145, %rd3144, %rd3123;
	xor.b64  	%rd3146, %rd3145, %rd3143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2788}, %rd3133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2789,%dummy}, %rd3133;
	}
	shf.l.wrap.b32 	%r2790, %r2789, %r2788, 1;
	shf.l.wrap.b32 	%r2791, %r2788, %r2789, 1;
	mov.b64 	%rd3147, {%r2791, %r2790};
	xor.b64  	%rd3148, %rd3139, %rd3147;
	xor.b64  	%rd3149, %rd3120, %rd3106;
	xor.b64  	%rd3150, %rd3120, %rd3079;
	xor.b64  	%rd3151, %rd3134, %rd3071;
	xor.b64  	%rd3152, %rd3134, %rd3088;
	xor.b64  	%rd3153, %rd3141, %rd3082;
	xor.b64  	%rd3154, %rd3141, %rd3100;
	xor.b64  	%rd3155, %rd3146, %rd3066;
	xor.b64  	%rd3156, %rd3146, %rd3092;
	xor.b64  	%rd3157, %rd3148, %rd3076;
	xor.b64  	%rd3158, %rd3148, %rd3104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2792}, %rd3150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2793,%dummy}, %rd3150;
	}
	shf.l.wrap.b32 	%r2794, %r2793, %r2792, 3;
	shf.l.wrap.b32 	%r2795, %r2792, %r2793, 3;
	mov.b64 	%rd3159, {%r2795, %r2794};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd3151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd3151;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 20;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 20;
	mov.b64 	%rd3160, {%r2799, %r2798};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2800,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2801}, %rd3152;
	}
	shf.r.wrap.b32 	%r2802, %r2801, %r2800, 19;
	shf.r.wrap.b32 	%r2803, %r2800, %r2801, 19;
	mov.b64 	%rd3161, {%r2803, %r2802};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd3153;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 21;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 21;
	mov.b64 	%rd3162, {%r2807, %r2806};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2808,%dummy}, %rd3154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2809}, %rd3154;
	}
	shf.r.wrap.b32 	%r2810, %r2809, %r2808, 3;
	shf.r.wrap.b32 	%r2811, %r2808, %r2809, 3;
	mov.b64 	%rd3163, {%r2811, %r2810};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2812}, %rd3155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2813,%dummy}, %rd3155;
	}
	shf.l.wrap.b32 	%r2814, %r2813, %r2812, 28;
	shf.l.wrap.b32 	%r2815, %r2812, %r2813, 28;
	mov.b64 	%rd3164, {%r2815, %r2814};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2816}, %rd3156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2817,%dummy}, %rd3156;
	}
	shf.l.wrap.b32 	%r2818, %r2817, %r2816, 21;
	shf.l.wrap.b32 	%r2819, %r2816, %r2817, 21;
	mov.b64 	%rd3165, {%r2819, %r2818};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2820}, %rd3157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2821,%dummy}, %rd3157;
	}
	shf.l.wrap.b32 	%r2822, %r2821, %r2820, 20;
	shf.l.wrap.b32 	%r2823, %r2820, %r2821, 20;
	mov.b64 	%rd3166, {%r2823, %r2822};
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2824}, %rd3158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2825,%dummy}, %rd3158;
	}
	shf.l.wrap.b32 	%r2826, %r2825, %r2824, 14;
	shf.l.wrap.b32 	%r2827, %r2824, %r2825, 14;
	mov.b64 	%rd3167, {%r2827, %r2826};
	not.b64 	%rd3168, %rd3162;
	or.b64  	%rd3169, %rd3162, %rd3160;
	or.b64  	%rd3170, %rd3165, %rd3168;
	and.b64  	%rd3171, %rd3167, %rd3165;
	or.b64  	%rd3172, %rd3167, %rd3149;
	xor.b64  	%rd3173, %rd3172, %rd3165;
	mov.b64	{%r2828, %r2829}, %rd3173;
	and.b64  	%rd3174, %rd3160, %rd3149;
	xor.b64  	%rd3175, %rd3167, %rd3174;
	mov.b64	{%r2830, %r2831}, %rd3175;
	not.b64 	%rd3176, %rd3163;
	or.b64  	%rd3177, %rd3166, %rd3159;
	xor.b64  	%rd3178, %rd3177, %rd3164;
	mov.b64	{%r2832, %r2833}, %rd3178;
	and.b64  	%rd3179, %rd3161, %rd3159;
	xor.b64  	%rd3180, %rd3166, %rd3179;
	mov.b64	{%r2834, %r2835}, %rd3180;
	or.b64  	%rd3181, %rd3161, %rd3176;
	xor.b64  	%rd3182, %rd3181, %rd3159;
	mov.b64	{%r2836, %r2837}, %rd3182;
	xor.b64  	%rd3183, %rd3149, %rd3169;
	xor.b64  	%rd3184, %rd3183, -9223372034707259384;
	mov.b64	{%r2838, %r2839}, %rd3184;
	xor.b64  	%rd3185, %rd3160, %rd3170;
	not.b64 	%rd3186, %rd3185;
	mov.b64	{%r2840, %r2841}, %rd3186;
	xor.b64  	%rd3187, %rd3171, %rd3168;
	mov.b64	{%r2842, %r2843}, %rd3187;
	mov.b32	{%rs97, %rs98}, %r2838;
	shr.u16 	%rs99, %rs97, 8;
	shr.u16 	%rs100, %rs98, 8;
	st.global.v4.u8 	[%rd6+4], {%rs100, %rs98, %rs99, %rs97};
	mov.b32	{%rs101, %rs102}, %r2839;
	shr.u16 	%rs103, %rs101, 8;
	shr.u16 	%rs104, %rs102, 8;
	st.global.v4.u8 	[%rd6], {%rs104, %rs102, %rs103, %rs101};
	mov.b32	{%rs105, %rs106}, %r2840;
	shr.u16 	%rs107, %rs105, 8;
	shr.u16 	%rs108, %rs106, 8;
	st.global.v4.u8 	[%rd6+12], {%rs108, %rs106, %rs107, %rs105};
	mov.b32	{%rs109, %rs110}, %r2841;
	shr.u16 	%rs111, %rs109, 8;
	shr.u16 	%rs112, %rs110, 8;
	st.global.v4.u8 	[%rd6+8], {%rs112, %rs110, %rs111, %rs109};
	mov.b32	{%rs113, %rs114}, %r2842;
	shr.u16 	%rs115, %rs113, 8;
	shr.u16 	%rs116, %rs114, 8;
	st.global.v4.u8 	[%rd6+20], {%rs116, %rs114, %rs115, %rs113};
	mov.b32	{%rs117, %rs118}, %r2843;
	shr.u16 	%rs119, %rs117, 8;
	shr.u16 	%rs120, %rs118, 8;
	st.global.v4.u8 	[%rd6+16], {%rs120, %rs118, %rs119, %rs117};
	mov.b32	{%rs121, %rs122}, %r2828;
	shr.u16 	%rs123, %rs121, 8;
	shr.u16 	%rs124, %rs122, 8;
	st.global.v4.u8 	[%rd6+28], {%rs124, %rs122, %rs123, %rs121};
	mov.b32	{%rs125, %rs126}, %r2829;
	shr.u16 	%rs127, %rs125, 8;
	shr.u16 	%rs128, %rs126, 8;
	st.global.v4.u8 	[%rd6+24], {%rs128, %rs126, %rs127, %rs125};
	mov.b32	{%rs129, %rs130}, %r2830;
	shr.u16 	%rs131, %rs129, 8;
	shr.u16 	%rs132, %rs130, 8;
	st.global.v4.u8 	[%rd6+36], {%rs132, %rs130, %rs131, %rs129};
	mov.b32	{%rs133, %rs134}, %r2831;
	shr.u16 	%rs135, %rs133, 8;
	shr.u16 	%rs136, %rs134, 8;
	st.global.v4.u8 	[%rd6+32], {%rs136, %rs134, %rs135, %rs133};
	mov.b32	{%rs137, %rs138}, %r2832;
	shr.u16 	%rs139, %rs137, 8;
	shr.u16 	%rs140, %rs138, 8;
	st.global.v4.u8 	[%rd6+44], {%rs140, %rs138, %rs139, %rs137};
	mov.b32	{%rs141, %rs142}, %r2833;
	shr.u16 	%rs143, %rs141, 8;
	shr.u16 	%rs144, %rs142, 8;
	st.global.v4.u8 	[%rd6+40], {%rs144, %rs142, %rs143, %rs141};
	mov.b32	{%rs145, %rs146}, %r2834;
	shr.u16 	%rs147, %rs145, 8;
	shr.u16 	%rs148, %rs146, 8;
	st.global.v4.u8 	[%rd6+52], {%rs148, %rs146, %rs147, %rs145};
	mov.b32	{%rs149, %rs150}, %r2835;
	shr.u16 	%rs151, %rs149, 8;
	shr.u16 	%rs152, %rs150, 8;
	st.global.v4.u8 	[%rd6+48], {%rs152, %rs150, %rs151, %rs149};
	mov.b32	{%rs153, %rs154}, %r2836;
	shr.u16 	%rs155, %rs153, 8;
	shr.u16 	%rs156, %rs154, 8;
	st.global.v4.u8 	[%rd6+60], {%rs156, %rs154, %rs155, %rs153};
	mov.b32	{%rs157, %rs158}, %r2837;
	shr.u16 	%rs159, %rs157, 8;
	shr.u16 	%rs160, %rs158, 8;
	st.global.v4.u8 	[%rd6+56], {%rs160, %rs158, %rs159, %rs157};
	bar.sync 	0;
	ret;
}

	// .globl	search4
.entry search4(
	.param .u64 .ptr .global .align 8 search4_param_0,
	.param .u64 .ptr .global .align 4 search4_param_1,
	.param .u64 search4_param_2
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<97>;
	.reg .b32 	%r<2398>;
	.reg .b64 	%rd<2060>;


	ld.param.u64 	%rd2, [search4_param_0];
	ld.param.u64 	%rd3, [search4_param_2];
	mov.b32	%r2, %envreg3;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mad.lo.s32 	%r5, %r3, %r4, %r2;
	mov.u32 	%r6, %tid.x;
	add.s32 	%r1, %r5, %r6;
	cvt.u64.u32	%rd4, %r1;
	mov.b32	%r7, %envreg0;
	mul.lo.s32 	%r8, %r4, %r7;
	sub.s32 	%r9, %r2, %r8;
	cvt.u64.u32	%rd5, %r9;
	sub.s64 	%rd6, %rd4, %rd5;
	and.b64  	%rd7, %rd6, 4294967295;
	shl.b64 	%rd8, %rd7, 6;
	add.s64 	%rd9, %rd2, %rd8;
	ld.global.v4.u8 	{%rs1, %rs2, %rs3, %rs4}, [%rd9];
	cvt.u32.u16	%r10, %rs4;
	cvt.u32.u16	%r11, %rs3;
	bfi.b32 	%r12, %r11, %r10, 8, 8;
	cvt.u32.u16	%r13, %rs2;
	cvt.u32.u16	%r14, %rs1;
	bfi.b32 	%r15, %r14, %r13, 8, 8;
	bfi.b32 	%r16, %r15, %r12, 16, 16;
	ld.global.v4.u8 	{%rs7, %rs8, %rs9, %rs10}, [%rd9+4];
	cvt.u32.u16	%r17, %rs10;
	cvt.u32.u16	%r18, %rs9;
	bfi.b32 	%r19, %r18, %r17, 8, 8;
	cvt.u32.u16	%r20, %rs8;
	cvt.u32.u16	%r21, %rs7;
	bfi.b32 	%r22, %r21, %r20, 8, 8;
	bfi.b32 	%r23, %r22, %r19, 16, 16;
	mov.b64	%rd10, {%r23, %r16};
	ld.global.v4.u8 	{%rs13, %rs14, %rs15, %rs16}, [%rd9+8];
	cvt.u32.u16	%r24, %rs16;
	cvt.u32.u16	%r25, %rs15;
	bfi.b32 	%r26, %r25, %r24, 8, 8;
	cvt.u32.u16	%r27, %rs14;
	cvt.u32.u16	%r28, %rs13;
	bfi.b32 	%r29, %r28, %r27, 8, 8;
	bfi.b32 	%r30, %r29, %r26, 16, 16;
	ld.global.v4.u8 	{%rs19, %rs20, %rs21, %rs22}, [%rd9+12];
	cvt.u32.u16	%r31, %rs22;
	cvt.u32.u16	%r32, %rs21;
	bfi.b32 	%r33, %r32, %r31, 8, 8;
	cvt.u32.u16	%r34, %rs20;
	cvt.u32.u16	%r35, %rs19;
	bfi.b32 	%r36, %r35, %r34, 8, 8;
	bfi.b32 	%r37, %r36, %r33, 16, 16;
	mov.b64	%rd11, {%r37, %r30};
	ld.global.v4.u8 	{%rs25, %rs26, %rs27, %rs28}, [%rd9+16];
	cvt.u32.u16	%r38, %rs28;
	cvt.u32.u16	%r39, %rs27;
	bfi.b32 	%r40, %r39, %r38, 8, 8;
	cvt.u32.u16	%r41, %rs26;
	cvt.u32.u16	%r42, %rs25;
	bfi.b32 	%r43, %r42, %r41, 8, 8;
	bfi.b32 	%r44, %r43, %r40, 16, 16;
	ld.global.v4.u8 	{%rs31, %rs32, %rs33, %rs34}, [%rd9+20];
	cvt.u32.u16	%r45, %rs34;
	cvt.u32.u16	%r46, %rs33;
	bfi.b32 	%r47, %r46, %r45, 8, 8;
	cvt.u32.u16	%r48, %rs32;
	cvt.u32.u16	%r49, %rs31;
	bfi.b32 	%r50, %r49, %r48, 8, 8;
	bfi.b32 	%r51, %r50, %r47, 16, 16;
	mov.b64	%rd12, {%r51, %r44};
	ld.global.v4.u8 	{%rs37, %rs38, %rs39, %rs40}, [%rd9+24];
	cvt.u32.u16	%r52, %rs40;
	cvt.u32.u16	%r53, %rs39;
	bfi.b32 	%r54, %r53, %r52, 8, 8;
	cvt.u32.u16	%r55, %rs38;
	cvt.u32.u16	%r56, %rs37;
	bfi.b32 	%r57, %r56, %r55, 8, 8;
	bfi.b32 	%r58, %r57, %r54, 16, 16;
	ld.global.v4.u8 	{%rs43, %rs44, %rs45, %rs46}, [%rd9+28];
	cvt.u32.u16	%r59, %rs46;
	cvt.u32.u16	%r60, %rs45;
	bfi.b32 	%r61, %r60, %r59, 8, 8;
	cvt.u32.u16	%r62, %rs44;
	cvt.u32.u16	%r63, %rs43;
	bfi.b32 	%r64, %r63, %r62, 8, 8;
	bfi.b32 	%r65, %r64, %r61, 16, 16;
	mov.b64	%rd13, {%r65, %r58};
	ld.global.v4.u8 	{%rs49, %rs50, %rs51, %rs52}, [%rd9+32];
	cvt.u32.u16	%r66, %rs52;
	cvt.u32.u16	%r67, %rs51;
	bfi.b32 	%r68, %r67, %r66, 8, 8;
	cvt.u32.u16	%r69, %rs50;
	cvt.u32.u16	%r70, %rs49;
	bfi.b32 	%r71, %r70, %r69, 8, 8;
	bfi.b32 	%r72, %r71, %r68, 16, 16;
	ld.global.v4.u8 	{%rs55, %rs56, %rs57, %rs58}, [%rd9+36];
	cvt.u32.u16	%r73, %rs58;
	cvt.u32.u16	%r74, %rs57;
	bfi.b32 	%r75, %r74, %r73, 8, 8;
	cvt.u32.u16	%r76, %rs56;
	cvt.u32.u16	%r77, %rs55;
	bfi.b32 	%r78, %r77, %r76, 8, 8;
	bfi.b32 	%r79, %r78, %r75, 16, 16;
	mov.b64	%rd14, {%r79, %r72};
	ld.global.v4.u8 	{%rs61, %rs62, %rs63, %rs64}, [%rd9+40];
	cvt.u32.u16	%r80, %rs64;
	cvt.u32.u16	%r81, %rs63;
	bfi.b32 	%r82, %r81, %r80, 8, 8;
	cvt.u32.u16	%r83, %rs62;
	cvt.u32.u16	%r84, %rs61;
	bfi.b32 	%r85, %r84, %r83, 8, 8;
	bfi.b32 	%r86, %r85, %r82, 16, 16;
	ld.global.v4.u8 	{%rs67, %rs68, %rs69, %rs70}, [%rd9+44];
	cvt.u32.u16	%r87, %rs70;
	cvt.u32.u16	%r88, %rs69;
	bfi.b32 	%r89, %r88, %r87, 8, 8;
	cvt.u32.u16	%r90, %rs68;
	cvt.u32.u16	%r91, %rs67;
	bfi.b32 	%r92, %r91, %r90, 8, 8;
	bfi.b32 	%r93, %r92, %r89, 16, 16;
	mov.b64	%rd15, {%r93, %r86};
	ld.global.v4.u8 	{%rs73, %rs74, %rs75, %rs76}, [%rd9+48];
	cvt.u32.u16	%r94, %rs76;
	cvt.u32.u16	%r95, %rs75;
	bfi.b32 	%r96, %r95, %r94, 8, 8;
	cvt.u32.u16	%r97, %rs74;
	cvt.u32.u16	%r98, %rs73;
	bfi.b32 	%r99, %r98, %r97, 8, 8;
	bfi.b32 	%r100, %r99, %r96, 16, 16;
	ld.global.v4.u8 	{%rs79, %rs80, %rs81, %rs82}, [%rd9+52];
	cvt.u32.u16	%r101, %rs82;
	cvt.u32.u16	%r102, %rs81;
	bfi.b32 	%r103, %r102, %r101, 8, 8;
	cvt.u32.u16	%r104, %rs80;
	cvt.u32.u16	%r105, %rs79;
	bfi.b32 	%r106, %r105, %r104, 8, 8;
	bfi.b32 	%r107, %r106, %r103, 16, 16;
	mov.b64	%rd16, {%r107, %r100};
	ld.global.v4.u8 	{%rs85, %rs86, %rs87, %rs88}, [%rd9+56];
	cvt.u32.u16	%r108, %rs88;
	cvt.u32.u16	%r109, %rs87;
	bfi.b32 	%r110, %r109, %r108, 8, 8;
	cvt.u32.u16	%r111, %rs86;
	cvt.u32.u16	%r112, %rs85;
	bfi.b32 	%r113, %r112, %r111, 8, 8;
	bfi.b32 	%r114, %r113, %r110, 16, 16;
	ld.global.v4.u8 	{%rs91, %rs92, %rs93, %rs94}, [%rd9+60];
	cvt.u32.u16	%r115, %rs94;
	cvt.u32.u16	%r116, %rs93;
	bfi.b32 	%r117, %r116, %r115, 8, 8;
	cvt.u32.u16	%r118, %rs92;
	cvt.u32.u16	%r119, %rs91;
	bfi.b32 	%r120, %r119, %r118, 8, 8;
	bfi.b32 	%r121, %r120, %r117, 16, 16;
	mov.b64	%rd17, {%r121, %r114};
	add.s64 	%rd18, %rd11, 978932832955457283;
	add.s64 	%rd19, %rd10, %rd18;
	add.s64 	%rd20, %rd13, -7339365279355032399;
	add.s64 	%rd21, %rd12, %rd20;
	add.s64 	%rd22, %rd15, -1531723821829733324;
	add.s64 	%rd23, %rd14, %rd22;
	add.s64 	%rd24, %rd17, -5901786942805128141;
	add.s64 	%rd25, %rd16, %rd24;
	add.s64 	%rd26, %rd19, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd18;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r123}, %rd18;
	}
	shf.r.wrap.b32 	%r124, %r123, %r122, 18;
	shf.r.wrap.b32 	%r125, %r122, %r123, 18;
	mov.b64 	%rd27, {%r125, %r124};
	xor.b64  	%rd28, %rd27, %rd26;
	add.s64 	%rd29, %rd21, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r126,%dummy}, %rd20;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r127}, %rd20;
	}
	shf.r.wrap.b32 	%r128, %r127, %r126, 28;
	shf.r.wrap.b32 	%r129, %r126, %r127, 28;
	mov.b64 	%rd30, {%r129, %r128};
	xor.b64  	%rd31, %rd30, %rd29;
	add.s64 	%rd32, %rd23, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd22;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r131,%dummy}, %rd22;
	}
	shf.l.wrap.b32 	%r132, %r131, %r130, 19;
	shf.l.wrap.b32 	%r133, %r130, %r131, 19;
	mov.b64 	%rd33, {%r133, %r132};
	xor.b64  	%rd34, %rd33, %rd32;
	add.s64 	%rd35, %rd25, -8570047969557629661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r134,%dummy}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r135}, %rd24;
	}
	shf.r.wrap.b32 	%r136, %r135, %r134, 27;
	shf.r.wrap.b32 	%r137, %r134, %r135, 27;
	mov.b64 	%rd36, {%r137, %r136};
	xor.b64  	%rd37, %rd35, %rd36;
	add.s64 	%rd38, %rd28, %rd29;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd28;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r139}, %rd28;
	}
	shf.r.wrap.b32 	%r140, %r139, %r138, 31;
	shf.r.wrap.b32 	%r141, %r138, %r139, 31;
	mov.b64 	%rd39, {%r141, %r140};
	xor.b64  	%rd40, %rd39, %rd38;
	add.s64 	%rd41, %rd37, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r142}, %rd37;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd37;
	}
	shf.l.wrap.b32 	%r144, %r143, %r142, 27;
	shf.l.wrap.b32 	%r145, %r142, %r143, 27;
	mov.b64 	%rd42, {%r145, %r144};
	xor.b64  	%rd43, %rd41, %rd42;
	add.s64 	%rd44, %rd35, %rd34;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r147,%dummy}, %rd34;
	}
	shf.l.wrap.b32 	%r148, %r147, %r146, 14;
	shf.l.wrap.b32 	%r149, %r146, %r147, 14;
	mov.b64 	%rd45, {%r149, %r148};
	xor.b64  	%rd46, %rd45, %rd44;
	add.s64 	%rd47, %rd31, %rd26;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r150,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r151}, %rd31;
	}
	shf.r.wrap.b32 	%r152, %r151, %r150, 22;
	shf.r.wrap.b32 	%r153, %r150, %r151, 22;
	mov.b64 	%rd48, {%r153, %r152};
	xor.b64  	%rd49, %rd48, %rd47;
	add.s64 	%rd50, %rd41, %rd40;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r154}, %rd40;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r155,%dummy}, %rd40;
	}
	shf.l.wrap.b32 	%r156, %r155, %r154, 17;
	shf.l.wrap.b32 	%r157, %r154, %r155, 17;
	mov.b64 	%rd51, {%r157, %r156};
	xor.b64  	%rd52, %rd51, %rd50;
	add.s64 	%rd53, %rd49, %rd44;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r158,%dummy}, %rd49;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r159}, %rd49;
	}
	shf.r.wrap.b32 	%r160, %r159, %r158, 15;
	shf.r.wrap.b32 	%r161, %r158, %r159, 15;
	mov.b64 	%rd54, {%r161, %r160};
	xor.b64  	%rd55, %rd54, %rd53;
	add.s64 	%rd56, %rd46, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r162,%dummy}, %rd46;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r163}, %rd46;
	}
	shf.r.wrap.b32 	%r164, %r163, %r162, 28;
	shf.r.wrap.b32 	%r165, %r162, %r163, 28;
	mov.b64 	%rd57, {%r165, %r164};
	xor.b64  	%rd58, %rd57, %rd56;
	add.s64 	%rd59, %rd43, %rd38;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r167}, %rd43;
	}
	shf.r.wrap.b32 	%r168, %r167, %r166, 25;
	shf.r.wrap.b32 	%r169, %r166, %r167, 25;
	mov.b64 	%rd60, {%r169, %r168};
	xor.b64  	%rd61, %rd60, %rd59;
	add.s64 	%rd62, %rd53, %rd52;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r171}, %rd52;
	}
	shf.r.wrap.b32 	%r172, %r171, %r170, 20;
	shf.r.wrap.b32 	%r173, %r170, %r171, 20;
	mov.b64 	%rd63, {%r173, %r172};
	xor.b64  	%rd64, %rd63, %rd62;
	add.s64 	%rd65, %rd61, %rd56;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r174}, %rd61;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd61;
	}
	shf.l.wrap.b32 	%r176, %r175, %r174, 9;
	shf.l.wrap.b32 	%r177, %r174, %r175, 9;
	mov.b64 	%rd66, {%r177, %r176};
	xor.b64  	%rd67, %rd66, %rd65;
	add.s64 	%rd68, %rd58, %rd59;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r178,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r179}, %rd58;
	}
	shf.r.wrap.b32 	%r180, %r179, %r178, 10;
	shf.r.wrap.b32 	%r181, %r178, %r179, 10;
	mov.b64 	%rd69, {%r181, %r180};
	xor.b64  	%rd70, %rd69, %rd68;
	add.s64 	%rd71, %rd55, %rd50;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r182,%dummy}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r183}, %rd55;
	}
	shf.r.wrap.b32 	%r184, %r183, %r182, 8;
	shf.r.wrap.b32 	%r185, %r182, %r183, 8;
	mov.b64 	%rd72, {%r185, %r184};
	xor.b64  	%rd73, %rd72, %rd71;
	add.s64 	%rd74, %rd64, -8083517948103779378;
	add.s64 	%rd75, %rd65, %rd74;
	add.s64 	%rd76, %rd73, 6752626034097301424;
	add.s64 	%rd77, %rd68, %rd76;
	add.s64 	%rd78, %rd70, -8570047969557629661;
	add.s64 	%rd79, %rd71, %rd78;
	add.s64 	%rd80, %rd67, -3840999364909121851;
	add.s64 	%rd81, %rd75, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd74;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r187}, %rd74;
	}
	shf.r.wrap.b32 	%r188, %r187, %r186, 25;
	shf.r.wrap.b32 	%r189, %r186, %r187, 25;
	mov.b64 	%rd82, {%r189, %r188};
	xor.b64  	%rd83, %rd82, %rd81;
	add.s64 	%rd84, %rd77, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r190}, %rd76;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd76;
	}
	shf.l.wrap.b32 	%r192, %r191, %r190, 30;
	shf.l.wrap.b32 	%r193, %r190, %r191, 30;
	mov.b64 	%rd85, {%r193, %r192};
	xor.b64  	%rd86, %rd84, %rd85;
	add.s64 	%rd87, %rd79, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r194,%dummy}, %rd78;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r195}, %rd78;
	}
	shf.r.wrap.b32 	%r196, %r195, %r194, 30;
	shf.r.wrap.b32 	%r197, %r194, %r195, 30;
	mov.b64 	%rd88, {%r197, %r196};
	xor.b64  	%rd89, %rd88, %rd87;
	add.s64 	%rd90, %rd62, %rd80;
	add.s64 	%rd91, %rd90, -7054708447411975053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd80;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd80;
	}
	shf.l.wrap.b32 	%r200, %r199, %r198, 24;
	shf.l.wrap.b32 	%r201, %r198, %r199, 24;
	mov.b64 	%rd92, {%r201, %r200};
	xor.b64  	%rd93, %rd92, %rd91;
	add.s64 	%rd94, %rd84, %rd83;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r202}, %rd83;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r203,%dummy}, %rd83;
	}
	shf.l.wrap.b32 	%r204, %r203, %r202, 13;
	shf.l.wrap.b32 	%r205, %r202, %r203, 13;
	mov.b64 	%rd95, {%r205, %r204};
	xor.b64  	%rd96, %rd95, %rd94;
	add.s64 	%rd97, %rd93, %rd87;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd93;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r207}, %rd93;
	}
	shf.r.wrap.b32 	%r208, %r207, %r206, 14;
	shf.r.wrap.b32 	%r209, %r206, %r207, 14;
	mov.b64 	%rd98, {%r209, %r208};
	xor.b64  	%rd99, %rd98, %rd97;
	add.s64 	%rd100, %rd89, %rd91;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd89;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r211,%dummy}, %rd89;
	}
	shf.l.wrap.b32 	%r212, %r211, %r210, 10;
	shf.l.wrap.b32 	%r213, %r210, %r211, 10;
	mov.b64 	%rd101, {%r213, %r212};
	xor.b64  	%rd102, %rd101, %rd100;
	add.s64 	%rd103, %rd86, %rd81;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd86;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd86;
	}
	shf.l.wrap.b32 	%r216, %r215, %r214, 17;
	shf.l.wrap.b32 	%r217, %r214, %r215, 17;
	mov.b64 	%rd104, {%r217, %r216};
	xor.b64  	%rd105, %rd104, %rd103;
	add.s64 	%rd106, %rd97, %rd96;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r218}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r219,%dummy}, %rd96;
	}
	shf.l.wrap.b32 	%r220, %r219, %r218, 25;
	shf.l.wrap.b32 	%r221, %r218, %r219, 25;
	mov.b64 	%rd107, {%r221, %r220};
	xor.b64  	%rd108, %rd107, %rd106;
	add.s64 	%rd109, %rd105, %rd100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r222}, %rd105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd105;
	}
	shf.l.wrap.b32 	%r224, %r223, %r222, 29;
	shf.l.wrap.b32 	%r225, %r222, %r223, 29;
	mov.b64 	%rd110, {%r225, %r224};
	xor.b64  	%rd111, %rd110, %rd109;
	add.s64 	%rd112, %rd102, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r226,%dummy}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r227}, %rd102;
	}
	shf.r.wrap.b32 	%r228, %r227, %r226, 25;
	shf.r.wrap.b32 	%r229, %r226, %r227, 25;
	mov.b64 	%rd113, {%r229, %r228};
	xor.b64  	%rd114, %rd113, %rd112;
	add.s64 	%rd115, %rd99, %rd94;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd99;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r231}, %rd99;
	}
	shf.r.wrap.b32 	%r232, %r231, %r230, 21;
	shf.r.wrap.b32 	%r233, %r230, %r231, 21;
	mov.b64 	%rd116, {%r233, %r232};
	xor.b64  	%rd117, %rd116, %rd115;
	add.s64 	%rd118, %rd109, %rd108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r234}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r235,%dummy}, %rd108;
	}
	shf.l.wrap.b32 	%r236, %r235, %r234, 8;
	shf.l.wrap.b32 	%r237, %r234, %r235, 8;
	mov.b64 	%rd119, {%r237, %r236};
	xor.b64  	%rd120, %rd119, %rd118;
	add.s64 	%rd121, %rd117, %rd112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r239}, %rd117;
	}
	shf.r.wrap.b32 	%r240, %r239, %r238, 29;
	shf.r.wrap.b32 	%r241, %r238, %r239, 29;
	mov.b64 	%rd122, {%r241, %r240};
	xor.b64  	%rd123, %rd122, %rd121;
	add.s64 	%rd124, %rd114, %rd115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r242,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r243}, %rd114;
	}
	shf.r.wrap.b32 	%r244, %r243, %r242, 8;
	shf.r.wrap.b32 	%r245, %r242, %r243, 8;
	mov.b64 	%rd125, {%r245, %r244};
	xor.b64  	%rd126, %rd125, %rd124;
	add.s64 	%rd127, %rd111, %rd106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd111;
	}
	shf.l.wrap.b32 	%r248, %r247, %r246, 22;
	shf.l.wrap.b32 	%r249, %r246, %r247, 22;
	mov.b64 	%rd128, {%r249, %r248};
	xor.b64  	%rd129, %rd128, %rd127;
	add.s64 	%rd130, %rd120, -7339365279355032399;
	add.s64 	%rd131, %rd121, %rd130;
	add.s64 	%rd132, %rd129, -1531723821829733388;
	add.s64 	%rd133, %rd124, %rd132;
	add.s64 	%rd134, %rd126, -7054708447411975053;
	add.s64 	%rd135, %rd127, %rd134;
	add.s64 	%rd136, %rd123, 5261240102383538640;
	add.s64 	%rd137, %rd131, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r251}, %rd130;
	}
	shf.r.wrap.b32 	%r252, %r251, %r250, 18;
	shf.r.wrap.b32 	%r253, %r250, %r251, 18;
	mov.b64 	%rd138, {%r253, %r252};
	xor.b64  	%rd139, %rd138, %rd137;
	add.s64 	%rd140, %rd133, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r255}, %rd132;
	}
	shf.r.wrap.b32 	%r256, %r255, %r254, 28;
	shf.r.wrap.b32 	%r257, %r254, %r255, 28;
	mov.b64 	%rd141, {%r257, %r256};
	xor.b64  	%rd142, %rd140, %rd141;
	add.s64 	%rd143, %rd135, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r259,%dummy}, %rd134;
	}
	shf.l.wrap.b32 	%r260, %r259, %r258, 19;
	shf.l.wrap.b32 	%r261, %r258, %r259, 19;
	mov.b64 	%rd144, {%r261, %r260};
	xor.b64  	%rd145, %rd144, %rd143;
	add.s64 	%rd146, %rd118, %rd136;
	add.s64 	%rd147, %rd146, -3840999364909121788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r263}, %rd136;
	}
	shf.r.wrap.b32 	%r264, %r263, %r262, 27;
	shf.r.wrap.b32 	%r265, %r262, %r263, 27;
	mov.b64 	%rd148, {%r265, %r264};
	xor.b64  	%rd149, %rd148, %rd147;
	add.s64 	%rd150, %rd140, %rd139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r267}, %rd139;
	}
	shf.r.wrap.b32 	%r268, %r267, %r266, 31;
	shf.r.wrap.b32 	%r269, %r266, %r267, 31;
	mov.b64 	%rd151, {%r269, %r268};
	xor.b64  	%rd152, %rd151, %rd150;
	add.s64 	%rd153, %rd149, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r270}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd149;
	}
	shf.l.wrap.b32 	%r272, %r271, %r270, 27;
	shf.l.wrap.b32 	%r273, %r270, %r271, 27;
	mov.b64 	%rd154, {%r273, %r272};
	xor.b64  	%rd155, %rd154, %rd153;
	add.s64 	%rd156, %rd145, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r275,%dummy}, %rd145;
	}
	shf.l.wrap.b32 	%r276, %r275, %r274, 14;
	shf.l.wrap.b32 	%r277, %r274, %r275, 14;
	mov.b64 	%rd157, {%r277, %r276};
	xor.b64  	%rd158, %rd157, %rd156;
	add.s64 	%rd159, %rd142, %rd137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r278,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r279}, %rd142;
	}
	shf.r.wrap.b32 	%r280, %r279, %r278, 22;
	shf.r.wrap.b32 	%r281, %r278, %r279, 22;
	mov.b64 	%rd160, {%r281, %r280};
	xor.b64  	%rd161, %rd160, %rd159;
	add.s64 	%rd162, %rd153, %rd152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r282}, %rd152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r283,%dummy}, %rd152;
	}
	shf.l.wrap.b32 	%r284, %r283, %r282, 17;
	shf.l.wrap.b32 	%r285, %r282, %r283, 17;
	mov.b64 	%rd163, {%r285, %r284};
	xor.b64  	%rd164, %rd163, %rd162;
	add.s64 	%rd165, %rd161, %rd156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r286,%dummy}, %rd161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r287}, %rd161;
	}
	shf.r.wrap.b32 	%r288, %r287, %r286, 15;
	shf.r.wrap.b32 	%r289, %r286, %r287, 15;
	mov.b64 	%rd166, {%r289, %r288};
	xor.b64  	%rd167, %rd166, %rd165;
	add.s64 	%rd168, %rd158, %rd159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r290,%dummy}, %rd158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r291}, %rd158;
	}
	shf.r.wrap.b32 	%r292, %r291, %r290, 28;
	shf.r.wrap.b32 	%r293, %r290, %r291, 28;
	mov.b64 	%rd169, {%r293, %r292};
	xor.b64  	%rd170, %rd169, %rd168;
	add.s64 	%rd171, %rd155, %rd150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd155;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 25;
	shf.r.wrap.b32 	%r297, %r294, %r295, 25;
	mov.b64 	%rd172, {%r297, %r296};
	xor.b64  	%rd173, %rd172, %rd171;
	add.s64 	%rd174, %rd165, %rd164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r299}, %rd164;
	}
	shf.r.wrap.b32 	%r300, %r299, %r298, 20;
	shf.r.wrap.b32 	%r301, %r298, %r299, 20;
	mov.b64 	%rd175, {%r301, %r300};
	xor.b64  	%rd176, %rd175, %rd174;
	add.s64 	%rd177, %rd173, %rd168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r303,%dummy}, %rd173;
	}
	shf.l.wrap.b32 	%r304, %r303, %r302, 9;
	shf.l.wrap.b32 	%r305, %r302, %r303, 9;
	mov.b64 	%rd178, {%r305, %r304};
	xor.b64  	%rd179, %rd178, %rd177;
	add.s64 	%rd180, %rd170, %rd171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd170;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 10;
	shf.r.wrap.b32 	%r309, %r306, %r307, 10;
	mov.b64 	%rd181, {%r309, %r308};
	xor.b64  	%rd182, %rd181, %rd180;
	add.s64 	%rd183, %rd167, %rd162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r310,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r311}, %rd167;
	}
	shf.r.wrap.b32 	%r312, %r311, %r310, 8;
	shf.r.wrap.b32 	%r313, %r310, %r311, 8;
	mov.b64 	%rd184, {%r313, %r312};
	xor.b64  	%rd185, %rd184, %rd183;
	add.s64 	%rd186, %rd176, 6752626034097301424;
	add.s64 	%rd187, %rd177, %rd186;
	add.s64 	%rd188, %rd185, -7417126464950782685;
	add.s64 	%rd189, %rd180, %rd188;
	add.s64 	%rd190, %rd182, -3840999364909121788;
	add.s64 	%rd191, %rd183, %rd190;
	add.s64 	%rd192, %rd179, 978932832955457286;
	add.s64 	%rd193, %rd174, %rd192;
	add.s64 	%rd194, %rd187, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r315}, %rd186;
	}
	shf.r.wrap.b32 	%r316, %r315, %r314, 25;
	shf.r.wrap.b32 	%r317, %r314, %r315, 25;
	mov.b64 	%rd195, {%r317, %r316};
	xor.b64  	%rd196, %rd195, %rd194;
	add.s64 	%rd197, %rd189, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r318}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd188;
	}
	shf.l.wrap.b32 	%r320, %r319, %r318, 30;
	shf.l.wrap.b32 	%r321, %r318, %r319, 30;
	mov.b64 	%rd198, {%r321, %r320};
	xor.b64  	%rd199, %rd197, %rd198;
	add.s64 	%rd200, %rd191, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r322,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r323}, %rd190;
	}
	shf.r.wrap.b32 	%r324, %r323, %r322, 30;
	shf.r.wrap.b32 	%r325, %r322, %r323, 30;
	mov.b64 	%rd201, {%r325, %r324};
	xor.b64  	%rd202, %rd201, %rd200;
	add.s64 	%rd203, %rd193, 4108318597776691662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r327,%dummy}, %rd192;
	}
	shf.l.wrap.b32 	%r328, %r327, %r326, 24;
	shf.l.wrap.b32 	%r329, %r326, %r327, 24;
	mov.b64 	%rd204, {%r329, %r328};
	xor.b64  	%rd205, %rd204, %rd203;
	add.s64 	%rd206, %rd197, %rd196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r330}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd196;
	}
	shf.l.wrap.b32 	%r332, %r331, %r330, 13;
	shf.l.wrap.b32 	%r333, %r330, %r331, 13;
	mov.b64 	%rd207, {%r333, %r332};
	xor.b64  	%rd208, %rd207, %rd206;
	add.s64 	%rd209, %rd205, %rd200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r334,%dummy}, %rd205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r335}, %rd205;
	}
	shf.r.wrap.b32 	%r336, %r335, %r334, 14;
	shf.r.wrap.b32 	%r337, %r334, %r335, 14;
	mov.b64 	%rd210, {%r337, %r336};
	xor.b64  	%rd211, %rd210, %rd209;
	add.s64 	%rd212, %rd202, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r339,%dummy}, %rd202;
	}
	shf.l.wrap.b32 	%r340, %r339, %r338, 10;
	shf.l.wrap.b32 	%r341, %r338, %r339, 10;
	mov.b64 	%rd213, {%r341, %r340};
	xor.b64  	%rd214, %rd213, %rd212;
	add.s64 	%rd215, %rd199, %rd194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd199;
	}
	shf.l.wrap.b32 	%r344, %r343, %r342, 17;
	shf.l.wrap.b32 	%r345, %r342, %r343, 17;
	mov.b64 	%rd216, {%r345, %r344};
	xor.b64  	%rd217, %rd216, %rd215;
	add.s64 	%rd218, %rd209, %rd208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r346}, %rd208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r347,%dummy}, %rd208;
	}
	shf.l.wrap.b32 	%r348, %r347, %r346, 25;
	shf.l.wrap.b32 	%r349, %r346, %r347, 25;
	mov.b64 	%rd219, {%r349, %r348};
	xor.b64  	%rd220, %rd219, %rd218;
	add.s64 	%rd221, %rd217, %rd212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r351,%dummy}, %rd217;
	}
	shf.l.wrap.b32 	%r352, %r351, %r350, 29;
	shf.l.wrap.b32 	%r353, %r350, %r351, 29;
	mov.b64 	%rd222, {%r353, %r352};
	xor.b64  	%rd223, %rd222, %rd221;
	add.s64 	%rd224, %rd214, %rd215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd214;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 25;
	shf.r.wrap.b32 	%r357, %r354, %r355, 25;
	mov.b64 	%rd225, {%r357, %r356};
	xor.b64  	%rd226, %rd225, %rd224;
	add.s64 	%rd227, %rd211, %rd206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r358,%dummy}, %rd211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r359}, %rd211;
	}
	shf.r.wrap.b32 	%r360, %r359, %r358, 21;
	shf.r.wrap.b32 	%r361, %r358, %r359, 21;
	mov.b64 	%rd228, {%r361, %r360};
	xor.b64  	%rd229, %rd228, %rd227;
	add.s64 	%rd230, %rd221, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r363,%dummy}, %rd220;
	}
	shf.l.wrap.b32 	%r364, %r363, %r362, 8;
	shf.l.wrap.b32 	%r365, %r362, %r363, 8;
	mov.b64 	%rd231, {%r365, %r364};
	xor.b64  	%rd232, %rd231, %rd230;
	add.s64 	%rd233, %rd229, %rd224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd229;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 29;
	shf.r.wrap.b32 	%r369, %r366, %r367, 29;
	mov.b64 	%rd234, {%r369, %r368};
	xor.b64  	%rd235, %rd234, %rd233;
	add.s64 	%rd236, %rd226, %rd227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r370,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r371}, %rd226;
	}
	shf.r.wrap.b32 	%r372, %r371, %r370, 8;
	shf.r.wrap.b32 	%r373, %r370, %r371, 8;
	mov.b64 	%rd237, {%r373, %r372};
	xor.b64  	%rd238, %rd237, %rd236;
	add.s64 	%rd239, %rd223, %rd218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r375,%dummy}, %rd223;
	}
	shf.l.wrap.b32 	%r376, %r375, %r374, 22;
	shf.l.wrap.b32 	%r377, %r374, %r375, 22;
	mov.b64 	%rd240, {%r377, %r376};
	xor.b64  	%rd241, %rd240, %rd239;
	add.s64 	%rd242, %rd232, -1531723821829733388;
	add.s64 	%rd243, %rd233, %rd242;
	add.s64 	%rd244, %rd241, -5901786942805128141;
	add.s64 	%rd245, %rd236, %rd244;
	add.s64 	%rd246, %rd238, 4108318597776691662;
	add.s64 	%rd247, %rd239, %rd246;
	add.s64 	%rd248, %rd235, -8083517948103779374;
	add.s64 	%rd249, %rd243, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd242;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 18;
	shf.r.wrap.b32 	%r381, %r378, %r379, 18;
	mov.b64 	%rd250, {%r381, %r380};
	xor.b64  	%rd251, %rd250, %rd249;
	add.s64 	%rd252, %rd245, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r383}, %rd244;
	}
	shf.r.wrap.b32 	%r384, %r383, %r382, 28;
	shf.r.wrap.b32 	%r385, %r382, %r383, 28;
	mov.b64 	%rd253, {%r385, %r384};
	xor.b64  	%rd254, %rd252, %rd253;
	add.s64 	%rd255, %rd247, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd246;
	}
	shf.l.wrap.b32 	%r388, %r387, %r386, 19;
	shf.l.wrap.b32 	%r389, %r386, %r387, 19;
	mov.b64 	%rd256, {%r389, %r388};
	xor.b64  	%rd257, %rd256, %rd255;
	add.s64 	%rd258, %rd230, %rd248;
	add.s64 	%rd259, %rd258, -173988671651389629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd248;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 27;
	shf.r.wrap.b32 	%r393, %r390, %r391, 27;
	mov.b64 	%rd260, {%r393, %r392};
	xor.b64  	%rd261, %rd260, %rd259;
	add.s64 	%rd262, %rd252, %rd251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r395}, %rd251;
	}
	shf.r.wrap.b32 	%r396, %r395, %r394, 31;
	shf.r.wrap.b32 	%r397, %r394, %r395, 31;
	mov.b64 	%rd263, {%r397, %r396};
	xor.b64  	%rd264, %rd263, %rd262;
	add.s64 	%rd265, %rd261, %rd255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r399,%dummy}, %rd261;
	}
	shf.l.wrap.b32 	%r400, %r399, %r398, 27;
	shf.l.wrap.b32 	%r401, %r398, %r399, 27;
	mov.b64 	%rd266, {%r401, %r400};
	xor.b64  	%rd267, %rd266, %rd265;
	add.s64 	%rd268, %rd257, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd257;
	}
	shf.l.wrap.b32 	%r404, %r403, %r402, 14;
	shf.l.wrap.b32 	%r405, %r402, %r403, 14;
	mov.b64 	%rd269, {%r405, %r404};
	xor.b64  	%rd270, %rd269, %rd268;
	add.s64 	%rd271, %rd254, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r406,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r407}, %rd254;
	}
	shf.r.wrap.b32 	%r408, %r407, %r406, 22;
	shf.r.wrap.b32 	%r409, %r406, %r407, 22;
	mov.b64 	%rd272, {%r409, %r408};
	xor.b64  	%rd273, %rd272, %rd271;
	add.s64 	%rd274, %rd265, %rd264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd264;
	}
	shf.l.wrap.b32 	%r412, %r411, %r410, 17;
	shf.l.wrap.b32 	%r413, %r410, %r411, 17;
	mov.b64 	%rd275, {%r413, %r412};
	xor.b64  	%rd276, %rd275, %rd274;
	add.s64 	%rd277, %rd273, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd273;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 15;
	shf.r.wrap.b32 	%r417, %r414, %r415, 15;
	mov.b64 	%rd278, {%r417, %r416};
	xor.b64  	%rd279, %rd278, %rd277;
	add.s64 	%rd280, %rd270, %rd271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r418,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r419}, %rd270;
	}
	shf.r.wrap.b32 	%r420, %r419, %r418, 28;
	shf.r.wrap.b32 	%r421, %r418, %r419, 28;
	mov.b64 	%rd281, {%r421, %r420};
	xor.b64  	%rd282, %rd281, %rd280;
	add.s64 	%rd283, %rd267, %rd262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r422,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r423}, %rd267;
	}
	shf.r.wrap.b32 	%r424, %r423, %r422, 25;
	shf.r.wrap.b32 	%r425, %r422, %r423, 25;
	mov.b64 	%rd284, {%r425, %r424};
	xor.b64  	%rd285, %rd284, %rd283;
	add.s64 	%rd286, %rd277, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r427}, %rd276;
	}
	shf.r.wrap.b32 	%r428, %r427, %r426, 20;
	shf.r.wrap.b32 	%r429, %r426, %r427, 20;
	mov.b64 	%rd287, {%r429, %r428};
	xor.b64  	%rd288, %rd287, %rd286;
	add.s64 	%rd289, %rd285, %rd280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r430}, %rd285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd285;
	}
	shf.l.wrap.b32 	%r432, %r431, %r430, 9;
	shf.l.wrap.b32 	%r433, %r430, %r431, 9;
	mov.b64 	%rd290, {%r433, %r432};
	xor.b64  	%rd291, %rd290, %rd289;
	add.s64 	%rd292, %rd282, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r434,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r435}, %rd282;
	}
	shf.r.wrap.b32 	%r436, %r435, %r434, 10;
	shf.r.wrap.b32 	%r437, %r434, %r435, 10;
	mov.b64 	%rd293, {%r437, %r436};
	xor.b64  	%rd294, %rd293, %rd292;
	add.s64 	%rd295, %rd279, %rd274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r438,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r439}, %rd279;
	}
	shf.r.wrap.b32 	%r440, %r439, %r438, 8;
	shf.r.wrap.b32 	%r441, %r438, %r439, 8;
	mov.b64 	%rd296, {%r441, %r440};
	xor.b64  	%rd297, %rd296, %rd295;
	add.s64 	%rd298, %rd288, -7417126464950782685;
	add.s64 	%rd299, %rd289, %rd298;
	add.s64 	%rd300, %rd297, -3840999364909121852;
	add.s64 	%rd301, %rd292, %rd300;
	add.s64 	%rd302, %rd294, -173988671651389629;
	add.s64 	%rd303, %rd295, %rd302;
	add.s64 	%rd304, %rd291, -7339365279355032394;
	add.s64 	%rd305, %rd299, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r443}, %rd298;
	}
	shf.r.wrap.b32 	%r444, %r443, %r442, 25;
	shf.r.wrap.b32 	%r445, %r442, %r443, 25;
	mov.b64 	%rd306, {%r445, %r444};
	xor.b64  	%rd307, %rd306, %rd305;
	add.s64 	%rd308, %rd301, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r446}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd300;
	}
	shf.l.wrap.b32 	%r448, %r447, %r446, 30;
	shf.l.wrap.b32 	%r449, %r446, %r447, 30;
	mov.b64 	%rd309, {%r449, %r448};
	xor.b64  	%rd310, %rd308, %rd309;
	add.s64 	%rd311, %rd303, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r450,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r451}, %rd302;
	}
	shf.r.wrap.b32 	%r452, %r451, %r450, 30;
	shf.r.wrap.b32 	%r453, %r450, %r451, 30;
	mov.b64 	%rd312, {%r453, %r452};
	xor.b64  	%rd313, %rd312, %rd311;
	add.s64 	%rd314, %rd286, %rd304;
	add.s64 	%rd315, %rd314, -8083517948103779314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd304;
	}
	shf.l.wrap.b32 	%r456, %r455, %r454, 24;
	shf.l.wrap.b32 	%r457, %r454, %r455, 24;
	mov.b64 	%rd316, {%r457, %r456};
	xor.b64  	%rd317, %rd316, %rd315;
	add.s64 	%rd318, %rd308, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r458}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd307;
	}
	shf.l.wrap.b32 	%r460, %r459, %r458, 13;
	shf.l.wrap.b32 	%r461, %r458, %r459, 13;
	mov.b64 	%rd319, {%r461, %r460};
	xor.b64  	%rd320, %rd319, %rd318;
	add.s64 	%rd321, %rd317, %rd311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r463}, %rd317;
	}
	shf.r.wrap.b32 	%r464, %r463, %r462, 14;
	shf.r.wrap.b32 	%r465, %r462, %r463, 14;
	mov.b64 	%rd322, {%r465, %r464};
	xor.b64  	%rd323, %rd322, %rd321;
	add.s64 	%rd324, %rd313, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd313;
	}
	shf.l.wrap.b32 	%r468, %r467, %r466, 10;
	shf.l.wrap.b32 	%r469, %r466, %r467, 10;
	mov.b64 	%rd325, {%r469, %r468};
	xor.b64  	%rd326, %rd325, %rd324;
	add.s64 	%rd327, %rd310, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd310;
	}
	shf.l.wrap.b32 	%r472, %r471, %r470, 17;
	shf.l.wrap.b32 	%r473, %r470, %r471, 17;
	mov.b64 	%rd328, {%r473, %r472};
	xor.b64  	%rd329, %rd328, %rd327;
	add.s64 	%rd330, %rd321, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r474}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd320;
	}
	shf.l.wrap.b32 	%r476, %r475, %r474, 25;
	shf.l.wrap.b32 	%r477, %r474, %r475, 25;
	mov.b64 	%rd331, {%r477, %r476};
	xor.b64  	%rd332, %rd331, %rd330;
	add.s64 	%rd333, %rd329, %rd324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r478}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd329;
	}
	shf.l.wrap.b32 	%r480, %r479, %r478, 29;
	shf.l.wrap.b32 	%r481, %r478, %r479, 29;
	mov.b64 	%rd334, {%r481, %r480};
	xor.b64  	%rd335, %rd334, %rd333;
	add.s64 	%rd336, %rd326, %rd327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r482,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r483}, %rd326;
	}
	shf.r.wrap.b32 	%r484, %r483, %r482, 25;
	shf.r.wrap.b32 	%r485, %r482, %r483, 25;
	mov.b64 	%rd337, {%r485, %r484};
	xor.b64  	%rd338, %rd337, %rd336;
	add.s64 	%rd339, %rd323, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r486,%dummy}, %rd323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r487}, %rd323;
	}
	shf.r.wrap.b32 	%r488, %r487, %r486, 21;
	shf.r.wrap.b32 	%r489, %r486, %r487, 21;
	mov.b64 	%rd340, {%r489, %r488};
	xor.b64  	%rd341, %rd340, %rd339;
	add.s64 	%rd342, %rd333, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r490}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd332;
	}
	shf.l.wrap.b32 	%r492, %r491, %r490, 8;
	shf.l.wrap.b32 	%r493, %r490, %r491, 8;
	mov.b64 	%rd343, {%r493, %r492};
	xor.b64  	%rd344, %rd343, %rd342;
	add.s64 	%rd345, %rd341, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r495}, %rd341;
	}
	shf.r.wrap.b32 	%r496, %r495, %r494, 29;
	shf.r.wrap.b32 	%r497, %r494, %r495, 29;
	mov.b64 	%rd346, {%r497, %r496};
	xor.b64  	%rd347, %rd346, %rd345;
	add.s64 	%rd348, %rd338, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r498,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r499}, %rd338;
	}
	shf.r.wrap.b32 	%r500, %r499, %r498, 8;
	shf.r.wrap.b32 	%r501, %r498, %r499, 8;
	mov.b64 	%rd349, {%r501, %r500};
	xor.b64  	%rd350, %rd349, %rd348;
	add.s64 	%rd351, %rd335, %rd330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd335;
	}
	shf.l.wrap.b32 	%r504, %r503, %r502, 22;
	shf.l.wrap.b32 	%r505, %r502, %r503, 22;
	mov.b64 	%rd352, {%r505, %r504};
	xor.b64  	%rd353, %rd352, %rd351;
	add.s64 	%rd354, %rd344, -5901786942805128141;
	add.s64 	%rd355, %rd345, %rd354;
	add.s64 	%rd356, %rd353, 5261240102383538638;
	add.s64 	%rd357, %rd348, %rd356;
	add.s64 	%rd358, %rd350, -8083517948103779314;
	add.s64 	%rd359, %rd351, %rd358;
	add.s64 	%rd360, %rd347, 6752626034097301430;
	add.s64 	%rd361, %rd342, %rd360;
	add.s64 	%rd362, %rd355, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r507}, %rd354;
	}
	shf.r.wrap.b32 	%r508, %r507, %r506, 18;
	shf.r.wrap.b32 	%r509, %r506, %r507, 18;
	mov.b64 	%rd363, {%r509, %r508};
	xor.b64  	%rd364, %rd363, %rd362;
	add.s64 	%rd365, %rd357, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r511}, %rd356;
	}
	shf.r.wrap.b32 	%r512, %r511, %r510, 28;
	shf.r.wrap.b32 	%r513, %r510, %r511, 28;
	mov.b64 	%rd366, {%r513, %r512};
	xor.b64  	%rd367, %rd365, %rd366;
	add.s64 	%rd368, %rd359, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd358;
	}
	shf.l.wrap.b32 	%r516, %r515, %r514, 19;
	shf.l.wrap.b32 	%r517, %r514, %r515, 19;
	mov.b64 	%rd369, {%r517, %r516};
	xor.b64  	%rd370, %rd369, %rd368;
	add.s64 	%rd371, %rd361, -8492286783961879375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r518,%dummy}, %rd360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r519}, %rd360;
	}
	shf.r.wrap.b32 	%r520, %r519, %r518, 27;
	shf.r.wrap.b32 	%r521, %r518, %r519, 27;
	mov.b64 	%rd372, {%r521, %r520};
	xor.b64  	%rd373, %rd372, %rd371;
	add.s64 	%rd374, %rd365, %rd364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r523}, %rd364;
	}
	shf.r.wrap.b32 	%r524, %r523, %r522, 31;
	shf.r.wrap.b32 	%r525, %r522, %r523, 31;
	mov.b64 	%rd375, {%r525, %r524};
	xor.b64  	%rd376, %rd375, %rd374;
	add.s64 	%rd377, %rd373, %rd368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r526}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd373;
	}
	shf.l.wrap.b32 	%r528, %r527, %r526, 27;
	shf.l.wrap.b32 	%r529, %r526, %r527, 27;
	mov.b64 	%rd378, {%r529, %r528};
	xor.b64  	%rd379, %rd378, %rd377;
	add.s64 	%rd380, %rd370, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd370;
	}
	shf.l.wrap.b32 	%r532, %r531, %r530, 14;
	shf.l.wrap.b32 	%r533, %r530, %r531, 14;
	mov.b64 	%rd381, {%r533, %r532};
	xor.b64  	%rd382, %rd381, %rd380;
	add.s64 	%rd383, %rd367, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r534,%dummy}, %rd367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r535}, %rd367;
	}
	shf.r.wrap.b32 	%r536, %r535, %r534, 22;
	shf.r.wrap.b32 	%r537, %r534, %r535, 22;
	mov.b64 	%rd384, {%r537, %r536};
	xor.b64  	%rd385, %rd384, %rd383;
	add.s64 	%rd386, %rd377, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r538}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd376;
	}
	shf.l.wrap.b32 	%r540, %r539, %r538, 17;
	shf.l.wrap.b32 	%r541, %r538, %r539, 17;
	mov.b64 	%rd387, {%r541, %r540};
	xor.b64  	%rd388, %rd387, %rd386;
	add.s64 	%rd389, %rd385, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r543}, %rd385;
	}
	shf.r.wrap.b32 	%r544, %r543, %r542, 15;
	shf.r.wrap.b32 	%r545, %r542, %r543, 15;
	mov.b64 	%rd390, {%r545, %r544};
	xor.b64  	%rd391, %rd390, %rd389;
	add.s64 	%rd392, %rd382, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r546,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r547}, %rd382;
	}
	shf.r.wrap.b32 	%r548, %r547, %r546, 28;
	shf.r.wrap.b32 	%r549, %r546, %r547, 28;
	mov.b64 	%rd393, {%r549, %r548};
	xor.b64  	%rd394, %rd393, %rd392;
	add.s64 	%rd395, %rd379, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r550,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r551}, %rd379;
	}
	shf.r.wrap.b32 	%r552, %r551, %r550, 25;
	shf.r.wrap.b32 	%r553, %r550, %r551, 25;
	mov.b64 	%rd396, {%r553, %r552};
	xor.b64  	%rd397, %rd396, %rd395;
	add.s64 	%rd398, %rd389, %rd388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r555}, %rd388;
	}
	shf.r.wrap.b32 	%r556, %r555, %r554, 20;
	shf.r.wrap.b32 	%r557, %r554, %r555, 20;
	mov.b64 	%rd399, {%r557, %r556};
	xor.b64  	%rd400, %rd399, %rd398;
	add.s64 	%rd401, %rd397, %rd392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r558}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd397;
	}
	shf.l.wrap.b32 	%r560, %r559, %r558, 9;
	shf.l.wrap.b32 	%r561, %r558, %r559, 9;
	mov.b64 	%rd402, {%r561, %r560};
	xor.b64  	%rd403, %rd402, %rd401;
	add.s64 	%rd404, %rd394, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r562,%dummy}, %rd394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r563}, %rd394;
	}
	shf.r.wrap.b32 	%r564, %r563, %r562, 10;
	shf.r.wrap.b32 	%r565, %r562, %r563, 10;
	mov.b64 	%rd405, {%r565, %r564};
	xor.b64  	%rd406, %rd405, %rd404;
	add.s64 	%rd407, %rd391, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r566,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r567}, %rd391;
	}
	shf.r.wrap.b32 	%r568, %r567, %r566, 8;
	shf.r.wrap.b32 	%r569, %r566, %r567, 8;
	mov.b64 	%rd408, {%r569, %r568};
	xor.b64  	%rd409, %rd408, %rd407;
	add.s64 	%rd410, %rd400, -3840999364909121852;
	add.s64 	%rd411, %rd401, %rd410;
	add.s64 	%rd412, %rd409, 978932832955457283;
	add.s64 	%rd413, %rd404, %rd412;
	add.s64 	%rd414, %rd406, -8492286783961879375;
	add.s64 	%rd415, %rd407, %rd414;
	add.s64 	%rd416, %rd403, -1531723821829733381;
	add.s64 	%rd417, %rd411, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r571}, %rd410;
	}
	shf.r.wrap.b32 	%r572, %r571, %r570, 25;
	shf.r.wrap.b32 	%r573, %r570, %r571, 25;
	mov.b64 	%rd418, {%r573, %r572};
	xor.b64  	%rd419, %rd418, %rd417;
	add.s64 	%rd420, %rd413, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r574}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd412;
	}
	shf.l.wrap.b32 	%r576, %r575, %r574, 30;
	shf.l.wrap.b32 	%r577, %r574, %r575, 30;
	mov.b64 	%rd421, {%r577, %r576};
	xor.b64  	%rd422, %rd420, %rd421;
	add.s64 	%rd423, %rd415, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r578,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r579}, %rd414;
	}
	shf.r.wrap.b32 	%r580, %r579, %r578, 30;
	shf.r.wrap.b32 	%r581, %r578, %r579, 30;
	mov.b64 	%rd424, {%r581, %r580};
	xor.b64  	%rd425, %rd424, %rd423;
	add.s64 	%rd426, %rd398, %rd416;
	add.s64 	%rd427, %rd426, 5599704529490454512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd416;
	}
	shf.l.wrap.b32 	%r584, %r583, %r582, 24;
	shf.l.wrap.b32 	%r585, %r582, %r583, 24;
	mov.b64 	%rd428, {%r585, %r584};
	xor.b64  	%rd429, %rd428, %rd427;
	add.s64 	%rd430, %rd420, %rd419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r586}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd419;
	}
	shf.l.wrap.b32 	%r588, %r587, %r586, 13;
	shf.l.wrap.b32 	%r589, %r586, %r587, 13;
	mov.b64 	%rd431, {%r589, %r588};
	xor.b64  	%rd432, %rd431, %rd430;
	add.s64 	%rd433, %rd429, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r591}, %rd429;
	}
	shf.r.wrap.b32 	%r592, %r591, %r590, 14;
	shf.r.wrap.b32 	%r593, %r590, %r591, 14;
	mov.b64 	%rd434, {%r593, %r592};
	xor.b64  	%rd435, %rd434, %rd433;
	add.s64 	%rd436, %rd425, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd425;
	}
	shf.l.wrap.b32 	%r596, %r595, %r594, 10;
	shf.l.wrap.b32 	%r597, %r594, %r595, 10;
	mov.b64 	%rd437, {%r597, %r596};
	xor.b64  	%rd438, %rd437, %rd436;
	add.s64 	%rd439, %rd422, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd422;
	}
	shf.l.wrap.b32 	%r600, %r599, %r598, 17;
	shf.l.wrap.b32 	%r601, %r598, %r599, 17;
	mov.b64 	%rd440, {%r601, %r600};
	xor.b64  	%rd441, %rd440, %rd439;
	add.s64 	%rd442, %rd433, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r602}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd432;
	}
	shf.l.wrap.b32 	%r604, %r603, %r602, 25;
	shf.l.wrap.b32 	%r605, %r602, %r603, 25;
	mov.b64 	%rd443, {%r605, %r604};
	xor.b64  	%rd444, %rd443, %rd442;
	add.s64 	%rd445, %rd441, %rd436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r606}, %rd441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd441;
	}
	shf.l.wrap.b32 	%r608, %r607, %r606, 29;
	shf.l.wrap.b32 	%r609, %r606, %r607, 29;
	mov.b64 	%rd446, {%r609, %r608};
	xor.b64  	%rd447, %rd446, %rd445;
	add.s64 	%rd448, %rd438, %rd439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r610,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r611}, %rd438;
	}
	shf.r.wrap.b32 	%r612, %r611, %r610, 25;
	shf.r.wrap.b32 	%r613, %r610, %r611, 25;
	mov.b64 	%rd449, {%r613, %r612};
	xor.b64  	%rd450, %rd449, %rd448;
	add.s64 	%rd451, %rd435, %rd430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r614,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r615}, %rd435;
	}
	shf.r.wrap.b32 	%r616, %r615, %r614, 21;
	shf.r.wrap.b32 	%r617, %r614, %r615, 21;
	mov.b64 	%rd452, {%r617, %r616};
	xor.b64  	%rd453, %rd452, %rd451;
	add.s64 	%rd454, %rd445, %rd444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r619,%dummy}, %rd444;
	}
	shf.l.wrap.b32 	%r620, %r619, %r618, 8;
	shf.l.wrap.b32 	%r621, %r618, %r619, 8;
	mov.b64 	%rd455, {%r621, %r620};
	xor.b64  	%rd456, %rd455, %rd454;
	add.s64 	%rd457, %rd453, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r622,%dummy}, %rd453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r623}, %rd453;
	}
	shf.r.wrap.b32 	%r624, %r623, %r622, 29;
	shf.r.wrap.b32 	%r625, %r622, %r623, 29;
	mov.b64 	%rd458, {%r625, %r624};
	xor.b64  	%rd459, %rd458, %rd457;
	add.s64 	%rd460, %rd450, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r626,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r627}, %rd450;
	}
	shf.r.wrap.b32 	%r628, %r627, %r626, 8;
	shf.r.wrap.b32 	%r629, %r626, %r627, 8;
	mov.b64 	%rd461, {%r629, %r628};
	xor.b64  	%rd462, %rd461, %rd460;
	add.s64 	%rd463, %rd447, %rd442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd447;
	}
	shf.l.wrap.b32 	%r632, %r631, %r630, 22;
	shf.l.wrap.b32 	%r633, %r630, %r631, 22;
	mov.b64 	%rd464, {%r633, %r632};
	xor.b64  	%rd465, %rd464, %rd463;
	add.s64 	%rd466, %rd456, 5261240102383538638;
	add.s64 	%rd467, %rd457, %rd466;
	add.s64 	%rd468, %rd465, -8083517948103779378;
	add.s64 	%rd469, %rd460, %rd468;
	add.s64 	%rd470, %rd462, 5599704529490454512;
	add.s64 	%rd471, %rd463, %rd470;
	add.s64 	%rd472, %rd459, -7417126464950782677;
	add.s64 	%rd473, %rd467, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r635}, %rd466;
	}
	shf.r.wrap.b32 	%r636, %r635, %r634, 18;
	shf.r.wrap.b32 	%r637, %r634, %r635, 18;
	mov.b64 	%rd474, {%r637, %r636};
	xor.b64  	%rd475, %rd474, %rd473;
	add.s64 	%rd476, %rd469, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r638,%dummy}, %rd468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r639}, %rd468;
	}
	shf.r.wrap.b32 	%r640, %r639, %r638, 28;
	shf.r.wrap.b32 	%r641, %r638, %r639, 28;
	mov.b64 	%rd477, {%r641, %r640};
	xor.b64  	%rd478, %rd476, %rd477;
	add.s64 	%rd479, %rd471, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r643,%dummy}, %rd470;
	}
	shf.l.wrap.b32 	%r644, %r643, %r642, 19;
	shf.l.wrap.b32 	%r645, %r642, %r643, 19;
	mov.b64 	%rd480, {%r645, %r644};
	xor.b64  	%rd481, %rd480, %rd479;
	add.s64 	%rd482, %rd454, %rd472;
	add.s64 	%rd483, %rd482, -1531723821829733324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r646,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r647}, %rd472;
	}
	shf.r.wrap.b32 	%r648, %r647, %r646, 27;
	shf.r.wrap.b32 	%r649, %r646, %r647, 27;
	mov.b64 	%rd484, {%r649, %r648};
	xor.b64  	%rd485, %rd484, %rd483;
	add.s64 	%rd486, %rd476, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r651}, %rd475;
	}
	shf.r.wrap.b32 	%r652, %r651, %r650, 31;
	shf.r.wrap.b32 	%r653, %r650, %r651, 31;
	mov.b64 	%rd487, {%r653, %r652};
	xor.b64  	%rd488, %rd487, %rd486;
	add.s64 	%rd489, %rd485, %rd479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd485;
	}
	shf.l.wrap.b32 	%r656, %r655, %r654, 27;
	shf.l.wrap.b32 	%r657, %r654, %r655, 27;
	mov.b64 	%rd490, {%r657, %r656};
	xor.b64  	%rd491, %rd490, %rd489;
	add.s64 	%rd492, %rd481, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd481;
	}
	shf.l.wrap.b32 	%r660, %r659, %r658, 14;
	shf.l.wrap.b32 	%r661, %r658, %r659, 14;
	mov.b64 	%rd493, {%r661, %r660};
	xor.b64  	%rd494, %rd493, %rd492;
	add.s64 	%rd495, %rd478, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r662,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r663}, %rd478;
	}
	shf.r.wrap.b32 	%r664, %r663, %r662, 22;
	shf.r.wrap.b32 	%r665, %r662, %r663, 22;
	mov.b64 	%rd496, {%r665, %r664};
	xor.b64  	%rd497, %rd496, %rd495;
	add.s64 	%rd498, %rd489, %rd488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r667,%dummy}, %rd488;
	}
	shf.l.wrap.b32 	%r668, %r667, %r666, 17;
	shf.l.wrap.b32 	%r669, %r666, %r667, 17;
	mov.b64 	%rd499, {%r669, %r668};
	xor.b64  	%rd500, %rd499, %rd498;
	add.s64 	%rd501, %rd497, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r671}, %rd497;
	}
	shf.r.wrap.b32 	%r672, %r671, %r670, 15;
	shf.r.wrap.b32 	%r673, %r670, %r671, 15;
	mov.b64 	%rd502, {%r673, %r672};
	xor.b64  	%rd503, %rd502, %rd501;
	add.s64 	%rd504, %rd494, %rd495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r674,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r675}, %rd494;
	}
	shf.r.wrap.b32 	%r676, %r675, %r674, 28;
	shf.r.wrap.b32 	%r677, %r674, %r675, 28;
	mov.b64 	%rd505, {%r677, %r676};
	xor.b64  	%rd506, %rd505, %rd504;
	add.s64 	%rd507, %rd491, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r678,%dummy}, %rd491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r679}, %rd491;
	}
	shf.r.wrap.b32 	%r680, %r679, %r678, 25;
	shf.r.wrap.b32 	%r681, %r678, %r679, 25;
	mov.b64 	%rd508, {%r681, %r680};
	xor.b64  	%rd509, %rd508, %rd507;
	add.s64 	%rd510, %rd501, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r683}, %rd500;
	}
	shf.r.wrap.b32 	%r684, %r683, %r682, 20;
	shf.r.wrap.b32 	%r685, %r682, %r683, 20;
	mov.b64 	%rd511, {%r685, %r684};
	xor.b64  	%rd512, %rd511, %rd510;
	add.s64 	%rd513, %rd509, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r686}, %rd509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd509;
	}
	shf.l.wrap.b32 	%r688, %r687, %r686, 9;
	shf.l.wrap.b32 	%r689, %r686, %r687, 9;
	mov.b64 	%rd514, {%r689, %r688};
	xor.b64  	%rd515, %rd514, %rd513;
	add.s64 	%rd516, %rd506, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd506;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 10;
	shf.r.wrap.b32 	%r693, %r690, %r691, 10;
	mov.b64 	%rd517, {%r693, %r692};
	xor.b64  	%rd518, %rd517, %rd516;
	add.s64 	%rd519, %rd503, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r694,%dummy}, %rd503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r695}, %rd503;
	}
	shf.r.wrap.b32 	%r696, %r695, %r694, 8;
	shf.r.wrap.b32 	%r697, %r694, %r695, 8;
	mov.b64 	%rd520, {%r697, %r696};
	xor.b64  	%rd521, %rd520, %rd519;
	add.s64 	%rd522, %rd512, 978932832955457283;
	add.s64 	%rd523, %rd513, %rd522;
	add.s64 	%rd524, %rd521, -7339365279355032399;
	add.s64 	%rd525, %rd516, %rd524;
	add.s64 	%rd526, %rd518, -1531723821829733324;
	add.s64 	%rd527, %rd519, %rd526;
	add.s64 	%rd528, %rd515, -5901786942805128132;
	add.s64 	%rd529, %rd510, %rd528;
	add.s64 	%rd530, %rd523, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r699}, %rd522;
	}
	shf.r.wrap.b32 	%r700, %r699, %r698, 25;
	shf.r.wrap.b32 	%r701, %r698, %r699, 25;
	mov.b64 	%rd531, {%r701, %r700};
	xor.b64  	%rd532, %rd531, %rd530;
	add.s64 	%rd533, %rd525, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r703,%dummy}, %rd524;
	}
	shf.l.wrap.b32 	%r704, %r703, %r702, 30;
	shf.l.wrap.b32 	%r705, %r702, %r703, 30;
	mov.b64 	%rd534, {%r705, %r704};
	xor.b64  	%rd535, %rd533, %rd534;
	add.s64 	%rd536, %rd527, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r706,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r707}, %rd526;
	}
	shf.r.wrap.b32 	%r708, %r707, %r706, 30;
	shf.r.wrap.b32 	%r709, %r706, %r707, 30;
	mov.b64 	%rd537, {%r709, %r708};
	xor.b64  	%rd538, %rd537, %rd536;
	add.s64 	%rd539, %rd529, -8570047969557629661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r711,%dummy}, %rd528;
	}
	shf.l.wrap.b32 	%r712, %r711, %r710, 24;
	shf.l.wrap.b32 	%r713, %r710, %r711, 24;
	mov.b64 	%rd540, {%r713, %r712};
	xor.b64  	%rd541, %rd540, %rd539;
	add.s64 	%rd542, %rd533, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r715,%dummy}, %rd532;
	}
	shf.l.wrap.b32 	%r716, %r715, %r714, 13;
	shf.l.wrap.b32 	%r717, %r714, %r715, 13;
	mov.b64 	%rd543, {%r717, %r716};
	xor.b64  	%rd544, %rd543, %rd542;
	add.s64 	%rd545, %rd541, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r719}, %rd541;
	}
	shf.r.wrap.b32 	%r720, %r719, %r718, 14;
	shf.r.wrap.b32 	%r721, %r718, %r719, 14;
	mov.b64 	%rd546, {%r721, %r720};
	xor.b64  	%rd547, %rd546, %rd545;
	add.s64 	%rd548, %rd538, %rd539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r723,%dummy}, %rd538;
	}
	shf.l.wrap.b32 	%r724, %r723, %r722, 10;
	shf.l.wrap.b32 	%r725, %r722, %r723, 10;
	mov.b64 	%rd549, {%r725, %r724};
	xor.b64  	%rd550, %rd549, %rd548;
	add.s64 	%rd551, %rd535, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd535;
	}
	shf.l.wrap.b32 	%r728, %r727, %r726, 17;
	shf.l.wrap.b32 	%r729, %r726, %r727, 17;
	mov.b64 	%rd552, {%r729, %r728};
	xor.b64  	%rd553, %rd552, %rd551;
	add.s64 	%rd554, %rd545, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r730}, %rd544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd544;
	}
	shf.l.wrap.b32 	%r732, %r731, %r730, 25;
	shf.l.wrap.b32 	%r733, %r730, %r731, 25;
	mov.b64 	%rd555, {%r733, %r732};
	xor.b64  	%rd556, %rd555, %rd554;
	add.s64 	%rd557, %rd553, %rd548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r735,%dummy}, %rd553;
	}
	shf.l.wrap.b32 	%r736, %r735, %r734, 29;
	shf.l.wrap.b32 	%r737, %r734, %r735, 29;
	mov.b64 	%rd558, {%r737, %r736};
	xor.b64  	%rd559, %rd558, %rd557;
	add.s64 	%rd560, %rd550, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd550;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 25;
	shf.r.wrap.b32 	%r741, %r738, %r739, 25;
	mov.b64 	%rd561, {%r741, %r740};
	xor.b64  	%rd562, %rd561, %rd560;
	add.s64 	%rd563, %rd547, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r742,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r743}, %rd547;
	}
	shf.r.wrap.b32 	%r744, %r743, %r742, 21;
	shf.r.wrap.b32 	%r745, %r742, %r743, 21;
	mov.b64 	%rd564, {%r745, %r744};
	xor.b64  	%rd565, %rd564, %rd563;
	add.s64 	%rd566, %rd557, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r746}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd556;
	}
	shf.l.wrap.b32 	%r748, %r747, %r746, 8;
	shf.l.wrap.b32 	%r749, %r746, %r747, 8;
	mov.b64 	%rd567, {%r749, %r748};
	xor.b64  	%rd568, %rd567, %rd566;
	add.s64 	%rd569, %rd565, %rd560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd565;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 29;
	shf.r.wrap.b32 	%r753, %r750, %r751, 29;
	mov.b64 	%rd570, {%r753, %r752};
	xor.b64  	%rd571, %rd570, %rd569;
	add.s64 	%rd572, %rd562, %rd563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r754,%dummy}, %rd562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r755}, %rd562;
	}
	shf.r.wrap.b32 	%r756, %r755, %r754, 8;
	shf.r.wrap.b32 	%r757, %r754, %r755, 8;
	mov.b64 	%rd573, {%r757, %r756};
	xor.b64  	%rd574, %rd573, %rd572;
	add.s64 	%rd575, %rd559, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r759,%dummy}, %rd559;
	}
	shf.l.wrap.b32 	%r760, %r759, %r758, 22;
	shf.l.wrap.b32 	%r761, %r758, %r759, 22;
	mov.b64 	%rd576, {%r761, %r760};
	xor.b64  	%rd577, %rd576, %rd575;
	add.s64 	%rd578, %rd568, -8083517948103779378;
	add.s64 	%rd579, %rd569, %rd578;
	add.s64 	%rd580, %rd577, 6752626034097301424;
	add.s64 	%rd581, %rd572, %rd580;
	add.s64 	%rd582, %rd574, -8570047969557629661;
	add.s64 	%rd583, %rd575, %rd582;
	add.s64 	%rd584, %rd571, -3840999364909121842;
	add.s64 	%rd585, %rd579, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd578;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 18;
	shf.r.wrap.b32 	%r765, %r762, %r763, 18;
	mov.b64 	%rd586, {%r765, %r764};
	xor.b64  	%rd587, %rd586, %rd585;
	add.s64 	%rd588, %rd581, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r767}, %rd580;
	}
	shf.r.wrap.b32 	%r768, %r767, %r766, 28;
	shf.r.wrap.b32 	%r769, %r766, %r767, 28;
	mov.b64 	%rd589, {%r769, %r768};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd583, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r771,%dummy}, %rd582;
	}
	shf.l.wrap.b32 	%r772, %r771, %r770, 19;
	shf.l.wrap.b32 	%r773, %r770, %r771, 19;
	mov.b64 	%rd592, {%r773, %r772};
	xor.b64  	%rd593, %rd592, %rd591;
	add.s64 	%rd594, %rd566, %rd584;
	add.s64 	%rd595, %rd594, -7054708447411975053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd584;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 27;
	shf.r.wrap.b32 	%r777, %r774, %r775, 27;
	mov.b64 	%rd596, {%r777, %r776};
	xor.b64  	%rd597, %rd596, %rd595;
	add.s64 	%rd598, %rd588, %rd587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r779}, %rd587;
	}
	shf.r.wrap.b32 	%r780, %r779, %r778, 31;
	shf.r.wrap.b32 	%r781, %r778, %r779, 31;
	mov.b64 	%rd599, {%r781, %r780};
	xor.b64  	%rd600, %rd599, %rd598;
	add.s64 	%rd601, %rd597, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r782}, %rd597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r783,%dummy}, %rd597;
	}
	shf.l.wrap.b32 	%r784, %r783, %r782, 27;
	shf.l.wrap.b32 	%r785, %r782, %r783, 27;
	mov.b64 	%rd602, {%r785, %r784};
	xor.b64  	%rd603, %rd602, %rd601;
	add.s64 	%rd604, %rd593, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd593;
	}
	shf.l.wrap.b32 	%r788, %r787, %r786, 14;
	shf.l.wrap.b32 	%r789, %r786, %r787, 14;
	mov.b64 	%rd605, {%r789, %r788};
	xor.b64  	%rd606, %rd605, %rd604;
	add.s64 	%rd607, %rd590, %rd585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd590;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 22;
	shf.r.wrap.b32 	%r793, %r790, %r791, 22;
	mov.b64 	%rd608, {%r793, %r792};
	xor.b64  	%rd609, %rd608, %rd607;
	add.s64 	%rd610, %rd601, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r794}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r795,%dummy}, %rd600;
	}
	shf.l.wrap.b32 	%r796, %r795, %r794, 17;
	shf.l.wrap.b32 	%r797, %r794, %r795, 17;
	mov.b64 	%rd611, {%r797, %r796};
	xor.b64  	%rd612, %rd611, %rd610;
	add.s64 	%rd613, %rd609, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r799}, %rd609;
	}
	shf.r.wrap.b32 	%r800, %r799, %r798, 15;
	shf.r.wrap.b32 	%r801, %r798, %r799, 15;
	mov.b64 	%rd614, {%r801, %r800};
	xor.b64  	%rd615, %rd614, %rd613;
	add.s64 	%rd616, %rd606, %rd607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd606;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 28;
	shf.r.wrap.b32 	%r805, %r802, %r803, 28;
	mov.b64 	%rd617, {%r805, %r804};
	xor.b64  	%rd618, %rd617, %rd616;
	add.s64 	%rd619, %rd603, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r807}, %rd603;
	}
	shf.r.wrap.b32 	%r808, %r807, %r806, 25;
	shf.r.wrap.b32 	%r809, %r806, %r807, 25;
	mov.b64 	%rd620, {%r809, %r808};
	xor.b64  	%rd621, %rd620, %rd619;
	add.s64 	%rd622, %rd613, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd612;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 20;
	shf.r.wrap.b32 	%r813, %r810, %r811, 20;
	mov.b64 	%rd623, {%r813, %r812};
	xor.b64  	%rd624, %rd623, %rd622;
	add.s64 	%rd625, %rd621, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r815,%dummy}, %rd621;
	}
	shf.l.wrap.b32 	%r816, %r815, %r814, 9;
	shf.l.wrap.b32 	%r817, %r814, %r815, 9;
	mov.b64 	%rd626, {%r817, %r816};
	xor.b64  	%rd627, %rd626, %rd625;
	add.s64 	%rd628, %rd618, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r818,%dummy}, %rd618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r819}, %rd618;
	}
	shf.r.wrap.b32 	%r820, %r819, %r818, 10;
	shf.r.wrap.b32 	%r821, %r818, %r819, 10;
	mov.b64 	%rd629, {%r821, %r820};
	xor.b64  	%rd630, %rd629, %rd628;
	add.s64 	%rd631, %rd615, %rd610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd615;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 8;
	shf.r.wrap.b32 	%r825, %r822, %r823, 8;
	mov.b64 	%rd632, {%r825, %r824};
	xor.b64  	%rd633, %rd632, %rd631;
	add.s64 	%rd634, %rd624, -7339365279355032399;
	add.s64 	%rd635, %rd625, %rd634;
	add.s64 	%rd636, %rd633, -1531723821829733388;
	add.s64 	%rd637, %rd628, %rd636;
	add.s64 	%rd638, %rd630, -7054708447411975053;
	add.s64 	%rd639, %rd631, %rd638;
	add.s64 	%rd640, %rd627, 5261240102383538649;
	add.s64 	%rd641, %rd635, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r827}, %rd634;
	}
	shf.r.wrap.b32 	%r828, %r827, %r826, 25;
	shf.r.wrap.b32 	%r829, %r826, %r827, 25;
	mov.b64 	%rd642, {%r829, %r828};
	xor.b64  	%rd643, %rd642, %rd641;
	add.s64 	%rd644, %rd637, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd636;
	}
	shf.l.wrap.b32 	%r832, %r831, %r830, 30;
	shf.l.wrap.b32 	%r833, %r830, %r831, 30;
	mov.b64 	%rd645, {%r833, %r832};
	xor.b64  	%rd646, %rd644, %rd645;
	add.s64 	%rd647, %rd639, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r834,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r835}, %rd638;
	}
	shf.r.wrap.b32 	%r836, %r835, %r834, 30;
	shf.r.wrap.b32 	%r837, %r834, %r835, 30;
	mov.b64 	%rd648, {%r837, %r836};
	xor.b64  	%rd649, %rd648, %rd647;
	add.s64 	%rd650, %rd622, %rd640;
	add.s64 	%rd651, %rd650, -3840999364909121788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd640;
	}
	shf.l.wrap.b32 	%r840, %r839, %r838, 24;
	shf.l.wrap.b32 	%r841, %r838, %r839, 24;
	mov.b64 	%rd652, {%r841, %r840};
	xor.b64  	%rd653, %rd652, %rd651;
	add.s64 	%rd654, %rd644, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r842}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r843,%dummy}, %rd643;
	}
	shf.l.wrap.b32 	%r844, %r843, %r842, 13;
	shf.l.wrap.b32 	%r845, %r842, %r843, 13;
	mov.b64 	%rd655, {%r845, %r844};
	xor.b64  	%rd656, %rd655, %rd654;
	add.s64 	%rd657, %rd653, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd653;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 14;
	shf.r.wrap.b32 	%r849, %r846, %r847, 14;
	mov.b64 	%rd658, {%r849, %r848};
	xor.b64  	%rd659, %rd658, %rd657;
	add.s64 	%rd660, %rd649, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r850}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r851,%dummy}, %rd649;
	}
	shf.l.wrap.b32 	%r852, %r851, %r850, 10;
	shf.l.wrap.b32 	%r853, %r850, %r851, 10;
	mov.b64 	%rd661, {%r853, %r852};
	xor.b64  	%rd662, %rd661, %rd660;
	add.s64 	%rd663, %rd646, %rd641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd646;
	}
	shf.l.wrap.b32 	%r856, %r855, %r854, 17;
	shf.l.wrap.b32 	%r857, %r854, %r855, 17;
	mov.b64 	%rd664, {%r857, %r856};
	xor.b64  	%rd665, %rd664, %rd663;
	add.s64 	%rd666, %rd657, %rd656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r858}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r859,%dummy}, %rd656;
	}
	shf.l.wrap.b32 	%r860, %r859, %r858, 25;
	shf.l.wrap.b32 	%r861, %r858, %r859, 25;
	mov.b64 	%rd667, {%r861, %r860};
	xor.b64  	%rd668, %rd667, %rd666;
	add.s64 	%rd669, %rd665, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd665;
	}
	shf.l.wrap.b32 	%r864, %r863, %r862, 29;
	shf.l.wrap.b32 	%r865, %r862, %r863, 29;
	mov.b64 	%rd670, {%r865, %r864};
	xor.b64  	%rd671, %rd670, %rd669;
	add.s64 	%rd672, %rd662, %rd663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r866,%dummy}, %rd662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r867}, %rd662;
	}
	shf.r.wrap.b32 	%r868, %r867, %r866, 25;
	shf.r.wrap.b32 	%r869, %r866, %r867, 25;
	mov.b64 	%rd673, {%r869, %r868};
	xor.b64  	%rd674, %rd673, %rd672;
	add.s64 	%rd675, %rd659, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd659;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 21;
	shf.r.wrap.b32 	%r873, %r870, %r871, 21;
	mov.b64 	%rd676, {%r873, %r872};
	xor.b64  	%rd677, %rd676, %rd675;
	add.s64 	%rd678, %rd669, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r875,%dummy}, %rd668;
	}
	shf.l.wrap.b32 	%r876, %r875, %r874, 8;
	shf.l.wrap.b32 	%r877, %r874, %r875, 8;
	mov.b64 	%rd679, {%r877, %r876};
	xor.b64  	%rd680, %rd679, %rd678;
	add.s64 	%rd681, %rd677, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd677;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 29;
	shf.r.wrap.b32 	%r881, %r878, %r879, 29;
	mov.b64 	%rd682, {%r881, %r880};
	xor.b64  	%rd683, %rd682, %rd681;
	add.s64 	%rd684, %rd674, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd674;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 8;
	shf.r.wrap.b32 	%r885, %r882, %r883, 8;
	mov.b64 	%rd685, {%r885, %r884};
	xor.b64  	%rd686, %rd685, %rd684;
	add.s64 	%rd687, %rd671, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd671;
	}
	shf.l.wrap.b32 	%r888, %r887, %r886, 22;
	shf.l.wrap.b32 	%r889, %r886, %r887, 22;
	mov.b64 	%rd688, {%r889, %r888};
	xor.b64  	%rd689, %rd688, %rd687;
	add.s64 	%rd690, %rd680, 6752626034097301424;
	add.s64 	%rd691, %rd681, %rd690;
	add.s64 	%rd692, %rd689, -7417126464950782685;
	add.s64 	%rd693, %rd684, %rd692;
	add.s64 	%rd694, %rd686, -3840999364909121788;
	add.s64 	%rd695, %rd687, %rd694;
	add.s64 	%rd696, %rd683, 978932832955457295;
	add.s64 	%rd697, %rd678, %rd696;
	add.s64 	%rd698, %rd691, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd690;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 18;
	shf.r.wrap.b32 	%r893, %r890, %r891, 18;
	mov.b64 	%rd699, {%r893, %r892};
	xor.b64  	%rd700, %rd699, %rd698;
	add.s64 	%rd701, %rd693, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd692;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 28;
	shf.r.wrap.b32 	%r897, %r894, %r895, 28;
	mov.b64 	%rd702, {%r897, %r896};
	xor.b64  	%rd703, %rd701, %rd702;
	add.s64 	%rd704, %rd695, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd694;
	}
	shf.l.wrap.b32 	%r900, %r899, %r898, 19;
	shf.l.wrap.b32 	%r901, %r898, %r899, 19;
	mov.b64 	%rd705, {%r901, %r900};
	xor.b64  	%rd706, %rd705, %rd704;
	add.s64 	%rd707, %rd697, 4108318597776691662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd696;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 27;
	shf.r.wrap.b32 	%r905, %r902, %r903, 27;
	mov.b64 	%rd708, {%r905, %r904};
	xor.b64  	%rd709, %rd708, %rd707;
	add.s64 	%rd710, %rd701, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r907}, %rd700;
	}
	shf.r.wrap.b32 	%r908, %r907, %r906, 31;
	shf.r.wrap.b32 	%r909, %r906, %r907, 31;
	mov.b64 	%rd711, {%r909, %r908};
	xor.b64  	%rd712, %rd711, %rd710;
	add.s64 	%rd713, %rd709, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd709;
	}
	shf.l.wrap.b32 	%r912, %r911, %r910, 27;
	shf.l.wrap.b32 	%r913, %r910, %r911, 27;
	mov.b64 	%rd714, {%r913, %r912};
	xor.b64  	%rd715, %rd714, %rd713;
	add.s64 	%rd716, %rd706, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r915,%dummy}, %rd706;
	}
	shf.l.wrap.b32 	%r916, %r915, %r914, 14;
	shf.l.wrap.b32 	%r917, %r914, %r915, 14;
	mov.b64 	%rd717, {%r917, %r916};
	xor.b64  	%rd718, %rd717, %rd716;
	add.s64 	%rd719, %rd703, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd703;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 22;
	shf.r.wrap.b32 	%r921, %r918, %r919, 22;
	mov.b64 	%rd720, {%r921, %r920};
	xor.b64  	%rd721, %rd720, %rd719;
	add.s64 	%rd722, %rd713, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r922}, %rd712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r923,%dummy}, %rd712;
	}
	shf.l.wrap.b32 	%r924, %r923, %r922, 17;
	shf.l.wrap.b32 	%r925, %r922, %r923, 17;
	mov.b64 	%rd723, {%r925, %r924};
	xor.b64  	%rd724, %rd723, %rd722;
	add.s64 	%rd725, %rd721, %rd716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd721;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 15;
	shf.r.wrap.b32 	%r929, %r926, %r927, 15;
	mov.b64 	%rd726, {%r929, %r928};
	xor.b64  	%rd727, %rd726, %rd725;
	add.s64 	%rd728, %rd718, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r930,%dummy}, %rd718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r931}, %rd718;
	}
	shf.r.wrap.b32 	%r932, %r931, %r930, 28;
	shf.r.wrap.b32 	%r933, %r930, %r931, 28;
	mov.b64 	%rd729, {%r933, %r932};
	xor.b64  	%rd730, %rd729, %rd728;
	add.s64 	%rd731, %rd715, %rd710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd715;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 25;
	shf.r.wrap.b32 	%r937, %r934, %r935, 25;
	mov.b64 	%rd732, {%r937, %r936};
	xor.b64  	%rd733, %rd732, %rd731;
	add.s64 	%rd734, %rd725, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r938,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r939}, %rd724;
	}
	shf.r.wrap.b32 	%r940, %r939, %r938, 20;
	shf.r.wrap.b32 	%r941, %r938, %r939, 20;
	mov.b64 	%rd735, {%r941, %r940};
	xor.b64  	%rd736, %rd735, %rd734;
	add.s64 	%rd737, %rd733, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd733;
	}
	shf.l.wrap.b32 	%r944, %r943, %r942, 9;
	shf.l.wrap.b32 	%r945, %r942, %r943, 9;
	mov.b64 	%rd738, {%r945, %r944};
	xor.b64  	%rd739, %rd738, %rd737;
	add.s64 	%rd740, %rd730, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r946,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r947}, %rd730;
	}
	shf.r.wrap.b32 	%r948, %r947, %r946, 10;
	shf.r.wrap.b32 	%r949, %r946, %r947, 10;
	mov.b64 	%rd741, {%r949, %r948};
	xor.b64  	%rd742, %rd741, %rd740;
	add.s64 	%rd743, %rd727, %rd722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd727;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 8;
	shf.r.wrap.b32 	%r953, %r950, %r951, 8;
	mov.b64 	%rd744, {%r953, %r952};
	xor.b64  	%rd745, %rd744, %rd743;
	add.s64 	%rd746, %rd736, -1531723821829733388;
	add.s64 	%rd747, %rd737, %rd746;
	add.s64 	%rd748, %rd745, -5901786942805128141;
	add.s64 	%rd749, %rd740, %rd748;
	add.s64 	%rd750, %rd742, 4108318597776691662;
	add.s64 	%rd751, %rd743, %rd750;
	add.s64 	%rd752, %rd739, -8083517948103779365;
	add.s64 	%rd753, %rd747, 6752626034097301424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r955}, %rd746;
	}
	shf.r.wrap.b32 	%r956, %r955, %r954, 25;
	shf.r.wrap.b32 	%r957, %r954, %r955, 25;
	mov.b64 	%rd754, {%r957, %r956};
	xor.b64  	%rd755, %rd754, %rd753;
	add.s64 	%rd756, %rd749, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd748;
	}
	shf.l.wrap.b32 	%r960, %r959, %r958, 30;
	shf.l.wrap.b32 	%r961, %r958, %r959, 30;
	mov.b64 	%rd757, {%r961, %r960};
	xor.b64  	%rd758, %rd756, %rd757;
	add.s64 	%rd759, %rd751, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r962,%dummy}, %rd750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r963}, %rd750;
	}
	shf.r.wrap.b32 	%r964, %r963, %r962, 30;
	shf.r.wrap.b32 	%r965, %r962, %r963, 30;
	mov.b64 	%rd760, {%r965, %r964};
	xor.b64  	%rd761, %rd760, %rd759;
	add.s64 	%rd762, %rd734, %rd752;
	add.s64 	%rd763, %rd762, -173988671651389629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd752;
	}
	shf.l.wrap.b32 	%r968, %r967, %r966, 24;
	shf.l.wrap.b32 	%r969, %r966, %r967, 24;
	mov.b64 	%rd764, {%r969, %r968};
	xor.b64  	%rd765, %rd764, %rd763;
	add.s64 	%rd766, %rd756, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r970}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r971,%dummy}, %rd755;
	}
	shf.l.wrap.b32 	%r972, %r971, %r970, 13;
	shf.l.wrap.b32 	%r973, %r970, %r971, 13;
	mov.b64 	%rd767, {%r973, %r972};
	xor.b64  	%rd768, %rd767, %rd766;
	add.s64 	%rd769, %rd765, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd765;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 14;
	shf.r.wrap.b32 	%r977, %r974, %r975, 14;
	mov.b64 	%rd770, {%r977, %r976};
	xor.b64  	%rd771, %rd770, %rd769;
	add.s64 	%rd772, %rd761, %rd763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r978}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd761;
	}
	shf.l.wrap.b32 	%r980, %r979, %r978, 10;
	shf.l.wrap.b32 	%r981, %r978, %r979, 10;
	mov.b64 	%rd773, {%r981, %r980};
	xor.b64  	%rd774, %rd773, %rd772;
	add.s64 	%rd775, %rd758, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd758;
	}
	shf.l.wrap.b32 	%r984, %r983, %r982, 17;
	shf.l.wrap.b32 	%r985, %r982, %r983, 17;
	mov.b64 	%rd776, {%r985, %r984};
	xor.b64  	%rd777, %rd776, %rd775;
	add.s64 	%rd778, %rd769, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r987,%dummy}, %rd768;
	}
	shf.l.wrap.b32 	%r988, %r987, %r986, 25;
	shf.l.wrap.b32 	%r989, %r986, %r987, 25;
	mov.b64 	%rd779, {%r989, %r988};
	xor.b64  	%rd780, %rd779, %rd778;
	add.s64 	%rd781, %rd777, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r990}, %rd777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd777;
	}
	shf.l.wrap.b32 	%r992, %r991, %r990, 29;
	shf.l.wrap.b32 	%r993, %r990, %r991, 29;
	mov.b64 	%rd782, {%r993, %r992};
	xor.b64  	%rd783, %rd782, %rd781;
	add.s64 	%rd784, %rd774, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r994,%dummy}, %rd774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r995}, %rd774;
	}
	shf.r.wrap.b32 	%r996, %r995, %r994, 25;
	shf.r.wrap.b32 	%r997, %r994, %r995, 25;
	mov.b64 	%rd785, {%r997, %r996};
	xor.b64  	%rd786, %rd785, %rd784;
	add.s64 	%rd787, %rd771, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd771;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 21;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 21;
	mov.b64 	%rd788, {%r1001, %r1000};
	xor.b64  	%rd789, %rd788, %rd787;
	add.s64 	%rd790, %rd781, %rd780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd780;
	}
	shf.l.wrap.b32 	%r1004, %r1003, %r1002, 8;
	shf.l.wrap.b32 	%r1005, %r1002, %r1003, 8;
	mov.b64 	%rd791, {%r1005, %r1004};
	xor.b64  	%rd792, %rd791, %rd790;
	add.s64 	%rd793, %rd789, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd789;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 29;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 29;
	mov.b64 	%rd794, {%r1009, %r1008};
	xor.b64  	%rd795, %rd794, %rd793;
	add.s64 	%rd796, %rd786, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1010,%dummy}, %rd786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1011}, %rd786;
	}
	shf.r.wrap.b32 	%r1012, %r1011, %r1010, 8;
	shf.r.wrap.b32 	%r1013, %r1010, %r1011, 8;
	mov.b64 	%rd797, {%r1013, %r1012};
	xor.b64  	%rd798, %rd797, %rd796;
	add.s64 	%rd799, %rd783, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd783;
	}
	shf.l.wrap.b32 	%r1016, %r1015, %r1014, 22;
	shf.l.wrap.b32 	%r1017, %r1014, %r1015, 22;
	mov.b64 	%rd800, {%r1017, %r1016};
	xor.b64  	%rd801, %rd800, %rd799;
	add.s64 	%rd802, %rd792, -7417126464950782685;
	add.s64 	%rd803, %rd793, %rd802;
	add.s64 	%rd804, %rd801, -3840999364909121852;
	add.s64 	%rd805, %rd796, %rd804;
	add.s64 	%rd806, %rd798, -173988671651389629;
	add.s64 	%rd807, %rd799, %rd806;
	add.s64 	%rd808, %rd795, -7339365279355032385;
	add.s64 	%rd809, %rd803, -1531723821829733388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd802;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 18;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 18;
	mov.b64 	%rd810, {%r1021, %r1020};
	xor.b64  	%rd811, %rd810, %rd809;
	add.s64 	%rd812, %rd805, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd804;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 28;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 28;
	mov.b64 	%rd813, {%r1025, %r1024};
	xor.b64  	%rd814, %rd812, %rd813;
	add.s64 	%rd815, %rd807, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd806;
	}
	shf.l.wrap.b32 	%r1028, %r1027, %r1026, 19;
	shf.l.wrap.b32 	%r1029, %r1026, %r1027, 19;
	mov.b64 	%rd816, {%r1029, %r1028};
	xor.b64  	%rd817, %rd816, %rd815;
	add.s64 	%rd818, %rd790, %rd808;
	add.s64 	%rd819, %rd818, -8083517948103779314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd808;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 27;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 27;
	mov.b64 	%rd820, {%r1033, %r1032};
	xor.b64  	%rd821, %rd820, %rd819;
	add.s64 	%rd822, %rd812, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1035}, %rd811;
	}
	shf.r.wrap.b32 	%r1036, %r1035, %r1034, 31;
	shf.r.wrap.b32 	%r1037, %r1034, %r1035, 31;
	mov.b64 	%rd823, {%r1037, %r1036};
	xor.b64  	%rd824, %rd823, %rd822;
	add.s64 	%rd825, %rd821, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1038}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd821;
	}
	shf.l.wrap.b32 	%r1040, %r1039, %r1038, 27;
	shf.l.wrap.b32 	%r1041, %r1038, %r1039, 27;
	mov.b64 	%rd826, {%r1041, %r1040};
	xor.b64  	%rd827, %rd826, %rd825;
	add.s64 	%rd828, %rd817, %rd819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd817;
	}
	shf.l.wrap.b32 	%r1044, %r1043, %r1042, 14;
	shf.l.wrap.b32 	%r1045, %r1042, %r1043, 14;
	mov.b64 	%rd829, {%r1045, %r1044};
	xor.b64  	%rd830, %rd829, %rd828;
	add.s64 	%rd831, %rd814, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd814;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 22;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 22;
	mov.b64 	%rd832, {%r1049, %r1048};
	xor.b64  	%rd833, %rd832, %rd831;
	add.s64 	%rd834, %rd825, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1050}, %rd824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd824;
	}
	shf.l.wrap.b32 	%r1052, %r1051, %r1050, 17;
	shf.l.wrap.b32 	%r1053, %r1050, %r1051, 17;
	mov.b64 	%rd835, {%r1053, %r1052};
	xor.b64  	%rd836, %rd835, %rd834;
	add.s64 	%rd837, %rd833, %rd828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd833;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 15;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 15;
	mov.b64 	%rd838, {%r1057, %r1056};
	xor.b64  	%rd839, %rd838, %rd837;
	add.s64 	%rd840, %rd830, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd830;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 28;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 28;
	mov.b64 	%rd841, {%r1061, %r1060};
	xor.b64  	%rd842, %rd841, %rd840;
	add.s64 	%rd843, %rd827, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd827;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 25;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 25;
	mov.b64 	%rd844, {%r1065, %r1064};
	xor.b64  	%rd845, %rd844, %rd843;
	add.s64 	%rd846, %rd837, %rd836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd836;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 20;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 20;
	mov.b64 	%rd847, {%r1069, %r1068};
	xor.b64  	%rd848, %rd847, %rd846;
	add.s64 	%rd849, %rd845, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd845;
	}
	shf.l.wrap.b32 	%r1072, %r1071, %r1070, 9;
	shf.l.wrap.b32 	%r1073, %r1070, %r1071, 9;
	mov.b64 	%rd850, {%r1073, %r1072};
	xor.b64  	%rd851, %rd850, %rd849;
	add.s64 	%rd852, %rd842, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd842;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd842;
	}
	shf.r.wrap.b32 	%r1076, %r1075, %r1074, 10;
	shf.r.wrap.b32 	%r1077, %r1074, %r1075, 10;
	mov.b64 	%rd853, {%r1077, %r1076};
	xor.b64  	%rd854, %rd853, %rd852;
	add.s64 	%rd855, %rd839, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd839;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 8;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 8;
	mov.b64 	%rd856, {%r1081, %r1080};
	xor.b64  	%rd857, %rd856, %rd855;
	add.s64 	%rd858, %rd848, -5901786942805128141;
	add.s64 	%rd859, %rd849, %rd858;
	add.s64 	%rd860, %rd857, 5261240102383538638;
	add.s64 	%rd861, %rd852, %rd860;
	add.s64 	%rd862, %rd854, -8083517948103779314;
	add.s64 	%rd863, %rd855, %rd862;
	add.s64 	%rd864, %rd851, 6752626034097301439;
	add.s64 	%rd865, %rd846, %rd864;
	add.s64 	%rd866, %rd859, -7417126464950782685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd858;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 25;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 25;
	mov.b64 	%rd867, {%r1085, %r1084};
	xor.b64  	%rd868, %rd867, %rd866;
	add.s64 	%rd869, %rd861, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1086}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd860;
	}
	shf.l.wrap.b32 	%r1088, %r1087, %r1086, 30;
	shf.l.wrap.b32 	%r1089, %r1086, %r1087, 30;
	mov.b64 	%rd870, {%r1089, %r1088};
	xor.b64  	%rd871, %rd869, %rd870;
	add.s64 	%rd872, %rd863, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd862;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 30;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 30;
	mov.b64 	%rd873, {%r1093, %r1092};
	xor.b64  	%rd874, %rd873, %rd872;
	add.s64 	%rd875, %rd865, -8492286783961879375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd864;
	}
	shf.l.wrap.b32 	%r1096, %r1095, %r1094, 24;
	shf.l.wrap.b32 	%r1097, %r1094, %r1095, 24;
	mov.b64 	%rd876, {%r1097, %r1096};
	xor.b64  	%rd877, %rd876, %rd875;
	add.s64 	%rd878, %rd869, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1098}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd868;
	}
	shf.l.wrap.b32 	%r1100, %r1099, %r1098, 13;
	shf.l.wrap.b32 	%r1101, %r1098, %r1099, 13;
	mov.b64 	%rd879, {%r1101, %r1100};
	xor.b64  	%rd880, %rd879, %rd878;
	add.s64 	%rd881, %rd877, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1103}, %rd877;
	}
	shf.r.wrap.b32 	%r1104, %r1103, %r1102, 14;
	shf.r.wrap.b32 	%r1105, %r1102, %r1103, 14;
	mov.b64 	%rd882, {%r1105, %r1104};
	xor.b64  	%rd883, %rd882, %rd881;
	add.s64 	%rd884, %rd874, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1107,%dummy}, %rd874;
	}
	shf.l.wrap.b32 	%r1108, %r1107, %r1106, 10;
	shf.l.wrap.b32 	%r1109, %r1106, %r1107, 10;
	mov.b64 	%rd885, {%r1109, %r1108};
	xor.b64  	%rd886, %rd885, %rd884;
	add.s64 	%rd887, %rd871, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd871;
	}
	shf.l.wrap.b32 	%r1112, %r1111, %r1110, 17;
	shf.l.wrap.b32 	%r1113, %r1110, %r1111, 17;
	mov.b64 	%rd888, {%r1113, %r1112};
	xor.b64  	%rd889, %rd888, %rd887;
	add.s64 	%rd890, %rd881, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1115,%dummy}, %rd880;
	}
	shf.l.wrap.b32 	%r1116, %r1115, %r1114, 25;
	shf.l.wrap.b32 	%r1117, %r1114, %r1115, 25;
	mov.b64 	%rd891, {%r1117, %r1116};
	xor.b64  	%rd892, %rd891, %rd890;
	add.s64 	%rd893, %rd889, %rd884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1119,%dummy}, %rd889;
	}
	shf.l.wrap.b32 	%r1120, %r1119, %r1118, 29;
	shf.l.wrap.b32 	%r1121, %r1118, %r1119, 29;
	mov.b64 	%rd894, {%r1121, %r1120};
	xor.b64  	%rd895, %rd894, %rd893;
	add.s64 	%rd896, %rd886, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd886;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 25;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 25;
	mov.b64 	%rd897, {%r1125, %r1124};
	xor.b64  	%rd898, %rd897, %rd896;
	add.s64 	%rd899, %rd883, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd883;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 21;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 21;
	mov.b64 	%rd900, {%r1129, %r1128};
	xor.b64  	%rd901, %rd900, %rd899;
	add.s64 	%rd902, %rd893, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1131,%dummy}, %rd892;
	}
	shf.l.wrap.b32 	%r1132, %r1131, %r1130, 8;
	shf.l.wrap.b32 	%r1133, %r1130, %r1131, 8;
	mov.b64 	%rd903, {%r1133, %r1132};
	xor.b64  	%rd904, %rd903, %rd902;
	add.s64 	%rd905, %rd901, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1135}, %rd901;
	}
	shf.r.wrap.b32 	%r1136, %r1135, %r1134, 29;
	shf.r.wrap.b32 	%r1137, %r1134, %r1135, 29;
	mov.b64 	%rd906, {%r1137, %r1136};
	xor.b64  	%rd907, %rd906, %rd905;
	add.s64 	%rd908, %rd898, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd898;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 8;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 8;
	mov.b64 	%rd909, {%r1141, %r1140};
	xor.b64  	%rd910, %rd909, %rd908;
	add.s64 	%rd911, %rd895, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd895;
	}
	shf.l.wrap.b32 	%r1144, %r1143, %r1142, 22;
	shf.l.wrap.b32 	%r1145, %r1142, %r1143, 22;
	mov.b64 	%rd912, {%r1145, %r1144};
	xor.b64  	%rd913, %rd912, %rd911;
	add.s64 	%rd914, %rd904, -3840999364909121852;
	add.s64 	%rd915, %rd905, %rd914;
	add.s64 	%rd916, %rd913, 978932832955457283;
	add.s64 	%rd917, %rd908, %rd916;
	add.s64 	%rd918, %rd910, -8492286783961879375;
	add.s64 	%rd919, %rd911, %rd918;
	add.s64 	%rd920, %rd907, -1531723821829733372;
	add.s64 	%rd921, %rd915, -5901786942805128141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd914;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 18;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 18;
	mov.b64 	%rd922, {%r1149, %r1148};
	xor.b64  	%rd923, %rd922, %rd921;
	add.s64 	%rd924, %rd917, 5261240102383538638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1151}, %rd916;
	}
	shf.r.wrap.b32 	%r1152, %r1151, %r1150, 28;
	shf.r.wrap.b32 	%r1153, %r1150, %r1151, 28;
	mov.b64 	%rd925, {%r1153, %r1152};
	xor.b64  	%rd926, %rd924, %rd925;
	add.s64 	%rd927, %rd919, -8083517948103779378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1155,%dummy}, %rd918;
	}
	shf.l.wrap.b32 	%r1156, %r1155, %r1154, 19;
	shf.l.wrap.b32 	%r1157, %r1154, %r1155, 19;
	mov.b64 	%rd928, {%r1157, %r1156};
	xor.b64  	%rd929, %rd928, %rd927;
	add.s64 	%rd930, %rd902, %rd920;
	add.s64 	%rd931, %rd930, 5599704529490454512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd920;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 27;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 27;
	mov.b64 	%rd932, {%r1161, %r1160};
	xor.b64  	%rd933, %rd932, %rd931;
	add.s64 	%rd934, %rd924, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd923;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 31;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 31;
	mov.b64 	%rd935, {%r1165, %r1164};
	xor.b64  	%rd936, %rd935, %rd934;
	add.s64 	%rd937, %rd933, %rd927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1167,%dummy}, %rd933;
	}
	shf.l.wrap.b32 	%r1168, %r1167, %r1166, 27;
	shf.l.wrap.b32 	%r1169, %r1166, %r1167, 27;
	mov.b64 	%rd938, {%r1169, %r1168};
	xor.b64  	%rd939, %rd938, %rd937;
	add.s64 	%rd940, %rd929, %rd931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1171,%dummy}, %rd929;
	}
	shf.l.wrap.b32 	%r1172, %r1171, %r1170, 14;
	shf.l.wrap.b32 	%r1173, %r1170, %r1171, 14;
	mov.b64 	%rd941, {%r1173, %r1172};
	xor.b64  	%rd942, %rd941, %rd940;
	add.s64 	%rd943, %rd926, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1174,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd926;
	}
	shf.r.wrap.b32 	%r1176, %r1175, %r1174, 22;
	shf.r.wrap.b32 	%r1177, %r1174, %r1175, 22;
	mov.b64 	%rd944, {%r1177, %r1176};
	xor.b64  	%rd945, %rd944, %rd943;
	add.s64 	%rd946, %rd937, %rd936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1178}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1179,%dummy}, %rd936;
	}
	shf.l.wrap.b32 	%r1180, %r1179, %r1178, 17;
	shf.l.wrap.b32 	%r1181, %r1178, %r1179, 17;
	mov.b64 	%rd947, {%r1181, %r1180};
	xor.b64  	%rd948, %rd947, %rd946;
	add.s64 	%rd949, %rd945, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1183}, %rd945;
	}
	shf.r.wrap.b32 	%r1184, %r1183, %r1182, 15;
	shf.r.wrap.b32 	%r1185, %r1182, %r1183, 15;
	mov.b64 	%rd950, {%r1185, %r1184};
	xor.b64  	%rd951, %rd950, %rd949;
	add.s64 	%rd952, %rd942, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd942;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 28;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 28;
	mov.b64 	%rd953, {%r1189, %r1188};
	xor.b64  	%rd954, %rd953, %rd952;
	add.s64 	%rd955, %rd939, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1190,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1191}, %rd939;
	}
	shf.r.wrap.b32 	%r1192, %r1191, %r1190, 25;
	shf.r.wrap.b32 	%r1193, %r1190, %r1191, 25;
	mov.b64 	%rd956, {%r1193, %r1192};
	xor.b64  	%rd957, %rd956, %rd955;
	add.s64 	%rd958, %rd949, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd948;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 20;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 20;
	mov.b64 	%rd959, {%r1197, %r1196};
	xor.b64  	%rd960, %rd959, %rd958;
	add.s64 	%rd961, %rd957, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd957;
	}
	shf.l.wrap.b32 	%r1200, %r1199, %r1198, 9;
	shf.l.wrap.b32 	%r1201, %r1198, %r1199, 9;
	mov.b64 	%rd962, {%r1201, %r1200};
	xor.b64  	%rd963, %rd962, %rd961;
	add.s64 	%rd964, %rd954, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd954;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 10;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 10;
	mov.b64 	%rd965, {%r1205, %r1204};
	xor.b64  	%rd966, %rd965, %rd964;
	add.s64 	%rd967, %rd951, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd951;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 8;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 8;
	mov.b64 	%rd968, {%r1209, %r1208};
	xor.b64  	%rd969, %rd968, %rd967;
	add.s64 	%rd970, %rd960, 5261240102383538638;
	add.s64 	%rd971, %rd961, %rd970;
	add.s64 	%rd972, %rd969, -8083517948103779378;
	add.s64 	%rd973, %rd964, %rd972;
	add.s64 	%rd974, %rd966, 5599704529490454512;
	add.s64 	%rd975, %rd967, %rd974;
	add.s64 	%rd976, %rd963, -7417126464950782668;
	add.s64 	%rd977, %rd971, -3840999364909121852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd970;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 25;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 25;
	mov.b64 	%rd978, {%r1213, %r1212};
	xor.b64  	%rd979, %rd978, %rd977;
	add.s64 	%rd980, %rd973, 978932832955457283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd972;
	}
	shf.l.wrap.b32 	%r1216, %r1215, %r1214, 30;
	shf.l.wrap.b32 	%r1217, %r1214, %r1215, 30;
	mov.b64 	%rd981, {%r1217, %r1216};
	xor.b64  	%rd982, %rd980, %rd981;
	add.s64 	%rd983, %rd975, -7339365279355032399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd974;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 30;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 30;
	mov.b64 	%rd984, {%r1221, %r1220};
	xor.b64  	%rd985, %rd984, %rd983;
	add.s64 	%rd986, %rd958, %rd976;
	add.s64 	%rd987, %rd986, -1531723821829733324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd976;
	}
	shf.l.wrap.b32 	%r1224, %r1223, %r1222, 24;
	shf.l.wrap.b32 	%r1225, %r1222, %r1223, 24;
	mov.b64 	%rd988, {%r1225, %r1224};
	xor.b64  	%rd989, %rd988, %rd987;
	add.s64 	%rd990, %rd980, %rd979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1227,%dummy}, %rd979;
	}
	shf.l.wrap.b32 	%r1228, %r1227, %r1226, 13;
	shf.l.wrap.b32 	%r1229, %r1226, %r1227, 13;
	mov.b64 	%rd991, {%r1229, %r1228};
	xor.b64  	%rd992, %rd991, %rd990;
	add.s64 	%rd993, %rd989, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1231}, %rd989;
	}
	shf.r.wrap.b32 	%r1232, %r1231, %r1230, 14;
	shf.r.wrap.b32 	%r1233, %r1230, %r1231, 14;
	mov.b64 	%rd994, {%r1233, %r1232};
	xor.b64  	%rd995, %rd994, %rd993;
	add.s64 	%rd996, %rd985, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1235,%dummy}, %rd985;
	}
	shf.l.wrap.b32 	%r1236, %r1235, %r1234, 10;
	shf.l.wrap.b32 	%r1237, %r1234, %r1235, 10;
	mov.b64 	%rd997, {%r1237, %r1236};
	xor.b64  	%rd998, %rd997, %rd996;
	add.s64 	%rd999, %rd982, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1239,%dummy}, %rd982;
	}
	shf.l.wrap.b32 	%r1240, %r1239, %r1238, 17;
	shf.l.wrap.b32 	%r1241, %r1238, %r1239, 17;
	mov.b64 	%rd1000, {%r1241, %r1240};
	xor.b64  	%rd1001, %rd1000, %rd999;
	add.s64 	%rd1002, %rd993, %rd992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd992;
	}
	shf.l.wrap.b32 	%r1244, %r1243, %r1242, 25;
	shf.l.wrap.b32 	%r1245, %r1242, %r1243, 25;
	mov.b64 	%rd1003, {%r1245, %r1244};
	xor.b64  	%rd1004, %rd1003, %rd1002;
	add.s64 	%rd1005, %rd1001, %rd996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd1001;
	}
	shf.l.wrap.b32 	%r1248, %r1247, %r1246, 29;
	shf.l.wrap.b32 	%r1249, %r1246, %r1247, 29;
	mov.b64 	%rd1006, {%r1249, %r1248};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	add.s64 	%rd1008, %rd998, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd998;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 25;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 25;
	mov.b64 	%rd1009, {%r1253, %r1252};
	xor.b64  	%rd1010, %rd1009, %rd1008;
	add.s64 	%rd1011, %rd995, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd995;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 21;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 21;
	mov.b64 	%rd1012, {%r1257, %r1256};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	add.s64 	%rd1014, %rd1005, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1259,%dummy}, %rd1004;
	}
	shf.l.wrap.b32 	%r1260, %r1259, %r1258, 8;
	shf.l.wrap.b32 	%r1261, %r1258, %r1259, 8;
	mov.b64 	%rd1015, {%r1261, %r1260};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	add.s64 	%rd1017, %rd1013, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1013;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 29;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 29;
	mov.b64 	%rd1018, {%r1265, %r1264};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	add.s64 	%rd1020, %rd1010, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd1010;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 8;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 8;
	mov.b64 	%rd1021, {%r1269, %r1268};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	add.s64 	%rd1023, %rd1007, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1007;
	}
	shf.l.wrap.b32 	%r1272, %r1271, %r1270, 22;
	shf.l.wrap.b32 	%r1273, %r1270, %r1271, 22;
	mov.b64 	%rd1024, {%r1273, %r1272};
	xor.b64  	%rd1025, %rd1024, %rd1023;
	add.s64 	%rd1026, %rd1022, -1531723821829733324;
	add.s64 	%rd1027, %rd1019, -5901786942805128123;
	add.s64 	%rd1028, %rd1014, -8570047969557629661;
	add.s64 	%rd1029, %rd1023, 6752626034097301424;
	add.s64 	%rd1030, %rd1025, -7339365279355032399;
	add.s64 	%rd1031, %rd1020, -8083517948103779378;
	add.s64 	%rd1032, %rd1016, 978932832955457283;
	add.s64 	%rd1033, %rd1017, 5261240102383538638;
	xor.b64  	%rd1034, %rd1033, %rd10;
	xor.b64  	%rd1035, %rd1032, %rd11;
	xor.b64  	%rd1036, %rd1031, %rd12;
	xor.b64  	%rd1037, %rd1030, %rd13;
	xor.b64  	%rd1038, %rd1029, %rd14;
	xor.b64  	%rd1039, %rd1026, %rd15;
	xor.b64  	%rd1040, %rd1028, %rd16;
	xor.b64  	%rd1041, %rd1027, %rd17;
	xor.b64  	%rd1042, %rd1040, %rd1038;
	xor.b64  	%rd1043, %rd1042, %rd1036;
	xor.b64  	%rd1044, %rd1043, %rd1035;
	xor.b64  	%rd1045, %rd1044, %rd1034;
	xor.b64  	%rd1046, %rd1045, %rd1041;
	xor.b64  	%rd1047, %rd1046, %rd1039;
	xor.b64  	%rd1048, %rd1047, %rd1037;
	xor.b64  	%rd1049, %rd1048, 2004413935125273122;
	add.s64 	%rd1050, %rd1039, 8;
	add.s64 	%rd1051, %rd1040, -72057594037927936;
	add.s64 	%rd1052, %rd1034, %rd1035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd1035;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 18;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 18;
	mov.b64 	%rd1053, {%r1277, %r1276};
	xor.b64  	%rd1054, %rd1053, %rd1052;
	add.s64 	%rd1055, %rd1037, %rd1036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd1037;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 28;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 28;
	mov.b64 	%rd1056, {%r1281, %r1280};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	add.s64 	%rd1058, %rd1050, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1282}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1283,%dummy}, %rd1050;
	}
	shf.l.wrap.b32 	%r1284, %r1283, %r1282, 19;
	shf.l.wrap.b32 	%r1285, %r1282, %r1283, 19;
	mov.b64 	%rd1059, {%r1285, %r1284};
	xor.b64  	%rd1060, %rd1058, %rd1059;
	add.s64 	%rd1061, %rd1051, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1041;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 27;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 27;
	mov.b64 	%rd1062, {%r1289, %r1288};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	add.s64 	%rd1064, %rd1055, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1290,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1291}, %rd1054;
	}
	shf.r.wrap.b32 	%r1292, %r1291, %r1290, 31;
	shf.r.wrap.b32 	%r1293, %r1290, %r1291, 31;
	mov.b64 	%rd1065, {%r1293, %r1292};
	xor.b64  	%rd1066, %rd1065, %rd1064;
	add.s64 	%rd1067, %rd1063, %rd1058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1063;
	}
	shf.l.wrap.b32 	%r1296, %r1295, %r1294, 27;
	shf.l.wrap.b32 	%r1297, %r1294, %r1295, 27;
	mov.b64 	%rd1068, {%r1297, %r1296};
	xor.b64  	%rd1069, %rd1068, %rd1067;
	add.s64 	%rd1070, %rd1060, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1299,%dummy}, %rd1060;
	}
	shf.l.wrap.b32 	%r1300, %r1299, %r1298, 14;
	shf.l.wrap.b32 	%r1301, %r1298, %r1299, 14;
	mov.b64 	%rd1071, {%r1301, %r1300};
	xor.b64  	%rd1072, %rd1071, %rd1070;
	add.s64 	%rd1073, %rd1057, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1057;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 22;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 22;
	mov.b64 	%rd1074, {%r1305, %r1304};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	add.s64 	%rd1076, %rd1067, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1306}, %rd1066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1307,%dummy}, %rd1066;
	}
	shf.l.wrap.b32 	%r1308, %r1307, %r1306, 17;
	shf.l.wrap.b32 	%r1309, %r1306, %r1307, 17;
	mov.b64 	%rd1077, {%r1309, %r1308};
	xor.b64  	%rd1078, %rd1077, %rd1076;
	add.s64 	%rd1079, %rd1075, %rd1070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1075;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 15;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 15;
	mov.b64 	%rd1080, {%r1313, %r1312};
	xor.b64  	%rd1081, %rd1080, %rd1079;
	add.s64 	%rd1082, %rd1072, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1315}, %rd1072;
	}
	shf.r.wrap.b32 	%r1316, %r1315, %r1314, 28;
	shf.r.wrap.b32 	%r1317, %r1314, %r1315, 28;
	mov.b64 	%rd1083, {%r1317, %r1316};
	xor.b64  	%rd1084, %rd1083, %rd1082;
	add.s64 	%rd1085, %rd1069, %rd1064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1069;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 25;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 25;
	mov.b64 	%rd1086, {%r1321, %r1320};
	xor.b64  	%rd1087, %rd1086, %rd1085;
	add.s64 	%rd1088, %rd1079, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1323}, %rd1078;
	}
	shf.r.wrap.b32 	%r1324, %r1323, %r1322, 20;
	shf.r.wrap.b32 	%r1325, %r1322, %r1323, 20;
	mov.b64 	%rd1089, {%r1325, %r1324};
	xor.b64  	%rd1090, %rd1089, %rd1088;
	add.s64 	%rd1091, %rd1087, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd1087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1087;
	}
	shf.l.wrap.b32 	%r1328, %r1327, %r1326, 9;
	shf.l.wrap.b32 	%r1329, %r1326, %r1327, 9;
	mov.b64 	%rd1092, {%r1329, %r1328};
	xor.b64  	%rd1093, %rd1092, %rd1091;
	add.s64 	%rd1094, %rd1084, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1330,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1331}, %rd1084;
	}
	shf.r.wrap.b32 	%r1332, %r1331, %r1330, 10;
	shf.r.wrap.b32 	%r1333, %r1330, %r1331, 10;
	mov.b64 	%rd1095, {%r1333, %r1332};
	xor.b64  	%rd1096, %rd1095, %rd1094;
	add.s64 	%rd1097, %rd1081, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1081;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 8;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 8;
	mov.b64 	%rd1098, {%r1337, %r1336};
	xor.b64  	%rd1099, %rd1098, %rd1097;
	add.s64 	%rd1100, %rd1091, %rd1035;
	add.s64 	%rd1101, %rd1090, %rd1036;
	add.s64 	%rd1102, %rd1094, %rd1037;
	add.s64 	%rd1103, %rd1099, %rd1038;
	add.s64 	%rd1104, %rd1097, %rd1039;
	add.s64 	%rd1105, %rd1051, %rd1096;
	add.s64 	%rd1106, %rd1049, %rd1093;
	add.s64 	%rd1107, %rd1106, 1;
	add.s64 	%rd1108, %rd1100, %rd1101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1338,%dummy}, %rd1101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1339}, %rd1101;
	}
	shf.r.wrap.b32 	%r1340, %r1339, %r1338, 25;
	shf.r.wrap.b32 	%r1341, %r1338, %r1339, 25;
	mov.b64 	%rd1109, {%r1341, %r1340};
	xor.b64  	%rd1110, %rd1109, %rd1108;
	add.s64 	%rd1111, %rd1102, %rd1103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd1103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1103;
	}
	shf.l.wrap.b32 	%r1344, %r1343, %r1342, 30;
	shf.l.wrap.b32 	%r1345, %r1342, %r1343, 30;
	mov.b64 	%rd1112, {%r1345, %r1344};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	add.s64 	%rd1114, %rd1104, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1346,%dummy}, %rd1105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd1105;
	}
	shf.r.wrap.b32 	%r1348, %r1347, %r1346, 30;
	shf.r.wrap.b32 	%r1349, %r1346, %r1347, 30;
	mov.b64 	%rd1115, {%r1349, %r1348};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	add.s64 	%rd1117, %rd1041, -72057594037927928;
	add.s64 	%rd1118, %rd1117, %rd1088;
	add.s64 	%rd1119, %rd1118, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1107;
	}
	shf.l.wrap.b32 	%r1352, %r1351, %r1350, 24;
	shf.l.wrap.b32 	%r1353, %r1350, %r1351, 24;
	mov.b64 	%rd1120, {%r1353, %r1352};
	xor.b64  	%rd1121, %rd1120, %rd1119;
	add.s64 	%rd1122, %rd1111, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1355,%dummy}, %rd1110;
	}
	shf.l.wrap.b32 	%r1356, %r1355, %r1354, 13;
	shf.l.wrap.b32 	%r1357, %r1354, %r1355, 13;
	mov.b64 	%rd1123, {%r1357, %r1356};
	xor.b64  	%rd1124, %rd1123, %rd1122;
	add.s64 	%rd1125, %rd1121, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1121;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 14;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 14;
	mov.b64 	%rd1126, {%r1361, %r1360};
	xor.b64  	%rd1127, %rd1126, %rd1125;
	add.s64 	%rd1128, %rd1116, %rd1119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1362}, %rd1116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd1116;
	}
	shf.l.wrap.b32 	%r1364, %r1363, %r1362, 10;
	shf.l.wrap.b32 	%r1365, %r1362, %r1363, 10;
	mov.b64 	%rd1129, {%r1365, %r1364};
	xor.b64  	%rd1130, %rd1129, %rd1128;
	add.s64 	%rd1131, %rd1113, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1113;
	}
	shf.l.wrap.b32 	%r1368, %r1367, %r1366, 17;
	shf.l.wrap.b32 	%r1369, %r1366, %r1367, 17;
	mov.b64 	%rd1132, {%r1369, %r1368};
	xor.b64  	%rd1133, %rd1132, %rd1131;
	add.s64 	%rd1134, %rd1125, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1370}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1371,%dummy}, %rd1124;
	}
	shf.l.wrap.b32 	%r1372, %r1371, %r1370, 25;
	shf.l.wrap.b32 	%r1373, %r1370, %r1371, 25;
	mov.b64 	%rd1135, {%r1373, %r1372};
	xor.b64  	%rd1136, %rd1135, %rd1134;
	add.s64 	%rd1137, %rd1133, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1374}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd1133;
	}
	shf.l.wrap.b32 	%r1376, %r1375, %r1374, 29;
	shf.l.wrap.b32 	%r1377, %r1374, %r1375, 29;
	mov.b64 	%rd1138, {%r1377, %r1376};
	xor.b64  	%rd1139, %rd1138, %rd1137;
	add.s64 	%rd1140, %rd1130, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd1130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd1130;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 25;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 25;
	mov.b64 	%rd1141, {%r1381, %r1380};
	xor.b64  	%rd1142, %rd1141, %rd1140;
	add.s64 	%rd1143, %rd1127, %rd1122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1127;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 21;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 21;
	mov.b64 	%rd1144, {%r1385, %r1384};
	xor.b64  	%rd1145, %rd1144, %rd1143;
	add.s64 	%rd1146, %rd1137, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1386}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1387,%dummy}, %rd1136;
	}
	shf.l.wrap.b32 	%r1388, %r1387, %r1386, 8;
	shf.l.wrap.b32 	%r1389, %r1386, %r1387, 8;
	mov.b64 	%rd1147, {%r1389, %r1388};
	xor.b64  	%rd1148, %rd1147, %rd1146;
	add.s64 	%rd1149, %rd1145, %rd1140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1145;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 29;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 29;
	mov.b64 	%rd1150, {%r1393, %r1392};
	xor.b64  	%rd1151, %rd1150, %rd1149;
	add.s64 	%rd1152, %rd1142, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd1142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd1142;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 8;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 8;
	mov.b64 	%rd1153, {%r1397, %r1396};
	xor.b64  	%rd1154, %rd1153, %rd1152;
	add.s64 	%rd1155, %rd1139, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1139;
	}
	shf.l.wrap.b32 	%r1400, %r1399, %r1398, 22;
	shf.l.wrap.b32 	%r1401, %r1398, %r1399, 22;
	mov.b64 	%rd1156, {%r1401, %r1400};
	xor.b64  	%rd1157, %rd1156, %rd1155;
	add.s64 	%rd1158, %rd1149, %rd1036;
	add.s64 	%rd1159, %rd1148, %rd1037;
	add.s64 	%rd1160, %rd1152, %rd1038;
	add.s64 	%rd1161, %rd1157, %rd1039;
	add.s64 	%rd1162, %rd1155, %rd1040;
	add.s64 	%rd1163, %rd1117, %rd1154;
	add.s64 	%rd1164, %rd1034, %rd1151;
	add.s64 	%rd1165, %rd1164, 2;
	add.s64 	%rd1166, %rd1158, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd1159;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 18;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 18;
	mov.b64 	%rd1167, {%r1405, %r1404};
	xor.b64  	%rd1168, %rd1167, %rd1166;
	add.s64 	%rd1169, %rd1160, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd1161;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd1170, {%r1409, %r1408};
	xor.b64  	%rd1171, %rd1169, %rd1170;
	add.s64 	%rd1172, %rd1162, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1410}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1411,%dummy}, %rd1163;
	}
	shf.l.wrap.b32 	%r1412, %r1411, %r1410, 19;
	shf.l.wrap.b32 	%r1413, %r1410, %r1411, 19;
	mov.b64 	%rd1173, {%r1413, %r1412};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	add.s64 	%rd1175, %rd1049, 8;
	add.s64 	%rd1176, %rd1175, %rd1146;
	add.s64 	%rd1177, %rd1176, %rd1165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd1165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd1165;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 27;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 27;
	mov.b64 	%rd1178, {%r1417, %r1416};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	add.s64 	%rd1180, %rd1169, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd1168;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 31;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 31;
	mov.b64 	%rd1181, {%r1421, %r1420};
	xor.b64  	%rd1182, %rd1181, %rd1180;
	add.s64 	%rd1183, %rd1179, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1422}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd1179;
	}
	shf.l.wrap.b32 	%r1424, %r1423, %r1422, 27;
	shf.l.wrap.b32 	%r1425, %r1422, %r1423, 27;
	mov.b64 	%rd1184, {%r1425, %r1424};
	xor.b64  	%rd1185, %rd1184, %rd1183;
	add.s64 	%rd1186, %rd1174, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd1174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1427,%dummy}, %rd1174;
	}
	shf.l.wrap.b32 	%r1428, %r1427, %r1426, 14;
	shf.l.wrap.b32 	%r1429, %r1426, %r1427, 14;
	mov.b64 	%rd1187, {%r1429, %r1428};
	xor.b64  	%rd1188, %rd1187, %rd1186;
	add.s64 	%rd1189, %rd1171, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1171;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 22;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 22;
	mov.b64 	%rd1190, {%r1433, %r1432};
	xor.b64  	%rd1191, %rd1190, %rd1189;
	add.s64 	%rd1192, %rd1183, %rd1182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd1182;
	}
	shf.l.wrap.b32 	%r1436, %r1435, %r1434, 17;
	shf.l.wrap.b32 	%r1437, %r1434, %r1435, 17;
	mov.b64 	%rd1193, {%r1437, %r1436};
	xor.b64  	%rd1194, %rd1193, %rd1192;
	add.s64 	%rd1195, %rd1191, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd1191;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 15;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 15;
	mov.b64 	%rd1196, {%r1441, %r1440};
	xor.b64  	%rd1197, %rd1196, %rd1195;
	add.s64 	%rd1198, %rd1188, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd1188;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 28;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 28;
	mov.b64 	%rd1199, {%r1445, %r1444};
	xor.b64  	%rd1200, %rd1199, %rd1198;
	add.s64 	%rd1201, %rd1185, %rd1180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd1185;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 25;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 25;
	mov.b64 	%rd1202, {%r1449, %r1448};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	add.s64 	%rd1204, %rd1195, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1451}, %rd1194;
	}
	shf.r.wrap.b32 	%r1452, %r1451, %r1450, 20;
	shf.r.wrap.b32 	%r1453, %r1450, %r1451, 20;
	mov.b64 	%rd1205, {%r1453, %r1452};
	xor.b64  	%rd1206, %rd1205, %rd1204;
	add.s64 	%rd1207, %rd1203, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd1203;
	}
	shf.l.wrap.b32 	%r1456, %r1455, %r1454, 9;
	shf.l.wrap.b32 	%r1457, %r1454, %r1455, 9;
	mov.b64 	%rd1208, {%r1457, %r1456};
	xor.b64  	%rd1209, %rd1208, %rd1207;
	add.s64 	%rd1210, %rd1200, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd1200;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 10;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 10;
	mov.b64 	%rd1211, {%r1461, %r1460};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	add.s64 	%rd1213, %rd1197, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1197;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 8;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 8;
	mov.b64 	%rd1214, {%r1465, %r1464};
	xor.b64  	%rd1215, %rd1214, %rd1213;
	add.s64 	%rd1216, %rd1207, %rd1037;
	add.s64 	%rd1217, %rd1206, %rd1038;
	add.s64 	%rd1218, %rd1210, %rd1039;
	add.s64 	%rd1219, %rd1215, %rd1040;
	add.s64 	%rd1220, %rd1213, %rd1041;
	add.s64 	%rd1221, %rd1175, %rd1212;
	add.s64 	%rd1222, %rd1035, %rd1209;
	add.s64 	%rd1223, %rd1222, 3;
	add.s64 	%rd1224, %rd1216, %rd1217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd1217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd1217;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 25;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 25;
	mov.b64 	%rd1225, {%r1469, %r1468};
	xor.b64  	%rd1226, %rd1225, %rd1224;
	add.s64 	%rd1227, %rd1218, %rd1219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1470}, %rd1219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd1219;
	}
	shf.l.wrap.b32 	%r1472, %r1471, %r1470, 30;
	shf.l.wrap.b32 	%r1473, %r1470, %r1471, 30;
	mov.b64 	%rd1228, {%r1473, %r1472};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	add.s64 	%rd1230, %rd1220, %rd1221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1474,%dummy}, %rd1221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1475}, %rd1221;
	}
	shf.r.wrap.b32 	%r1476, %r1475, %r1474, 30;
	shf.r.wrap.b32 	%r1477, %r1474, %r1475, 30;
	mov.b64 	%rd1231, {%r1477, %r1476};
	xor.b64  	%rd1232, %rd1231, %rd1230;
	add.s64 	%rd1233, %rd1034, -72057594037927936;
	add.s64 	%rd1234, %rd1233, %rd1204;
	add.s64 	%rd1235, %rd1234, %rd1223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd1223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd1223;
	}
	shf.l.wrap.b32 	%r1480, %r1479, %r1478, 24;
	shf.l.wrap.b32 	%r1481, %r1478, %r1479, 24;
	mov.b64 	%rd1236, {%r1481, %r1480};
	xor.b64  	%rd1237, %rd1236, %rd1235;
	add.s64 	%rd1238, %rd1227, %rd1226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1482}, %rd1226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd1226;
	}
	shf.l.wrap.b32 	%r1484, %r1483, %r1482, 13;
	shf.l.wrap.b32 	%r1485, %r1482, %r1483, 13;
	mov.b64 	%rd1239, {%r1485, %r1484};
	xor.b64  	%rd1240, %rd1239, %rd1238;
	add.s64 	%rd1241, %rd1237, %rd1230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd1237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd1237;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 14;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 14;
	mov.b64 	%rd1242, {%r1489, %r1488};
	xor.b64  	%rd1243, %rd1242, %rd1241;
	add.s64 	%rd1244, %rd1232, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1491,%dummy}, %rd1232;
	}
	shf.l.wrap.b32 	%r1492, %r1491, %r1490, 10;
	shf.l.wrap.b32 	%r1493, %r1490, %r1491, 10;
	mov.b64 	%rd1245, {%r1493, %r1492};
	xor.b64  	%rd1246, %rd1245, %rd1244;
	add.s64 	%rd1247, %rd1229, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd1229;
	}
	shf.l.wrap.b32 	%r1496, %r1495, %r1494, 17;
	shf.l.wrap.b32 	%r1497, %r1494, %r1495, 17;
	mov.b64 	%rd1248, {%r1497, %r1496};
	xor.b64  	%rd1249, %rd1248, %rd1247;
	add.s64 	%rd1250, %rd1241, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1498}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1499,%dummy}, %rd1240;
	}
	shf.l.wrap.b32 	%r1500, %r1499, %r1498, 25;
	shf.l.wrap.b32 	%r1501, %r1498, %r1499, 25;
	mov.b64 	%rd1251, {%r1501, %r1500};
	xor.b64  	%rd1252, %rd1251, %rd1250;
	add.s64 	%rd1253, %rd1249, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd1249;
	}
	shf.l.wrap.b32 	%r1504, %r1503, %r1502, 29;
	shf.l.wrap.b32 	%r1505, %r1502, %r1503, 29;
	mov.b64 	%rd1254, {%r1505, %r1504};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	add.s64 	%rd1256, %rd1246, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1506,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1507}, %rd1246;
	}
	shf.r.wrap.b32 	%r1508, %r1507, %r1506, 25;
	shf.r.wrap.b32 	%r1509, %r1506, %r1507, 25;
	mov.b64 	%rd1257, {%r1509, %r1508};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	add.s64 	%rd1259, %rd1243, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd1243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd1243;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 21;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 21;
	mov.b64 	%rd1260, {%r1513, %r1512};
	xor.b64  	%rd1261, %rd1260, %rd1259;
	add.s64 	%rd1262, %rd1253, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1514}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1515,%dummy}, %rd1252;
	}
	shf.l.wrap.b32 	%r1516, %r1515, %r1514, 8;
	shf.l.wrap.b32 	%r1517, %r1514, %r1515, 8;
	mov.b64 	%rd1263, {%r1517, %r1516};
	xor.b64  	%rd1264, %rd1263, %rd1262;
	add.s64 	%rd1265, %rd1261, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd1261;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 29;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 29;
	mov.b64 	%rd1266, {%r1521, %r1520};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	add.s64 	%rd1268, %rd1258, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd1258;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 8;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 8;
	mov.b64 	%rd1269, {%r1525, %r1524};
	xor.b64  	%rd1270, %rd1269, %rd1268;
	add.s64 	%rd1271, %rd1255, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1527,%dummy}, %rd1255;
	}
	shf.l.wrap.b32 	%r1528, %r1527, %r1526, 22;
	shf.l.wrap.b32 	%r1529, %r1526, %r1527, 22;
	mov.b64 	%rd1272, {%r1529, %r1528};
	xor.b64  	%rd1273, %rd1272, %rd1271;
	add.s64 	%rd1274, %rd1265, %rd1038;
	add.s64 	%rd1275, %rd1264, %rd1039;
	add.s64 	%rd1276, %rd1268, %rd1040;
	add.s64 	%rd1277, %rd1273, %rd1041;
	add.s64 	%rd1278, %rd1271, %rd1049;
	add.s64 	%rd1279, %rd1233, %rd1270;
	add.s64 	%rd1280, %rd1036, %rd1267;
	add.s64 	%rd1281, %rd1280, 4;
	add.s64 	%rd1282, %rd1274, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd1275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1531}, %rd1275;
	}
	shf.r.wrap.b32 	%r1532, %r1531, %r1530, 18;
	shf.r.wrap.b32 	%r1533, %r1530, %r1531, 18;
	mov.b64 	%rd1283, {%r1533, %r1532};
	xor.b64  	%rd1284, %rd1283, %rd1282;
	add.s64 	%rd1285, %rd1276, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd1277;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 28;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 28;
	mov.b64 	%rd1286, {%r1537, %r1536};
	xor.b64  	%rd1287, %rd1285, %rd1286;
	add.s64 	%rd1288, %rd1278, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd1279;
	}
	shf.l.wrap.b32 	%r1540, %r1539, %r1538, 19;
	shf.l.wrap.b32 	%r1541, %r1538, %r1539, 19;
	mov.b64 	%rd1289, {%r1541, %r1540};
	xor.b64  	%rd1290, %rd1289, %rd1288;
	add.s64 	%rd1291, %rd1035, -72057594037927928;
	add.s64 	%rd1292, %rd1291, %rd1262;
	add.s64 	%rd1293, %rd1292, %rd1281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd1281;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 27;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 27;
	mov.b64 	%rd1294, {%r1545, %r1544};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	add.s64 	%rd1296, %rd1285, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1547}, %rd1284;
	}
	shf.r.wrap.b32 	%r1548, %r1547, %r1546, 31;
	shf.r.wrap.b32 	%r1549, %r1546, %r1547, 31;
	mov.b64 	%rd1297, {%r1549, %r1548};
	xor.b64  	%rd1298, %rd1297, %rd1296;
	add.s64 	%rd1299, %rd1295, %rd1288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1551,%dummy}, %rd1295;
	}
	shf.l.wrap.b32 	%r1552, %r1551, %r1550, 27;
	shf.l.wrap.b32 	%r1553, %r1550, %r1551, 27;
	mov.b64 	%rd1300, {%r1553, %r1552};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	add.s64 	%rd1302, %rd1290, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd1290;
	}
	shf.l.wrap.b32 	%r1556, %r1555, %r1554, 14;
	shf.l.wrap.b32 	%r1557, %r1554, %r1555, 14;
	mov.b64 	%rd1303, {%r1557, %r1556};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	add.s64 	%rd1305, %rd1287, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd1287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd1287;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 22;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 22;
	mov.b64 	%rd1306, {%r1561, %r1560};
	xor.b64  	%rd1307, %rd1306, %rd1305;
	add.s64 	%rd1308, %rd1299, %rd1298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1563,%dummy}, %rd1298;
	}
	shf.l.wrap.b32 	%r1564, %r1563, %r1562, 17;
	shf.l.wrap.b32 	%r1565, %r1562, %r1563, 17;
	mov.b64 	%rd1309, {%r1565, %r1564};
	xor.b64  	%rd1310, %rd1309, %rd1308;
	add.s64 	%rd1311, %rd1307, %rd1302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd1307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd1307;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 15;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 15;
	mov.b64 	%rd1312, {%r1569, %r1568};
	xor.b64  	%rd1313, %rd1312, %rd1311;
	add.s64 	%rd1314, %rd1304, %rd1305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1570,%dummy}, %rd1304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1571}, %rd1304;
	}
	shf.r.wrap.b32 	%r1572, %r1571, %r1570, 28;
	shf.r.wrap.b32 	%r1573, %r1570, %r1571, 28;
	mov.b64 	%rd1315, {%r1573, %r1572};
	xor.b64  	%rd1316, %rd1315, %rd1314;
	add.s64 	%rd1317, %rd1301, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd1301;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 25;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 25;
	mov.b64 	%rd1318, {%r1577, %r1576};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	add.s64 	%rd1320, %rd1311, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd1310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1579}, %rd1310;
	}
	shf.r.wrap.b32 	%r1580, %r1579, %r1578, 20;
	shf.r.wrap.b32 	%r1581, %r1578, %r1579, 20;
	mov.b64 	%rd1321, {%r1581, %r1580};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	add.s64 	%rd1323, %rd1319, %rd1314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1582}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1583,%dummy}, %rd1319;
	}
	shf.l.wrap.b32 	%r1584, %r1583, %r1582, 9;
	shf.l.wrap.b32 	%r1585, %r1582, %r1583, 9;
	mov.b64 	%rd1324, {%r1585, %r1584};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	add.s64 	%rd1326, %rd1316, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1586,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1587}, %rd1316;
	}
	shf.r.wrap.b32 	%r1588, %r1587, %r1586, 10;
	shf.r.wrap.b32 	%r1589, %r1586, %r1587, 10;
	mov.b64 	%rd1327, {%r1589, %r1588};
	xor.b64  	%rd1328, %rd1327, %rd1326;
	add.s64 	%rd1329, %rd1313, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1590,%dummy}, %rd1313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1591}, %rd1313;
	}
	shf.r.wrap.b32 	%r1592, %r1591, %r1590, 8;
	shf.r.wrap.b32 	%r1593, %r1590, %r1591, 8;
	mov.b64 	%rd1330, {%r1593, %r1592};
	xor.b64  	%rd1331, %rd1330, %rd1329;
	add.s64 	%rd1332, %rd1323, %rd1039;
	add.s64 	%rd1333, %rd1322, %rd1040;
	add.s64 	%rd1334, %rd1326, %rd1041;
	add.s64 	%rd1335, %rd1331, %rd1049;
	add.s64 	%rd1336, %rd1329, %rd1034;
	add.s64 	%rd1337, %rd1291, %rd1328;
	add.s64 	%rd1338, %rd1037, %rd1325;
	add.s64 	%rd1339, %rd1338, 5;
	add.s64 	%rd1340, %rd1332, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd1333;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 25;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 25;
	mov.b64 	%rd1341, {%r1597, %r1596};
	xor.b64  	%rd1342, %rd1341, %rd1340;
	add.s64 	%rd1343, %rd1334, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd1335;
	}
	shf.l.wrap.b32 	%r1600, %r1599, %r1598, 30;
	shf.l.wrap.b32 	%r1601, %r1598, %r1599, 30;
	mov.b64 	%rd1344, {%r1601, %r1600};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	add.s64 	%rd1346, %rd1336, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd1337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd1337;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 30;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 30;
	mov.b64 	%rd1347, {%r1605, %r1604};
	xor.b64  	%rd1348, %rd1347, %rd1346;
	add.s64 	%rd1349, %rd1036, 8;
	add.s64 	%rd1350, %rd1349, %rd1320;
	add.s64 	%rd1351, %rd1350, %rd1339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd1339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd1339;
	}
	shf.l.wrap.b32 	%r1608, %r1607, %r1606, 24;
	shf.l.wrap.b32 	%r1609, %r1606, %r1607, 24;
	mov.b64 	%rd1352, {%r1609, %r1608};
	xor.b64  	%rd1353, %rd1352, %rd1351;
	add.s64 	%rd1354, %rd1343, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1611,%dummy}, %rd1342;
	}
	shf.l.wrap.b32 	%r1612, %r1611, %r1610, 13;
	shf.l.wrap.b32 	%r1613, %r1610, %r1611, 13;
	mov.b64 	%rd1355, {%r1613, %r1612};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	add.s64 	%rd1357, %rd1353, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd1353;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 14;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 14;
	mov.b64 	%rd1358, {%r1617, %r1616};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	add.s64 	%rd1360, %rd1348, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1618}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd1348;
	}
	shf.l.wrap.b32 	%r1620, %r1619, %r1618, 10;
	shf.l.wrap.b32 	%r1621, %r1618, %r1619, 10;
	mov.b64 	%rd1361, {%r1621, %r1620};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	add.s64 	%rd1363, %rd1345, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd1345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd1345;
	}
	shf.l.wrap.b32 	%r1624, %r1623, %r1622, 17;
	shf.l.wrap.b32 	%r1625, %r1622, %r1623, 17;
	mov.b64 	%rd1364, {%r1625, %r1624};
	xor.b64  	%rd1365, %rd1364, %rd1363;
	add.s64 	%rd1366, %rd1357, %rd1356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1626}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1627,%dummy}, %rd1356;
	}
	shf.l.wrap.b32 	%r1628, %r1627, %r1626, 25;
	shf.l.wrap.b32 	%r1629, %r1626, %r1627, 25;
	mov.b64 	%rd1367, {%r1629, %r1628};
	xor.b64  	%rd1368, %rd1367, %rd1366;
	add.s64 	%rd1369, %rd1365, %rd1360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd1365;
	}
	shf.l.wrap.b32 	%r1632, %r1631, %r1630, 29;
	shf.l.wrap.b32 	%r1633, %r1630, %r1631, 29;
	mov.b64 	%rd1370, {%r1633, %r1632};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	add.s64 	%rd1372, %rd1362, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd1362;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 25;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 25;
	mov.b64 	%rd1373, {%r1637, %r1636};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	add.s64 	%rd1375, %rd1359, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1638,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1639}, %rd1359;
	}
	shf.r.wrap.b32 	%r1640, %r1639, %r1638, 21;
	shf.r.wrap.b32 	%r1641, %r1638, %r1639, 21;
	mov.b64 	%rd1376, {%r1641, %r1640};
	xor.b64  	%rd1377, %rd1376, %rd1375;
	add.s64 	%rd1378, %rd1369, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1642}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1643,%dummy}, %rd1368;
	}
	shf.l.wrap.b32 	%r1644, %r1643, %r1642, 8;
	shf.l.wrap.b32 	%r1645, %r1642, %r1643, 8;
	mov.b64 	%rd1379, {%r1645, %r1644};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	add.s64 	%rd1381, %rd1377, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1647}, %rd1377;
	}
	shf.r.wrap.b32 	%r1648, %r1647, %r1646, 29;
	shf.r.wrap.b32 	%r1649, %r1646, %r1647, 29;
	mov.b64 	%rd1382, {%r1649, %r1648};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	add.s64 	%rd1384, %rd1374, %rd1375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1650,%dummy}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1651}, %rd1374;
	}
	shf.r.wrap.b32 	%r1652, %r1651, %r1650, 8;
	shf.r.wrap.b32 	%r1653, %r1650, %r1651, 8;
	mov.b64 	%rd1385, {%r1653, %r1652};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	add.s64 	%rd1387, %rd1371, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd1371;
	}
	shf.l.wrap.b32 	%r1656, %r1655, %r1654, 22;
	shf.l.wrap.b32 	%r1657, %r1654, %r1655, 22;
	mov.b64 	%rd1388, {%r1657, %r1656};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	add.s64 	%rd1390, %rd1381, %rd1040;
	add.s64 	%rd1391, %rd1380, %rd1041;
	add.s64 	%rd1392, %rd1384, %rd1049;
	add.s64 	%rd1393, %rd1389, %rd1034;
	add.s64 	%rd1394, %rd1387, %rd1035;
	add.s64 	%rd1395, %rd1349, %rd1386;
	add.s64 	%rd1396, %rd1038, %rd1383;
	add.s64 	%rd1397, %rd1396, 6;
	add.s64 	%rd1398, %rd1390, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1659}, %rd1391;
	}
	shf.r.wrap.b32 	%r1660, %r1659, %r1658, 18;
	shf.r.wrap.b32 	%r1661, %r1658, %r1659, 18;
	mov.b64 	%rd1399, {%r1661, %r1660};
	xor.b64  	%rd1400, %rd1399, %rd1398;
	add.s64 	%rd1401, %rd1392, %rd1393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd1393;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 28;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 28;
	mov.b64 	%rd1402, {%r1665, %r1664};
	xor.b64  	%rd1403, %rd1401, %rd1402;
	add.s64 	%rd1404, %rd1394, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1667,%dummy}, %rd1395;
	}
	shf.l.wrap.b32 	%r1668, %r1667, %r1666, 19;
	shf.l.wrap.b32 	%r1669, %r1666, %r1667, 19;
	mov.b64 	%rd1405, {%r1669, %r1668};
	xor.b64  	%rd1406, %rd1405, %rd1404;
	add.s64 	%rd1407, %rd1037, -72057594037927936;
	add.s64 	%rd1408, %rd1407, %rd1378;
	add.s64 	%rd1409, %rd1408, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd1397;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 27;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 27;
	mov.b64 	%rd1410, {%r1673, %r1672};
	xor.b64  	%rd1411, %rd1410, %rd1409;
	add.s64 	%rd1412, %rd1401, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd1400;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 31;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 31;
	mov.b64 	%rd1413, {%r1677, %r1676};
	xor.b64  	%rd1414, %rd1413, %rd1412;
	add.s64 	%rd1415, %rd1411, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1678}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd1411;
	}
	shf.l.wrap.b32 	%r1680, %r1679, %r1678, 27;
	shf.l.wrap.b32 	%r1681, %r1678, %r1679, 27;
	mov.b64 	%rd1416, {%r1681, %r1680};
	xor.b64  	%rd1417, %rd1416, %rd1415;
	add.s64 	%rd1418, %rd1406, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1683,%dummy}, %rd1406;
	}
	shf.l.wrap.b32 	%r1684, %r1683, %r1682, 14;
	shf.l.wrap.b32 	%r1685, %r1682, %r1683, 14;
	mov.b64 	%rd1419, {%r1685, %r1684};
	xor.b64  	%rd1420, %rd1419, %rd1418;
	add.s64 	%rd1421, %rd1403, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd1403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd1403;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 22;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 22;
	mov.b64 	%rd1422, {%r1689, %r1688};
	xor.b64  	%rd1423, %rd1422, %rd1421;
	add.s64 	%rd1424, %rd1415, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1690}, %rd1414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1691,%dummy}, %rd1414;
	}
	shf.l.wrap.b32 	%r1692, %r1691, %r1690, 17;
	shf.l.wrap.b32 	%r1693, %r1690, %r1691, 17;
	mov.b64 	%rd1425, {%r1693, %r1692};
	xor.b64  	%rd1426, %rd1425, %rd1424;
	add.s64 	%rd1427, %rd1423, %rd1418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd1423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd1423;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 15;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 15;
	mov.b64 	%rd1428, {%r1697, %r1696};
	xor.b64  	%rd1429, %rd1428, %rd1427;
	add.s64 	%rd1430, %rd1420, %rd1421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1698,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1699}, %rd1420;
	}
	shf.r.wrap.b32 	%r1700, %r1699, %r1698, 28;
	shf.r.wrap.b32 	%r1701, %r1698, %r1699, 28;
	mov.b64 	%rd1431, {%r1701, %r1700};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	add.s64 	%rd1433, %rd1417, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd1417;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 25;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 25;
	mov.b64 	%rd1434, {%r1705, %r1704};
	xor.b64  	%rd1435, %rd1434, %rd1433;
	add.s64 	%rd1436, %rd1427, %rd1426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1707}, %rd1426;
	}
	shf.r.wrap.b32 	%r1708, %r1707, %r1706, 20;
	shf.r.wrap.b32 	%r1709, %r1706, %r1707, 20;
	mov.b64 	%rd1437, {%r1709, %r1708};
	xor.b64  	%rd1438, %rd1437, %rd1436;
	add.s64 	%rd1439, %rd1435, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1710}, %rd1435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd1435;
	}
	shf.l.wrap.b32 	%r1712, %r1711, %r1710, 9;
	shf.l.wrap.b32 	%r1713, %r1710, %r1711, 9;
	mov.b64 	%rd1440, {%r1713, %r1712};
	xor.b64  	%rd1441, %rd1440, %rd1439;
	add.s64 	%rd1442, %rd1432, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd1432;
	}
	shf.r.wrap.b32 	%r1716, %r1715, %r1714, 10;
	shf.r.wrap.b32 	%r1717, %r1714, %r1715, 10;
	mov.b64 	%rd1443, {%r1717, %r1716};
	xor.b64  	%rd1444, %rd1443, %rd1442;
	add.s64 	%rd1445, %rd1429, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd1429;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 8;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 8;
	mov.b64 	%rd1446, {%r1721, %r1720};
	xor.b64  	%rd1447, %rd1446, %rd1445;
	add.s64 	%rd1448, %rd1439, %rd1041;
	add.s64 	%rd1449, %rd1438, %rd1049;
	add.s64 	%rd1450, %rd1442, %rd1034;
	add.s64 	%rd1451, %rd1447, %rd1035;
	add.s64 	%rd1452, %rd1445, %rd1036;
	add.s64 	%rd1453, %rd1407, %rd1444;
	add.s64 	%rd1454, %rd1039, %rd1441;
	add.s64 	%rd1455, %rd1454, 7;
	add.s64 	%rd1456, %rd1448, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1723}, %rd1449;
	}
	shf.r.wrap.b32 	%r1724, %r1723, %r1722, 25;
	shf.r.wrap.b32 	%r1725, %r1722, %r1723, 25;
	mov.b64 	%rd1457, {%r1725, %r1724};
	xor.b64  	%rd1458, %rd1457, %rd1456;
	add.s64 	%rd1459, %rd1450, %rd1451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1726}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd1451;
	}
	shf.l.wrap.b32 	%r1728, %r1727, %r1726, 30;
	shf.l.wrap.b32 	%r1729, %r1726, %r1727, 30;
	mov.b64 	%rd1460, {%r1729, %r1728};
	xor.b64  	%rd1461, %rd1459, %rd1460;
	add.s64 	%rd1462, %rd1452, %rd1453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1730,%dummy}, %rd1453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1731}, %rd1453;
	}
	shf.r.wrap.b32 	%r1732, %r1731, %r1730, 30;
	shf.r.wrap.b32 	%r1733, %r1730, %r1731, 30;
	mov.b64 	%rd1463, {%r1733, %r1732};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	add.s64 	%rd1465, %rd1038, -72057594037927928;
	add.s64 	%rd1466, %rd1465, %rd1436;
	add.s64 	%rd1467, %rd1466, %rd1455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1734}, %rd1455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd1455;
	}
	shf.l.wrap.b32 	%r1736, %r1735, %r1734, 24;
	shf.l.wrap.b32 	%r1737, %r1734, %r1735, 24;
	mov.b64 	%rd1468, {%r1737, %r1736};
	xor.b64  	%rd1469, %rd1468, %rd1467;
	add.s64 	%rd1470, %rd1459, %rd1458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd1458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1739,%dummy}, %rd1458;
	}
	shf.l.wrap.b32 	%r1740, %r1739, %r1738, 13;
	shf.l.wrap.b32 	%r1741, %r1738, %r1739, 13;
	mov.b64 	%rd1471, {%r1741, %r1740};
	xor.b64  	%rd1472, %rd1471, %rd1470;
	add.s64 	%rd1473, %rd1469, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd1469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd1469;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 14;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 14;
	mov.b64 	%rd1474, {%r1745, %r1744};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	add.s64 	%rd1476, %rd1464, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1747,%dummy}, %rd1464;
	}
	shf.l.wrap.b32 	%r1748, %r1747, %r1746, 10;
	shf.l.wrap.b32 	%r1749, %r1746, %r1747, 10;
	mov.b64 	%rd1477, {%r1749, %r1748};
	xor.b64  	%rd1478, %rd1477, %rd1476;
	add.s64 	%rd1479, %rd1461, %rd1456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd1461;
	}
	shf.l.wrap.b32 	%r1752, %r1751, %r1750, 17;
	shf.l.wrap.b32 	%r1753, %r1750, %r1751, 17;
	mov.b64 	%rd1480, {%r1753, %r1752};
	xor.b64  	%rd1481, %rd1480, %rd1479;
	add.s64 	%rd1482, %rd1473, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1754}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1755,%dummy}, %rd1472;
	}
	shf.l.wrap.b32 	%r1756, %r1755, %r1754, 25;
	shf.l.wrap.b32 	%r1757, %r1754, %r1755, 25;
	mov.b64 	%rd1483, {%r1757, %r1756};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	add.s64 	%rd1485, %rd1481, %rd1476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1758}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd1481;
	}
	shf.l.wrap.b32 	%r1760, %r1759, %r1758, 29;
	shf.l.wrap.b32 	%r1761, %r1758, %r1759, 29;
	mov.b64 	%rd1486, {%r1761, %r1760};
	xor.b64  	%rd1487, %rd1486, %rd1485;
	add.s64 	%rd1488, %rd1478, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1762,%dummy}, %rd1478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1763}, %rd1478;
	}
	shf.r.wrap.b32 	%r1764, %r1763, %r1762, 25;
	shf.r.wrap.b32 	%r1765, %r1762, %r1763, 25;
	mov.b64 	%rd1489, {%r1765, %r1764};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	add.s64 	%rd1491, %rd1475, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd1475;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 21;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 21;
	mov.b64 	%rd1492, {%r1769, %r1768};
	xor.b64  	%rd1493, %rd1492, %rd1491;
	add.s64 	%rd1494, %rd1485, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1770}, %rd1484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd1484;
	}
	shf.l.wrap.b32 	%r1772, %r1771, %r1770, 8;
	shf.l.wrap.b32 	%r1773, %r1770, %r1771, 8;
	mov.b64 	%rd1495, {%r1773, %r1772};
	xor.b64  	%rd1496, %rd1495, %rd1494;
	add.s64 	%rd1497, %rd1493, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd1493;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 29;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 29;
	mov.b64 	%rd1498, {%r1777, %r1776};
	xor.b64  	%rd1499, %rd1498, %rd1497;
	add.s64 	%rd1500, %rd1490, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1778,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1779}, %rd1490;
	}
	shf.r.wrap.b32 	%r1780, %r1779, %r1778, 8;
	shf.r.wrap.b32 	%r1781, %r1778, %r1779, 8;
	mov.b64 	%rd1501, {%r1781, %r1780};
	xor.b64  	%rd1502, %rd1501, %rd1500;
	add.s64 	%rd1503, %rd1487, %rd1482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd1487;
	}
	shf.l.wrap.b32 	%r1784, %r1783, %r1782, 22;
	shf.l.wrap.b32 	%r1785, %r1782, %r1783, 22;
	mov.b64 	%rd1504, {%r1785, %r1784};
	xor.b64  	%rd1505, %rd1504, %rd1503;
	add.s64 	%rd1506, %rd1497, %rd1049;
	add.s64 	%rd1507, %rd1496, %rd1034;
	add.s64 	%rd1508, %rd1500, %rd1035;
	add.s64 	%rd1509, %rd1505, %rd1036;
	add.s64 	%rd1510, %rd1503, %rd1037;
	add.s64 	%rd1511, %rd1465, %rd1502;
	add.s64 	%rd1512, %rd1040, %rd1499;
	add.s64 	%rd1513, %rd1512, 8;
	add.s64 	%rd1514, %rd1506, %rd1507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1787}, %rd1507;
	}
	shf.r.wrap.b32 	%r1788, %r1787, %r1786, 18;
	shf.r.wrap.b32 	%r1789, %r1786, %r1787, 18;
	mov.b64 	%rd1515, {%r1789, %r1788};
	xor.b64  	%rd1516, %rd1515, %rd1514;
	add.s64 	%rd1517, %rd1508, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd1509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd1509;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 28;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 28;
	mov.b64 	%rd1518, {%r1793, %r1792};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	add.s64 	%rd1520, %rd1510, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1795,%dummy}, %rd1511;
	}
	shf.l.wrap.b32 	%r1796, %r1795, %r1794, 19;
	shf.l.wrap.b32 	%r1797, %r1794, %r1795, 19;
	mov.b64 	%rd1521, {%r1797, %r1796};
	xor.b64  	%rd1522, %rd1521, %rd1520;
	add.s64 	%rd1523, %rd1050, %rd1494;
	add.s64 	%rd1524, %rd1523, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd1513;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 27;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 27;
	mov.b64 	%rd1525, {%r1801, %r1800};
	xor.b64  	%rd1526, %rd1525, %rd1524;
	add.s64 	%rd1527, %rd1517, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1802,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1803}, %rd1516;
	}
	shf.r.wrap.b32 	%r1804, %r1803, %r1802, 31;
	shf.r.wrap.b32 	%r1805, %r1802, %r1803, 31;
	mov.b64 	%rd1528, {%r1805, %r1804};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	add.s64 	%rd1530, %rd1526, %rd1520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd1526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd1526;
	}
	shf.l.wrap.b32 	%r1808, %r1807, %r1806, 27;
	shf.l.wrap.b32 	%r1809, %r1806, %r1807, 27;
	mov.b64 	%rd1531, {%r1809, %r1808};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	add.s64 	%rd1533, %rd1522, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1811,%dummy}, %rd1522;
	}
	shf.l.wrap.b32 	%r1812, %r1811, %r1810, 14;
	shf.l.wrap.b32 	%r1813, %r1810, %r1811, 14;
	mov.b64 	%rd1534, {%r1813, %r1812};
	xor.b64  	%rd1535, %rd1534, %rd1533;
	add.s64 	%rd1536, %rd1519, %rd1514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd1519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1519;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 22;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 22;
	mov.b64 	%rd1537, {%r1817, %r1816};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	add.s64 	%rd1539, %rd1530, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1818}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1819,%dummy}, %rd1529;
	}
	shf.l.wrap.b32 	%r1820, %r1819, %r1818, 17;
	shf.l.wrap.b32 	%r1821, %r1818, %r1819, 17;
	mov.b64 	%rd1540, {%r1821, %r1820};
	xor.b64  	%rd1541, %rd1540, %rd1539;
	add.s64 	%rd1542, %rd1538, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd1538;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 15;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 15;
	mov.b64 	%rd1543, {%r1825, %r1824};
	xor.b64  	%rd1544, %rd1543, %rd1542;
	add.s64 	%rd1545, %rd1535, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1826,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1827}, %rd1535;
	}
	shf.r.wrap.b32 	%r1828, %r1827, %r1826, 28;
	shf.r.wrap.b32 	%r1829, %r1826, %r1827, 28;
	mov.b64 	%rd1546, {%r1829, %r1828};
	xor.b64  	%rd1547, %rd1546, %rd1545;
	add.s64 	%rd1548, %rd1532, %rd1527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd1532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd1532;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 25;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 25;
	mov.b64 	%rd1549, {%r1833, %r1832};
	xor.b64  	%rd1550, %rd1549, %rd1548;
	add.s64 	%rd1551, %rd1542, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd1541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd1541;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 20;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 20;
	mov.b64 	%rd1552, {%r1837, %r1836};
	xor.b64  	%rd1553, %rd1552, %rd1551;
	add.s64 	%rd1554, %rd1550, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1838}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd1550;
	}
	shf.l.wrap.b32 	%r1840, %r1839, %r1838, 9;
	shf.l.wrap.b32 	%r1841, %r1838, %r1839, 9;
	mov.b64 	%rd1555, {%r1841, %r1840};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	add.s64 	%rd1557, %rd1547, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1842,%dummy}, %rd1547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1843}, %rd1547;
	}
	shf.r.wrap.b32 	%r1844, %r1843, %r1842, 10;
	shf.r.wrap.b32 	%r1845, %r1842, %r1843, 10;
	mov.b64 	%rd1558, {%r1845, %r1844};
	xor.b64  	%rd1559, %rd1558, %rd1557;
	add.s64 	%rd1560, %rd1544, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd1544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd1544;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 8;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 8;
	mov.b64 	%rd1561, {%r1849, %r1848};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	add.s64 	%rd1563, %rd1554, %rd1034;
	add.s64 	%rd1564, %rd1553, %rd1035;
	add.s64 	%rd1565, %rd1557, %rd1036;
	add.s64 	%rd1566, %rd1562, %rd1037;
	add.s64 	%rd1567, %rd1560, %rd1038;
	add.s64 	%rd1568, %rd1050, %rd1559;
	add.s64 	%rd1569, %rd1041, %rd1556;
	add.s64 	%rd1570, %rd1569, 9;
	add.s64 	%rd1571, %rd1563, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1851}, %rd1564;
	}
	shf.r.wrap.b32 	%r1852, %r1851, %r1850, 25;
	shf.r.wrap.b32 	%r1853, %r1850, %r1851, 25;
	mov.b64 	%rd1572, {%r1853, %r1852};
	xor.b64  	%rd1573, %rd1572, %rd1571;
	add.s64 	%rd1574, %rd1565, %rd1566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1854}, %rd1566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd1566;
	}
	shf.l.wrap.b32 	%r1856, %r1855, %r1854, 30;
	shf.l.wrap.b32 	%r1857, %r1854, %r1855, 30;
	mov.b64 	%rd1575, {%r1857, %r1856};
	xor.b64  	%rd1576, %rd1574, %rd1575;
	add.s64 	%rd1577, %rd1567, %rd1568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1858,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1859}, %rd1568;
	}
	shf.r.wrap.b32 	%r1860, %r1859, %r1858, 30;
	shf.r.wrap.b32 	%r1861, %r1858, %r1859, 30;
	mov.b64 	%rd1578, {%r1861, %r1860};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	add.s64 	%rd1580, %rd1051, %rd1551;
	add.s64 	%rd1581, %rd1580, %rd1570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd1570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd1570;
	}
	shf.l.wrap.b32 	%r1864, %r1863, %r1862, 24;
	shf.l.wrap.b32 	%r1865, %r1862, %r1863, 24;
	mov.b64 	%rd1582, {%r1865, %r1864};
	xor.b64  	%rd1583, %rd1582, %rd1581;
	add.s64 	%rd1584, %rd1574, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd1573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1867,%dummy}, %rd1573;
	}
	shf.l.wrap.b32 	%r1868, %r1867, %r1866, 13;
	shf.l.wrap.b32 	%r1869, %r1866, %r1867, 13;
	mov.b64 	%rd1585, {%r1869, %r1868};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	add.s64 	%rd1587, %rd1583, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd1583;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 14;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 14;
	mov.b64 	%rd1588, {%r1873, %r1872};
	xor.b64  	%rd1589, %rd1588, %rd1587;
	add.s64 	%rd1590, %rd1579, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1874}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1875,%dummy}, %rd1579;
	}
	shf.l.wrap.b32 	%r1876, %r1875, %r1874, 10;
	shf.l.wrap.b32 	%r1877, %r1874, %r1875, 10;
	mov.b64 	%rd1591, {%r1877, %r1876};
	xor.b64  	%rd1592, %rd1591, %rd1590;
	add.s64 	%rd1593, %rd1576, %rd1571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd1576;
	}
	shf.l.wrap.b32 	%r1880, %r1879, %r1878, 17;
	shf.l.wrap.b32 	%r1881, %r1878, %r1879, 17;
	mov.b64 	%rd1594, {%r1881, %r1880};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	add.s64 	%rd1596, %rd1587, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1882}, %rd1586;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1883,%dummy}, %rd1586;
	}
	shf.l.wrap.b32 	%r1884, %r1883, %r1882, 25;
	shf.l.wrap.b32 	%r1885, %r1882, %r1883, 25;
	mov.b64 	%rd1597, {%r1885, %r1884};
	xor.b64  	%rd1598, %rd1597, %rd1596;
	add.s64 	%rd1599, %rd1595, %rd1590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1886}, %rd1595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd1595;
	}
	shf.l.wrap.b32 	%r1888, %r1887, %r1886, 29;
	shf.l.wrap.b32 	%r1889, %r1886, %r1887, 29;
	mov.b64 	%rd1600, {%r1889, %r1888};
	xor.b64  	%rd1601, %rd1600, %rd1599;
	add.s64 	%rd1602, %rd1592, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd1592;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 25;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 25;
	mov.b64 	%rd1603, {%r1893, %r1892};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	add.s64 	%rd1605, %rd1589, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd1589;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 21;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 21;
	mov.b64 	%rd1606, {%r1897, %r1896};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	add.s64 	%rd1608, %rd1599, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1898}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1899,%dummy}, %rd1598;
	}
	shf.l.wrap.b32 	%r1900, %r1899, %r1898, 8;
	shf.l.wrap.b32 	%r1901, %r1898, %r1899, 8;
	mov.b64 	%rd1609, {%r1901, %r1900};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	add.s64 	%rd1611, %rd1607, %rd1602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1903}, %rd1607;
	}
	shf.r.wrap.b32 	%r1904, %r1903, %r1902, 29;
	shf.r.wrap.b32 	%r1905, %r1902, %r1903, 29;
	mov.b64 	%rd1612, {%r1905, %r1904};
	xor.b64  	%rd1613, %rd1612, %rd1611;
	add.s64 	%rd1614, %rd1604, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1906,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1907}, %rd1604;
	}
	shf.r.wrap.b32 	%r1908, %r1907, %r1906, 8;
	shf.r.wrap.b32 	%r1909, %r1906, %r1907, 8;
	mov.b64 	%rd1615, {%r1909, %r1908};
	xor.b64  	%rd1616, %rd1615, %rd1614;
	add.s64 	%rd1617, %rd1601, %rd1596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd1601;
	}
	shf.l.wrap.b32 	%r1912, %r1911, %r1910, 22;
	shf.l.wrap.b32 	%r1913, %r1910, %r1911, 22;
	mov.b64 	%rd1618, {%r1913, %r1912};
	xor.b64  	%rd1619, %rd1618, %rd1617;
	add.s64 	%rd1620, %rd1611, %rd1035;
	add.s64 	%rd1621, %rd1610, %rd1036;
	add.s64 	%rd1622, %rd1614, %rd1037;
	add.s64 	%rd1623, %rd1619, %rd1038;
	add.s64 	%rd1624, %rd1617, %rd1039;
	add.s64 	%rd1625, %rd1051, %rd1616;
	add.s64 	%rd1626, %rd1049, %rd1613;
	add.s64 	%rd1627, %rd1626, 10;
	add.s64 	%rd1628, %rd1620, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1915}, %rd1621;
	}
	shf.r.wrap.b32 	%r1916, %r1915, %r1914, 18;
	shf.r.wrap.b32 	%r1917, %r1914, %r1915, 18;
	mov.b64 	%rd1629, {%r1917, %r1916};
	xor.b64  	%rd1630, %rd1629, %rd1628;
	add.s64 	%rd1631, %rd1622, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1918,%dummy}, %rd1623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1919}, %rd1623;
	}
	shf.r.wrap.b32 	%r1920, %r1919, %r1918, 28;
	shf.r.wrap.b32 	%r1921, %r1918, %r1919, 28;
	mov.b64 	%rd1632, {%r1921, %r1920};
	xor.b64  	%rd1633, %rd1631, %rd1632;
	add.s64 	%rd1634, %rd1624, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1922}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1923,%dummy}, %rd1625;
	}
	shf.l.wrap.b32 	%r1924, %r1923, %r1922, 19;
	shf.l.wrap.b32 	%r1925, %r1922, %r1923, 19;
	mov.b64 	%rd1635, {%r1925, %r1924};
	xor.b64  	%rd1636, %rd1635, %rd1634;
	add.s64 	%rd1637, %rd1117, %rd1608;
	add.s64 	%rd1638, %rd1637, %rd1627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1926,%dummy}, %rd1627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1927}, %rd1627;
	}
	shf.r.wrap.b32 	%r1928, %r1927, %r1926, 27;
	shf.r.wrap.b32 	%r1929, %r1926, %r1927, 27;
	mov.b64 	%rd1639, {%r1929, %r1928};
	xor.b64  	%rd1640, %rd1639, %rd1638;
	add.s64 	%rd1641, %rd1631, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd1630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd1630;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 31;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 31;
	mov.b64 	%rd1642, {%r1933, %r1932};
	xor.b64  	%rd1643, %rd1642, %rd1641;
	add.s64 	%rd1644, %rd1640, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1934}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1935,%dummy}, %rd1640;
	}
	shf.l.wrap.b32 	%r1936, %r1935, %r1934, 27;
	shf.l.wrap.b32 	%r1937, %r1934, %r1935, 27;
	mov.b64 	%rd1645, {%r1937, %r1936};
	xor.b64  	%rd1646, %rd1645, %rd1644;
	add.s64 	%rd1647, %rd1636, %rd1638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1938}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1939,%dummy}, %rd1636;
	}
	shf.l.wrap.b32 	%r1940, %r1939, %r1938, 14;
	shf.l.wrap.b32 	%r1941, %r1938, %r1939, 14;
	mov.b64 	%rd1648, {%r1941, %r1940};
	xor.b64  	%rd1649, %rd1648, %rd1647;
	add.s64 	%rd1650, %rd1633, %rd1628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd1633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd1633;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 22;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 22;
	mov.b64 	%rd1651, {%r1945, %r1944};
	xor.b64  	%rd1652, %rd1651, %rd1650;
	add.s64 	%rd1653, %rd1644, %rd1643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1946}, %rd1643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1947,%dummy}, %rd1643;
	}
	shf.l.wrap.b32 	%r1948, %r1947, %r1946, 17;
	shf.l.wrap.b32 	%r1949, %r1946, %r1947, 17;
	mov.b64 	%rd1654, {%r1949, %r1948};
	xor.b64  	%rd1655, %rd1654, %rd1653;
	add.s64 	%rd1656, %rd1652, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd1652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd1652;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 15;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 15;
	mov.b64 	%rd1657, {%r1953, %r1952};
	xor.b64  	%rd1658, %rd1657, %rd1656;
	add.s64 	%rd1659, %rd1649, %rd1650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1954,%dummy}, %rd1649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1955}, %rd1649;
	}
	shf.r.wrap.b32 	%r1956, %r1955, %r1954, 28;
	shf.r.wrap.b32 	%r1957, %r1954, %r1955, 28;
	mov.b64 	%rd1660, {%r1957, %r1956};
	xor.b64  	%rd1661, %rd1660, %rd1659;
	add.s64 	%rd1662, %rd1646, %rd1641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd1646;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 25;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 25;
	mov.b64 	%rd1663, {%r1961, %r1960};
	xor.b64  	%rd1664, %rd1663, %rd1662;
	add.s64 	%rd1665, %rd1656, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1963}, %rd1655;
	}
	shf.r.wrap.b32 	%r1964, %r1963, %r1962, 20;
	shf.r.wrap.b32 	%r1965, %r1962, %r1963, 20;
	mov.b64 	%rd1666, {%r1965, %r1964};
	xor.b64  	%rd1667, %rd1666, %rd1665;
	add.s64 	%rd1668, %rd1664, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1966}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1967,%dummy}, %rd1664;
	}
	shf.l.wrap.b32 	%r1968, %r1967, %r1966, 9;
	shf.l.wrap.b32 	%r1969, %r1966, %r1967, 9;
	mov.b64 	%rd1669, {%r1969, %r1968};
	xor.b64  	%rd1670, %rd1669, %rd1668;
	add.s64 	%rd1671, %rd1661, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd1661;
	}
	shf.r.wrap.b32 	%r1972, %r1971, %r1970, 10;
	shf.r.wrap.b32 	%r1973, %r1970, %r1971, 10;
	mov.b64 	%rd1672, {%r1973, %r1972};
	xor.b64  	%rd1673, %rd1672, %rd1671;
	add.s64 	%rd1674, %rd1658, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd1658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1975}, %rd1658;
	}
	shf.r.wrap.b32 	%r1976, %r1975, %r1974, 8;
	shf.r.wrap.b32 	%r1977, %r1974, %r1975, 8;
	mov.b64 	%rd1675, {%r1977, %r1976};
	xor.b64  	%rd1676, %rd1675, %rd1674;
	add.s64 	%rd1677, %rd1668, %rd1036;
	add.s64 	%rd1678, %rd1667, %rd1037;
	add.s64 	%rd1679, %rd1671, %rd1038;
	add.s64 	%rd1680, %rd1676, %rd1039;
	add.s64 	%rd1681, %rd1674, %rd1040;
	add.s64 	%rd1682, %rd1117, %rd1673;
	add.s64 	%rd1683, %rd1034, %rd1670;
	add.s64 	%rd1684, %rd1683, 11;
	add.s64 	%rd1685, %rd1677, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd1678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1979}, %rd1678;
	}
	shf.r.wrap.b32 	%r1980, %r1979, %r1978, 25;
	shf.r.wrap.b32 	%r1981, %r1978, %r1979, 25;
	mov.b64 	%rd1686, {%r1981, %r1980};
	xor.b64  	%rd1687, %rd1686, %rd1685;
	add.s64 	%rd1688, %rd1679, %rd1680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd1680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1983,%dummy}, %rd1680;
	}
	shf.l.wrap.b32 	%r1984, %r1983, %r1982, 30;
	shf.l.wrap.b32 	%r1985, %r1982, %r1983, 30;
	mov.b64 	%rd1689, {%r1985, %r1984};
	xor.b64  	%rd1690, %rd1688, %rd1689;
	add.s64 	%rd1691, %rd1681, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1986,%dummy}, %rd1682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1987}, %rd1682;
	}
	shf.r.wrap.b32 	%r1988, %r1987, %r1986, 30;
	shf.r.wrap.b32 	%r1989, %r1986, %r1987, 30;
	mov.b64 	%rd1692, {%r1989, %r1988};
	xor.b64  	%rd1693, %rd1692, %rd1691;
	add.s64 	%rd1694, %rd1175, %rd1665;
	add.s64 	%rd1695, %rd1694, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1990}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1991,%dummy}, %rd1684;
	}
	shf.l.wrap.b32 	%r1992, %r1991, %r1990, 24;
	shf.l.wrap.b32 	%r1993, %r1990, %r1991, 24;
	mov.b64 	%rd1696, {%r1993, %r1992};
	xor.b64  	%rd1697, %rd1696, %rd1695;
	add.s64 	%rd1698, %rd1688, %rd1687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1994}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd1687;
	}
	shf.l.wrap.b32 	%r1996, %r1995, %r1994, 13;
	shf.l.wrap.b32 	%r1997, %r1994, %r1995, 13;
	mov.b64 	%rd1699, {%r1997, %r1996};
	xor.b64  	%rd1700, %rd1699, %rd1698;
	add.s64 	%rd1701, %rd1697, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1998,%dummy}, %rd1697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1999}, %rd1697;
	}
	shf.r.wrap.b32 	%r2000, %r1999, %r1998, 14;
	shf.r.wrap.b32 	%r2001, %r1998, %r1999, 14;
	mov.b64 	%rd1702, {%r2001, %r2000};
	xor.b64  	%rd1703, %rd1702, %rd1701;
	add.s64 	%rd1704, %rd1693, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2002}, %rd1693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd1693;
	}
	shf.l.wrap.b32 	%r2004, %r2003, %r2002, 10;
	shf.l.wrap.b32 	%r2005, %r2002, %r2003, 10;
	mov.b64 	%rd1705, {%r2005, %r2004};
	xor.b64  	%rd1706, %rd1705, %rd1704;
	add.s64 	%rd1707, %rd1690, %rd1685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2006}, %rd1690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2007,%dummy}, %rd1690;
	}
	shf.l.wrap.b32 	%r2008, %r2007, %r2006, 17;
	shf.l.wrap.b32 	%r2009, %r2006, %r2007, 17;
	mov.b64 	%rd1708, {%r2009, %r2008};
	xor.b64  	%rd1709, %rd1708, %rd1707;
	add.s64 	%rd1710, %rd1701, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2010}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd1700;
	}
	shf.l.wrap.b32 	%r2012, %r2011, %r2010, 25;
	shf.l.wrap.b32 	%r2013, %r2010, %r2011, 25;
	mov.b64 	%rd1711, {%r2013, %r2012};
	xor.b64  	%rd1712, %rd1711, %rd1710;
	add.s64 	%rd1713, %rd1709, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2015,%dummy}, %rd1709;
	}
	shf.l.wrap.b32 	%r2016, %r2015, %r2014, 29;
	shf.l.wrap.b32 	%r2017, %r2014, %r2015, 29;
	mov.b64 	%rd1714, {%r2017, %r2016};
	xor.b64  	%rd1715, %rd1714, %rd1713;
	add.s64 	%rd1716, %rd1706, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd1706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2019}, %rd1706;
	}
	shf.r.wrap.b32 	%r2020, %r2019, %r2018, 25;
	shf.r.wrap.b32 	%r2021, %r2018, %r2019, 25;
	mov.b64 	%rd1717, {%r2021, %r2020};
	xor.b64  	%rd1718, %rd1717, %rd1716;
	add.s64 	%rd1719, %rd1703, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2022,%dummy}, %rd1703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2023}, %rd1703;
	}
	shf.r.wrap.b32 	%r2024, %r2023, %r2022, 21;
	shf.r.wrap.b32 	%r2025, %r2022, %r2023, 21;
	mov.b64 	%rd1720, {%r2025, %r2024};
	xor.b64  	%rd1721, %rd1720, %rd1719;
	add.s64 	%rd1722, %rd1713, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2026}, %rd1712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd1712;
	}
	shf.l.wrap.b32 	%r2028, %r2027, %r2026, 8;
	shf.l.wrap.b32 	%r2029, %r2026, %r2027, 8;
	mov.b64 	%rd1723, {%r2029, %r2028};
	xor.b64  	%rd1724, %rd1723, %rd1722;
	add.s64 	%rd1725, %rd1721, %rd1716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2030,%dummy}, %rd1721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2031}, %rd1721;
	}
	shf.r.wrap.b32 	%r2032, %r2031, %r2030, 29;
	shf.r.wrap.b32 	%r2033, %r2030, %r2031, 29;
	mov.b64 	%rd1726, {%r2033, %r2032};
	xor.b64  	%rd1727, %rd1726, %rd1725;
	add.s64 	%rd1728, %rd1718, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2035}, %rd1718;
	}
	shf.r.wrap.b32 	%r2036, %r2035, %r2034, 8;
	shf.r.wrap.b32 	%r2037, %r2034, %r2035, 8;
	mov.b64 	%rd1729, {%r2037, %r2036};
	xor.b64  	%rd1730, %rd1729, %rd1728;
	add.s64 	%rd1731, %rd1715, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2039,%dummy}, %rd1715;
	}
	shf.l.wrap.b32 	%r2040, %r2039, %r2038, 22;
	shf.l.wrap.b32 	%r2041, %r2038, %r2039, 22;
	mov.b64 	%rd1732, {%r2041, %r2040};
	xor.b64  	%rd1733, %rd1732, %rd1731;
	add.s64 	%rd1734, %rd1725, %rd1037;
	add.s64 	%rd1735, %rd1724, %rd1038;
	add.s64 	%rd1736, %rd1728, %rd1039;
	add.s64 	%rd1737, %rd1733, %rd1040;
	add.s64 	%rd1738, %rd1731, %rd1041;
	add.s64 	%rd1739, %rd1175, %rd1730;
	add.s64 	%rd1740, %rd1035, %rd1727;
	add.s64 	%rd1741, %rd1740, 12;
	add.s64 	%rd1742, %rd1734, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2042,%dummy}, %rd1735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2043}, %rd1735;
	}
	shf.r.wrap.b32 	%r2044, %r2043, %r2042, 18;
	shf.r.wrap.b32 	%r2045, %r2042, %r2043, 18;
	mov.b64 	%rd1743, {%r2045, %r2044};
	xor.b64  	%rd1744, %rd1743, %rd1742;
	add.s64 	%rd1745, %rd1736, %rd1737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2046,%dummy}, %rd1737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2047}, %rd1737;
	}
	shf.r.wrap.b32 	%r2048, %r2047, %r2046, 28;
	shf.r.wrap.b32 	%r2049, %r2046, %r2047, 28;
	mov.b64 	%rd1746, {%r2049, %r2048};
	xor.b64  	%rd1747, %rd1745, %rd1746;
	add.s64 	%rd1748, %rd1738, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2050}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd1739;
	}
	shf.l.wrap.b32 	%r2052, %r2051, %r2050, 19;
	shf.l.wrap.b32 	%r2053, %r2050, %r2051, 19;
	mov.b64 	%rd1749, {%r2053, %r2052};
	xor.b64  	%rd1750, %rd1749, %rd1748;
	add.s64 	%rd1751, %rd1233, %rd1722;
	add.s64 	%rd1752, %rd1751, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2054,%dummy}, %rd1741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2055}, %rd1741;
	}
	shf.r.wrap.b32 	%r2056, %r2055, %r2054, 27;
	shf.r.wrap.b32 	%r2057, %r2054, %r2055, 27;
	mov.b64 	%rd1753, {%r2057, %r2056};
	xor.b64  	%rd1754, %rd1753, %rd1752;
	add.s64 	%rd1755, %rd1745, %rd1744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2058,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2059}, %rd1744;
	}
	shf.r.wrap.b32 	%r2060, %r2059, %r2058, 31;
	shf.r.wrap.b32 	%r2061, %r2058, %r2059, 31;
	mov.b64 	%rd1756, {%r2061, %r2060};
	xor.b64  	%rd1757, %rd1756, %rd1755;
	add.s64 	%rd1758, %rd1754, %rd1748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2062}, %rd1754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2063,%dummy}, %rd1754;
	}
	shf.l.wrap.b32 	%r2064, %r2063, %r2062, 27;
	shf.l.wrap.b32 	%r2065, %r2062, %r2063, 27;
	mov.b64 	%rd1759, {%r2065, %r2064};
	xor.b64  	%rd1760, %rd1759, %rd1758;
	add.s64 	%rd1761, %rd1750, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2066}, %rd1750;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd1750;
	}
	shf.l.wrap.b32 	%r2068, %r2067, %r2066, 14;
	shf.l.wrap.b32 	%r2069, %r2066, %r2067, 14;
	mov.b64 	%rd1762, {%r2069, %r2068};
	xor.b64  	%rd1763, %rd1762, %rd1761;
	add.s64 	%rd1764, %rd1747, %rd1742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd1747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd1747;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 22;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 22;
	mov.b64 	%rd1765, {%r2073, %r2072};
	xor.b64  	%rd1766, %rd1765, %rd1764;
	add.s64 	%rd1767, %rd1758, %rd1757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2074}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd1757;
	}
	shf.l.wrap.b32 	%r2076, %r2075, %r2074, 17;
	shf.l.wrap.b32 	%r2077, %r2074, %r2075, 17;
	mov.b64 	%rd1768, {%r2077, %r2076};
	xor.b64  	%rd1769, %rd1768, %rd1767;
	add.s64 	%rd1770, %rd1766, %rd1761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd1766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2079}, %rd1766;
	}
	shf.r.wrap.b32 	%r2080, %r2079, %r2078, 15;
	shf.r.wrap.b32 	%r2081, %r2078, %r2079, 15;
	mov.b64 	%rd1771, {%r2081, %r2080};
	xor.b64  	%rd1772, %rd1771, %rd1770;
	add.s64 	%rd1773, %rd1763, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2082,%dummy}, %rd1763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2083}, %rd1763;
	}
	shf.r.wrap.b32 	%r2084, %r2083, %r2082, 28;
	shf.r.wrap.b32 	%r2085, %r2082, %r2083, 28;
	mov.b64 	%rd1774, {%r2085, %r2084};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	add.s64 	%rd1776, %rd1760, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2087}, %rd1760;
	}
	shf.r.wrap.b32 	%r2088, %r2087, %r2086, 25;
	shf.r.wrap.b32 	%r2089, %r2086, %r2087, 25;
	mov.b64 	%rd1777, {%r2089, %r2088};
	xor.b64  	%rd1778, %rd1777, %rd1776;
	add.s64 	%rd1779, %rd1770, %rd1769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd1769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd1769;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 20;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 20;
	mov.b64 	%rd1780, {%r2093, %r2092};
	xor.b64  	%rd1781, %rd1780, %rd1779;
	add.s64 	%rd1782, %rd1778, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2094}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2095,%dummy}, %rd1778;
	}
	shf.l.wrap.b32 	%r2096, %r2095, %r2094, 9;
	shf.l.wrap.b32 	%r2097, %r2094, %r2095, 9;
	mov.b64 	%rd1783, {%r2097, %r2096};
	xor.b64  	%rd1784, %rd1783, %rd1782;
	add.s64 	%rd1785, %rd1775, %rd1776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd1775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd1775;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 10;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 10;
	mov.b64 	%rd1786, {%r2101, %r2100};
	xor.b64  	%rd1787, %rd1786, %rd1785;
	add.s64 	%rd1788, %rd1772, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2102,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2103}, %rd1772;
	}
	shf.r.wrap.b32 	%r2104, %r2103, %r2102, 8;
	shf.r.wrap.b32 	%r2105, %r2102, %r2103, 8;
	mov.b64 	%rd1789, {%r2105, %r2104};
	xor.b64  	%rd1790, %rd1789, %rd1788;
	add.s64 	%rd1791, %rd1782, %rd1038;
	add.s64 	%rd1792, %rd1781, %rd1039;
	add.s64 	%rd1793, %rd1785, %rd1040;
	add.s64 	%rd1794, %rd1790, %rd1041;
	add.s64 	%rd1795, %rd1788, %rd1049;
	add.s64 	%rd1796, %rd1233, %rd1787;
	add.s64 	%rd1797, %rd1036, %rd1784;
	add.s64 	%rd1798, %rd1797, 13;
	add.s64 	%rd1799, %rd1791, %rd1792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2106,%dummy}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2107}, %rd1792;
	}
	shf.r.wrap.b32 	%r2108, %r2107, %r2106, 25;
	shf.r.wrap.b32 	%r2109, %r2106, %r2107, 25;
	mov.b64 	%rd1800, {%r2109, %r2108};
	xor.b64  	%rd1801, %rd1800, %rd1799;
	add.s64 	%rd1802, %rd1793, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2110}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2111,%dummy}, %rd1794;
	}
	shf.l.wrap.b32 	%r2112, %r2111, %r2110, 30;
	shf.l.wrap.b32 	%r2113, %r2110, %r2111, 30;
	mov.b64 	%rd1803, {%r2113, %r2112};
	xor.b64  	%rd1804, %rd1802, %rd1803;
	add.s64 	%rd1805, %rd1795, %rd1796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2114,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2115}, %rd1796;
	}
	shf.r.wrap.b32 	%r2116, %r2115, %r2114, 30;
	shf.r.wrap.b32 	%r2117, %r2114, %r2115, 30;
	mov.b64 	%rd1806, {%r2117, %r2116};
	xor.b64  	%rd1807, %rd1806, %rd1805;
	add.s64 	%rd1808, %rd1291, %rd1779;
	add.s64 	%rd1809, %rd1808, %rd1798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2118}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2119,%dummy}, %rd1798;
	}
	shf.l.wrap.b32 	%r2120, %r2119, %r2118, 24;
	shf.l.wrap.b32 	%r2121, %r2118, %r2119, 24;
	mov.b64 	%rd1810, {%r2121, %r2120};
	xor.b64  	%rd1811, %rd1810, %rd1809;
	add.s64 	%rd1812, %rd1802, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2122}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd1801;
	}
	shf.l.wrap.b32 	%r2124, %r2123, %r2122, 13;
	shf.l.wrap.b32 	%r2125, %r2122, %r2123, 13;
	mov.b64 	%rd1813, {%r2125, %r2124};
	xor.b64  	%rd1814, %rd1813, %rd1812;
	add.s64 	%rd1815, %rd1811, %rd1805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2127}, %rd1811;
	}
	shf.r.wrap.b32 	%r2128, %r2127, %r2126, 14;
	shf.r.wrap.b32 	%r2129, %r2126, %r2127, 14;
	mov.b64 	%rd1816, {%r2129, %r2128};
	xor.b64  	%rd1817, %rd1816, %rd1815;
	add.s64 	%rd1818, %rd1807, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2130}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd1807;
	}
	shf.l.wrap.b32 	%r2132, %r2131, %r2130, 10;
	shf.l.wrap.b32 	%r2133, %r2130, %r2131, 10;
	mov.b64 	%rd1819, {%r2133, %r2132};
	xor.b64  	%rd1820, %rd1819, %rd1818;
	add.s64 	%rd1821, %rd1804, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2134}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2135,%dummy}, %rd1804;
	}
	shf.l.wrap.b32 	%r2136, %r2135, %r2134, 17;
	shf.l.wrap.b32 	%r2137, %r2134, %r2135, 17;
	mov.b64 	%rd1822, {%r2137, %r2136};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	add.s64 	%rd1824, %rd1815, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2138}, %rd1814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2139,%dummy}, %rd1814;
	}
	shf.l.wrap.b32 	%r2140, %r2139, %r2138, 25;
	shf.l.wrap.b32 	%r2141, %r2138, %r2139, 25;
	mov.b64 	%rd1825, {%r2141, %r2140};
	xor.b64  	%rd1826, %rd1825, %rd1824;
	add.s64 	%rd1827, %rd1823, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2142}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2143,%dummy}, %rd1823;
	}
	shf.l.wrap.b32 	%r2144, %r2143, %r2142, 29;
	shf.l.wrap.b32 	%r2145, %r2142, %r2143, 29;
	mov.b64 	%rd1828, {%r2145, %r2144};
	xor.b64  	%rd1829, %rd1828, %rd1827;
	add.s64 	%rd1830, %rd1820, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd1820;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 25;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 25;
	mov.b64 	%rd1831, {%r2149, %r2148};
	xor.b64  	%rd1832, %rd1831, %rd1830;
	add.s64 	%rd1833, %rd1817, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd1817;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 21;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 21;
	mov.b64 	%rd1834, {%r2153, %r2152};
	xor.b64  	%rd1835, %rd1834, %rd1833;
	add.s64 	%rd1836, %rd1827, %rd1826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2154}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2155,%dummy}, %rd1826;
	}
	shf.l.wrap.b32 	%r2156, %r2155, %r2154, 8;
	shf.l.wrap.b32 	%r2157, %r2154, %r2155, 8;
	mov.b64 	%rd1837, {%r2157, %r2156};
	xor.b64  	%rd1838, %rd1837, %rd1836;
	add.s64 	%rd1839, %rd1835, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd1835;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 29;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 29;
	mov.b64 	%rd1840, {%r2161, %r2160};
	xor.b64  	%rd1841, %rd1840, %rd1839;
	add.s64 	%rd1842, %rd1832, %rd1833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2162,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2163}, %rd1832;
	}
	shf.r.wrap.b32 	%r2164, %r2163, %r2162, 8;
	shf.r.wrap.b32 	%r2165, %r2162, %r2163, 8;
	mov.b64 	%rd1843, {%r2165, %r2164};
	xor.b64  	%rd1844, %rd1843, %rd1842;
	add.s64 	%rd1845, %rd1829, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2166}, %rd1829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2167,%dummy}, %rd1829;
	}
	shf.l.wrap.b32 	%r2168, %r2167, %r2166, 22;
	shf.l.wrap.b32 	%r2169, %r2166, %r2167, 22;
	mov.b64 	%rd1846, {%r2169, %r2168};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	add.s64 	%rd1848, %rd1839, %rd1039;
	add.s64 	%rd1849, %rd1838, %rd1040;
	add.s64 	%rd1850, %rd1842, %rd1041;
	add.s64 	%rd1851, %rd1847, %rd1049;
	add.s64 	%rd1852, %rd1845, %rd1034;
	add.s64 	%rd1853, %rd1291, %rd1844;
	add.s64 	%rd1854, %rd1037, %rd1841;
	add.s64 	%rd1855, %rd1854, 14;
	add.s64 	%rd1856, %rd1848, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd1849;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 18;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 18;
	mov.b64 	%rd1857, {%r2173, %r2172};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	add.s64 	%rd1859, %rd1850, %rd1851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd1851;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 28;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 28;
	mov.b64 	%rd1860, {%r2177, %r2176};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	add.s64 	%rd1862, %rd1852, %rd1853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2178}, %rd1853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd1853;
	}
	shf.l.wrap.b32 	%r2180, %r2179, %r2178, 19;
	shf.l.wrap.b32 	%r2181, %r2178, %r2179, 19;
	mov.b64 	%rd1863, {%r2181, %r2180};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	add.s64 	%rd1865, %rd1349, %rd1836;
	add.s64 	%rd1866, %rd1865, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd1855;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 27;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 27;
	mov.b64 	%rd1867, {%r2185, %r2184};
	xor.b64  	%rd1868, %rd1867, %rd1866;
	add.s64 	%rd1869, %rd1859, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2186,%dummy}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2187}, %rd1858;
	}
	shf.r.wrap.b32 	%r2188, %r2187, %r2186, 31;
	shf.r.wrap.b32 	%r2189, %r2186, %r2187, 31;
	mov.b64 	%rd1870, {%r2189, %r2188};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	add.s64 	%rd1872, %rd1868, %rd1862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2190}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2191,%dummy}, %rd1868;
	}
	shf.l.wrap.b32 	%r2192, %r2191, %r2190, 27;
	shf.l.wrap.b32 	%r2193, %r2190, %r2191, 27;
	mov.b64 	%rd1873, {%r2193, %r2192};
	xor.b64  	%rd1874, %rd1873, %rd1872;
	add.s64 	%rd1875, %rd1864, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2194}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2195,%dummy}, %rd1864;
	}
	shf.l.wrap.b32 	%r2196, %r2195, %r2194, 14;
	shf.l.wrap.b32 	%r2197, %r2194, %r2195, 14;
	mov.b64 	%rd1876, {%r2197, %r2196};
	xor.b64  	%rd1877, %rd1876, %rd1875;
	add.s64 	%rd1878, %rd1861, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd1861;
	}
	shf.r.wrap.b32 	%r2200, %r2199, %r2198, 22;
	shf.r.wrap.b32 	%r2201, %r2198, %r2199, 22;
	mov.b64 	%rd1879, {%r2201, %r2200};
	xor.b64  	%rd1880, %rd1879, %rd1878;
	add.s64 	%rd1881, %rd1872, %rd1871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2202}, %rd1871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2203,%dummy}, %rd1871;
	}
	shf.l.wrap.b32 	%r2204, %r2203, %r2202, 17;
	shf.l.wrap.b32 	%r2205, %r2202, %r2203, 17;
	mov.b64 	%rd1882, {%r2205, %r2204};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	add.s64 	%rd1884, %rd1880, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd1880;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 15;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 15;
	mov.b64 	%rd1885, {%r2209, %r2208};
	xor.b64  	%rd1886, %rd1885, %rd1884;
	add.s64 	%rd1887, %rd1877, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd1877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd1877;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 28;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 28;
	mov.b64 	%rd1888, {%r2213, %r2212};
	xor.b64  	%rd1889, %rd1888, %rd1887;
	add.s64 	%rd1890, %rd1874, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd1874;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 25;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 25;
	mov.b64 	%rd1891, {%r2217, %r2216};
	xor.b64  	%rd1892, %rd1891, %rd1890;
	add.s64 	%rd1893, %rd1884, %rd1883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd1883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd1883;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 20;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 20;
	mov.b64 	%rd1894, {%r2221, %r2220};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	add.s64 	%rd1896, %rd1892, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2222}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2223,%dummy}, %rd1892;
	}
	shf.l.wrap.b32 	%r2224, %r2223, %r2222, 9;
	shf.l.wrap.b32 	%r2225, %r2222, %r2223, 9;
	mov.b64 	%rd1897, {%r2225, %r2224};
	xor.b64  	%rd1898, %rd1897, %rd1896;
	add.s64 	%rd1899, %rd1889, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2226,%dummy}, %rd1889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2227}, %rd1889;
	}
	shf.r.wrap.b32 	%r2228, %r2227, %r2226, 10;
	shf.r.wrap.b32 	%r2229, %r2226, %r2227, 10;
	mov.b64 	%rd1900, {%r2229, %r2228};
	xor.b64  	%rd1901, %rd1900, %rd1899;
	add.s64 	%rd1902, %rd1886, %rd1881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd1886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd1886;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 8;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 8;
	mov.b64 	%rd1903, {%r2233, %r2232};
	xor.b64  	%rd1904, %rd1903, %rd1902;
	add.s64 	%rd1905, %rd1896, %rd1040;
	add.s64 	%rd1906, %rd1895, %rd1041;
	add.s64 	%rd1907, %rd1899, %rd1049;
	add.s64 	%rd1908, %rd1904, %rd1034;
	add.s64 	%rd1909, %rd1902, %rd1035;
	add.s64 	%rd1910, %rd1349, %rd1901;
	add.s64 	%rd1911, %rd1038, %rd1898;
	add.s64 	%rd1912, %rd1911, 15;
	add.s64 	%rd1913, %rd1905, %rd1906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd1906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2235}, %rd1906;
	}
	shf.r.wrap.b32 	%r2236, %r2235, %r2234, 25;
	shf.r.wrap.b32 	%r2237, %r2234, %r2235, 25;
	mov.b64 	%rd1914, {%r2237, %r2236};
	xor.b64  	%rd1915, %rd1914, %rd1913;
	add.s64 	%rd1916, %rd1907, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2238}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2239,%dummy}, %rd1908;
	}
	shf.l.wrap.b32 	%r2240, %r2239, %r2238, 30;
	shf.l.wrap.b32 	%r2241, %r2238, %r2239, 30;
	mov.b64 	%rd1917, {%r2241, %r2240};
	xor.b64  	%rd1918, %rd1916, %rd1917;
	add.s64 	%rd1919, %rd1909, %rd1910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2242,%dummy}, %rd1910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2243}, %rd1910;
	}
	shf.r.wrap.b32 	%r2244, %r2243, %r2242, 30;
	shf.r.wrap.b32 	%r2245, %r2242, %r2243, 30;
	mov.b64 	%rd1920, {%r2245, %r2244};
	xor.b64  	%rd1921, %rd1920, %rd1919;
	add.s64 	%rd1922, %rd1407, %rd1893;
	add.s64 	%rd1923, %rd1922, %rd1912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2246}, %rd1912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2247,%dummy}, %rd1912;
	}
	shf.l.wrap.b32 	%r2248, %r2247, %r2246, 24;
	shf.l.wrap.b32 	%r2249, %r2246, %r2247, 24;
	mov.b64 	%rd1924, {%r2249, %r2248};
	xor.b64  	%rd1925, %rd1924, %rd1923;
	add.s64 	%rd1926, %rd1916, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2250}, %rd1915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2251,%dummy}, %rd1915;
	}
	shf.l.wrap.b32 	%r2252, %r2251, %r2250, 13;
	shf.l.wrap.b32 	%r2253, %r2250, %r2251, 13;
	mov.b64 	%rd1927, {%r2253, %r2252};
	xor.b64  	%rd1928, %rd1927, %rd1926;
	add.s64 	%rd1929, %rd1925, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd1925;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 14;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 14;
	mov.b64 	%rd1930, {%r2257, %r2256};
	xor.b64  	%rd1931, %rd1930, %rd1929;
	add.s64 	%rd1932, %rd1921, %rd1923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2258}, %rd1921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd1921;
	}
	shf.l.wrap.b32 	%r2260, %r2259, %r2258, 10;
	shf.l.wrap.b32 	%r2261, %r2258, %r2259, 10;
	mov.b64 	%rd1933, {%r2261, %r2260};
	xor.b64  	%rd1934, %rd1933, %rd1932;
	add.s64 	%rd1935, %rd1918, %rd1913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd1918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2263,%dummy}, %rd1918;
	}
	shf.l.wrap.b32 	%r2264, %r2263, %r2262, 17;
	shf.l.wrap.b32 	%r2265, %r2262, %r2263, 17;
	mov.b64 	%rd1936, {%r2265, %r2264};
	xor.b64  	%rd1937, %rd1936, %rd1935;
	add.s64 	%rd1938, %rd1929, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd1928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2267,%dummy}, %rd1928;
	}
	shf.l.wrap.b32 	%r2268, %r2267, %r2266, 25;
	shf.l.wrap.b32 	%r2269, %r2266, %r2267, 25;
	mov.b64 	%rd1939, {%r2269, %r2268};
	xor.b64  	%rd1940, %rd1939, %rd1938;
	add.s64 	%rd1941, %rd1937, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2270}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2271,%dummy}, %rd1937;
	}
	shf.l.wrap.b32 	%r2272, %r2271, %r2270, 29;
	shf.l.wrap.b32 	%r2273, %r2270, %r2271, 29;
	mov.b64 	%rd1942, {%r2273, %r2272};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	add.s64 	%rd1944, %rd1934, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2274,%dummy}, %rd1934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2275}, %rd1934;
	}
	shf.r.wrap.b32 	%r2276, %r2275, %r2274, 25;
	shf.r.wrap.b32 	%r2277, %r2274, %r2275, 25;
	mov.b64 	%rd1945, {%r2277, %r2276};
	xor.b64  	%rd1946, %rd1945, %rd1944;
	add.s64 	%rd1947, %rd1931, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd1931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd1931;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 21;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 21;
	mov.b64 	%rd1948, {%r2281, %r2280};
	xor.b64  	%rd1949, %rd1948, %rd1947;
	add.s64 	%rd1950, %rd1941, %rd1940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2282}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd1940;
	}
	shf.l.wrap.b32 	%r2284, %r2283, %r2282, 8;
	shf.l.wrap.b32 	%r2285, %r2282, %r2283, 8;
	mov.b64 	%rd1951, {%r2285, %r2284};
	xor.b64  	%rd1952, %rd1951, %rd1950;
	add.s64 	%rd1953, %rd1949, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd1949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd1949;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 29;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 29;
	mov.b64 	%rd1954, {%r2289, %r2288};
	xor.b64  	%rd1955, %rd1954, %rd1953;
	add.s64 	%rd1956, %rd1946, %rd1947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2290,%dummy}, %rd1946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2291}, %rd1946;
	}
	shf.r.wrap.b32 	%r2292, %r2291, %r2290, 8;
	shf.r.wrap.b32 	%r2293, %r2290, %r2291, 8;
	mov.b64 	%rd1957, {%r2293, %r2292};
	xor.b64  	%rd1958, %rd1957, %rd1956;
	add.s64 	%rd1959, %rd1943, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2294}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2295,%dummy}, %rd1943;
	}
	shf.l.wrap.b32 	%r2296, %r2295, %r2294, 22;
	shf.l.wrap.b32 	%r2297, %r2294, %r2295, 22;
	mov.b64 	%rd1960, {%r2297, %r2296};
	xor.b64  	%rd1961, %rd1960, %rd1959;
	add.s64 	%rd1962, %rd1953, %rd1041;
	add.s64 	%rd1963, %rd1952, %rd1049;
	add.s64 	%rd1964, %rd1956, %rd1034;
	add.s64 	%rd1965, %rd1961, %rd1035;
	add.s64 	%rd1966, %rd1959, %rd1036;
	add.s64 	%rd1967, %rd1407, %rd1958;
	add.s64 	%rd1968, %rd1039, %rd1955;
	add.s64 	%rd1969, %rd1968, 16;
	add.s64 	%rd1970, %rd1962, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2298,%dummy}, %rd1963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2299}, %rd1963;
	}
	shf.r.wrap.b32 	%r2300, %r2299, %r2298, 18;
	shf.r.wrap.b32 	%r2301, %r2298, %r2299, 18;
	mov.b64 	%rd1971, {%r2301, %r2300};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	add.s64 	%rd1973, %rd1964, %rd1965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd1965;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 28;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 28;
	mov.b64 	%rd1974, {%r2305, %r2304};
	xor.b64  	%rd1975, %rd1973, %rd1974;
	add.s64 	%rd1976, %rd1966, %rd1967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2306}, %rd1967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd1967;
	}
	shf.l.wrap.b32 	%r2308, %r2307, %r2306, 19;
	shf.l.wrap.b32 	%r2309, %r2306, %r2307, 19;
	mov.b64 	%rd1977, {%r2309, %r2308};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	add.s64 	%rd1979, %rd1465, %rd1950;
	add.s64 	%rd1980, %rd1979, %rd1969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd1969;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 27;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 27;
	mov.b64 	%rd1981, {%r2313, %r2312};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	add.s64 	%rd1983, %rd1973, %rd1972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2314,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2315}, %rd1972;
	}
	shf.r.wrap.b32 	%r2316, %r2315, %r2314, 31;
	shf.r.wrap.b32 	%r2317, %r2314, %r2315, 31;
	mov.b64 	%rd1984, {%r2317, %r2316};
	xor.b64  	%rd1985, %rd1984, %rd1983;
	add.s64 	%rd1986, %rd1982, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd1982;
	}
	shf.l.wrap.b32 	%r2320, %r2319, %r2318, 27;
	shf.l.wrap.b32 	%r2321, %r2318, %r2319, 27;
	mov.b64 	%rd1987, {%r2321, %r2320};
	xor.b64  	%rd1988, %rd1987, %rd1986;
	add.s64 	%rd1989, %rd1978, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2322}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2323,%dummy}, %rd1978;
	}
	shf.l.wrap.b32 	%r2324, %r2323, %r2322, 14;
	shf.l.wrap.b32 	%r2325, %r2322, %r2323, 14;
	mov.b64 	%rd1990, {%r2325, %r2324};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	add.s64 	%rd1992, %rd1975, %rd1970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd1975;
	}
	shf.r.wrap.b32 	%r2328, %r2327, %r2326, 22;
	shf.r.wrap.b32 	%r2329, %r2326, %r2327, 22;
	mov.b64 	%rd1993, {%r2329, %r2328};
	xor.b64  	%rd1994, %rd1993, %rd1992;
	add.s64 	%rd1995, %rd1986, %rd1985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2330}, %rd1985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd1985;
	}
	shf.l.wrap.b32 	%r2332, %r2331, %r2330, 17;
	shf.l.wrap.b32 	%r2333, %r2330, %r2331, 17;
	mov.b64 	%rd1996, {%r2333, %r2332};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	add.s64 	%rd1998, %rd1994, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2334,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd1994;
	}
	shf.r.wrap.b32 	%r2336, %r2335, %r2334, 15;
	shf.r.wrap.b32 	%r2337, %r2334, %r2335, 15;
	mov.b64 	%rd1999, {%r2337, %r2336};
	xor.b64  	%rd2000, %rd1999, %rd1998;
	add.s64 	%rd2001, %rd1991, %rd1992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2338,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2339}, %rd1991;
	}
	shf.r.wrap.b32 	%r2340, %r2339, %r2338, 28;
	shf.r.wrap.b32 	%r2341, %r2338, %r2339, 28;
	mov.b64 	%rd2002, {%r2341, %r2340};
	xor.b64  	%rd2003, %rd2002, %rd2001;
	add.s64 	%rd2004, %rd1988, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2343}, %rd1988;
	}
	shf.r.wrap.b32 	%r2344, %r2343, %r2342, 25;
	shf.r.wrap.b32 	%r2345, %r2342, %r2343, 25;
	mov.b64 	%rd2005, {%r2345, %r2344};
	xor.b64  	%rd2006, %rd2005, %rd2004;
	add.s64 	%rd2007, %rd1998, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2346,%dummy}, %rd1997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2347}, %rd1997;
	}
	shf.r.wrap.b32 	%r2348, %r2347, %r2346, 20;
	shf.r.wrap.b32 	%r2349, %r2346, %r2347, 20;
	mov.b64 	%rd2008, {%r2349, %r2348};
	xor.b64  	%rd2009, %rd2008, %rd2007;
	add.s64 	%rd2010, %rd2006, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2350}, %rd2006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2351,%dummy}, %rd2006;
	}
	shf.l.wrap.b32 	%r2352, %r2351, %r2350, 9;
	shf.l.wrap.b32 	%r2353, %r2350, %r2351, 9;
	mov.b64 	%rd2011, {%r2353, %r2352};
	xor.b64  	%rd2012, %rd2011, %rd2010;
	add.s64 	%rd2013, %rd2003, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2354,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2355}, %rd2003;
	}
	shf.r.wrap.b32 	%r2356, %r2355, %r2354, 10;
	shf.r.wrap.b32 	%r2357, %r2354, %r2355, 10;
	mov.b64 	%rd2014, {%r2357, %r2356};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	add.s64 	%rd2016, %rd2000, %rd1995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd2000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd2000;
	}
	shf.r.wrap.b32 	%r2360, %r2359, %r2358, 8;
	shf.r.wrap.b32 	%r2361, %r2358, %r2359, 8;
	mov.b64 	%rd2017, {%r2361, %r2360};
	xor.b64  	%rd2018, %rd2017, %rd2016;
	add.s64 	%rd2019, %rd2010, %rd1049;
	add.s64 	%rd2020, %rd2009, %rd1034;
	add.s64 	%rd2021, %rd2013, %rd1035;
	add.s64 	%rd2022, %rd2018, %rd1036;
	add.s64 	%rd2023, %rd2016, %rd1037;
	add.s64 	%rd2024, %rd1465, %rd2015;
	add.s64 	%rd2025, %rd1040, %rd2012;
	add.s64 	%rd2026, %rd2025, 17;
	add.s64 	%rd2027, %rd2019, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2362,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2363}, %rd2020;
	}
	shf.r.wrap.b32 	%r2364, %r2363, %r2362, 25;
	shf.r.wrap.b32 	%r2365, %r2362, %r2363, 25;
	mov.b64 	%rd2028, {%r2365, %r2364};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	add.s64 	%rd2030, %rd2021, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2366}, %rd2022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd2022;
	}
	shf.l.wrap.b32 	%r2368, %r2367, %r2366, 30;
	shf.l.wrap.b32 	%r2369, %r2366, %r2367, 30;
	mov.b64 	%rd2031, {%r2369, %r2368};
	xor.b64  	%rd2032, %rd2030, %rd2031;
	add.s64 	%rd2033, %rd2023, %rd2024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2370,%dummy}, %rd2024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2371}, %rd2024;
	}
	shf.r.wrap.b32 	%r2372, %r2371, %r2370, 30;
	shf.r.wrap.b32 	%r2373, %r2370, %r2371, 30;
	mov.b64 	%rd2034, {%r2373, %r2372};
	xor.b64  	%rd2035, %rd2034, %rd2033;
	add.s64 	%rd2036, %rd1050, %rd2007;
	add.s64 	%rd2037, %rd2036, %rd2026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2375,%dummy}, %rd2026;
	}
	shf.l.wrap.b32 	%r2376, %r2375, %r2374, 24;
	shf.l.wrap.b32 	%r2377, %r2374, %r2375, 24;
	mov.b64 	%rd2038, {%r2377, %r2376};
	xor.b64  	%rd2039, %rd2038, %rd2037;
	add.s64 	%rd2040, %rd2030, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd2029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2379,%dummy}, %rd2029;
	}
	shf.l.wrap.b32 	%r2380, %r2379, %r2378, 13;
	shf.l.wrap.b32 	%r2381, %r2378, %r2379, 13;
	mov.b64 	%rd2041, {%r2381, %r2380};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	add.s64 	%rd2043, %rd2039, %rd2033;
	add.s64 	%rd2044, %rd2035, %rd2037;
	add.s64 	%rd2045, %rd2032, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2382}, %rd2032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2383,%dummy}, %rd2032;
	}
	shf.l.wrap.b32 	%r2384, %r2383, %r2382, 17;
	shf.l.wrap.b32 	%r2385, %r2382, %r2383, 17;
	mov.b64 	%rd2046, {%r2385, %r2384};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	add.s64 	%rd2048, %rd2043, %rd2042;
	add.s64 	%rd2049, %rd2047, %rd2044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2386}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd2047;
	}
	shf.l.wrap.b32 	%r2388, %r2387, %r2386, 29;
	shf.l.wrap.b32 	%r2389, %r2386, %r2387, 29;
	mov.b64 	%rd2050, {%r2389, %r2388};
	xor.b64  	%rd2051, %rd2050, %rd2049;
	add.s64 	%rd2052, %rd2051, %rd2048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2390}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2391,%dummy}, %rd2051;
	}
	shf.l.wrap.b32 	%r2392, %r2391, %r2390, 22;
	shf.l.wrap.b32 	%r2393, %r2390, %r2391, 22;
	mov.b64 	%rd2053, {%r2393, %r2392};
	xor.b64  	%rd2054, %rd2053, %rd2052;
	add.s64 	%rd2055, %rd2054, %rd1037;
	setp.gt.u64	%p1, %rd2055, %rd3;
	@%p1 bra 	BB4_2;

	ld.param.u64 	%rd2059, [search4_param_1];
	mov.u32 	%r2394, 291;
	mov.u32 	%r2395, 0;
	prmt.b32 	%r2396, %r1, %r2395, %r2394;
	add.s64 	%rd2056, %rd2059, 1020;
	atom.global.add.u32 	%r2397, [%rd2056], 1;
	mul.wide.u32 	%rd2057, %r2397, 4;
	add.s64 	%rd2058, %rd2059, %rd2057;
	st.global.u32 	[%rd2058], %r2396;

BB4_2:
	ret;
}


.metadata_section {

.metadata 0 {
	"cl_kernel_attributes",
	"search",
	"reqd_work_group_size(256,1,1)"
}

.metadata 1 {
	"cl_kernel_attributes",
	"search1",
	"reqd_work_group_size(256,1,1)"
}

.metadata 2 {
	"cl_kernel_attributes",
	"search2",
	"reqd_work_group_size(256,1,1)"
}

.metadata 3 {
	"cl_kernel_attributes",
	"search3",
	"reqd_work_group_size(256,1,1)"
}

.metadata 4 {
	"cl_kernel_attributes",
	"search4",
	"reqd_work_group_size(256,1,1)"
}

} // end of .metadata_section
  